# encoding: utf-8
# module Microsoft.Office.Interop.Access calls itself Access
# from Microsoft.Office.Interop.Access, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, Microsoft.Office.Interop.Access.Dao, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c
# by generator 1.145
""" no doc """
from __future__ import annotations
from Microsoft.Office.Interop.Access.Dao import Connection, _DBEngine

from Microsoft.SqlServer.Management.Smo import Database

from Microsoft.Vbe.Interop import Property, VBE, VBProject, vbext_RefKind

from Microsoft.VisualStudio.CommandBars import CommandBars, IAccessible

from System import (Array, Byte, DateTime, Enum, Int16, MulticastDelegate, 
    Single, UInt32)

from System.Collections import IEnumerable, IEnumerator

from System.ServiceModel.Syndication import Workspace

from typing import Tuple as Tuple_

"""The following names are not found in the module: (AnswerWizard, Assistant, 
    BoundEvent, COMAddIns, EventReasonEnum, EventStatusEnum, FileSearch, 
    IAssistance, LanguageSettings, MsoAutomationSecurity, MsoDebugOptions, 
    MsoEncoding, MsoEnvelope, MsoExtraInfoMethod, MsoFeatureInstall, 
    MsoTargetBrowser, NewFile, __ComObject, field#)
"""

# no functions
# classes

class AcBrowseToObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcBrowseToObjectType, values: acBrowseToForm (2), acBrowseToReport (3) """
    acBrowseToForm: AcBrowseToObjectType = ...
    acBrowseToReport: AcBrowseToObjectType = ...
    value__ = ...


class _AccessField: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Value(self) -> object:
        """
        Get: Value(self: _AccessField) -> object
        Set: Value(self: _AccessField) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _AccessField, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class AccessField(_AccessField): # skipped bases: <type 'object'>
    """ no doc """
    pass

class AccessFieldClass(AccessField, __ComObject): # skipped bases: <type '_AccessField'>, <type 'object'>
    """ AccessFieldClass() """
    @property
    def Value(self) -> object:
        """
        Get: Value(self: AccessFieldClass) -> object
        Set: Value(self: AccessFieldClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AccessFieldClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class AccessObject: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Attributes(self) -> int:
        """ Get: Attributes(self: AccessObject) -> int """
        ...

    @property
    def CurrentView(self) -> AcCurrentView:
        """ Get: CurrentView(self: AccessObject) -> AcCurrentView """
        ...

    @property
    def DateCreated(self) -> DateTime:
        """ Get: DateCreated(self: AccessObject) -> DateTime """
        ...

    @property
    def DateModified(self) -> DateTime:
        """ Get: DateModified(self: AccessObject) -> DateTime """
        ...

    @property
    def FullName(self) -> str:
        """
        Get: FullName(self: AccessObject) -> str
        Set: FullName(self: AccessObject) = value
        """
        ...

    @property
    def IsLoaded(self) -> bool:
        """ Get: IsLoaded(self: AccessObject) -> bool """
        ...

    @property
    def IsWeb(self) -> bool:
        """ Get: IsWeb(self: AccessObject) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: AccessObject) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AccessObject) -> object """
        ...

    @property
    def Properties(self) -> AccessObjectProperties:
        """ Get: Properties(self: AccessObject) -> AccessObjectProperties """
        ...

    @property
    def Type(self) -> AcObjectType:
        """ Get: Type(self: AccessObject) -> AcObjectType """
        ...

    @property
    def _Name(self) -> str:
        """ Get: _Name(self: AccessObject) -> str """
        ...


    def GetDependencyInfo(self) -> DependencyInfo:
        """ GetDependencyInfo(self: AccessObject) -> DependencyInfo """
        ...

    def IsDependentUpon(self, ObjectType:AcObjectType, ObjectName:str) -> bool:
        """ IsDependentUpon(self: AccessObject, ObjectType: AcObjectType, ObjectName: str) -> bool """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AccessObject, dispid: int) -> bool """
        ...


class AccessObjectProperties(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AccessObjectProperties) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AccessObjectProperties) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AccessObjectProperties) -> object """
        ...


    def Add(self, PropertyName:str, Value:object): # -> 
        """ Add(self: AccessObjectProperties, PropertyName: str, Value: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AccessObjectProperties, dispid: int) -> bool """
        ...

    def Remove(self, Item:object): # -> 
        """ Remove(self: AccessObjectProperties, Item: object) """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AccessObjectProperty: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: AccessObjectProperty) -> str """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: AccessObjectProperty) -> object
        Set: Value(self: AccessObjectProperty) = value
        """
        ...

    @property
    def _Value(self) -> object:
        """ Get: _Value(self: AccessObjectProperty) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AccessObjectProperty, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class AcCloseSave(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcCloseSave, values: acSaveNo (2), acSavePrompt (0), acSaveYes (1) """
    acSaveNo: AcCloseSave = ...
    acSavePrompt: AcCloseSave = ...
    acSaveYes: AcCloseSave = ...
    value__ = ...


class AcColorIndex(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcColorIndex, values: acColorIndexAqua (14), acColorIndexBlack (0), acColorIndexBlue (12), acColorIndexBrightGreen (10), acColorIndexDarkBlue (4), acColorIndexFuschia (13), acColorIndexGray (7), acColorIndexGreen (2), acColorIndexMaroon (1), acColorIndexOlive (3), acColorIndexRed (9), acColorIndexSilver (8), acColorIndexTeal (6), acColorIndexViolet (5), acColorIndexWhite (15), acColorIndexYellow (11) """
    acColorIndexAqua: AcColorIndex = ...
    acColorIndexBlack: AcColorIndex = ...
    acColorIndexBlue: AcColorIndex = ...
    acColorIndexBrightGreen: AcColorIndex = ...
    acColorIndexDarkBlue: AcColorIndex = ...
    acColorIndexFuschia: AcColorIndex = ...
    acColorIndexGray: AcColorIndex = ...
    acColorIndexGreen: AcColorIndex = ...
    acColorIndexMaroon: AcColorIndex = ...
    acColorIndexOlive: AcColorIndex = ...
    acColorIndexRed: AcColorIndex = ...
    acColorIndexSilver: AcColorIndex = ...
    acColorIndexTeal: AcColorIndex = ...
    acColorIndexViolet: AcColorIndex = ...
    acColorIndexWhite: AcColorIndex = ...
    acColorIndexYellow: AcColorIndex = ...
    value__ = ...


class AcCommand(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcCommand, values: acCmdAboutMicrosoftAccess (35), acCmdAddDataMacroAfterDelete (720), acCmdAddDataMacroAfterInsert (718), acCmdAddDataMacroAfterUpdate (719), acCmdAddDataMacroBeforeChange (722), acCmdAddDataMacroBeforeDelete (721), acCmdAddFromOutlook (583), acCmdAddInManager (526), acCmdAddNamedDataMacro (723), acCmdAddToNewGroup (494), acCmdAddWatch (201), acCmdAdvancedFilterSort (99), acCmdAlignBottom (46), acCmdAlignCenter (477), acCmdAlignLeft (43), acCmdAlignmentAndSizing (478), acCmdAlignMiddle (476), acCmdAlignRight (44), acCmdAlignToGrid (47), acCmdAlignTop (45), acCmdAlignToShortest (153), acCmdAlignToTallest (154), acCmdAnalyzePerformance (283), acCmdAnalyzeTable (284), acCmdAnchorBottomLeft (616), acCmdAnchorBottomRight (618), acCmdAnchorBottomStretchAcross (617), acCmdAnchorStretchAcross (611), acCmdAnchorStretchDown (613), acCmdAnchorStretchDownAcross (614), acCmdAnchorStretchDownRight (615), acCmdAnchorTopLeft (610), acCmdAnchorTopRight (612), acCmdAnswerWizard (235), acCmdApplyAutoFormat1 (648), acCmdApplyAutoFormat10 (657), acCmdApplyAutoFormat11 (658), acCmdApplyAutoFormat12 (659), acCmdApplyAutoFormat13 (660), acCmdApplyAutoFormat14 (661), acCmdApplyAutoFormat15 (662), acCmdApplyAutoFormat16 (663), acCmdApplyAutoFormat17 (664), acCmdApplyAutoFormat18 (665), acCmdApplyAutoFormat19 (666), acCmdApplyAutoFormat2 (649), acCmdApplyAutoFormat20 (667), acCmdApplyAutoFormat21 (668), acCmdApplyAutoFormat22 (669), acCmdApplyAutoFormat23 (670), acCmdApplyAutoFormat24 (671), acCmdApplyAutoFormat25 (672), acCmdApplyAutoFormat3 (650), acCmdApplyAutoFormat4 (651), acCmdApplyAutoFormat5 (652), acCmdApplyAutoFormat6 (653), acCmdApplyAutoFormat7 (654), acCmdApplyAutoFormat8 (655), acCmdApplyAutoFormat9 (656), acCmdApplyDefault (55), acCmdApplyFilterSort (93), acCmdAppMaximize (10), acCmdAppMinimize (11), acCmdAppMove (12), acCmdAppRestore (9), acCmdAppSize (13), acCmdArrangeIconsAuto (218), acCmdArrangeIconsByCreated (216), acCmdArrangeIconsByModified (217), acCmdArrangeIconsByName (214), acCmdArrangeIconsByType (215), acCmdAutoCorrect (261), acCmdAutoDial (192), acCmdAutoFormat (270), acCmdBackgroundPicture (474), acCmdBackgroundSound (475), acCmdBackup (513), acCmdBookmarksClearAll (310), acCmdBookmarksNext (308), acCmdBookmarksPrevious (309), acCmdBookmarksToggle (307), acCmdBringToFront (52), acCmdBrowseSharePointList (621), acCmdCalculatedColumn (698), acCmdCallStack (172), acCmdChangeToCheckBox (231), acCmdChangeToComboBox (230), acCmdChangeToCommandButton (501), acCmdChangeToImage (234), acCmdChangeToLabel (228), acCmdChangeToListBox (229), acCmdChangeToOptionButton (233), acCmdChangeToTextBox (227), acCmdChangeToToggleButton (232), acCmdClearAll (146), acCmdClearAllBreakpoints (132), acCmdClearGrid (71), acCmdClearHyperlink (343), acCmdClearItemDefaults (237), acCmdClose (58), acCmdCloseAll (646), acCmdCloseDatabase (538), acCmdCloseWindow (186), acCmdCollectDataViaEmail (608), acCmdColumnWidth (117), acCmdCompactDatabase (4), acCmdCompatCheckCurrentObject (696), acCmdCompatCheckDatabase (695), acCmdCompileAllModules (125), acCmdCompileAndSaveAllModules (126), acCmdCompileLoadedModules (290), acCmdCompleteWord (306), acCmdConditionalFormatting (500), acCmdConnection (383), acCmdControlMarginsMedium (630), acCmdControlMarginsNarrow (629), acCmdControlMarginsNone (628), acCmdControlMarginsWide (631), acCmdControlPaddingMedium (634), acCmdControlPaddingNarrow (633), acCmdControlPaddingNone (632), acCmdControlPaddingWide (635), acCmdControlWizardsToggle (197), acCmdConvertDatabase (171), acCmdConvertLinkedTableToLocal (700), acCmdConvertMacrosToVisualBasic (279), acCmdCopy (190), acCmdCopyDatabaseFile (516), acCmdCopyHyperlink (328), acCmdCreateMenuFromMacro (334), acCmdCreateRelationship (150), acCmdCreateReplica (263), acCmdCreateShortcut (219), acCmdCreateShortcutMenuFromMacro (336), acCmdCreateToolbarFromMacro (335), acCmdCut (189), acCmdDataAccessPageAddToPage (480), acCmdDataAccessPageBrowse (344), acCmdDataAccessPageDesignView (385), acCmdDataAccessPageFieldListRefresh (479), acCmdDatabaseProperties (256), acCmdDatabaseSplitter (520), acCmdDataEntry (78), acCmdDataOutline (468), acCmdDatasheetView (282), acCmdDateAndTime (226), acCmdDebugWindow (123), acCmdDelete (337), acCmdDeleteGroup (493), acCmdDeletePage (332), acCmdDeleteQueryColumn (81), acCmdDeleteRecord (223), acCmdDeleteRows (188), acCmdDeleteSharePointList (627), acCmdDeleteTab (255), acCmdDeleteTable (489), acCmdDeleteTableColumn (271), acCmdDeleteWatch (267), acCmdDemote (388), acCmdDesignObject (697), acCmdDesignView (183), acCmdDiagramAddRelatedTables (373), acCmdDiagramAutosizeSelectedTables (378), acCmdDiagramDeleteRelationship (382), acCmdDiagramLayoutDiagram (380), acCmdDiagramLayoutSelection (379), acCmdDiagramModifyUserDefinedView (375), acCmdDiagramNewLabel (372), acCmdDiagramNewTable (381), acCmdDiagramRecalculatePageBreaks (377), acCmdDiagramShowRelationshipLabels (374), acCmdDiagramViewPageBreaks (376), acCmdDiscardChanges (639), acCmdDiscardChangesAndRefresh (640), acCmdDocMaximize (15), acCmdDocMinimize (60), acCmdDocMove (16), acCmdDocRestore (14), acCmdDocSize (17), acCmdDocumenter (285), acCmdDropSQLDatabase (517), acCmdDuplicate (34), acCmdEditHyperlink (325), acCmdEditingAllowed (70), acCmdEditListItems (607), acCmdEditRelationship (151), acCmdEditTriggers (384), acCmdEditWatch (202), acCmdEncryptDecryptDatabase (5), acCmdEnd (198), acCmdExit (3), acCmdExport (487), acCmdExportAccess (559), acCmdExportdBase (565), acCmdExportExcel (556), acCmdExportFixedFormat (592), acCmdExportHTML (564), acCmdExportLotus (567), acCmdExportODBC (562), acCmdExportParadox (566), acCmdExportRTF (558), acCmdExportSharePointList (557), acCmdExportSnapShot (563), acCmdExportText (560), acCmdExportXML (561), acCmdFavoritesAddTo (299), acCmdFavoritesOpen (298), acCmdFieldList (42), acCmdFieldTemplates (647), acCmdFilterByForm (207), acCmdFilterBySelection (208), acCmdFilterExcludingSelection (277), acCmdFilterMenu (619), acCmdFind (30), acCmdFindNext (341), acCmdFindNextWordUnderCursor (313), acCmdFindPrevious (120), acCmdFindPrevWordUnderCursor (312), acCmdFitToWindow (245), acCmdFont (19), acCmdFormatCells (77), acCmdFormHdrFtr (36), acCmdFormView (281), acCmdFreezeColumn (105), acCmdGoBack (294), acCmdGoContinue (127), acCmdGoForward (295), acCmdGroupByTable (387), acCmdGroupControls (484), acCmdHideColumns (79), acCmdHideMessageBar (677), acCmdHidePane (365), acCmdHideTable (147), acCmdHorizontalSpacingDecrease (158), acCmdHorizontalSpacingIncrease (159), acCmdHorizontalSpacingMakeEqual (157), acCmdHyperlinkDisplayText (329), acCmdImport (257), acCmdImportAttachAccess (544), acCmdImportAttachdBase (552), acCmdImportAttachExcel (545), acCmdImportAttachHTML (550), acCmdImportAttachLotus (554), acCmdImportAttachODBC (549), acCmdImportAttachOutlook (551), acCmdImportAttachParadox (553), acCmdImportAttachSharePointList (547), acCmdImportAttachText (546), acCmdImportAttachXML (548), acCmdIndent (205), acCmdIndexes (152), acCmdInsertActiveXControl (258), acCmdInsertChart (293), acCmdInsertFile (39), acCmdInsertFileIntoModule (118), acCmdInsertHyperlink (259), acCmdInsertLogo (585), acCmdInsertLookupColumn (273), acCmdInsertLookupField (291), acCmdInsertMovieFromFile (469), acCmdInsertNavigationButton (724), acCmdInsertObject (33), acCmdInsertPage (331), acCmdInsertPicture (222), acCmdInsertPivotTable (470), acCmdInsertProcedure (262), acCmdInsertQueryColumn (82), acCmdInsertRows (187), acCmdInsertSpreadsheet (471), acCmdInsertSubdatasheet (499), acCmdInsertTableColumn (272), acCmdInsertTitle (586), acCmdInsertUnboundSection (472), acCmdInvokeBuilder (178), acCmdJoinProperties (72), acCmdLastPosition (339), acCmdLayoutGridlinesBoth (574), acCmdLayoutGridlinesBottom (580), acCmdLayoutGridlinesCrossHatch (578), acCmdLayoutGridlinesHorizontal (576), acCmdLayoutGridlinesNone (577), acCmdLayoutGridlinesOutline (581), acCmdLayoutGridlinesTop (579), acCmdLayoutGridlinesVertical (575), acCmdLayoutInsertColumnLeft (680), acCmdLayoutInsertColumnRight (681), acCmdLayoutInsertRowAbove (678), acCmdLayoutInsertRowBelow (679), acCmdLayoutMergeCells (682), acCmdLayoutPreview (141), acCmdLayoutSplitColumnCell (683), acCmdLayoutSplitRowCell (684), acCmdLayoutView (593), acCmdLineUpIcons (213), acCmdLinkedTableManager (519), acCmdLinkTables (102), acCmdListConstants (303), acCmdLoadFromQuery (95), acCmdMacroAllActions (589), acCmdMacroArguments (588), acCmdMacroConditions (87), acCmdMacroNames (86), acCmdMakeMDEFile (7), acCmdManageAttachments (673), acCmdManageReplies (609), acCmdManageTableEvents (717), acCmdMaximiumRecords (508), acCmdMicrosoftAccessHelpTopics (100), acCmdMicrosoftOnTheWeb (236), acCmdMicrosoftScriptEditor (390), acCmdModifySharePointList (622), acCmdModifySharePointListAlerts (623), acCmdModifySharePointListPermissions (625), acCmdModifySharePointListWorkflow (624), acCmdMoreWindows (8), acCmdMoveColumnCellDown (573), acCmdMoveColumnCellUp (572), acCmdNewDatabase (26), acCmdNewGroup (491), acCmdNewObjectAutoForm (193), acCmdNewObjectAutoFormWeb (705), acCmdNewObjectAutoReport (194), acCmdNewObjectAutoReportWeb (706), acCmdNewObjectBlankForm (600), acCmdNewObjectBlankFormWeb (703), acCmdNewObjectBlankReport (602), acCmdNewObjectBlankReportWeb (704), acCmdNewObjectClassModule (140), acCmdNewObjectContinuousForm (594), acCmdNewObjectContinuousFormWeb (701), acCmdNewObjectDataAccessPage (346), acCmdNewObjectDatasheetForm (598), acCmdNewObjectDatasheetFormWeb (702), acCmdNewObjectDesignForm (604), acCmdNewObjectDesignQuery (603), acCmdNewObjectDesignReport (605), acCmdNewObjectDesignTable (606), acCmdNewObjectDiagram (352), acCmdNewObjectForm (136), acCmdNewObjectFunction (394), acCmdNewObjectLabelsReport (601), acCmdNewObjectMacro (138), acCmdNewObjectMacroWeb (708), acCmdNewObjectModalForm (599), acCmdNewObjectModule (139), acCmdNewObjectNavigationLeft (690), acCmdNewObjectNavigationLeftWeb (710), acCmdNewObjectNavigationRight (691), acCmdNewObjectNavigationRightWeb (711), acCmdNewObjectNavigationTop (689), acCmdNewObjectNavigationTopLeft (693), acCmdNewObjectNavigationTopLeftWeb (713), acCmdNewObjectNavigationTopRight (694), acCmdNewObjectNavigationTopRightWeb (714), acCmdNewObjectNavigationTopTop (692), acCmdNewObjectNavigationTopTopWeb (712), acCmdNewObjectNavigationTopWeb (709), acCmdNewObjectPivotChart (596), acCmdNewObjectPivotTable (597), acCmdNewObjectQuery (135), acCmdNewObjectQueryWeb (707), acCmdNewObjectReport (137), acCmdNewObjectSplitForm (595), acCmdNewObjectStoredProcedure (351), acCmdNewObjectTable (134), acCmdNewObjectView (350), acCmdObjBrwFindWholeWordOnly (314), acCmdObjBrwGroupMembers (318), acCmdObjBrwHelp (316), acCmdObjBrwShowHiddenMembers (315), acCmdObjBrwViewDefinition (317), acCmdObjectBrowser (200), acCmdOfficeClipboard (488), acCmdOLEDDELinks (27), acCmdOLEObjectConvert (167), acCmdOLEObjectDefaultVerb (57), acCmdOpenDatabase (25), acCmdOpenHyperlink (326), acCmdOpenNewHyperlink (327), acCmdOpenSearchPage (253), acCmdOpenStartPage (252), acCmdOpenTable (221), acCmdOpenURL (251), acCmdOptions (49), acCmdOutdent (206), acCmdOutputToExcel (175), acCmdOutputToRTF (176), acCmdOutputToText (177), acCmdPageHdrFtr (182), acCmdPageNumber (225), acCmdPageProperties (467), acCmdPageSetup (32), acCmdParameterInfo (305), acCmdPartialReplicaWizard (524), acCmdPaste (191), acCmdPasteAppend (38), acCmdPasteAsHyperlink (490), acCmdPasteFormatting (587), acCmdPasteSpecial (64), acCmdPivotAutoAverage (416), acCmdPivotAutoCount (413), acCmdPivotAutoFilter (398), acCmdPivotAutoMax (415), acCmdPivotAutoMin (414), acCmdPivotAutoStdDev (417), acCmdPivotAutoStdDevP (419), acCmdPivotAutoSum (412), acCmdPivotAutoVar (418), acCmdPivotAutoVarP (420), acCmdPivotChartByRowByColumn (456), acCmdPivotChartDrillInto (457), acCmdPivotChartDrillOut (532), acCmdPivotChartMultiplePlots (458), acCmdPivotChartMultiplePlotsUnifiedScale (459), acCmdPivotChartShowLegend (455), acCmdPivotChartSortAscByTotal (534), acCmdPivotChartSortDescByTotal (535), acCmdPivotChartType (453), acCmdPivotChartUndo (460), acCmdPivotChartView (397), acCmdPivotCollapse (400), acCmdPivotDelete (454), acCmdPivotDropAreas (452), acCmdPivotExpand (401), acCmdPivotRefresh (404), acCmdPivotShowAll (461), acCmdPivotShowBottom1 (432), acCmdPivotShowBottom10 (435), acCmdPivotShowBottom10Percent (440), acCmdPivotShowBottom1Percent (437), acCmdPivotShowBottom2 (433), acCmdPivotShowBottom25 (436), acCmdPivotShowBottom25Percent (441), acCmdPivotShowBottom2Percent (438), acCmdPivotShowBottom5 (434), acCmdPivotShowBottom5Percent (439), acCmdPivotShowBottomOther (442), acCmdPivotShowTop1 (421), acCmdPivotShowTop10 (424), acCmdPivotShowTop10Percent (429), acCmdPivotShowTop1Percent (426), acCmdPivotShowTop2 (422), acCmdPivotShowTop25 (425), acCmdPivotShowTop25Percent (430), acCmdPivotShowTop2Percent (427), acCmdPivotShowTop5 (423), acCmdPivotShowTop5Percent (428), acCmdPivotShowTopOther (431), acCmdPivotTableClearCustomOrdering (527), acCmdPivotTableCreateCalcField (444), acCmdPivotTableCreateCalcTotal (443), acCmdPivotTableDemote (411), acCmdPivotTableExpandIndicators (451), acCmdPivotTableExportToExcel (405), acCmdPivotTableFilterBySelection (528), acCmdPivotTableGroupItems (530), acCmdPivotTableHideDetails (402), acCmdPivotTableMoveToColumnArea (407), acCmdPivotTableMoveToDetailArea (409), acCmdPivotTableMoveToFilterArea (408), acCmdPivotTableMoveToRowArea (406), acCmdPivotTablePercentColumnTotal (447), acCmdPivotTablePercentGrandTotal (450), acCmdPivotTablePercentParentColumnItem (449), acCmdPivotTablePercentParentRowItem (448), acCmdPivotTablePercentRowTotal (446), acCmdPivotTablePromote (410), acCmdPivotTableRemove (529), acCmdPivotTableShowAsNormal (445), acCmdPivotTableShowDetails (403), acCmdPivotTableSubtotal (399), acCmdPivotTableUngroupItems (531), acCmdPivotTableView (396), acCmdPrepareDatabaseForWeb (716), acCmdPreviewEightPages (249), acCmdPreviewFourPages (248), acCmdPreviewOnePage (246), acCmdPreviewTwelvePages (250), acCmdPreviewTwoPages (247), acCmdPrimaryKey (107), acCmdPrint (340), acCmdPrintPreview (54), acCmdPrintRelationships (483), acCmdPrintSelection (590), acCmdProcedureDefinition (122), acCmdPromote (386), acCmdProperties (287), acCmdPublishDatabase (537), acCmdPublishDefaults (324), acCmdPublishFixedFormat (591), acCmdQueryAddToOutput (362), acCmdQueryGroupBy (361), acCmdQueryParameters (76), acCmdQueryTotals (73), acCmdQueryTypeAppend (91), acCmdQueryTypeCrosstab (74), acCmdQueryTypeDelete (92), acCmdQueryTypeMakeTable (94), acCmdQueryTypeSelect (89), acCmdQueryTypeSQLDataDefinition (168), acCmdQueryTypeSQLPassThrough (169), acCmdQueryTypeSQLUnion (180), acCmdQueryTypeUpdate (90), acCmdQuickInfo (304), acCmdQuickPrint (278), acCmdQuickWatch (203), acCmdRecordsGoToFirst (67), acCmdRecordsGoToLast (68), acCmdRecordsGoToNew (28), acCmdRecordsGoToNext (65), acCmdRecordsGoToPrevious (66), acCmdRecoverDesignMaster (265), acCmdRedo (199), acCmdReferences (260), acCmdRefresh (18), acCmdRefreshData (541), acCmdRefreshPage (297), acCmdRefreshSharePointList (626), acCmdRegisterActiveXControls (254), acCmdRelationships (133), acCmdRemove (366), acCmdRemoveAllFilters (644), acCmdRemoveAllSorts (645), acCmdRemoveFilterFromCurrentColumn (643), acCmdRemoveFilterSort (144), acCmdRemoveFromLayout (582), acCmdRemoveTable (84), acCmdRename (143), acCmdRenameColumn (274), acCmdRenameGroup (492), acCmdRepairDatabase (6), acCmdReplace (29), acCmdReportHdrFtr (37), acCmdReportView (539), acCmdReset (124), acCmdResolveConflicts (266), acCmdRestore (514), acCmdRowHeight (116), acCmdRun (181), acCmdRunMacro (31), acCmdRunOpenMacro (338), acCmdSave (20), acCmdSaveAllModules (280), acCmdSaveAs (21), acCmdSaveAsASP (323), acCmdSaveAsDataAccessPage (389), acCmdSaveAsHTML (321), acCmdSaveAsIDC (322), acCmdSaveAsOutlookContact (584), acCmdSaveAsQuery (96), acCmdSaveAsReport (142), acCmdSaveAsTemplate (686), acCmdSaveDatabaseAsNewTemplatePart (687), acCmdSavedExports (555), acCmdSavedImports (543), acCmdSaveLayout (145), acCmdSaveModuleAsText (119), acCmdSaveRecord (97), acCmdSaveSelectionAsNewDataType (688), acCmdSelectAll (333), acCmdSelectAllRecords (109), acCmdSelectDataAccessPage (347), acCmdSelectEntireColumn (571), acCmdSelectEntireLayout (715), acCmdSelectEntireRow (570), acCmdSelectForm (40), acCmdSelectRecord (50), acCmdSelectReport (319), acCmdSend (173), acCmdSendToBack (53), acCmdServerFilterByForm (507), acCmdServerProperties (496), acCmdSetCaption (637), acCmdSetControlDefaults (56), acCmdSetDatabasePassword (275), acCmdSetNextStatement (129), acCmdShareOnSharePoint (542), acCmdSharePointSiteRecycleBin (641), acCmdShowAllRelationships (149), acCmdShowColumnHistory (620), acCmdShowDatePicker (636), acCmdShowDirectRelationships (148), acCmdShowEnvelope (533), acCmdShowLogicCatalog (685), acCmdShowMembers (302), acCmdShowMessageBar (676), acCmdShowNextStatement (130), acCmdShowOnlyWebToolbar (300), acCmdShowTable (185), acCmdSingleStep (88), acCmdSizeToFit (59), acCmdSizeToFitForm (69), acCmdSizeToGrid (48), acCmdSizeToNarrowest (155), acCmdSizeToWidest (156), acCmdSnapToGrid (62), acCmdSortAscending (163), acCmdSortDescending (164), acCmdSortingAndGrouping (51), acCmdSpeech (511), acCmdSpelling (269), acCmdSQLView (184), acCmdStackedLayout (568), acCmdStartNewWorkflow (675), acCmdStartupProperties (224), acCmdStepInto (342), acCmdStepOut (311), acCmdStepOver (128), acCmdStepToCursor (204), acCmdStopLoadingPage (296), acCmdSubdatasheetCollapseAll (505), acCmdSubdatasheetExpandAll (504), acCmdSubdatasheetRemove (506), acCmdSubformDatasheet (108), acCmdSubformDatasheetView (463), acCmdSubformFormView (462), acCmdSubformInNewWindow (495), acCmdSubformPivotChartView (465), acCmdSubformPivotTableView (464), acCmdSwitchboardManager (521), acCmdSynchronize (638), acCmdSynchronizeNow (264), acCmdSyncWebApplication (699), acCmdTabControlPageOrder (330), acCmdTableAddTable (498), acCmdTableCustomView (497), acCmdTableNames (75), acCmdTabOrder (41), acCmdTabularLayout (569), acCmdTestValidationRules (196), acCmdTileHorizontally (286), acCmdTileVertically (23), acCmdToggleBreakpoint (131), acCmdToggleCacheListData (642), acCmdToggleFilter (220), acCmdToggleOffline (540), acCmdToolbarControlProperties (301), acCmdToolbarsCustomize (165), acCmdTransferSQLDatabase (515), acCmdTransparentBackground (288), acCmdTransparentBorder (289), acCmdUndo (292), acCmdUnfreezeAllColumns (106), acCmdUngroupControls (485), acCmdUnhideColumns (80), acCmdUpsizingWizard (522), acCmdUserAndGroupAccounts (104), acCmdUserAndGroupPermissions (103), acCmdUserLevelSecurityWizard (276), acCmdVerticalSpacingDecrease (161), acCmdVerticalSpacingIncrease (162), acCmdVerticalSpacingMakeEqual (160), acCmdViewCode (170), acCmdViewDataAccessPages (349), acCmdViewDetails (210), acCmdViewDiagrams (354), acCmdViewFieldList (353), acCmdViewForms (112), acCmdViewFunctions (395), acCmdViewGrid (63), acCmdViewLargeIcons (209), acCmdViewList (212), acCmdViewMacros (114), acCmdViewModules (115), acCmdViewObjectDependencies (536), acCmdViewQueries (111), acCmdViewReports (113), acCmdViewRuler (61), acCmdViewShowPaneDiagram (358), acCmdViewShowPaneGrid (359), acCmdViewShowPaneSQL (357), acCmdViewSmallIcons (211), acCmdViewStoredProcedures (355), acCmdViewTableColumnNames (363), acCmdViewTableColumnProperties (368), acCmdViewTableKeys (369), acCmdViewTableNameOnly (364), acCmdViewTables (110), acCmdViewTableUserView (370), acCmdViewToolbox (85), acCmdViewVerifySQL (360), acCmdViewViews (356), acCmdVisualBasicEditor (525), acCmdWebPagePreview (466), acCmdWebPageProperties (486), acCmdWebTheme (473), acCmdWindowArrangeIcons (24), acCmdWindowCascade (22), acCmdWindowHide (2), acCmdWindowSplit (121), acCmdWindowUnhide (1), acCmdWordMailMerge (195), acCmdWorkflowTasks (674), acCmdWorkgroupAdministrator (391), acCmdZoom10 (244), acCmdZoom100 (240), acCmdZoom1000 (482), acCmdZoom150 (239), acCmdZoom200 (238), acCmdZoom25 (243), acCmdZoom50 (242), acCmdZoom500 (481), acCmdZoom75 (241), acCmdZoomBox (179), acCmdZoomSelection (371) """
    acCmdAboutMicrosoftAccess: AcCommand = ...
    acCmdAddDataMacroAfterDelete: AcCommand = ...
    acCmdAddDataMacroAfterInsert: AcCommand = ...
    acCmdAddDataMacroAfterUpdate: AcCommand = ...
    acCmdAddDataMacroBeforeChange: AcCommand = ...
    acCmdAddDataMacroBeforeDelete: AcCommand = ...
    acCmdAddFromOutlook: AcCommand = ...
    acCmdAddInManager: AcCommand = ...
    acCmdAddNamedDataMacro: AcCommand = ...
    acCmdAddToNewGroup: AcCommand = ...
    acCmdAddWatch: AcCommand = ...
    acCmdAdvancedFilterSort: AcCommand = ...
    acCmdAlignBottom: AcCommand = ...
    acCmdAlignCenter: AcCommand = ...
    acCmdAlignLeft: AcCommand = ...
    acCmdAlignmentAndSizing: AcCommand = ...
    acCmdAlignMiddle: AcCommand = ...
    acCmdAlignRight: AcCommand = ...
    acCmdAlignToGrid: AcCommand = ...
    acCmdAlignTop: AcCommand = ...
    acCmdAlignToShortest: AcCommand = ...
    acCmdAlignToTallest: AcCommand = ...
    acCmdAnalyzePerformance: AcCommand = ...
    acCmdAnalyzeTable: AcCommand = ...
    acCmdAnchorBottomLeft: AcCommand = ...
    acCmdAnchorBottomRight: AcCommand = ...
    acCmdAnchorBottomStretchAcross: AcCommand = ...
    acCmdAnchorStretchAcross: AcCommand = ...
    acCmdAnchorStretchDown: AcCommand = ...
    acCmdAnchorStretchDownAcross: AcCommand = ...
    acCmdAnchorStretchDownRight: AcCommand = ...
    acCmdAnchorTopLeft: AcCommand = ...
    acCmdAnchorTopRight: AcCommand = ...
    acCmdAnswerWizard: AcCommand = ...
    acCmdApplyAutoFormat1: AcCommand = ...
    acCmdApplyAutoFormat10: AcCommand = ...
    acCmdApplyAutoFormat11: AcCommand = ...
    acCmdApplyAutoFormat12: AcCommand = ...
    acCmdApplyAutoFormat13: AcCommand = ...
    acCmdApplyAutoFormat14: AcCommand = ...
    acCmdApplyAutoFormat15: AcCommand = ...
    acCmdApplyAutoFormat16: AcCommand = ...
    acCmdApplyAutoFormat17: AcCommand = ...
    acCmdApplyAutoFormat18: AcCommand = ...
    acCmdApplyAutoFormat19: AcCommand = ...
    acCmdApplyAutoFormat2: AcCommand = ...
    acCmdApplyAutoFormat20: AcCommand = ...
    acCmdApplyAutoFormat21: AcCommand = ...
    acCmdApplyAutoFormat22: AcCommand = ...
    acCmdApplyAutoFormat23: AcCommand = ...
    acCmdApplyAutoFormat24: AcCommand = ...
    acCmdApplyAutoFormat25: AcCommand = ...
    acCmdApplyAutoFormat3: AcCommand = ...
    acCmdApplyAutoFormat4: AcCommand = ...
    acCmdApplyAutoFormat5: AcCommand = ...
    acCmdApplyAutoFormat6: AcCommand = ...
    acCmdApplyAutoFormat7: AcCommand = ...
    acCmdApplyAutoFormat8: AcCommand = ...
    acCmdApplyAutoFormat9: AcCommand = ...
    acCmdApplyDefault: AcCommand = ...
    acCmdApplyFilterSort: AcCommand = ...
    acCmdAppMaximize: AcCommand = ...
    acCmdAppMinimize: AcCommand = ...
    acCmdAppMove: AcCommand = ...
    acCmdAppRestore: AcCommand = ...
    acCmdAppSize: AcCommand = ...
    acCmdArrangeIconsAuto: AcCommand = ...
    acCmdArrangeIconsByCreated: AcCommand = ...
    acCmdArrangeIconsByModified: AcCommand = ...
    acCmdArrangeIconsByName: AcCommand = ...
    acCmdArrangeIconsByType: AcCommand = ...
    acCmdAutoCorrect: AcCommand = ...
    acCmdAutoDial: AcCommand = ...
    acCmdAutoFormat: AcCommand = ...
    acCmdBackgroundPicture: AcCommand = ...
    acCmdBackgroundSound: AcCommand = ...
    acCmdBackup: AcCommand = ...
    acCmdBookmarksClearAll: AcCommand = ...
    acCmdBookmarksNext: AcCommand = ...
    acCmdBookmarksPrevious: AcCommand = ...
    acCmdBookmarksToggle: AcCommand = ...
    acCmdBringToFront: AcCommand = ...
    acCmdBrowseSharePointList: AcCommand = ...
    acCmdCalculatedColumn: AcCommand = ...
    acCmdCallStack: AcCommand = ...
    acCmdChangeToCheckBox: AcCommand = ...
    acCmdChangeToComboBox: AcCommand = ...
    acCmdChangeToCommandButton: AcCommand = ...
    acCmdChangeToImage: AcCommand = ...
    acCmdChangeToLabel: AcCommand = ...
    acCmdChangeToListBox: AcCommand = ...
    acCmdChangeToOptionButton: AcCommand = ...
    acCmdChangeToTextBox: AcCommand = ...
    acCmdChangeToToggleButton: AcCommand = ...
    acCmdClearAll: AcCommand = ...
    acCmdClearAllBreakpoints: AcCommand = ...
    acCmdClearGrid: AcCommand = ...
    acCmdClearHyperlink: AcCommand = ...
    acCmdClearItemDefaults: AcCommand = ...
    acCmdClose: AcCommand = ...
    acCmdCloseAll: AcCommand = ...
    acCmdCloseDatabase: AcCommand = ...
    acCmdCloseWindow: AcCommand = ...
    acCmdCollectDataViaEmail: AcCommand = ...
    acCmdColumnWidth: AcCommand = ...
    acCmdCompactDatabase: AcCommand = ...
    acCmdCompatCheckCurrentObject: AcCommand = ...
    acCmdCompatCheckDatabase: AcCommand = ...
    acCmdCompileAllModules: AcCommand = ...
    acCmdCompileAndSaveAllModules: AcCommand = ...
    acCmdCompileLoadedModules: AcCommand = ...
    acCmdCompleteWord: AcCommand = ...
    acCmdConditionalFormatting: AcCommand = ...
    acCmdConnection: AcCommand = ...
    acCmdControlMarginsMedium: AcCommand = ...
    acCmdControlMarginsNarrow: AcCommand = ...
    acCmdControlMarginsNone: AcCommand = ...
    acCmdControlMarginsWide: AcCommand = ...
    acCmdControlPaddingMedium: AcCommand = ...
    acCmdControlPaddingNarrow: AcCommand = ...
    acCmdControlPaddingNone: AcCommand = ...
    acCmdControlPaddingWide: AcCommand = ...
    acCmdControlWizardsToggle: AcCommand = ...
    acCmdConvertDatabase: AcCommand = ...
    acCmdConvertLinkedTableToLocal: AcCommand = ...
    acCmdConvertMacrosToVisualBasic: AcCommand = ...
    acCmdCopy: AcCommand = ...
    acCmdCopyDatabaseFile: AcCommand = ...
    acCmdCopyHyperlink: AcCommand = ...
    acCmdCreateMenuFromMacro: AcCommand = ...
    acCmdCreateRelationship: AcCommand = ...
    acCmdCreateReplica: AcCommand = ...
    acCmdCreateShortcut: AcCommand = ...
    acCmdCreateShortcutMenuFromMacro: AcCommand = ...
    acCmdCreateToolbarFromMacro: AcCommand = ...
    acCmdCut: AcCommand = ...
    acCmdDataAccessPageAddToPage: AcCommand = ...
    acCmdDataAccessPageBrowse: AcCommand = ...
    acCmdDataAccessPageDesignView: AcCommand = ...
    acCmdDataAccessPageFieldListRefresh: AcCommand = ...
    acCmdDatabaseProperties: AcCommand = ...
    acCmdDatabaseSplitter: AcCommand = ...
    acCmdDataEntry: AcCommand = ...
    acCmdDataOutline: AcCommand = ...
    acCmdDatasheetView: AcCommand = ...
    acCmdDateAndTime: AcCommand = ...
    acCmdDebugWindow: AcCommand = ...
    acCmdDelete: AcCommand = ...
    acCmdDeleteGroup: AcCommand = ...
    acCmdDeletePage: AcCommand = ...
    acCmdDeleteQueryColumn: AcCommand = ...
    acCmdDeleteRecord: AcCommand = ...
    acCmdDeleteRows: AcCommand = ...
    acCmdDeleteSharePointList: AcCommand = ...
    acCmdDeleteTab: AcCommand = ...
    acCmdDeleteTable: AcCommand = ...
    acCmdDeleteTableColumn: AcCommand = ...
    acCmdDeleteWatch: AcCommand = ...
    acCmdDemote: AcCommand = ...
    acCmdDesignObject: AcCommand = ...
    acCmdDesignView: AcCommand = ...
    acCmdDiagramAddRelatedTables: AcCommand = ...
    acCmdDiagramAutosizeSelectedTables: AcCommand = ...
    acCmdDiagramDeleteRelationship: AcCommand = ...
    acCmdDiagramLayoutDiagram: AcCommand = ...
    acCmdDiagramLayoutSelection: AcCommand = ...
    acCmdDiagramModifyUserDefinedView: AcCommand = ...
    acCmdDiagramNewLabel: AcCommand = ...
    acCmdDiagramNewTable: AcCommand = ...
    acCmdDiagramRecalculatePageBreaks: AcCommand = ...
    acCmdDiagramShowRelationshipLabels: AcCommand = ...
    acCmdDiagramViewPageBreaks: AcCommand = ...
    acCmdDiscardChanges: AcCommand = ...
    acCmdDiscardChangesAndRefresh: AcCommand = ...
    acCmdDocMaximize: AcCommand = ...
    acCmdDocMinimize: AcCommand = ...
    acCmdDocMove: AcCommand = ...
    acCmdDocRestore: AcCommand = ...
    acCmdDocSize: AcCommand = ...
    acCmdDocumenter: AcCommand = ...
    acCmdDropSQLDatabase: AcCommand = ...
    acCmdDuplicate: AcCommand = ...
    acCmdEditHyperlink: AcCommand = ...
    acCmdEditingAllowed: AcCommand = ...
    acCmdEditListItems: AcCommand = ...
    acCmdEditRelationship: AcCommand = ...
    acCmdEditTriggers: AcCommand = ...
    acCmdEditWatch: AcCommand = ...
    acCmdEncryptDecryptDatabase: AcCommand = ...
    acCmdEnd: AcCommand = ...
    acCmdExit: AcCommand = ...
    acCmdExport: AcCommand = ...
    acCmdExportAccess: AcCommand = ...
    acCmdExportdBase: AcCommand = ...
    acCmdExportExcel: AcCommand = ...
    acCmdExportFixedFormat: AcCommand = ...
    acCmdExportHTML: AcCommand = ...
    acCmdExportLotus: AcCommand = ...
    acCmdExportODBC: AcCommand = ...
    acCmdExportParadox: AcCommand = ...
    acCmdExportRTF: AcCommand = ...
    acCmdExportSharePointList: AcCommand = ...
    acCmdExportSnapShot: AcCommand = ...
    acCmdExportText: AcCommand = ...
    acCmdExportXML: AcCommand = ...
    acCmdFavoritesAddTo: AcCommand = ...
    acCmdFavoritesOpen: AcCommand = ...
    acCmdFieldList: AcCommand = ...
    acCmdFieldTemplates: AcCommand = ...
    acCmdFilterByForm: AcCommand = ...
    acCmdFilterBySelection: AcCommand = ...
    acCmdFilterExcludingSelection: AcCommand = ...
    acCmdFilterMenu: AcCommand = ...
    acCmdFind: AcCommand = ...
    acCmdFindNext: AcCommand = ...
    acCmdFindNextWordUnderCursor: AcCommand = ...
    acCmdFindPrevious: AcCommand = ...
    acCmdFindPrevWordUnderCursor: AcCommand = ...
    acCmdFitToWindow: AcCommand = ...
    acCmdFont: AcCommand = ...
    acCmdFormatCells: AcCommand = ...
    acCmdFormHdrFtr: AcCommand = ...
    acCmdFormView: AcCommand = ...
    acCmdFreezeColumn: AcCommand = ...
    acCmdGoBack: AcCommand = ...
    acCmdGoContinue: AcCommand = ...
    acCmdGoForward: AcCommand = ...
    acCmdGroupByTable: AcCommand = ...
    acCmdGroupControls: AcCommand = ...
    acCmdHideColumns: AcCommand = ...
    acCmdHideMessageBar: AcCommand = ...
    acCmdHidePane: AcCommand = ...
    acCmdHideTable: AcCommand = ...
    acCmdHorizontalSpacingDecrease: AcCommand = ...
    acCmdHorizontalSpacingIncrease: AcCommand = ...
    acCmdHorizontalSpacingMakeEqual: AcCommand = ...
    acCmdHyperlinkDisplayText: AcCommand = ...
    acCmdImport: AcCommand = ...
    acCmdImportAttachAccess: AcCommand = ...
    acCmdImportAttachdBase: AcCommand = ...
    acCmdImportAttachExcel: AcCommand = ...
    acCmdImportAttachHTML: AcCommand = ...
    acCmdImportAttachLotus: AcCommand = ...
    acCmdImportAttachODBC: AcCommand = ...
    acCmdImportAttachOutlook: AcCommand = ...
    acCmdImportAttachParadox: AcCommand = ...
    acCmdImportAttachSharePointList: AcCommand = ...
    acCmdImportAttachText: AcCommand = ...
    acCmdImportAttachXML: AcCommand = ...
    acCmdIndent: AcCommand = ...
    acCmdIndexes: AcCommand = ...
    acCmdInsertActiveXControl: AcCommand = ...
    acCmdInsertChart: AcCommand = ...
    acCmdInsertFile: AcCommand = ...
    acCmdInsertFileIntoModule: AcCommand = ...
    acCmdInsertHyperlink: AcCommand = ...
    acCmdInsertLogo: AcCommand = ...
    acCmdInsertLookupColumn: AcCommand = ...
    acCmdInsertLookupField: AcCommand = ...
    acCmdInsertMovieFromFile: AcCommand = ...
    acCmdInsertNavigationButton: AcCommand = ...
    acCmdInsertObject: AcCommand = ...
    acCmdInsertPage: AcCommand = ...
    acCmdInsertPicture: AcCommand = ...
    acCmdInsertPivotTable: AcCommand = ...
    acCmdInsertProcedure: AcCommand = ...
    acCmdInsertQueryColumn: AcCommand = ...
    acCmdInsertRows: AcCommand = ...
    acCmdInsertSpreadsheet: AcCommand = ...
    acCmdInsertSubdatasheet: AcCommand = ...
    acCmdInsertTableColumn: AcCommand = ...
    acCmdInsertTitle: AcCommand = ...
    acCmdInsertUnboundSection: AcCommand = ...
    acCmdInvokeBuilder: AcCommand = ...
    acCmdJoinProperties: AcCommand = ...
    acCmdLastPosition: AcCommand = ...
    acCmdLayoutGridlinesBoth: AcCommand = ...
    acCmdLayoutGridlinesBottom: AcCommand = ...
    acCmdLayoutGridlinesCrossHatch: AcCommand = ...
    acCmdLayoutGridlinesHorizontal: AcCommand = ...
    acCmdLayoutGridlinesNone: AcCommand = ...
    acCmdLayoutGridlinesOutline: AcCommand = ...
    acCmdLayoutGridlinesTop: AcCommand = ...
    acCmdLayoutGridlinesVertical: AcCommand = ...
    acCmdLayoutInsertColumnLeft: AcCommand = ...
    acCmdLayoutInsertColumnRight: AcCommand = ...
    acCmdLayoutInsertRowAbove: AcCommand = ...
    acCmdLayoutInsertRowBelow: AcCommand = ...
    acCmdLayoutMergeCells: AcCommand = ...
    acCmdLayoutPreview: AcCommand = ...
    acCmdLayoutSplitColumnCell: AcCommand = ...
    acCmdLayoutSplitRowCell: AcCommand = ...
    acCmdLayoutView: AcCommand = ...
    acCmdLineUpIcons: AcCommand = ...
    acCmdLinkedTableManager: AcCommand = ...
    acCmdLinkTables: AcCommand = ...
    acCmdListConstants: AcCommand = ...
    acCmdLoadFromQuery: AcCommand = ...
    acCmdMacroAllActions: AcCommand = ...
    acCmdMacroArguments: AcCommand = ...
    acCmdMacroConditions: AcCommand = ...
    acCmdMacroNames: AcCommand = ...
    acCmdMakeMDEFile: AcCommand = ...
    acCmdManageAttachments: AcCommand = ...
    acCmdManageReplies: AcCommand = ...
    acCmdManageTableEvents: AcCommand = ...
    acCmdMaximiumRecords: AcCommand = ...
    acCmdMicrosoftAccessHelpTopics: AcCommand = ...
    acCmdMicrosoftOnTheWeb: AcCommand = ...
    acCmdMicrosoftScriptEditor: AcCommand = ...
    acCmdModifySharePointList: AcCommand = ...
    acCmdModifySharePointListAlerts: AcCommand = ...
    acCmdModifySharePointListPermissions: AcCommand = ...
    acCmdModifySharePointListWorkflow: AcCommand = ...
    acCmdMoreWindows: AcCommand = ...
    acCmdMoveColumnCellDown: AcCommand = ...
    acCmdMoveColumnCellUp: AcCommand = ...
    acCmdNewDatabase: AcCommand = ...
    acCmdNewGroup: AcCommand = ...
    acCmdNewObjectAutoForm: AcCommand = ...
    acCmdNewObjectAutoFormWeb: AcCommand = ...
    acCmdNewObjectAutoReport: AcCommand = ...
    acCmdNewObjectAutoReportWeb: AcCommand = ...
    acCmdNewObjectBlankForm: AcCommand = ...
    acCmdNewObjectBlankFormWeb: AcCommand = ...
    acCmdNewObjectBlankReport: AcCommand = ...
    acCmdNewObjectBlankReportWeb: AcCommand = ...
    acCmdNewObjectClassModule: AcCommand = ...
    acCmdNewObjectContinuousForm: AcCommand = ...
    acCmdNewObjectContinuousFormWeb: AcCommand = ...
    acCmdNewObjectDataAccessPage: AcCommand = ...
    acCmdNewObjectDatasheetForm: AcCommand = ...
    acCmdNewObjectDatasheetFormWeb: AcCommand = ...
    acCmdNewObjectDesignForm: AcCommand = ...
    acCmdNewObjectDesignQuery: AcCommand = ...
    acCmdNewObjectDesignReport: AcCommand = ...
    acCmdNewObjectDesignTable: AcCommand = ...
    acCmdNewObjectDiagram: AcCommand = ...
    acCmdNewObjectForm: AcCommand = ...
    acCmdNewObjectFunction: AcCommand = ...
    acCmdNewObjectLabelsReport: AcCommand = ...
    acCmdNewObjectMacro: AcCommand = ...
    acCmdNewObjectMacroWeb: AcCommand = ...
    acCmdNewObjectModalForm: AcCommand = ...
    acCmdNewObjectModule: AcCommand = ...
    acCmdNewObjectNavigationLeft: AcCommand = ...
    acCmdNewObjectNavigationLeftWeb: AcCommand = ...
    acCmdNewObjectNavigationRight: AcCommand = ...
    acCmdNewObjectNavigationRightWeb: AcCommand = ...
    acCmdNewObjectNavigationTop: AcCommand = ...
    acCmdNewObjectNavigationTopLeft: AcCommand = ...
    acCmdNewObjectNavigationTopLeftWeb: AcCommand = ...
    acCmdNewObjectNavigationTopRight: AcCommand = ...
    acCmdNewObjectNavigationTopRightWeb: AcCommand = ...
    acCmdNewObjectNavigationTopTop: AcCommand = ...
    acCmdNewObjectNavigationTopTopWeb: AcCommand = ...
    acCmdNewObjectNavigationTopWeb: AcCommand = ...
    acCmdNewObjectPivotChart: AcCommand = ...
    acCmdNewObjectPivotTable: AcCommand = ...
    acCmdNewObjectQuery: AcCommand = ...
    acCmdNewObjectQueryWeb: AcCommand = ...
    acCmdNewObjectReport: AcCommand = ...
    acCmdNewObjectSplitForm: AcCommand = ...
    acCmdNewObjectStoredProcedure: AcCommand = ...
    acCmdNewObjectTable: AcCommand = ...
    acCmdNewObjectView: AcCommand = ...
    acCmdObjBrwFindWholeWordOnly: AcCommand = ...
    acCmdObjBrwGroupMembers: AcCommand = ...
    acCmdObjBrwHelp: AcCommand = ...
    acCmdObjBrwShowHiddenMembers: AcCommand = ...
    acCmdObjBrwViewDefinition: AcCommand = ...
    acCmdObjectBrowser: AcCommand = ...
    acCmdOfficeClipboard: AcCommand = ...
    acCmdOLEDDELinks: AcCommand = ...
    acCmdOLEObjectConvert: AcCommand = ...
    acCmdOLEObjectDefaultVerb: AcCommand = ...
    acCmdOpenDatabase: AcCommand = ...
    acCmdOpenHyperlink: AcCommand = ...
    acCmdOpenNewHyperlink: AcCommand = ...
    acCmdOpenSearchPage: AcCommand = ...
    acCmdOpenStartPage: AcCommand = ...
    acCmdOpenTable: AcCommand = ...
    acCmdOpenURL: AcCommand = ...
    acCmdOptions: AcCommand = ...
    acCmdOutdent: AcCommand = ...
    acCmdOutputToExcel: AcCommand = ...
    acCmdOutputToRTF: AcCommand = ...
    acCmdOutputToText: AcCommand = ...
    acCmdPageHdrFtr: AcCommand = ...
    acCmdPageNumber: AcCommand = ...
    acCmdPageProperties: AcCommand = ...
    acCmdPageSetup: AcCommand = ...
    acCmdParameterInfo: AcCommand = ...
    acCmdPartialReplicaWizard: AcCommand = ...
    acCmdPaste: AcCommand = ...
    acCmdPasteAppend: AcCommand = ...
    acCmdPasteAsHyperlink: AcCommand = ...
    acCmdPasteFormatting: AcCommand = ...
    acCmdPasteSpecial: AcCommand = ...
    acCmdPivotAutoAverage: AcCommand = ...
    acCmdPivotAutoCount: AcCommand = ...
    acCmdPivotAutoFilter: AcCommand = ...
    acCmdPivotAutoMax: AcCommand = ...
    acCmdPivotAutoMin: AcCommand = ...
    acCmdPivotAutoStdDev: AcCommand = ...
    acCmdPivotAutoStdDevP: AcCommand = ...
    acCmdPivotAutoSum: AcCommand = ...
    acCmdPivotAutoVar: AcCommand = ...
    acCmdPivotAutoVarP: AcCommand = ...
    acCmdPivotChartByRowByColumn: AcCommand = ...
    acCmdPivotChartDrillInto: AcCommand = ...
    acCmdPivotChartDrillOut: AcCommand = ...
    acCmdPivotChartMultiplePlots: AcCommand = ...
    acCmdPivotChartMultiplePlotsUnifiedScale: AcCommand = ...
    acCmdPivotChartShowLegend: AcCommand = ...
    acCmdPivotChartSortAscByTotal: AcCommand = ...
    acCmdPivotChartSortDescByTotal: AcCommand = ...
    acCmdPivotChartType: AcCommand = ...
    acCmdPivotChartUndo: AcCommand = ...
    acCmdPivotChartView: AcCommand = ...
    acCmdPivotCollapse: AcCommand = ...
    acCmdPivotDelete: AcCommand = ...
    acCmdPivotDropAreas: AcCommand = ...
    acCmdPivotExpand: AcCommand = ...
    acCmdPivotRefresh: AcCommand = ...
    acCmdPivotShowAll: AcCommand = ...
    acCmdPivotShowBottom1: AcCommand = ...
    acCmdPivotShowBottom10: AcCommand = ...
    acCmdPivotShowBottom10Percent: AcCommand = ...
    acCmdPivotShowBottom1Percent: AcCommand = ...
    acCmdPivotShowBottom2: AcCommand = ...
    acCmdPivotShowBottom25: AcCommand = ...
    acCmdPivotShowBottom25Percent: AcCommand = ...
    acCmdPivotShowBottom2Percent: AcCommand = ...
    acCmdPivotShowBottom5: AcCommand = ...
    acCmdPivotShowBottom5Percent: AcCommand = ...
    acCmdPivotShowBottomOther: AcCommand = ...
    acCmdPivotShowTop1: AcCommand = ...
    acCmdPivotShowTop10: AcCommand = ...
    acCmdPivotShowTop10Percent: AcCommand = ...
    acCmdPivotShowTop1Percent: AcCommand = ...
    acCmdPivotShowTop2: AcCommand = ...
    acCmdPivotShowTop25: AcCommand = ...
    acCmdPivotShowTop25Percent: AcCommand = ...
    acCmdPivotShowTop2Percent: AcCommand = ...
    acCmdPivotShowTop5: AcCommand = ...
    acCmdPivotShowTop5Percent: AcCommand = ...
    acCmdPivotShowTopOther: AcCommand = ...
    acCmdPivotTableClearCustomOrdering: AcCommand = ...
    acCmdPivotTableCreateCalcField: AcCommand = ...
    acCmdPivotTableCreateCalcTotal: AcCommand = ...
    acCmdPivotTableDemote: AcCommand = ...
    acCmdPivotTableExpandIndicators: AcCommand = ...
    acCmdPivotTableExportToExcel: AcCommand = ...
    acCmdPivotTableFilterBySelection: AcCommand = ...
    acCmdPivotTableGroupItems: AcCommand = ...
    acCmdPivotTableHideDetails: AcCommand = ...
    acCmdPivotTableMoveToColumnArea: AcCommand = ...
    acCmdPivotTableMoveToDetailArea: AcCommand = ...
    acCmdPivotTableMoveToFilterArea: AcCommand = ...
    acCmdPivotTableMoveToRowArea: AcCommand = ...
    acCmdPivotTablePercentColumnTotal: AcCommand = ...
    acCmdPivotTablePercentGrandTotal: AcCommand = ...
    acCmdPivotTablePercentParentColumnItem: AcCommand = ...
    acCmdPivotTablePercentParentRowItem: AcCommand = ...
    acCmdPivotTablePercentRowTotal: AcCommand = ...
    acCmdPivotTablePromote: AcCommand = ...
    acCmdPivotTableRemove: AcCommand = ...
    acCmdPivotTableShowAsNormal: AcCommand = ...
    acCmdPivotTableShowDetails: AcCommand = ...
    acCmdPivotTableSubtotal: AcCommand = ...
    acCmdPivotTableUngroupItems: AcCommand = ...
    acCmdPivotTableView: AcCommand = ...
    acCmdPrepareDatabaseForWeb: AcCommand = ...
    acCmdPreviewEightPages: AcCommand = ...
    acCmdPreviewFourPages: AcCommand = ...
    acCmdPreviewOnePage: AcCommand = ...
    acCmdPreviewTwelvePages: AcCommand = ...
    acCmdPreviewTwoPages: AcCommand = ...
    acCmdPrimaryKey: AcCommand = ...
    acCmdPrint: AcCommand = ...
    acCmdPrintPreview: AcCommand = ...
    acCmdPrintRelationships: AcCommand = ...
    acCmdPrintSelection: AcCommand = ...
    acCmdProcedureDefinition: AcCommand = ...
    acCmdPromote: AcCommand = ...
    acCmdProperties: AcCommand = ...
    acCmdPublishDatabase: AcCommand = ...
    acCmdPublishDefaults: AcCommand = ...
    acCmdPublishFixedFormat: AcCommand = ...
    acCmdQueryAddToOutput: AcCommand = ...
    acCmdQueryGroupBy: AcCommand = ...
    acCmdQueryParameters: AcCommand = ...
    acCmdQueryTotals: AcCommand = ...
    acCmdQueryTypeAppend: AcCommand = ...
    acCmdQueryTypeCrosstab: AcCommand = ...
    acCmdQueryTypeDelete: AcCommand = ...
    acCmdQueryTypeMakeTable: AcCommand = ...
    acCmdQueryTypeSelect: AcCommand = ...
    acCmdQueryTypeSQLDataDefinition: AcCommand = ...
    acCmdQueryTypeSQLPassThrough: AcCommand = ...
    acCmdQueryTypeSQLUnion: AcCommand = ...
    acCmdQueryTypeUpdate: AcCommand = ...
    acCmdQuickInfo: AcCommand = ...
    acCmdQuickPrint: AcCommand = ...
    acCmdQuickWatch: AcCommand = ...
    acCmdRecordsGoToFirst: AcCommand = ...
    acCmdRecordsGoToLast: AcCommand = ...
    acCmdRecordsGoToNew: AcCommand = ...
    acCmdRecordsGoToNext: AcCommand = ...
    acCmdRecordsGoToPrevious: AcCommand = ...
    acCmdRecoverDesignMaster: AcCommand = ...
    acCmdRedo: AcCommand = ...
    acCmdReferences: AcCommand = ...
    acCmdRefresh: AcCommand = ...
    acCmdRefreshData: AcCommand = ...
    acCmdRefreshPage: AcCommand = ...
    acCmdRefreshSharePointList: AcCommand = ...
    acCmdRegisterActiveXControls: AcCommand = ...
    acCmdRelationships: AcCommand = ...
    acCmdRemove: AcCommand = ...
    acCmdRemoveAllFilters: AcCommand = ...
    acCmdRemoveAllSorts: AcCommand = ...
    acCmdRemoveFilterFromCurrentColumn: AcCommand = ...
    acCmdRemoveFilterSort: AcCommand = ...
    acCmdRemoveFromLayout: AcCommand = ...
    acCmdRemoveTable: AcCommand = ...
    acCmdRename: AcCommand = ...
    acCmdRenameColumn: AcCommand = ...
    acCmdRenameGroup: AcCommand = ...
    acCmdRepairDatabase: AcCommand = ...
    acCmdReplace: AcCommand = ...
    acCmdReportHdrFtr: AcCommand = ...
    acCmdReportView: AcCommand = ...
    acCmdReset: AcCommand = ...
    acCmdResolveConflicts: AcCommand = ...
    acCmdRestore: AcCommand = ...
    acCmdRowHeight: AcCommand = ...
    acCmdRun: AcCommand = ...
    acCmdRunMacro: AcCommand = ...
    acCmdRunOpenMacro: AcCommand = ...
    acCmdSave: AcCommand = ...
    acCmdSaveAllModules: AcCommand = ...
    acCmdSaveAs: AcCommand = ...
    acCmdSaveAsASP: AcCommand = ...
    acCmdSaveAsDataAccessPage: AcCommand = ...
    acCmdSaveAsHTML: AcCommand = ...
    acCmdSaveAsIDC: AcCommand = ...
    acCmdSaveAsOutlookContact: AcCommand = ...
    acCmdSaveAsQuery: AcCommand = ...
    acCmdSaveAsReport: AcCommand = ...
    acCmdSaveAsTemplate: AcCommand = ...
    acCmdSaveDatabaseAsNewTemplatePart: AcCommand = ...
    acCmdSavedExports: AcCommand = ...
    acCmdSavedImports: AcCommand = ...
    acCmdSaveLayout: AcCommand = ...
    acCmdSaveModuleAsText: AcCommand = ...
    acCmdSaveRecord: AcCommand = ...
    acCmdSaveSelectionAsNewDataType: AcCommand = ...
    acCmdSelectAll: AcCommand = ...
    acCmdSelectAllRecords: AcCommand = ...
    acCmdSelectDataAccessPage: AcCommand = ...
    acCmdSelectEntireColumn: AcCommand = ...
    acCmdSelectEntireLayout: AcCommand = ...
    acCmdSelectEntireRow: AcCommand = ...
    acCmdSelectForm: AcCommand = ...
    acCmdSelectRecord: AcCommand = ...
    acCmdSelectReport: AcCommand = ...
    acCmdSend: AcCommand = ...
    acCmdSendToBack: AcCommand = ...
    acCmdServerFilterByForm: AcCommand = ...
    acCmdServerProperties: AcCommand = ...
    acCmdSetCaption: AcCommand = ...
    acCmdSetControlDefaults: AcCommand = ...
    acCmdSetDatabasePassword: AcCommand = ...
    acCmdSetNextStatement: AcCommand = ...
    acCmdShareOnSharePoint: AcCommand = ...
    acCmdSharePointSiteRecycleBin: AcCommand = ...
    acCmdShowAllRelationships: AcCommand = ...
    acCmdShowColumnHistory: AcCommand = ...
    acCmdShowDatePicker: AcCommand = ...
    acCmdShowDirectRelationships: AcCommand = ...
    acCmdShowEnvelope: AcCommand = ...
    acCmdShowLogicCatalog: AcCommand = ...
    acCmdShowMembers: AcCommand = ...
    acCmdShowMessageBar: AcCommand = ...
    acCmdShowNextStatement: AcCommand = ...
    acCmdShowOnlyWebToolbar: AcCommand = ...
    acCmdShowTable: AcCommand = ...
    acCmdSingleStep: AcCommand = ...
    acCmdSizeToFit: AcCommand = ...
    acCmdSizeToFitForm: AcCommand = ...
    acCmdSizeToGrid: AcCommand = ...
    acCmdSizeToNarrowest: AcCommand = ...
    acCmdSizeToWidest: AcCommand = ...
    acCmdSnapToGrid: AcCommand = ...
    acCmdSortAscending: AcCommand = ...
    acCmdSortDescending: AcCommand = ...
    acCmdSortingAndGrouping: AcCommand = ...
    acCmdSpeech: AcCommand = ...
    acCmdSpelling: AcCommand = ...
    acCmdSQLView: AcCommand = ...
    acCmdStackedLayout: AcCommand = ...
    acCmdStartNewWorkflow: AcCommand = ...
    acCmdStartupProperties: AcCommand = ...
    acCmdStepInto: AcCommand = ...
    acCmdStepOut: AcCommand = ...
    acCmdStepOver: AcCommand = ...
    acCmdStepToCursor: AcCommand = ...
    acCmdStopLoadingPage: AcCommand = ...
    acCmdSubdatasheetCollapseAll: AcCommand = ...
    acCmdSubdatasheetExpandAll: AcCommand = ...
    acCmdSubdatasheetRemove: AcCommand = ...
    acCmdSubformDatasheet: AcCommand = ...
    acCmdSubformDatasheetView: AcCommand = ...
    acCmdSubformFormView: AcCommand = ...
    acCmdSubformInNewWindow: AcCommand = ...
    acCmdSubformPivotChartView: AcCommand = ...
    acCmdSubformPivotTableView: AcCommand = ...
    acCmdSwitchboardManager: AcCommand = ...
    acCmdSynchronize: AcCommand = ...
    acCmdSynchronizeNow: AcCommand = ...
    acCmdSyncWebApplication: AcCommand = ...
    acCmdTabControlPageOrder: AcCommand = ...
    acCmdTableAddTable: AcCommand = ...
    acCmdTableCustomView: AcCommand = ...
    acCmdTableNames: AcCommand = ...
    acCmdTabOrder: AcCommand = ...
    acCmdTabularLayout: AcCommand = ...
    acCmdTestValidationRules: AcCommand = ...
    acCmdTileHorizontally: AcCommand = ...
    acCmdTileVertically: AcCommand = ...
    acCmdToggleBreakpoint: AcCommand = ...
    acCmdToggleCacheListData: AcCommand = ...
    acCmdToggleFilter: AcCommand = ...
    acCmdToggleOffline: AcCommand = ...
    acCmdToolbarControlProperties: AcCommand = ...
    acCmdToolbarsCustomize: AcCommand = ...
    acCmdTransferSQLDatabase: AcCommand = ...
    acCmdTransparentBackground: AcCommand = ...
    acCmdTransparentBorder: AcCommand = ...
    acCmdUndo: AcCommand = ...
    acCmdUnfreezeAllColumns: AcCommand = ...
    acCmdUngroupControls: AcCommand = ...
    acCmdUnhideColumns: AcCommand = ...
    acCmdUpsizingWizard: AcCommand = ...
    acCmdUserAndGroupAccounts: AcCommand = ...
    acCmdUserAndGroupPermissions: AcCommand = ...
    acCmdUserLevelSecurityWizard: AcCommand = ...
    acCmdVerticalSpacingDecrease: AcCommand = ...
    acCmdVerticalSpacingIncrease: AcCommand = ...
    acCmdVerticalSpacingMakeEqual: AcCommand = ...
    acCmdViewCode: AcCommand = ...
    acCmdViewDataAccessPages: AcCommand = ...
    acCmdViewDetails: AcCommand = ...
    acCmdViewDiagrams: AcCommand = ...
    acCmdViewFieldList: AcCommand = ...
    acCmdViewForms: AcCommand = ...
    acCmdViewFunctions: AcCommand = ...
    acCmdViewGrid: AcCommand = ...
    acCmdViewLargeIcons: AcCommand = ...
    acCmdViewList: AcCommand = ...
    acCmdViewMacros: AcCommand = ...
    acCmdViewModules: AcCommand = ...
    acCmdViewObjectDependencies: AcCommand = ...
    acCmdViewQueries: AcCommand = ...
    acCmdViewReports: AcCommand = ...
    acCmdViewRuler: AcCommand = ...
    acCmdViewShowPaneDiagram: AcCommand = ...
    acCmdViewShowPaneGrid: AcCommand = ...
    acCmdViewShowPaneSQL: AcCommand = ...
    acCmdViewSmallIcons: AcCommand = ...
    acCmdViewStoredProcedures: AcCommand = ...
    acCmdViewTableColumnNames: AcCommand = ...
    acCmdViewTableColumnProperties: AcCommand = ...
    acCmdViewTableKeys: AcCommand = ...
    acCmdViewTableNameOnly: AcCommand = ...
    acCmdViewTables: AcCommand = ...
    acCmdViewTableUserView: AcCommand = ...
    acCmdViewToolbox: AcCommand = ...
    acCmdViewVerifySQL: AcCommand = ...
    acCmdViewViews: AcCommand = ...
    acCmdVisualBasicEditor: AcCommand = ...
    acCmdWebPagePreview: AcCommand = ...
    acCmdWebPageProperties: AcCommand = ...
    acCmdWebTheme: AcCommand = ...
    acCmdWindowArrangeIcons: AcCommand = ...
    acCmdWindowCascade: AcCommand = ...
    acCmdWindowHide: AcCommand = ...
    acCmdWindowSplit: AcCommand = ...
    acCmdWindowUnhide: AcCommand = ...
    acCmdWordMailMerge: AcCommand = ...
    acCmdWorkflowTasks: AcCommand = ...
    acCmdWorkgroupAdministrator: AcCommand = ...
    acCmdZoom10: AcCommand = ...
    acCmdZoom100: AcCommand = ...
    acCmdZoom1000: AcCommand = ...
    acCmdZoom150: AcCommand = ...
    acCmdZoom200: AcCommand = ...
    acCmdZoom25: AcCommand = ...
    acCmdZoom50: AcCommand = ...
    acCmdZoom500: AcCommand = ...
    acCmdZoom75: AcCommand = ...
    acCmdZoomBox: AcCommand = ...
    acCmdZoomSelection: AcCommand = ...
    value__ = ...


class AcControlType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcControlType, values: acAttachment (126), acBoundObjectFrame (108), acCheckBox (106), acComboBox (111), acCommandButton (104), acCustomControl (119), acEmptyCell (127), acImage (103), acLabel (100), acLine (102), acListBox (110), acNavigationButton (130), acNavigationControl (129), acObjectFrame (114), acOptionButton (105), acOptionGroup (107), acPage (124), acPageBreak (118), acRectangle (101), acSubform (112), acTabCtl (123), acTextBox (109), acToggleButton (122), acWebBrowser (128) """
    acAttachment: AcControlType = ...
    acBoundObjectFrame: AcControlType = ...
    acCheckBox: AcControlType = ...
    acComboBox: AcControlType = ...
    acCommandButton: AcControlType = ...
    acCustomControl: AcControlType = ...
    acEmptyCell: AcControlType = ...
    acImage: AcControlType = ...
    acLabel: AcControlType = ...
    acLine: AcControlType = ...
    acListBox: AcControlType = ...
    acNavigationButton: AcControlType = ...
    acNavigationControl: AcControlType = ...
    acObjectFrame: AcControlType = ...
    acOptionButton: AcControlType = ...
    acOptionGroup: AcControlType = ...
    acPage: AcControlType = ...
    acPageBreak: AcControlType = ...
    acRectangle: AcControlType = ...
    acSubform: AcControlType = ...
    acTabCtl: AcControlType = ...
    acTextBox: AcControlType = ...
    acToggleButton: AcControlType = ...
    acWebBrowser: AcControlType = ...
    value__ = ...


class AcCurrentView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcCurrentView, values: acCurViewDatasheet (2), acCurViewDesign (0), acCurViewFormBrowse (1), acCurViewLayout (7), acCurViewPivotChart (4), acCurViewPivotTable (3), acCurViewPreview (5), acCurViewReportBrowse (6) """
    acCurViewDatasheet: AcCurrentView = ...
    acCurViewDesign: AcCurrentView = ...
    acCurViewFormBrowse: AcCurrentView = ...
    acCurViewLayout: AcCurrentView = ...
    acCurViewPivotChart: AcCurrentView = ...
    acCurViewPivotTable: AcCurrentView = ...
    acCurViewPreview: AcCurrentView = ...
    acCurViewReportBrowse: AcCurrentView = ...
    value__ = ...


class AcCursorOnHover(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcCursorOnHover, values: acCursorOnHoverDefault (0), acCursorOnHoverHyperlinkHand (1) """
    acCursorOnHoverDefault: AcCursorOnHover = ...
    acCursorOnHoverHyperlinkHand: AcCursorOnHover = ...
    value__ = ...


class AcDataAccessPageView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDataAccessPageView, values: acDataAccessPageBrowse (0), acDataAccessPageDesign (1) """
    acDataAccessPageBrowse: AcDataAccessPageView = ...
    acDataAccessPageDesign: AcDataAccessPageView = ...
    value__ = ...


class AcDataObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDataObjectType, values: acActiveDataObject (-1), acDataForm (2), acDataFunction (10), acDataQuery (1), acDataReport (3), acDataServerView (7), acDataStoredProcedure (9), acDataTable (0) """
    acActiveDataObject: AcDataObjectType = ...
    acDataForm: AcDataObjectType = ...
    acDataFunction: AcDataObjectType = ...
    acDataQuery: AcDataObjectType = ...
    acDataReport: AcDataObjectType = ...
    acDataServerView: AcDataObjectType = ...
    acDataStoredProcedure: AcDataObjectType = ...
    acDataTable: AcDataObjectType = ...
    value__ = ...


class AcDataTransferType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDataTransferType, values: acExport (1), acImport (0), acLink (2) """
    acExport: AcDataTransferType = ...
    acImport: AcDataTransferType = ...
    acLink: AcDataTransferType = ...
    value__ = ...


class AcDefReportView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDefReportView, values: acDefViewPreview (0), acDefViewReportBrowse (1) """
    acDefViewPreview: AcDefReportView = ...
    acDefViewReportBrowse: AcDefReportView = ...
    value__ = ...


class AcDefView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDefView, values: acDefViewContinuous (1), acDefViewDatasheet (2), acDefViewPivotChart (4), acDefViewPivotTable (3), acDefViewSingle (0), acDefViewSplitForm (5) """
    acDefViewContinuous: AcDefView = ...
    acDefViewDatasheet: AcDefView = ...
    acDefViewPivotChart: AcDefView = ...
    acDefViewPivotTable: AcDefView = ...
    acDefViewSingle: AcDefView = ...
    acDefViewSplitForm: AcDefView = ...
    value__ = ...


class AcDisplayAs(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDisplayAs, values: acDisplayAsIcon (1), acDisplayAsImageIcon (0), acDisplayAsPaperclip (2) """
    acDisplayAsIcon: AcDisplayAs = ...
    acDisplayAsImageIcon: AcDisplayAs = ...
    acDisplayAsPaperclip: AcDisplayAs = ...
    value__ = ...


class AcDisplayAsHyperlink(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcDisplayAsHyperlink, values: acDisplayAsHyperlinkAlways (1), acDisplayAsHyperlinkIfHyperlink (0), acDisplayAsHyperlinkOnScreenOnly (2) """
    acDisplayAsHyperlinkAlways: AcDisplayAsHyperlink = ...
    acDisplayAsHyperlinkIfHyperlink: AcDisplayAsHyperlink = ...
    acDisplayAsHyperlinkOnScreenOnly: AcDisplayAsHyperlink = ...
    value__ = ...


class AcExportQuality(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcExportQuality, values: acExportQualityPrint (0), acExportQualityScreen (1) """
    acExportQualityPrint: AcExportQuality = ...
    acExportQualityScreen: AcExportQuality = ...
    value__ = ...


class AcExportXMLEncoding(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcExportXMLEncoding, values: acUTF16 (1), acUTF8 (0) """
    acUTF16: AcExportXMLEncoding = ...
    acUTF8: AcExportXMLEncoding = ...
    value__ = ...


class AcExportXMLObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcExportXMLObjectType, values: acExportForm (2), acExportFunction (10), acExportQuery (1), acExportReport (3), acExportServerView (7), acExportStoredProcedure (9), acExportTable (0) """
    acExportForm: AcExportXMLObjectType = ...
    acExportFunction: AcExportXMLObjectType = ...
    acExportQuery: AcExportXMLObjectType = ...
    acExportReport: AcExportXMLObjectType = ...
    acExportServerView: AcExportXMLObjectType = ...
    acExportStoredProcedure: AcExportXMLObjectType = ...
    acExportTable: AcExportXMLObjectType = ...
    value__ = ...


class AcExportXMLOtherFlags(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcExportXMLOtherFlags, values: acEmbedSchema (1), acExcludePrimaryKeyAndIndexes (2), acExportAllTableAndFieldProperties (32), acLiveReportSource (8), acPersistReportML (16), acRunFromServer (4) """
    acEmbedSchema: AcExportXMLOtherFlags = ...
    acExcludePrimaryKeyAndIndexes: AcExportXMLOtherFlags = ...
    acExportAllTableAndFieldProperties: AcExportXMLOtherFlags = ...
    acLiveReportSource: AcExportXMLOtherFlags = ...
    acPersistReportML: AcExportXMLOtherFlags = ...
    acRunFromServer: AcExportXMLOtherFlags = ...
    value__ = ...


class AcExportXMLSchemaFormat(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcExportXMLSchemaFormat, values: acSchemaNone (0), acSchemaXSD (1) """
    acSchemaNone: AcExportXMLSchemaFormat = ...
    acSchemaXSD: AcExportXMLSchemaFormat = ...
    value__ = ...


class AcFileFormat(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFileFormat, values: acFileFormatAccess2 (2), acFileFormatAccess2000 (9), acFileFormatAccess2002 (10), acFileFormatAccess2007 (12), acFileFormatAccess95 (7), acFileFormatAccess97 (8) """
    acFileFormatAccess2: AcFileFormat = ...
    acFileFormatAccess2000: AcFileFormat = ...
    acFileFormatAccess2002: AcFileFormat = ...
    acFileFormatAccess2007: AcFileFormat = ...
    acFileFormatAccess95: AcFileFormat = ...
    acFileFormatAccess97: AcFileFormat = ...
    value__ = ...


class AcFilterType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFilterType, values: acFilterNormal (0), acServerFilter (1) """
    acFilterNormal: AcFilterType = ...
    acServerFilter: AcFilterType = ...
    value__ = ...


class AcFindField(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFindField, values: acAll (0), acCurrent (-1) """
    acAll: AcFindField = ...
    acCurrent: AcFindField = ...
    value__ = ...


class AcFindMatch(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFindMatch, values: acAnywhere (0), acEntire (1), acStart (2) """
    acAnywhere: AcFindMatch = ...
    acEntire: AcFindMatch = ...
    acStart: AcFindMatch = ...
    value__ = ...


class AcFormatBarLimits(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFormatBarLimits, values: acAutomatic (0), acNumber (1), acPercent (2) """
    acAutomatic: AcFormatBarLimits = ...
    acNumber: AcFormatBarLimits = ...
    acPercent: AcFormatBarLimits = ...
    value__ = ...


class AcFormatConditionOperator(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFormatConditionOperator, values: acBetween (0), acEqual (2), acGreaterThan (4), acGreaterThanOrEqual (6), acLessThan (5), acLessThanOrEqual (7), acNotBetween (1), acNotEqual (3) """
    acBetween: AcFormatConditionOperator = ...
    acEqual: AcFormatConditionOperator = ...
    acGreaterThan: AcFormatConditionOperator = ...
    acGreaterThanOrEqual: AcFormatConditionOperator = ...
    acLessThan: AcFormatConditionOperator = ...
    acLessThanOrEqual: AcFormatConditionOperator = ...
    acNotBetween: AcFormatConditionOperator = ...
    acNotEqual: AcFormatConditionOperator = ...
    value__ = ...


class AcFormatConditionType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFormatConditionType, values: acDataBar (3), acExpression (1), acFieldHasFocus (2), acFieldValue (0) """
    acDataBar: AcFormatConditionType = ...
    acExpression: AcFormatConditionType = ...
    acFieldHasFocus: AcFormatConditionType = ...
    acFieldValue: AcFormatConditionType = ...
    value__ = ...


class AcFormOpenDataMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFormOpenDataMode, values: acFormAdd (0), acFormEdit (1), acFormPropertySettings (-1), acFormReadOnly (2) """
    acFormAdd: AcFormOpenDataMode = ...
    acFormEdit: AcFormOpenDataMode = ...
    acFormPropertySettings: AcFormOpenDataMode = ...
    acFormReadOnly: AcFormOpenDataMode = ...
    value__ = ...


class AcFormView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcFormView, values: acDesign (1), acFormDS (3), acFormPivotChart (5), acFormPivotTable (4), acLayout (6), acNormal (0), acPreview (2) """
    acDesign: AcFormView = ...
    acFormDS: AcFormView = ...
    acFormPivotChart: AcFormView = ...
    acFormPivotTable: AcFormView = ...
    acLayout: AcFormView = ...
    acNormal: AcFormView = ...
    acPreview: AcFormView = ...
    value__ = ...


class AcHorizontalAnchor(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcHorizontalAnchor, values: acHorizontalAnchorBoth (2), acHorizontalAnchorLeft (0), acHorizontalAnchorRight (1) """
    acHorizontalAnchorBoth: AcHorizontalAnchor = ...
    acHorizontalAnchorLeft: AcHorizontalAnchor = ...
    acHorizontalAnchorRight: AcHorizontalAnchor = ...
    value__ = ...


class AcHyperlinkPart(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcHyperlinkPart, values: acAddress (2), acDisplayedValue (0), acDisplayText (1), acFullAddress (5), acScreenTip (4), acSubAddress (3) """
    acAddress: AcHyperlinkPart = ...
    acDisplayedValue: AcHyperlinkPart = ...
    acDisplayText: AcHyperlinkPart = ...
    acFullAddress: AcHyperlinkPart = ...
    acScreenTip: AcHyperlinkPart = ...
    acSubAddress: AcHyperlinkPart = ...
    value__ = ...


class AcImeMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcImeMode, values: acImeModeAlpha (8), acImeModeAlphaFull (7), acImeModeDisable (3), acImeModeHangul (10), acImeModeHangulFull (9), acImeModeHiragana (4), acImeModeKatakana (5), acImeModeKatakanaHalf (6), acImeModeNoControl (0), acImeModeOff (2), acImeModeOn (1) """
    acImeModeAlpha: AcImeMode = ...
    acImeModeAlphaFull: AcImeMode = ...
    acImeModeDisable: AcImeMode = ...
    acImeModeHangul: AcImeMode = ...
    acImeModeHangulFull: AcImeMode = ...
    acImeModeHiragana: AcImeMode = ...
    acImeModeKatakana: AcImeMode = ...
    acImeModeKatakanaHalf: AcImeMode = ...
    acImeModeNoControl: AcImeMode = ...
    acImeModeOff: AcImeMode = ...
    acImeModeOn: AcImeMode = ...
    value__ = ...


class AcImeSentenceMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcImeSentenceMode, values: acImeSentenceModeConversation (2), acImeSentenceModeNone (3), acImeSentenceModePhrasePredict (0), acImeSentenceModePluralClause (1) """
    acImeSentenceModeConversation: AcImeSentenceMode = ...
    acImeSentenceModeNone: AcImeSentenceMode = ...
    acImeSentenceModePhrasePredict: AcImeSentenceMode = ...
    acImeSentenceModePluralClause: AcImeSentenceMode = ...
    value__ = ...


class AcImportXMLOption(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcImportXMLOption, values: acAppendData (2), acStructureAndData (1), acStructureOnly (0) """
    acAppendData: AcImportXMLOption = ...
    acStructureAndData: AcImportXMLOption = ...
    acStructureOnly: AcImportXMLOption = ...
    value__ = ...


class AcLayoutType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcLayoutType, values: acLayoutNone (0), acLayoutStacked (2), acLayoutTabular (1) """
    acLayoutNone: AcLayoutType = ...
    acLayoutStacked: AcLayoutType = ...
    acLayoutTabular: AcLayoutType = ...
    value__ = ...


class AcModuleType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcModuleType, values: acClassModule (1), acStandardModule (0) """
    acClassModule: AcModuleType = ...
    acStandardModule: AcModuleType = ...
    value__ = ...


class AcNavigationSpan(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcNavigationSpan, values: acHorizontal (0), acVertical (1) """
    acHorizontal: AcNavigationSpan = ...
    acVertical: AcNavigationSpan = ...
    value__ = ...


class AcNewDatabaseFormat(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcNewDatabaseFormat, values: acNewDatabaseFormatAccess2000 (9), acNewDatabaseFormatAccess2002 (10), acNewDatabaseFormatAccess2007 (12), acNewDatabaseFormatUserDefault (0) """
    acNewDatabaseFormatAccess2000: AcNewDatabaseFormat = ...
    acNewDatabaseFormatAccess2002: AcNewDatabaseFormat = ...
    acNewDatabaseFormatAccess2007: AcNewDatabaseFormat = ...
    acNewDatabaseFormatUserDefault: AcNewDatabaseFormat = ...
    value__ = ...


class AcObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcObjectType, values: acDataAccessPage (6), acDatabaseProperties (11), acDefault (-1), acDiagram (8), acForm (2), acFunction (10), acMacro (4), acModule (5), acQuery (1), acReport (3), acServerView (7), acStoredProcedure (9), acTable (0), acTableDataMacro (12) """
    acDataAccessPage: AcObjectType = ...
    acDatabaseProperties: AcObjectType = ...
    acDefault: AcObjectType = ...
    acDiagram: AcObjectType = ...
    acForm: AcObjectType = ...
    acFunction: AcObjectType = ...
    acMacro: AcObjectType = ...
    acModule: AcObjectType = ...
    acQuery: AcObjectType = ...
    acReport: AcObjectType = ...
    acServerView: AcObjectType = ...
    acStoredProcedure: AcObjectType = ...
    acTable: AcObjectType = ...
    acTableDataMacro: AcObjectType = ...
    value__ = ...


class AcOpenDataMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcOpenDataMode, values: acAdd (0), acEdit (1), acReadOnly (2) """
    acAdd: AcOpenDataMode = ...
    acEdit: AcOpenDataMode = ...
    acReadOnly: AcOpenDataMode = ...
    value__ = ...


class AcOutputObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcOutputObjectType, values: acOutputDataAccessPage (6), acOutputForm (2), acOutputFunction (10), acOutputModule (5), acOutputQuery (1), acOutputReport (3), acOutputServerView (7), acOutputStoredProcedure (9), acOutputTable (0) """
    acOutputDataAccessPage: AcOutputObjectType = ...
    acOutputForm: AcOutputObjectType = ...
    acOutputFunction: AcOutputObjectType = ...
    acOutputModule: AcOutputObjectType = ...
    acOutputQuery: AcOutputObjectType = ...
    acOutputReport: AcOutputObjectType = ...
    acOutputServerView: AcOutputObjectType = ...
    acOutputStoredProcedure: AcOutputObjectType = ...
    acOutputTable: AcOutputObjectType = ...
    value__ = ...


class AcPictureCaptionArrangement(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPictureCaptionArrangement, values: acBottom (3), acGeneral (1), acLeft (4), acNoPictureCaption (0), acRight (5), acTop (2) """
    acBottom: AcPictureCaptionArrangement = ...
    acGeneral: AcPictureCaptionArrangement = ...
    acLeft: AcPictureCaptionArrangement = ...
    acNoPictureCaption: AcPictureCaptionArrangement = ...
    acRight: AcPictureCaptionArrangement = ...
    acTop: AcPictureCaptionArrangement = ...
    value__ = ...


class AcPrintColor(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintColor, values: acPRCMColor (2), acPRCMMonochrome (1) """
    acPRCMColor: AcPrintColor = ...
    acPRCMMonochrome: AcPrintColor = ...
    value__ = ...


class AcPrintDuplex(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintDuplex, values: acPRDPHorizontal (2), acPRDPSimplex (1), acPRDPVertical (3) """
    acPRDPHorizontal: AcPrintDuplex = ...
    acPRDPSimplex: AcPrintDuplex = ...
    acPRDPVertical: AcPrintDuplex = ...
    value__ = ...


class AcPrintItemLayout(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintItemLayout, values: acPRHorizontalColumnLayout (1953), acPRVerticalColumnLayout (1954) """
    acPRHorizontalColumnLayout: AcPrintItemLayout = ...
    acPRVerticalColumnLayout: AcPrintItemLayout = ...
    value__ = ...


class AcPrintObjQuality(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintObjQuality, values: acPRPQDraft (-1), acPRPQHigh (-4), acPRPQLow (-2), acPRPQMedium (-3) """
    acPRPQDraft: AcPrintObjQuality = ...
    acPRPQHigh: AcPrintObjQuality = ...
    acPRPQLow: AcPrintObjQuality = ...
    acPRPQMedium: AcPrintObjQuality = ...
    value__ = ...


class AcPrintOrientation(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintOrientation, values: acPRORLandscape (2), acPRORPortrait (1) """
    acPRORLandscape: AcPrintOrientation = ...
    acPRORPortrait: AcPrintOrientation = ...
    value__ = ...


class AcPrintPaperBin(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintPaperBin, values: acPRBNAuto (7), acPRBNCassette (14), acPRBNEnvelope (5), acPRBNEnvManual (6), acPRBNFormSource (15), acPRBNLargeCapacity (11), acPRBNLargeFmt (10), acPRBNLower (2), acPRBNManual (4), acPRBNMiddle (3), acPRBNSmallFmt (9), acPRBNTractor (8), acPRBNUpper (1) """
    acPRBNAuto: AcPrintPaperBin = ...
    acPRBNCassette: AcPrintPaperBin = ...
    acPRBNEnvelope: AcPrintPaperBin = ...
    acPRBNEnvManual: AcPrintPaperBin = ...
    acPRBNFormSource: AcPrintPaperBin = ...
    acPRBNLargeCapacity: AcPrintPaperBin = ...
    acPRBNLargeFmt: AcPrintPaperBin = ...
    acPRBNLower: AcPrintPaperBin = ...
    acPRBNManual: AcPrintPaperBin = ...
    acPRBNMiddle: AcPrintPaperBin = ...
    acPRBNSmallFmt: AcPrintPaperBin = ...
    acPRBNTractor: AcPrintPaperBin = ...
    acPRBNUpper: AcPrintPaperBin = ...
    value__ = ...


class AcPrintPaperSize(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintPaperSize, values: acPRPS10x14 (16), acPRPS11x17 (17), acPRPSA3 (8), acPRPSA4 (9), acPRPSA4Small (10), acPRPSA5 (11), acPRPSB4 (12), acPRPSB5 (13), acPRPSCSheet (24), acPRPSDSheet (25), acPRPSEnv10 (20), acPRPSEnv11 (21), acPRPSEnv12 (22), acPRPSEnv14 (23), acPRPSEnv9 (19), acPRPSEnvB4 (33), acPRPSEnvB5 (34), acPRPSEnvB6 (35), acPRPSEnvC3 (29), acPRPSEnvC4 (30), acPRPSEnvC5 (28), acPRPSEnvC6 (31), acPRPSEnvC65 (32), acPRPSEnvDL (27), acPRPSEnvItaly (36), acPRPSEnvMonarch (37), acPRPSEnvPersonal (38), acPRPSESheet (26), acPRPSExecutive (7), acPRPSFanfoldLglGerman (41), acPRPSFanfoldStdGerman (40), acPRPSFanfoldUS (39), acPRPSFolio (14), acPRPSLedger (4), acPRPSLegal (5), acPRPSLetter (1), acPRPSLetterSmall (2), acPRPSNote (18), acPRPSQuarto (15), acPRPSStatement (6), acPRPSTabloid (3), acPRPSUser (256) """
    acPRPS10x14: AcPrintPaperSize = ...
    acPRPS11x17: AcPrintPaperSize = ...
    acPRPSA3: AcPrintPaperSize = ...
    acPRPSA4: AcPrintPaperSize = ...
    acPRPSA4Small: AcPrintPaperSize = ...
    acPRPSA5: AcPrintPaperSize = ...
    acPRPSB4: AcPrintPaperSize = ...
    acPRPSB5: AcPrintPaperSize = ...
    acPRPSCSheet: AcPrintPaperSize = ...
    acPRPSDSheet: AcPrintPaperSize = ...
    acPRPSEnv10: AcPrintPaperSize = ...
    acPRPSEnv11: AcPrintPaperSize = ...
    acPRPSEnv12: AcPrintPaperSize = ...
    acPRPSEnv14: AcPrintPaperSize = ...
    acPRPSEnv9: AcPrintPaperSize = ...
    acPRPSEnvB4: AcPrintPaperSize = ...
    acPRPSEnvB5: AcPrintPaperSize = ...
    acPRPSEnvB6: AcPrintPaperSize = ...
    acPRPSEnvC3: AcPrintPaperSize = ...
    acPRPSEnvC4: AcPrintPaperSize = ...
    acPRPSEnvC5: AcPrintPaperSize = ...
    acPRPSEnvC6: AcPrintPaperSize = ...
    acPRPSEnvC65: AcPrintPaperSize = ...
    acPRPSEnvDL: AcPrintPaperSize = ...
    acPRPSEnvItaly: AcPrintPaperSize = ...
    acPRPSEnvMonarch: AcPrintPaperSize = ...
    acPRPSEnvPersonal: AcPrintPaperSize = ...
    acPRPSESheet: AcPrintPaperSize = ...
    acPRPSExecutive: AcPrintPaperSize = ...
    acPRPSFanfoldLglGerman: AcPrintPaperSize = ...
    acPRPSFanfoldStdGerman: AcPrintPaperSize = ...
    acPRPSFanfoldUS: AcPrintPaperSize = ...
    acPRPSFolio: AcPrintPaperSize = ...
    acPRPSLedger: AcPrintPaperSize = ...
    acPRPSLegal: AcPrintPaperSize = ...
    acPRPSLetter: AcPrintPaperSize = ...
    acPRPSLetterSmall: AcPrintPaperSize = ...
    acPRPSNote: AcPrintPaperSize = ...
    acPRPSQuarto: AcPrintPaperSize = ...
    acPRPSStatement: AcPrintPaperSize = ...
    acPRPSTabloid: AcPrintPaperSize = ...
    acPRPSUser: AcPrintPaperSize = ...
    value__ = ...


class AcPrintQuality(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintQuality, values: acDraft (3), acHigh (0), acLow (2), acMedium (1) """
    acDraft: AcPrintQuality = ...
    acHigh: AcPrintQuality = ...
    acLow: AcPrintQuality = ...
    acMedium: AcPrintQuality = ...
    value__ = ...


class AcPrintRange(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcPrintRange, values: acPages (2), acPrintAll (0), acSelection (1) """
    acPages: AcPrintRange = ...
    acPrintAll: AcPrintRange = ...
    acSelection: AcPrintRange = ...
    value__ = ...


class AcProjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcProjectType, values: acADP (1), acMDB (2), acNull (0) """
    acADP: AcProjectType = ...
    acMDB: AcProjectType = ...
    acNull: AcProjectType = ...
    value__ = ...


class AcProperty(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcProperty, values: acPropertyBackColor (8), acPropertyCaption (9), acPropertyEnabled (0), acPropertyForeColor (7), acPropertyHeight (6), acPropertyLeft (3), acPropertyLocked (2), acPropertyTop (4), acPropertyValue (10), acPropertyVisible (1), acPropertyWidth (5) """
    acPropertyBackColor: AcProperty = ...
    acPropertyCaption: AcProperty = ...
    acPropertyEnabled: AcProperty = ...
    acPropertyForeColor: AcProperty = ...
    acPropertyHeight: AcProperty = ...
    acPropertyLeft: AcProperty = ...
    acPropertyLocked: AcProperty = ...
    acPropertyTop: AcProperty = ...
    acPropertyValue: AcProperty = ...
    acPropertyVisible: AcProperty = ...
    acPropertyWidth: AcProperty = ...
    value__ = ...


class AcQuitOption(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcQuitOption, values: acQuitPrompt (0), acQuitSaveAll (1), acQuitSaveNone (2) """
    acQuitPrompt: AcQuitOption = ...
    acQuitSaveAll: AcQuitOption = ...
    acQuitSaveNone: AcQuitOption = ...
    value__ = ...


class AcRecord(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcRecord, values: acFirst (2), acGoTo (4), acLast (3), acNewRec (5), acNext (1), acPrevious (0) """
    acFirst: AcRecord = ...
    acGoTo: AcRecord = ...
    acLast: AcRecord = ...
    acNewRec: AcRecord = ...
    acNext: AcRecord = ...
    acPrevious: AcRecord = ...
    value__ = ...


class AcResourceType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcResourceType, values: acResourceImage (1), acResourceTheme (0) """
    acResourceImage: AcResourceType = ...
    acResourceTheme: AcResourceType = ...
    value__ = ...


class AcSearchDirection(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSearchDirection, values: acDown (1), acSearchAll (2), acUp (0) """
    acDown: AcSearchDirection = ...
    acSearchAll: AcSearchDirection = ...
    acUp: AcSearchDirection = ...
    value__ = ...


class AcSection(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSection, values: acDetail (0), acFooter (2), acGroupLevel1Footer (6), acGroupLevel1Header (5), acGroupLevel2Footer (8), acGroupLevel2Header (7), acHeader (1), acPageFooter (4), acPageHeader (3) """
    acDetail: AcSection = ...
    acFooter: AcSection = ...
    acGroupLevel1Footer: AcSection = ...
    acGroupLevel1Header: AcSection = ...
    acGroupLevel2Footer: AcSection = ...
    acGroupLevel2Header: AcSection = ...
    acHeader: AcSection = ...
    acPageFooter: AcSection = ...
    acPageHeader: AcSection = ...
    value__ = ...


class AcSendObjectType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSendObjectType, values: acSendDataAccessPage (6), acSendForm (2), acSendModule (5), acSendNoObject (-1), acSendQuery (1), acSendReport (3), acSendTable (0) """
    acSendDataAccessPage: AcSendObjectType = ...
    acSendForm: AcSendObjectType = ...
    acSendModule: AcSendObjectType = ...
    acSendNoObject: AcSendObjectType = ...
    acSendQuery: AcSendObjectType = ...
    acSendReport: AcSendObjectType = ...
    acSendTable: AcSendObjectType = ...
    value__ = ...


class AcSeparatorCharacters(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSeparatorCharacters, values: acSeparatorCharactersComma (3), acSeparatorCharactersNewLine (1), acSeparatorCharactersSemiColon (2), acSeparatorCharactersSystemSeparator (0) """
    acSeparatorCharactersComma: AcSeparatorCharacters = ...
    acSeparatorCharactersNewLine: AcSeparatorCharacters = ...
    acSeparatorCharactersSemiColon: AcSeparatorCharacters = ...
    acSeparatorCharactersSystemSeparator: AcSeparatorCharacters = ...
    value__ = ...


class AcSharePointListTransferType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSharePointListTransferType, values: acImportSharePointList (0), acLinkSharePointList (1) """
    acImportSharePointList: AcSharePointListTransferType = ...
    acLinkSharePointList: AcSharePointListTransferType = ...
    value__ = ...


class AcShowToolbar(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcShowToolbar, values: acToolbarNo (2), acToolbarWhereApprop (1), acToolbarYes (0) """
    acToolbarNo: AcShowToolbar = ...
    acToolbarWhereApprop: AcShowToolbar = ...
    acToolbarYes: AcShowToolbar = ...
    value__ = ...


class AcSplitFormDatasheet(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSplitFormDatasheet, values: acDatasheetAllowEdits (0), acDatasheetReadOnly (1) """
    acDatasheetAllowEdits: AcSplitFormDatasheet = ...
    acDatasheetReadOnly: AcSplitFormDatasheet = ...
    value__ = ...


class AcSplitFormOrientation(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSplitFormOrientation, values: acDatasheetOnBottom (1), acDatasheetOnLeft (2), acDatasheetOnRight (3), acDatasheetOnTop (0) """
    acDatasheetOnBottom: AcSplitFormOrientation = ...
    acDatasheetOnLeft: AcSplitFormOrientation = ...
    acDatasheetOnRight: AcSplitFormOrientation = ...
    acDatasheetOnTop: AcSplitFormOrientation = ...
    value__ = ...


class AcSplitFormPrinting(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSplitFormPrinting, values: acFormOnly (0), acGridOnly (1) """
    acFormOnly: AcSplitFormPrinting = ...
    acGridOnly: AcSplitFormPrinting = ...
    value__ = ...


class AcSpreadSheetType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSpreadSheetType, values: acSpreadsheetTypeExcel12 (9), acSpreadsheetTypeExcel12Xml (10), acSpreadsheetTypeExcel3 (0), acSpreadsheetTypeExcel4 (6), acSpreadsheetTypeExcel5 (5), acSpreadsheetTypeExcel7 (5), acSpreadsheetTypeExcel8 (8), acSpreadsheetTypeExcel9 (8), acSpreadsheetTypeExcel97 (8), acSpreadsheetTypeLotusWJ2 (4), acSpreadsheetTypeLotusWK1 (2), acSpreadsheetTypeLotusWK3 (3), acSpreadsheetTypeLotusWK4 (7) """
    acSpreadsheetTypeExcel12: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel12Xml: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel3: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel4: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel5: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel7: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel8: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel9: AcSpreadSheetType = ...
    acSpreadsheetTypeExcel97: AcSpreadSheetType = ...
    acSpreadsheetTypeLotusWJ2: AcSpreadSheetType = ...
    acSpreadsheetTypeLotusWK1: AcSpreadSheetType = ...
    acSpreadsheetTypeLotusWK3: AcSpreadSheetType = ...
    acSpreadsheetTypeLotusWK4: AcSpreadSheetType = ...
    value__ = ...


class AcSysCmdAction(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcSysCmdAction, values: acSysCmdAccessDir (9), acSysCmdAccessVer (7), acSysCmdClearHelpTopic (11), acSysCmdClearStatus (5), acSysCmdGetObjectState (10), acSysCmdGetWorkgroupFile (13), acSysCmdIniFile (8), acSysCmdInitMeter (1), acSysCmdProfile (12), acSysCmdRemoveMeter (3), acSysCmdRuntime (6), acSysCmdSetStatus (4), acSysCmdUpdateMeter (2) """
    acSysCmdAccessDir: AcSysCmdAction = ...
    acSysCmdAccessVer: AcSysCmdAction = ...
    acSysCmdClearHelpTopic: AcSysCmdAction = ...
    acSysCmdClearStatus: AcSysCmdAction = ...
    acSysCmdGetObjectState: AcSysCmdAction = ...
    acSysCmdGetWorkgroupFile: AcSysCmdAction = ...
    acSysCmdIniFile: AcSysCmdAction = ...
    acSysCmdInitMeter: AcSysCmdAction = ...
    acSysCmdProfile: AcSysCmdAction = ...
    acSysCmdRemoveMeter: AcSysCmdAction = ...
    acSysCmdRuntime: AcSysCmdAction = ...
    acSysCmdSetStatus: AcSysCmdAction = ...
    acSysCmdUpdateMeter: AcSysCmdAction = ...
    value__ = ...


class AcTextFormat(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcTextFormat, values: acTextFormatHTMLRichText (1), acTextFormatPlain (0) """
    acTextFormatHTMLRichText: AcTextFormat = ...
    acTextFormatPlain: AcTextFormat = ...
    value__ = ...


class AcTextTransferType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcTextTransferType, values: acExportDelim (2), acExportFixed (3), acExportHTML (8), acExportMerge (4), acImportDelim (0), acImportFixed (1), acImportHTML (7), acLinkDelim (5), acLinkFixed (6), acLinkHTML (9) """
    acExportDelim: AcTextTransferType = ...
    acExportFixed: AcTextTransferType = ...
    acExportHTML: AcTextTransferType = ...
    acExportMerge: AcTextTransferType = ...
    acImportDelim: AcTextTransferType = ...
    acImportFixed: AcTextTransferType = ...
    acImportHTML: AcTextTransferType = ...
    acLinkDelim: AcTextTransferType = ...
    acLinkFixed: AcTextTransferType = ...
    acLinkHTML: AcTextTransferType = ...
    value__ = ...


class AcTransformXMLScriptOption(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcTransformXMLScriptOption, values: acDisableScript (2), acEnableScript (0), acPromptScript (1) """
    acDisableScript: AcTransformXMLScriptOption = ...
    acEnableScript: AcTransformXMLScriptOption = ...
    acPromptScript: AcTransformXMLScriptOption = ...
    value__ = ...


class AcVerticalAnchor(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcVerticalAnchor, values: acVerticalAnchorBoth (2), acVerticalAnchorBottom (1), acVerticalAnchorTop (0) """
    acVerticalAnchorBoth: AcVerticalAnchor = ...
    acVerticalAnchorBottom: AcVerticalAnchor = ...
    acVerticalAnchorTop: AcVerticalAnchor = ...
    value__ = ...


class AcView(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcView, values: acViewDesign (1), acViewLayout (6), acViewNormal (0), acViewPivotChart (4), acViewPivotTable (3), acViewPreview (2), acViewReport (5) """
    acViewDesign: AcView = ...
    acViewLayout: AcView = ...
    acViewNormal: AcView = ...
    acViewPivotChart: AcView = ...
    acViewPivotTable: AcView = ...
    acViewPreview: AcView = ...
    acViewReport: AcView = ...
    value__ = ...


class AcWebBrowserScrollBars(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcWebBrowserScrollBars, values: acScrollAuto (0), acScrollNo (2), acScrollYes (1) """
    acScrollAuto: AcWebBrowserScrollBars = ...
    acScrollNo: AcWebBrowserScrollBars = ...
    acScrollYes: AcWebBrowserScrollBars = ...
    value__ = ...


class AcWebBrowserState(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcWebBrowserState, values: acComplete (4), acInteractive (3), acLoaded (2), acLoading (1), acUnintialized (0) """
    acComplete: AcWebBrowserState = ...
    acInteractive: AcWebBrowserState = ...
    acLoaded: AcWebBrowserState = ...
    acLoading: AcWebBrowserState = ...
    acUnintialized: AcWebBrowserState = ...
    value__ = ...


class AcWebUserDisplay(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcWebUserDisplay, values: acWebUserEmail (3), acWebUserID (0), acWebUserLoginName (2), acWebUserName (1) """
    acWebUserEmail: AcWebUserDisplay = ...
    acWebUserID: AcWebUserDisplay = ...
    acWebUserLoginName: AcWebUserDisplay = ...
    acWebUserName: AcWebUserDisplay = ...
    value__ = ...


class AcWebUserGroupsDisplay(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcWebUserGroupsDisplay, values: acWebUserGroupID (0), acWebUserGroupName (1) """
    acWebUserGroupID: AcWebUserGroupsDisplay = ...
    acWebUserGroupName: AcWebUserGroupsDisplay = ...
    value__ = ...


class AcWindowMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum AcWindowMode, values: acDialog (3), acHidden (1), acIcon (2), acWindowNormal (0) """
    acDialog: AcWindowMode = ...
    acHidden: AcWindowMode = ...
    acIcon: AcWindowMode = ...
    acWindowNormal: AcWindowMode = ...
    value__ = ...


class _AdditionalData(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: _AdditionalData) -> int """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _AdditionalData) -> str
        Set: Name(self: _AdditionalData) = value
        """
        ...


    def Add(self, var:str) -> AdditionalData:
        """ Add(self: _AdditionalData, var: str) -> AdditionalData """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _AdditionalData, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AdditionalData(_AdditionalData): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AdditionalDataClass(AdditionalData, __ComObject): # skipped bases: <type '_AdditionalData'>, <type 'IEnumerable'>, <type 'object'>
    """ AdditionalDataClass() """
    @property
    def Count(self) -> int:
        """ Get: Count(self: AdditionalDataClass) -> int """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: AdditionalDataClass) -> str
        Set: Name(self: AdditionalDataClass) = value
        """
        ...


    def Add(self, var:str) -> AdditionalData:
        """ Add(self: AdditionalDataClass, var: str) -> AdditionalData """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AdditionalDataClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AdditionalDataClass, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllObjects(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllObjects) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllObjects) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllObjects) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllObjects, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllDataAccessPages(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllDataAccessPagesClass(AllDataAccessPages, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllDataAccessPagesClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllDataAccessPagesClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllDataAccessPagesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllDataAccessPagesClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllDataAccessPagesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllDataAccessPagesClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllDatabaseDiagrams(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllDatabaseDiagramsClass(AllDatabaseDiagrams, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllDatabaseDiagramsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllDatabaseDiagramsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllDatabaseDiagramsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllDatabaseDiagramsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllDatabaseDiagramsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllDatabaseDiagramsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllForms(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllFormsClass(AllForms, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllFormsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllFormsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllFormsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllFormsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllFormsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllFormsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllFunctions(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllFunctionsClass(__ComObject, AllFunctions): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllFunctionsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllFunctionsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllFunctionsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllFunctionsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllFunctionsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllFunctionsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllMacros(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllMacrosClass(AllMacros, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllMacrosClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllMacrosClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllMacrosClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllMacrosClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllMacrosClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllMacrosClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllModules(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllModulesClass(AllModules, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllModulesClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllModulesClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllModulesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllModulesClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllModulesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllModulesClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllQueries(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllQueriesClass(AllQueries, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllQueriesClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllQueriesClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllQueriesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllQueriesClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllQueriesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllQueriesClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllReports(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllReportsClass(AllReports, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllReportsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllReportsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllReportsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllReportsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllReportsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllReportsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllStoredProcedures(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllStoredProceduresClass(AllStoredProcedures, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllStoredProceduresClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllStoredProceduresClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllStoredProceduresClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllStoredProceduresClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllStoredProceduresClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllStoredProceduresClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllTables(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllTablesClass(AllTables, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllTablesClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllTablesClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllTablesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllTablesClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllTablesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllTablesClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class AllViews(AllObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class AllViewsClass(AllViews, __ComObject): # skipped bases: <type 'IEnumerable'>, <type 'AllObjects'>, <type 'object'>
    """ AllViewsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: AllViewsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: AllViewsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AllViewsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: AllViewsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AllViewsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _Application: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def ADOConnectString(self) -> str:
        """ Get: ADOConnectString(self: _Application) -> str """
        ...

    @property
    def AnswerWizard(self): # -> AnswerWizard
        """ Get: AnswerWizard(self: _Application) -> AnswerWizard """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Application) -> Application """
        ...

    @property
    def Assistance(self): # -> IAssistance
        """ Get: Assistance(self: _Application) -> IAssistance """
        ...

    @property
    def Assistant(self): # -> Assistant
        """ Get: Assistant(self: _Application) -> Assistant """
        ...

    @property
    def AutoCorrect(self) -> AutoCorrect:
        """ Get: AutoCorrect(self: _Application) -> AutoCorrect """
        ...

    @property
    def AutomationSecurity(self): # -> MsoAutomationSecurity
        """
        Get: AutomationSecurity(self: _Application) -> MsoAutomationSecurity
        Set: AutomationSecurity(self: _Application) = value
        """
        ...

    @property
    def BrokenReference(self) -> bool:
        """ Get: BrokenReference(self: _Application) -> bool """
        ...

    @property
    def Build(self) -> int:
        """ Get: Build(self: _Application) -> int """
        ...

    @property
    def CodeContextObject(self) -> object:
        """ Get: CodeContextObject(self: _Application) -> object """
        ...

    @property
    def CodeData(self) -> _CurrentData:
        """ Get: CodeData(self: _Application) -> _CurrentData """
        ...

    @property
    def CodeProject(self) -> _CurrentProject:
        """ Get: CodeProject(self: _Application) -> _CurrentProject """
        ...

    @property
    def COMAddIns(self): # -> COMAddIns
        """ Get: COMAddIns(self: _Application) -> COMAddIns """
        ...

    @property
    def CommandBars(self) -> CommandBars:
        """ Get: CommandBars(self: _Application) -> CommandBars """
        ...

    @property
    def CurrentData(self) -> _CurrentData:
        """ Get: CurrentData(self: _Application) -> _CurrentData """
        ...

    @property
    def CurrentObjectName(self) -> str:
        """ Get: CurrentObjectName(self: _Application) -> str """
        ...

    @property
    def CurrentObjectType(self) -> AcObjectType:
        """ Get: CurrentObjectType(self: _Application) -> AcObjectType """
        ...

    @property
    def CurrentProject(self) -> _CurrentProject:
        """ Get: CurrentProject(self: _Application) -> _CurrentProject """
        ...

    @property
    def DataAccessPages(self) -> DataAccessPages:
        """ Get: DataAccessPages(self: _Application) -> DataAccessPages """
        ...

    @property
    def DBEngine(self) -> _DBEngine:
        """ Get: DBEngine(self: _Application) -> _DBEngine """
        ...

    @property
    def DefaultWebOptions(self) -> DefaultWebOptions:
        """ Get: DefaultWebOptions(self: _Application) -> DefaultWebOptions """
        ...

    @property
    def DoCmd(self) -> DoCmd:
        """ Get: DoCmd(self: _Application) -> DoCmd """
        ...

    @property
    def FeatureInstall(self): # -> MsoFeatureInstall
        """
        Get: FeatureInstall(self: _Application) -> MsoFeatureInstall
        Set: FeatureInstall(self: _Application) = value
        """
        ...

    @property
    def FileSearch(self): # -> FileSearch
        """ Get: FileSearch(self: _Application) -> FileSearch """
        ...

    @property
    def Forms(self) -> Forms:
        """ Get: Forms(self: _Application) -> Forms """
        ...

    @property
    def IsCompiled(self) -> bool:
        """ Get: IsCompiled(self: _Application) -> bool """
        ...

    @property
    def LanguageSettings(self): # -> LanguageSettings
        """ Get: LanguageSettings(self: _Application) -> LanguageSettings """
        ...

    @property
    def LocalVars(self) -> LocalVars:
        """ Get: LocalVars(self: _Application) -> LocalVars """
        ...

    @property
    def MacroError(self) -> MacroError:
        """ Get: MacroError(self: _Application) -> MacroError """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Application) -> str
        Set: MenuBar(self: _Application) = value
        """
        ...

    @property
    def Modules(self) -> Modules:
        """ Get: Modules(self: _Application) -> Modules """
        ...

    @property
    def MsoDebugOptions(self): # -> MsoDebugOptions
        """ Get: MsoDebugOptions(self: _Application) -> MsoDebugOptions """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: _Application) -> str """
        ...

    @property
    def NewFileTaskPane(self): # -> NewFile
        """ Get: NewFileTaskPane(self: _Application) -> NewFile """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Application) -> object """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: _Application) -> Printer
        Set: Printer(self: _Application) = value
        """
        ...

    @property
    def Printers(self) -> Printers:
        """ Get: Printers(self: _Application) -> Printers """
        ...

    @property
    def ProductCode(self) -> str:
        """ Get: ProductCode(self: _Application) -> str """
        ...

    @property
    def References(self) -> References:
        """ Get: References(self: _Application) -> References """
        ...

    @property
    def Reports(self) -> Reports:
        """ Get: Reports(self: _Application) -> Reports """
        ...

    @property
    def ReturnVars(self) -> ReturnVars:
        """ Get: ReturnVars(self: _Application) -> ReturnVars """
        ...

    @property
    def Screen(self) -> Screen:
        """ Get: Screen(self: _Application) -> Screen """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Application) -> str
        Set: ShortcutMenuBar(self: _Application) = value
        """
        ...

    @property
    def TempVars(self) -> TempVars:
        """ Get: TempVars(self: _Application) -> TempVars """
        ...

    @property
    def UserControl(self) -> bool:
        """
        Get: UserControl(self: _Application) -> bool
        Set: UserControl(self: _Application) = value
        """
        ...

    @property
    def VBE(self) -> VBE:
        """ Get: VBE(self: _Application) -> VBE """
        ...

    @property
    def Version(self) -> str:
        """ Get: Version(self: _Application) -> str """
        ...

    @property
    def VGXFrameInterval(self) -> object:
        """ Get: VGXFrameInterval(self: _Application) -> object """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Application) -> bool
        Set: Visible(self: _Application) = value
        """
        ...

    @property
    def WebServices(self) -> WebServices:
        """ Get: WebServices(self: _Application) -> WebServices """
        ...

    @property
    def WizHook(self) -> WizHook:
        """ Get: WizHook(self: _Application) -> WizHook """
        ...


    def AccessError(self, ErrorNumber:object) -> object:
        """ AccessError(self: _Application, ErrorNumber: object) -> object """
        ...

    def AddAutoCorrect(self, ChangeFrom:str, ChangeTo:str): # -> 
        """ AddAutoCorrect(self: _Application, ChangeFrom: str, ChangeTo: str) """
        ...

    def AddToFavorites(self): # -> 
        """ AddToFavorites(self: _Application) """
        ...

    def AppLoadString(self, id:int) -> object:
        """ AppLoadString(self: _Application, id: int) -> object """
        ...

    def BeginUndoable(self, Hwnd:int): # -> 
        """ BeginUndoable(self: _Application, Hwnd: int) """
        ...

    def BuildCriteria(self, Field:str, FieldType:Int16, Expression:str) -> str:
        """ BuildCriteria(self: _Application, Field: str, FieldType: Int16, Expression: str) -> str """
        ...

    def BuilderString(self) -> object:
        """ BuilderString(self: _Application) -> object """
        ...

    def CloseCurrentDatabase(self): # -> 
        """ CloseCurrentDatabase(self: _Application) """
        ...

    def CodeDb(self) -> Database:
        """ CodeDb(self: _Application) -> Database """
        ...

    def ColumnHistory(self, TableName:str, ColumnName:str, queryString:str) -> str:
        """ ColumnHistory(self: _Application, TableName: str, ColumnName: str, queryString: str) -> str """
        ...

    def CompactRepair(self, SourceFile:str, DestinationFile:str, LogFile:bool) -> bool:
        """ CompactRepair(self: _Application, SourceFile: str, DestinationFile: str, LogFile: bool) -> bool """
        ...

    def ConvertAccessProject(self, SourceFilename:str, DestinationFilename:str, DestinationFileFormat:AcFileFormat): # -> 
        """ ConvertAccessProject(self: _Application, SourceFilename: str, DestinationFilename: str, DestinationFileFormat: AcFileFormat) """
        ...

    def CreateAccessProject(self, filepath:str, Connect:object): # -> 
        """ CreateAccessProject(self: _Application, filepath: str, Connect: object) """
        ...

    def CreateAdditionalData(self) -> AdditionalData:
        """ CreateAdditionalData(self: _Application) -> AdditionalData """
        ...

    def CreateControl(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateControl(self: _Application, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateControlEx(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlSource:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateControlEx(self: _Application, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlSource: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateControlExOld(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlSource:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateControlExOld(self: _Application, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlSource: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateControlOld(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateControlOld(self: _Application, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateDataAccessPage(self, FileName:object, CreateNewFile:bool) -> DataAccessPage:
        """ CreateDataAccessPage(self: _Application, FileName: object, CreateNewFile: bool) -> DataAccessPage """
        ...

    def CreateForm(self, Database:object, FormTemplate:object) -> Form:
        """ CreateForm(self: _Application, Database: object, FormTemplate: object) -> Form """
        ...

    def CreateGroupLevel(self, ReportName:str, Expression:str, Header:Int16, Footer:Int16) -> int:
        """ CreateGroupLevel(self: _Application, ReportName: str, Expression: str, Header: Int16, Footer: Int16) -> int """
        ...

    def CreateNewWorkgroupFile(self, Path:str, Name:str, Company:str, WorkgroupID:str, Replace:bool): # -> 
        """ CreateNewWorkgroupFile(self: _Application, Path: str, Name: str, Company: str, WorkgroupID: str, Replace: bool) """
        ...

    def CreateReport(self, Database:object, ReportTemplate:object) -> Report:
        """ CreateReport(self: _Application, Database: object, ReportTemplate: object) -> Report """
        ...

    def CreateReportControl(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateReportControl(self: _Application, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateReportControlEx(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlName:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateReportControlEx(self: _Application, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlName: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateReportControlExOld(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlName:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateReportControlExOld(self: _Application, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlName: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateReportControlOld(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateReportControlOld(self: _Application, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CurrentDb(self) -> Database:
        """ CurrentDb(self: _Application) -> Database """
        ...

    def CurrentUser(self) -> str:
        """ CurrentUser(self: _Application) -> str """
        ...

    def CurrentWebUser(self, DisplayOption:AcWebUserDisplay) -> object:
        """ CurrentWebUser(self: _Application, DisplayOption: AcWebUserDisplay) -> object """
        ...

    def CurrentWebUserGroups(self, DisplayOption:AcWebUserGroupsDisplay) -> object:
        """ CurrentWebUserGroups(self: _Application, DisplayOption: AcWebUserGroupsDisplay) -> object """
        ...

    def DAvg(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DAvg(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DCount(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DCount(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DDEExecute(self, ChanNum:object, Command:str): # -> 
        """ DDEExecute(self: _Application, ChanNum: object, Command: str) """
        ...

    def DDEInitiate(self, Application:str, Topic:str) -> object:
        """ DDEInitiate(self: _Application, Application: str, Topic: str) -> object """
        ...

    def DDEPoke(self, ChanNum:object, Item:str, Data:str): # -> 
        """ DDEPoke(self: _Application, ChanNum: object, Item: str, Data: str) """
        ...

    def DDERequest(self, ChanNum:object, Item:str) -> str:
        """ DDERequest(self: _Application, ChanNum: object, Item: str) -> str """
        ...

    def DDETerminate(self, ChanNum:object): # -> 
        """ DDETerminate(self: _Application, ChanNum: object) """
        ...

    def DDETerminateAll(self): # -> 
        """ DDETerminateAll(self: _Application) """
        ...

    def DefaultWorkspaceClone(self) -> Workspace:
        """ DefaultWorkspaceClone(self: _Application) -> Workspace """
        ...

    def DelAutoCorrect(self, ChangeFrom:str): # -> 
        """ DelAutoCorrect(self: _Application, ChangeFrom: str) """
        ...

    def DeleteControl(self, FormName:str, ControlName:str): # -> 
        """ DeleteControl(self: _Application, FormName: str, ControlName: str) """
        ...

    def DeleteReportControl(self, ReportName:str, ControlName:str): # -> 
        """ DeleteReportControl(self: _Application, ReportName: str, ControlName: str) """
        ...

    def DFirst(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DFirst(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DirtyObject(self, ObjectType:AcObjectType, ObjectName:str): # -> 
        """ DirtyObject(self: _Application, ObjectType: AcObjectType, ObjectName: str) """
        ...

    def DLast(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DLast(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DLookup(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DLookup(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DMax(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DMax(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DMin(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DMin(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DStDev(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DStDev(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DStDevP(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DStDevP(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DSum(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DSum(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DVar(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DVar(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DVarP(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DVarP(self: _Application, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def Echo(self, EchoOn:Int16, bstrStatusBarText:str): # -> 
        """ Echo(self: _Application, EchoOn: Int16, bstrStatusBarText: str) """
        ...

    def EuroConvert(self, Number:float, SourceCurrency:str, TargetCurrency:str, FullPrecision:object, TriangulationPrecision:object) -> float:
        """ EuroConvert(self: _Application, Number: float, SourceCurrency: str, TargetCurrency: str, FullPrecision: object, TriangulationPrecision: object) -> float """
        ...

    def Eval(self, StringExpr:str) -> object:
        """ Eval(self: _Application, StringExpr: str) -> object """
        ...

    def ExportCustomFixedFormat(self, ExternalExporter:object, OutputFileName:str, ObjectName:str, ObjectType:AcOutputObjectType, SelectedRecords:bool, FromPage:int, ToPage:int): # -> 
        """ ExportCustomFixedFormat(self: _Application, ExternalExporter: object, OutputFileName: str, ObjectName: str, ObjectType: AcOutputObjectType, SelectedRecords: bool, FromPage: int, ToPage: int) """
        ...

    def ExportNavigationPane(self, Path:str): # -> 
        """ ExportNavigationPane(self: _Application, Path: str) """
        ...

    def ExportXML(self, ObjectType:AcExportXMLObjectType, DataSource:str, DataTarget:str, SchemaTarget:str, PresentationTarget:str, ImageTarget:str, Encoding:AcExportXMLEncoding, OtherFlags:AcExportXMLOtherFlags, WhereCondition:str, AdditionalData:object): # -> 
        """ ExportXML(self: _Application, ObjectType: AcExportXMLObjectType, DataSource: str, DataTarget: str, SchemaTarget: str, PresentationTarget: str, ImageTarget: str, Encoding: AcExportXMLEncoding, OtherFlags: AcExportXMLOtherFlags, WhereCondition: str, AdditionalData: object) """
        ...

    def ExportXMLOld(self, ObjectType:AcExportXMLObjectType, DataSource:str, DataTarget:str, SchemaTarget:str, PresentationTarget:str, ImageTarget:str, Encoding:AcExportXMLEncoding, OtherFlags:int): # -> 
        """ ExportXMLOld(self: _Application, ObjectType: AcExportXMLObjectType, DataSource: str, DataTarget: str, SchemaTarget: str, PresentationTarget: str, ImageTarget: str, Encoding: AcExportXMLEncoding, OtherFlags: int) """
        ...

    def FollowHyperlink(self, Address:str, SubAddress:str, NewWindow:bool, AddHistory:bool, ExtraInfo:object, Method, HeaderInfo:str): # ->  # Not found arg types: {'Method': 'MsoExtraInfoMethod'}
        """ FollowHyperlink(self: _Application, Address: str, SubAddress: str, NewWindow: bool, AddHistory: bool, ExtraInfo: object, Method: MsoExtraInfoMethod, HeaderInfo: str) """
        ...

    def GetHiddenAttribute(self, ObjectType:AcObjectType, ObjectName:str) -> bool:
        """ GetHiddenAttribute(self: _Application, ObjectType: AcObjectType, ObjectName: str) -> bool """
        ...

    def GetOption(self, OptionName:str) -> object:
        """ GetOption(self: _Application, OptionName: str) -> object """
        ...

    def GUIDFromString(self, String:object) -> object:
        """ GUIDFromString(self: _Application, String: object) -> object """
        ...

    def HtmlEncode(self, PlainText:object, Length:object) -> str:
        """ HtmlEncode(self: _Application, PlainText: object, Length: object) -> str """
        ...

    def hWndAccessApp(self) -> int:
        """ hWndAccessApp(self: _Application) -> int """
        ...

    def HyperlinkPart(self, Hyperlink:object, Part:AcHyperlinkPart) -> str:
        """ HyperlinkPart(self: _Application, Hyperlink: object, Part: AcHyperlinkPart) -> str """
        ...

    def ImportNavigationPane(self, Path:str, fAppendOnly:bool): # -> 
        """ ImportNavigationPane(self: _Application, Path: str, fAppendOnly: bool) """
        ...

    def ImportXML(self, DataSource:str, ImportOptions:AcImportXMLOption): # -> 
        """ ImportXML(self: _Application, DataSource: str, ImportOptions: AcImportXMLOption) """
        ...

    def InsertText(self, Text:str, ModuleName:str): # -> 
        """ InsertText(self: _Application, Text: str, ModuleName: str) """
        ...

    def InstantiateTemplate(self, Path:str): # -> 
        """ InstantiateTemplate(self: _Application, Path: str) """
        ...

    def IsClient(self) -> bool:
        """ IsClient(self: _Application) -> bool """
        ...

    def IsCurrentWebUserInGroup(self, GroupNameOrID:object) -> bool:
        """ IsCurrentWebUserInGroup(self: _Application, GroupNameOrID: object) -> bool """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Application, dispid: int) -> bool """
        ...

    def LoadCustomUI(self, CustomUIName:str, CustomUIXML:str): # -> 
        """ LoadCustomUI(self: _Application, CustomUIName: str, CustomUIXML: str) """
        ...

    def LoadFromAXL(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ LoadFromAXL(self: _Application, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def LoadFromText(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ LoadFromText(self: _Application, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def LoadPicture(self, FileName:str) -> object:
        """ LoadPicture(self: _Application, FileName: str) -> object """
        ...

    def NewAccessProject(self, filepath:str, Connect:object): # -> 
        """ NewAccessProject(self: _Application, filepath: str, Connect: object) """
        ...

    def NewCurrentDatabase(self, filepath:str, FileFormat:AcNewDatabaseFormat = ..., Template:object = ..., SiteAddress:str = ..., ListID:str = ...): # -> 
        """ NewCurrentDatabase(self: _Application, filepath: str, FileFormat: AcNewDatabaseFormat, Template: object, SiteAddress: str, ListID: str)NewCurrentDatabase(self: _Application, filepath: str) """
        ...

    def Nz(self, Value:object, ValueIfNull:object) -> object:
        """ Nz(self: _Application, Value: object, ValueIfNull: object) -> object """
        ...

    def OpenAccessProject(self, filepath:str, Exclusive:bool): # -> 
        """ OpenAccessProject(self: _Application, filepath: str, Exclusive: bool) """
        ...

    def OpenCurrentDatabase(self, filepath:str, Exclusive:bool, bstrPassword:str): # -> 
        """ OpenCurrentDatabase(self: _Application, filepath: str, Exclusive: bool, bstrPassword: str) """
        ...

    def OpenCurrentDatabaseOld(self, filepath:str, Exclusive:bool): # -> 
        """ OpenCurrentDatabaseOld(self: _Application, filepath: str, Exclusive: bool) """
        ...

    def PlainText(self, RichText:object, Length:object) -> str:
        """ PlainText(self: _Application, RichText: object, Length: object) -> str """
        ...

    def Quit(self, Option:AcQuitOption): # -> 
        """ Quit(self: _Application, Option: AcQuitOption) """
        ...

    def RefreshDatabaseWindow(self): # -> 
        """ RefreshDatabaseWindow(self: _Application) """
        ...

    def RefreshTitleBar(self): # -> 
        """ RefreshTitleBar(self: _Application) """
        ...

    def ReloadAddIns(self): # -> 
        """ ReloadAddIns(self: _Application) """
        ...

    def ReplaceModule(self, objtyp:int, ModuleName:str, FileName:str, token:int): # -> 
        """ ReplaceModule(self: _Application, objtyp: int, ModuleName: str, FileName: str, token: int) """
        ...

    def Run(self, Procedure, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30) -> Tuple_[object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object]:
        """ Run(self: _Application, Procedure: str) -> (object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object) """
        ...

    def RunCommand(self, Command:AcCommand): # -> 
        """ RunCommand(self: _Application, Command: AcCommand) """
        ...

    def SaveAsAXL(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ SaveAsAXL(self: _Application, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def SaveAsTemplate(self, Path:str, Title:str, IconPath:str, CoreTable:str, Category:str, PreviewPath:object, Description:object, InstantiationForm:object, ApplicationPart:object, IncludeData:object, Variation:object): # -> 
        """ SaveAsTemplate(self: _Application, Path: str, Title: str, IconPath: str, CoreTable: str, Category: str, PreviewPath: object, Description: object, InstantiationForm: object, ApplicationPart: object, IncludeData: object, Variation: object) """
        ...

    def SaveAsText(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ SaveAsText(self: _Application, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def SetDefaultWorkgroupFile(self, Path:str): # -> 
        """ SetDefaultWorkgroupFile(self: _Application, Path: str) """
        ...

    def SetHiddenAttribute(self, ObjectType:AcObjectType, ObjectName:str, fHidden:bool): # -> 
        """ SetHiddenAttribute(self: _Application, ObjectType: AcObjectType, ObjectName: str, fHidden: bool) """
        ...

    def SetOption(self, OptionName:str, Setting:object): # -> 
        """ SetOption(self: _Application, OptionName: str, Setting: object) """
        ...

    def SetUndoRecording(self, yesno:Int16): # -> 
        """ SetUndoRecording(self: _Application, yesno: Int16) """
        ...

    def StringFromGUID(self, Guid:object) -> object:
        """ StringFromGUID(self: _Application, Guid: object) -> object """
        ...

    def SysCmd(self, Action:AcSysCmdAction, Argument2:object, Argument3:object) -> object:
        """ SysCmd(self: _Application, Action: AcSysCmdAction, Argument2: object, Argument3: object) -> object """
        ...

    def TransformXML(self, DataSource:str, TransformSource:str, OutputTarget:str, WellFormedXMLOutput:bool, ScriptOption:AcTransformXMLScriptOption): # -> 
        """ TransformXML(self: _Application, DataSource: str, TransformSource: str, OutputTarget: str, WellFormedXMLOutput: bool, ScriptOption: AcTransformXMLScriptOption) """
        ...


class Application(_Application): # skipped bases: <type 'object'>
    """ no doc """
    pass

class ApplicationClass(Application, __ComObject): # skipped bases: <type '_Application'>, <type 'object'>
    """ ApplicationClass() """
    @property
    def ADOConnectString(self) -> str:
        """ Get: ADOConnectString(self: ApplicationClass) -> str """
        ...

    @property
    def AnswerWizard(self): # -> AnswerWizard
        """ Get: AnswerWizard(self: ApplicationClass) -> AnswerWizard """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ApplicationClass) -> Application """
        ...

    @property
    def Assistance(self): # -> IAssistance
        """ Get: Assistance(self: ApplicationClass) -> IAssistance """
        ...

    @property
    def Assistant(self): # -> Assistant
        """ Get: Assistant(self: ApplicationClass) -> Assistant """
        ...

    @property
    def AutoCorrect(self) -> AutoCorrect:
        """ Get: AutoCorrect(self: ApplicationClass) -> AutoCorrect """
        ...

    @property
    def AutomationSecurity(self): # -> MsoAutomationSecurity
        """
        Get: AutomationSecurity(self: ApplicationClass) -> MsoAutomationSecurity
        Set: AutomationSecurity(self: ApplicationClass) = value
        """
        ...

    @property
    def BrokenReference(self) -> bool:
        """ Get: BrokenReference(self: ApplicationClass) -> bool """
        ...

    @property
    def Build(self) -> int:
        """ Get: Build(self: ApplicationClass) -> int """
        ...

    @property
    def CodeContextObject(self) -> object:
        """ Get: CodeContextObject(self: ApplicationClass) -> object """
        ...

    @property
    def CodeData(self) -> _CurrentData:
        """ Get: CodeData(self: ApplicationClass) -> _CurrentData """
        ...

    @property
    def CodeProject(self) -> _CurrentProject:
        """ Get: CodeProject(self: ApplicationClass) -> _CurrentProject """
        ...

    @property
    def COMAddIns(self): # -> COMAddIns
        """ Get: COMAddIns(self: ApplicationClass) -> COMAddIns """
        ...

    @property
    def CommandBars(self) -> CommandBars:
        """ Get: CommandBars(self: ApplicationClass) -> CommandBars """
        ...

    @property
    def CurrentData(self) -> _CurrentData:
        """ Get: CurrentData(self: ApplicationClass) -> _CurrentData """
        ...

    @property
    def CurrentObjectName(self) -> str:
        """ Get: CurrentObjectName(self: ApplicationClass) -> str """
        ...

    @property
    def CurrentObjectType(self) -> AcObjectType:
        """ Get: CurrentObjectType(self: ApplicationClass) -> AcObjectType """
        ...

    @property
    def CurrentProject(self) -> _CurrentProject:
        """ Get: CurrentProject(self: ApplicationClass) -> _CurrentProject """
        ...

    @property
    def DataAccessPages(self) -> DataAccessPages:
        """ Get: DataAccessPages(self: ApplicationClass) -> DataAccessPages """
        ...

    @property
    def DBEngine(self) -> _DBEngine:
        """ Get: DBEngine(self: ApplicationClass) -> _DBEngine """
        ...

    @property
    def DefaultWebOptions(self) -> DefaultWebOptions:
        """ Get: DefaultWebOptions(self: ApplicationClass) -> DefaultWebOptions """
        ...

    @property
    def DoCmd(self) -> DoCmd:
        """ Get: DoCmd(self: ApplicationClass) -> DoCmd """
        ...

    @property
    def FeatureInstall(self): # -> MsoFeatureInstall
        """
        Get: FeatureInstall(self: ApplicationClass) -> MsoFeatureInstall
        Set: FeatureInstall(self: ApplicationClass) = value
        """
        ...

    @property
    def FileSearch(self): # -> FileSearch
        """ Get: FileSearch(self: ApplicationClass) -> FileSearch """
        ...

    @property
    def Forms(self) -> Forms:
        """ Get: Forms(self: ApplicationClass) -> Forms """
        ...

    @property
    def IsCompiled(self) -> bool:
        """ Get: IsCompiled(self: ApplicationClass) -> bool """
        ...

    @property
    def LanguageSettings(self): # -> LanguageSettings
        """ Get: LanguageSettings(self: ApplicationClass) -> LanguageSettings """
        ...

    @property
    def LocalVars(self) -> LocalVars:
        """ Get: LocalVars(self: ApplicationClass) -> LocalVars """
        ...

    @property
    def MacroError(self) -> MacroError:
        """ Get: MacroError(self: ApplicationClass) -> MacroError """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: ApplicationClass) -> str
        Set: MenuBar(self: ApplicationClass) = value
        """
        ...

    @property
    def Modules(self) -> Modules:
        """ Get: Modules(self: ApplicationClass) -> Modules """
        ...

    @property
    def MsoDebugOptions(self): # -> MsoDebugOptions
        """ Get: MsoDebugOptions(self: ApplicationClass) -> MsoDebugOptions """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: ApplicationClass) -> str """
        ...

    @property
    def NewFileTaskPane(self): # -> NewFile
        """ Get: NewFileTaskPane(self: ApplicationClass) -> NewFile """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ApplicationClass) -> object """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: ApplicationClass) -> Printer
        Set: Printer(self: ApplicationClass) = value
        """
        ...

    @property
    def Printers(self) -> Printers:
        """ Get: Printers(self: ApplicationClass) -> Printers """
        ...

    @property
    def ProductCode(self) -> str:
        """ Get: ProductCode(self: ApplicationClass) -> str """
        ...

    @property
    def References(self) -> References:
        """ Get: References(self: ApplicationClass) -> References """
        ...

    @property
    def Reports(self) -> Reports:
        """ Get: Reports(self: ApplicationClass) -> Reports """
        ...

    @property
    def ReturnVars(self) -> ReturnVars:
        """ Get: ReturnVars(self: ApplicationClass) -> ReturnVars """
        ...

    @property
    def Screen(self) -> Screen:
        """ Get: Screen(self: ApplicationClass) -> Screen """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ApplicationClass) -> str
        Set: ShortcutMenuBar(self: ApplicationClass) = value
        """
        ...

    @property
    def TempVars(self) -> TempVars:
        """ Get: TempVars(self: ApplicationClass) -> TempVars """
        ...

    @property
    def UserControl(self) -> bool:
        """
        Get: UserControl(self: ApplicationClass) -> bool
        Set: UserControl(self: ApplicationClass) = value
        """
        ...

    @property
    def VBE(self) -> VBE:
        """ Get: VBE(self: ApplicationClass) -> VBE """
        ...

    @property
    def Version(self) -> str:
        """ Get: Version(self: ApplicationClass) -> str """
        ...

    @property
    def VGXFrameInterval(self) -> object:
        """ Get: VGXFrameInterval(self: ApplicationClass) -> object """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ApplicationClass) -> bool
        Set: Visible(self: ApplicationClass) = value
        """
        ...

    @property
    def WebServices(self) -> WebServices:
        """ Get: WebServices(self: ApplicationClass) -> WebServices """
        ...

    @property
    def WizHook(self) -> WizHook:
        """ Get: WizHook(self: ApplicationClass) -> WizHook """
        ...


    def AccessError(self, ErrorNumber:object) -> object:
        """ AccessError(self: ApplicationClass, ErrorNumber: object) -> object """
        ...

    def AddAutoCorrect(self, ChangeFrom:str, ChangeTo:str): # -> 
        """ AddAutoCorrect(self: ApplicationClass, ChangeFrom: str, ChangeTo: str) """
        ...

    def AddToFavorites(self): # -> 
        """ AddToFavorites(self: ApplicationClass) """
        ...

    def AppLoadString(self, id:int) -> object:
        """ AppLoadString(self: ApplicationClass, id: int) -> object """
        ...

    def BeginUndoable(self, Hwnd:int): # -> 
        """ BeginUndoable(self: ApplicationClass, Hwnd: int) """
        ...

    def BuildCriteria(self, Field:str, FieldType:Int16, Expression:str) -> str:
        """ BuildCriteria(self: ApplicationClass, Field: str, FieldType: Int16, Expression: str) -> str """
        ...

    def BuilderString(self) -> object:
        """ BuilderString(self: ApplicationClass) -> object """
        ...

    def CloseCurrentDatabase(self): # -> 
        """ CloseCurrentDatabase(self: ApplicationClass) """
        ...

    def CodeDb(self) -> Database:
        """ CodeDb(self: ApplicationClass) -> Database """
        ...

    def ColumnHistory(self, TableName:str, ColumnName:str, queryString:str) -> str:
        """ ColumnHistory(self: ApplicationClass, TableName: str, ColumnName: str, queryString: str) -> str """
        ...

    def CompactRepair(self, SourceFile:str, DestinationFile:str, LogFile:bool) -> bool:
        """ CompactRepair(self: ApplicationClass, SourceFile: str, DestinationFile: str, LogFile: bool) -> bool """
        ...

    def ConvertAccessProject(self, SourceFilename:str, DestinationFilename:str, DestinationFileFormat:AcFileFormat): # -> 
        """ ConvertAccessProject(self: ApplicationClass, SourceFilename: str, DestinationFilename: str, DestinationFileFormat: AcFileFormat) """
        ...

    def CreateAccessProject(self, filepath:str, Connect:object): # -> 
        """ CreateAccessProject(self: ApplicationClass, filepath: str, Connect: object) """
        ...

    def CreateAdditionalData(self) -> AdditionalData:
        """ CreateAdditionalData(self: ApplicationClass) -> AdditionalData """
        ...

    def CreateControl(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateControl(self: ApplicationClass, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateControlEx(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlSource:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateControlEx(self: ApplicationClass, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlSource: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateControlExOld(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlSource:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateControlExOld(self: ApplicationClass, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlSource: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateControlOld(self, FormName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateControlOld(self: ApplicationClass, FormName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateDataAccessPage(self, FileName:object, CreateNewFile:bool) -> DataAccessPage:
        """ CreateDataAccessPage(self: ApplicationClass, FileName: object, CreateNewFile: bool) -> DataAccessPage """
        ...

    def CreateForm(self, Database:object, FormTemplate:object) -> Form:
        """ CreateForm(self: ApplicationClass, Database: object, FormTemplate: object) -> Form """
        ...

    def CreateGroupLevel(self, ReportName:str, Expression:str, Header:Int16, Footer:Int16) -> int:
        """ CreateGroupLevel(self: ApplicationClass, ReportName: str, Expression: str, Header: Int16, Footer: Int16) -> int """
        ...

    def CreateNewWorkgroupFile(self, Path:str, Name:str, Company:str, WorkgroupID:str, Replace:bool): # -> 
        """ CreateNewWorkgroupFile(self: ApplicationClass, Path: str, Name: str, Company: str, WorkgroupID: str, Replace: bool) """
        ...

    def CreateReport(self, Database:object, ReportTemplate:object) -> Report:
        """ CreateReport(self: ApplicationClass, Database: object, ReportTemplate: object) -> Report """
        ...

    def CreateReportControl(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateReportControl(self: ApplicationClass, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CreateReportControlEx(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlName:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateReportControlEx(self: ApplicationClass, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlName: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateReportControlExOld(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:str, ControlName:str, Left:int, Top:int, Width:int, Height:int) -> _Control:
        """ CreateReportControlExOld(self: ApplicationClass, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: str, ControlName: str, Left: int, Top: int, Width: int, Height: int) -> _Control """
        ...

    def CreateReportControlOld(self, ReportName:str, ControlType:AcControlType, Section:AcSection, Parent:object, ColumnName:object, Left:object, Top:object, Width:object, Height:object) -> _Control:
        """ CreateReportControlOld(self: ApplicationClass, ReportName: str, ControlType: AcControlType, Section: AcSection, Parent: object, ColumnName: object, Left: object, Top: object, Width: object, Height: object) -> _Control """
        ...

    def CurrentDb(self) -> Database:
        """ CurrentDb(self: ApplicationClass) -> Database """
        ...

    def CurrentUser(self) -> str:
        """ CurrentUser(self: ApplicationClass) -> str """
        ...

    def CurrentWebUser(self, DisplayOption:AcWebUserDisplay) -> object:
        """ CurrentWebUser(self: ApplicationClass, DisplayOption: AcWebUserDisplay) -> object """
        ...

    def CurrentWebUserGroups(self, DisplayOption:AcWebUserGroupsDisplay) -> object:
        """ CurrentWebUserGroups(self: ApplicationClass, DisplayOption: AcWebUserGroupsDisplay) -> object """
        ...

    def DAvg(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DAvg(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DCount(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DCount(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DDEExecute(self, ChanNum:object, Command:str): # -> 
        """ DDEExecute(self: ApplicationClass, ChanNum: object, Command: str) """
        ...

    def DDEInitiate(self, Application:str, Topic:str) -> object:
        """ DDEInitiate(self: ApplicationClass, Application: str, Topic: str) -> object """
        ...

    def DDEPoke(self, ChanNum:object, Item:str, Data:str): # -> 
        """ DDEPoke(self: ApplicationClass, ChanNum: object, Item: str, Data: str) """
        ...

    def DDERequest(self, ChanNum:object, Item:str) -> str:
        """ DDERequest(self: ApplicationClass, ChanNum: object, Item: str) -> str """
        ...

    def DDETerminate(self, ChanNum:object): # -> 
        """ DDETerminate(self: ApplicationClass, ChanNum: object) """
        ...

    def DDETerminateAll(self): # -> 
        """ DDETerminateAll(self: ApplicationClass) """
        ...

    def DefaultWorkspaceClone(self) -> Workspace:
        """ DefaultWorkspaceClone(self: ApplicationClass) -> Workspace """
        ...

    def DelAutoCorrect(self, ChangeFrom:str): # -> 
        """ DelAutoCorrect(self: ApplicationClass, ChangeFrom: str) """
        ...

    def DeleteControl(self, FormName:str, ControlName:str): # -> 
        """ DeleteControl(self: ApplicationClass, FormName: str, ControlName: str) """
        ...

    def DeleteReportControl(self, ReportName:str, ControlName:str): # -> 
        """ DeleteReportControl(self: ApplicationClass, ReportName: str, ControlName: str) """
        ...

    def DFirst(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DFirst(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DirtyObject(self, ObjectType:AcObjectType, ObjectName:str): # -> 
        """ DirtyObject(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str) """
        ...

    def DLast(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DLast(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DLookup(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DLookup(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DMax(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DMax(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DMin(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DMin(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DStDev(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DStDev(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DStDevP(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DStDevP(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DSum(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DSum(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DVar(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DVar(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def DVarP(self, Expr:str, Domain:str, Criteria:object) -> object:
        """ DVarP(self: ApplicationClass, Expr: str, Domain: str, Criteria: object) -> object """
        ...

    def Echo(self, EchoOn:Int16, bstrStatusBarText:str): # -> 
        """ Echo(self: ApplicationClass, EchoOn: Int16, bstrStatusBarText: str) """
        ...

    def EuroConvert(self, Number:float, SourceCurrency:str, TargetCurrency:str, FullPrecision:object, TriangulationPrecision:object) -> float:
        """ EuroConvert(self: ApplicationClass, Number: float, SourceCurrency: str, TargetCurrency: str, FullPrecision: object, TriangulationPrecision: object) -> float """
        ...

    def Eval(self, StringExpr:str) -> object:
        """ Eval(self: ApplicationClass, StringExpr: str) -> object """
        ...

    def ExportCustomFixedFormat(self, ExternalExporter:object, OutputFileName:str, ObjectName:str, ObjectType:AcOutputObjectType, SelectedRecords:bool, FromPage:int, ToPage:int): # -> 
        """ ExportCustomFixedFormat(self: ApplicationClass, ExternalExporter: object, OutputFileName: str, ObjectName: str, ObjectType: AcOutputObjectType, SelectedRecords: bool, FromPage: int, ToPage: int) """
        ...

    def ExportNavigationPane(self, Path:str): # -> 
        """ ExportNavigationPane(self: ApplicationClass, Path: str) """
        ...

    def ExportXML(self, ObjectType:AcExportXMLObjectType, DataSource:str, DataTarget:str, SchemaTarget:str, PresentationTarget:str, ImageTarget:str, Encoding:AcExportXMLEncoding, OtherFlags:AcExportXMLOtherFlags, WhereCondition:str, AdditionalData:object): # -> 
        """ ExportXML(self: ApplicationClass, ObjectType: AcExportXMLObjectType, DataSource: str, DataTarget: str, SchemaTarget: str, PresentationTarget: str, ImageTarget: str, Encoding: AcExportXMLEncoding, OtherFlags: AcExportXMLOtherFlags, WhereCondition: str, AdditionalData: object) """
        ...

    def ExportXMLOld(self, ObjectType:AcExportXMLObjectType, DataSource:str, DataTarget:str, SchemaTarget:str, PresentationTarget:str, ImageTarget:str, Encoding:AcExportXMLEncoding, OtherFlags:int): # -> 
        """ ExportXMLOld(self: ApplicationClass, ObjectType: AcExportXMLObjectType, DataSource: str, DataTarget: str, SchemaTarget: str, PresentationTarget: str, ImageTarget: str, Encoding: AcExportXMLEncoding, OtherFlags: int) """
        ...

    def FollowHyperlink(self, Address:str, SubAddress:str, NewWindow:bool, AddHistory:bool, ExtraInfo:object, Method, HeaderInfo:str): # ->  # Not found arg types: {'Method': 'MsoExtraInfoMethod'}
        """ FollowHyperlink(self: ApplicationClass, Address: str, SubAddress: str, NewWindow: bool, AddHistory: bool, ExtraInfo: object, Method: MsoExtraInfoMethod, HeaderInfo: str) """
        ...

    def GetHiddenAttribute(self, ObjectType:AcObjectType, ObjectName:str) -> bool:
        """ GetHiddenAttribute(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str) -> bool """
        ...

    def GetOption(self, OptionName:str) -> object:
        """ GetOption(self: ApplicationClass, OptionName: str) -> object """
        ...

    def GUIDFromString(self, String:object) -> object:
        """ GUIDFromString(self: ApplicationClass, String: object) -> object """
        ...

    def HtmlEncode(self, PlainText:object, Length:object) -> str:
        """ HtmlEncode(self: ApplicationClass, PlainText: object, Length: object) -> str """
        ...

    def hWndAccessApp(self) -> int:
        """ hWndAccessApp(self: ApplicationClass) -> int """
        ...

    def HyperlinkPart(self, Hyperlink:object, Part:AcHyperlinkPart) -> str:
        """ HyperlinkPart(self: ApplicationClass, Hyperlink: object, Part: AcHyperlinkPart) -> str """
        ...

    def ImportNavigationPane(self, Path:str, fAppendOnly:bool): # -> 
        """ ImportNavigationPane(self: ApplicationClass, Path: str, fAppendOnly: bool) """
        ...

    def ImportXML(self, DataSource:str, ImportOptions:AcImportXMLOption): # -> 
        """ ImportXML(self: ApplicationClass, DataSource: str, ImportOptions: AcImportXMLOption) """
        ...

    def InsertText(self, Text:str, ModuleName:str): # -> 
        """ InsertText(self: ApplicationClass, Text: str, ModuleName: str) """
        ...

    def InstantiateTemplate(self, Path:str): # -> 
        """ InstantiateTemplate(self: ApplicationClass, Path: str) """
        ...

    def IsClient(self) -> bool:
        """ IsClient(self: ApplicationClass) -> bool """
        ...

    def IsCurrentWebUserInGroup(self, GroupNameOrID:object) -> bool:
        """ IsCurrentWebUserInGroup(self: ApplicationClass, GroupNameOrID: object) -> bool """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ApplicationClass, dispid: int) -> bool """
        ...

    def LoadCustomUI(self, CustomUIName:str, CustomUIXML:str): # -> 
        """ LoadCustomUI(self: ApplicationClass, CustomUIName: str, CustomUIXML: str) """
        ...

    def LoadFromAXL(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ LoadFromAXL(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def LoadFromText(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ LoadFromText(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def LoadPicture(self, FileName:str) -> object:
        """ LoadPicture(self: ApplicationClass, FileName: str) -> object """
        ...

    def NewAccessProject(self, filepath:str, Connect:object): # -> 
        """ NewAccessProject(self: ApplicationClass, filepath: str, Connect: object) """
        ...

    def NewCurrentDatabase(self, filepath:str, FileFormat:AcNewDatabaseFormat = ..., Template:object = ..., SiteAddress:str = ..., ListID:str = ...): # -> 
        """ NewCurrentDatabase(self: ApplicationClass, filepath: str, FileFormat: AcNewDatabaseFormat, Template: object, SiteAddress: str, ListID: str)NewCurrentDatabase(self: ApplicationClass, filepath: str) """
        ...

    def Nz(self, Value:object, ValueIfNull:object) -> object:
        """ Nz(self: ApplicationClass, Value: object, ValueIfNull: object) -> object """
        ...

    def OpenAccessProject(self, filepath:str, Exclusive:bool): # -> 
        """ OpenAccessProject(self: ApplicationClass, filepath: str, Exclusive: bool) """
        ...

    def OpenCurrentDatabase(self, filepath:str, Exclusive:bool, bstrPassword:str): # -> 
        """ OpenCurrentDatabase(self: ApplicationClass, filepath: str, Exclusive: bool, bstrPassword: str) """
        ...

    def OpenCurrentDatabaseOld(self, filepath:str, Exclusive:bool): # -> 
        """ OpenCurrentDatabaseOld(self: ApplicationClass, filepath: str, Exclusive: bool) """
        ...

    def PlainText(self, RichText:object, Length:object) -> str:
        """ PlainText(self: ApplicationClass, RichText: object, Length: object) -> str """
        ...

    def Quit(self, Option:AcQuitOption): # -> 
        """ Quit(self: ApplicationClass, Option: AcQuitOption) """
        ...

    def RefreshDatabaseWindow(self): # -> 
        """ RefreshDatabaseWindow(self: ApplicationClass) """
        ...

    def RefreshTitleBar(self): # -> 
        """ RefreshTitleBar(self: ApplicationClass) """
        ...

    def ReloadAddIns(self): # -> 
        """ ReloadAddIns(self: ApplicationClass) """
        ...

    def ReplaceModule(self, objtyp:int, ModuleName:str, FileName:str, token:int): # -> 
        """ ReplaceModule(self: ApplicationClass, objtyp: int, ModuleName: str, FileName: str, token: int) """
        ...

    def Run(self, Procedure, Arg1, Arg2, Arg3, Arg4, Arg5, Arg6, Arg7, Arg8, Arg9, Arg10, Arg11, Arg12, Arg13, Arg14, Arg15, Arg16, Arg17, Arg18, Arg19, Arg20, Arg21, Arg22, Arg23, Arg24, Arg25, Arg26, Arg27, Arg28, Arg29, Arg30) -> Tuple_[object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object]:
        """ Run(self: ApplicationClass, Procedure: str) -> (object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object, object) """
        ...

    def RunCommand(self, Command:AcCommand): # -> 
        """ RunCommand(self: ApplicationClass, Command: AcCommand) """
        ...

    def SaveAsAXL(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ SaveAsAXL(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def SaveAsTemplate(self, Path:str, Title:str, IconPath:str, CoreTable:str, Category:str, PreviewPath:object, Description:object, InstantiationForm:object, ApplicationPart:object, IncludeData:object, Variation:object): # -> 
        """ SaveAsTemplate(self: ApplicationClass, Path: str, Title: str, IconPath: str, CoreTable: str, Category: str, PreviewPath: object, Description: object, InstantiationForm: object, ApplicationPart: object, IncludeData: object, Variation: object) """
        ...

    def SaveAsText(self, ObjectType:AcObjectType, ObjectName:str, FileName:str): # -> 
        """ SaveAsText(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str, FileName: str) """
        ...

    def SetDefaultWorkgroupFile(self, Path:str): # -> 
        """ SetDefaultWorkgroupFile(self: ApplicationClass, Path: str) """
        ...

    def SetHiddenAttribute(self, ObjectType:AcObjectType, ObjectName:str, fHidden:bool): # -> 
        """ SetHiddenAttribute(self: ApplicationClass, ObjectType: AcObjectType, ObjectName: str, fHidden: bool) """
        ...

    def SetOption(self, OptionName:str, Setting:object): # -> 
        """ SetOption(self: ApplicationClass, OptionName: str, Setting: object) """
        ...

    def SetUndoRecording(self, yesno:Int16): # -> 
        """ SetUndoRecording(self: ApplicationClass, yesno: Int16) """
        ...

    def StringFromGUID(self, Guid:object) -> object:
        """ StringFromGUID(self: ApplicationClass, Guid: object) -> object """
        ...

    def SysCmd(self, Action:AcSysCmdAction, Argument2:object, Argument3:object) -> object:
        """ SysCmd(self: ApplicationClass, Action: AcSysCmdAction, Argument2: object, Argument3: object) -> object """
        ...

    def TransformXML(self, DataSource:str, TransformSource:str, OutputTarget:str, WellFormedXMLOutput:bool, ScriptOption:AcTransformXMLScriptOption): # -> 
        """ TransformXML(self: ApplicationClass, DataSource: str, TransformSource: str, OutputTarget: str, WellFormedXMLOutput: bool, ScriptOption: AcTransformXMLScriptOption) """
        ...


class DispAttachmentEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispAttachmentEvents_Event, : DispAttachmentEvents_AfterUpdateEventHandler) """
        ...

    def add_AttachmentCurrent(self): # -> 
        """ add_AttachmentCurrent(self: DispAttachmentEvents_Event, : DispAttachmentEvents_AttachmentCurrentEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispAttachmentEvents_Event, : DispAttachmentEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispAttachmentEvents_Event, : DispAttachmentEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: DispAttachmentEvents_Event, : DispAttachmentEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispAttachmentEvents_Event, : DispAttachmentEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispAttachmentEvents_Event, : DispAttachmentEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispAttachmentEvents_Event, : DispAttachmentEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispAttachmentEvents_Event, : DispAttachmentEvents_AfterUpdateEventHandler) """
        ...

    def remove_AttachmentCurrent(self): # -> 
        """ remove_AttachmentCurrent(self: DispAttachmentEvents_Event, : DispAttachmentEvents_AttachmentCurrentEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispAttachmentEvents_Event, : DispAttachmentEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispAttachmentEvents_Event, : DispAttachmentEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: DispAttachmentEvents_Event, : DispAttachmentEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispAttachmentEvents_Event, : DispAttachmentEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispAttachmentEvents_Event, : DispAttachmentEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispAttachmentEvents_Event, : DispAttachmentEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispAttachmentEvents_Event, : DispAttachmentEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispAttachmentEvents_Event, : DispAttachmentEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispAttachmentEvents_Event, : DispAttachmentEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    AttachmentCurrent = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _Attachment(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _Attachment) -> bool
        Set: AddColon(self: _Attachment) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Attachment) -> str
        Set: AfterUpdate(self: _Attachment) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _Attachment) -> str
        Set: AfterUpdateMacro(self: _Attachment) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Attachment) -> Application """
        ...

    @property
    def AttachmentCount(self) -> int:
        """ Get: AttachmentCount(self: _Attachment) -> int """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _Attachment) -> bool
        Set: AutoLabel(self: _Attachment) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Attachment) -> int
        Set: BackColor(self: _Attachment) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Attachment) -> Single
        Set: BackShade(self: _Attachment) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Attachment) -> Byte
        Set: BackStyle(self: _Attachment) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Attachment) -> int
        Set: BackThemeColorIndex(self: _Attachment) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Attachment) -> Single
        Set: BackTint(self: _Attachment) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Attachment) -> str
        Set: BeforeUpdate(self: _Attachment) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _Attachment) -> str
        Set: BeforeUpdateMacro(self: _Attachment) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Attachment) -> int
        Set: BorderColor(self: _Attachment) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Attachment) -> Byte
        Set: BorderLineStyle(self: _Attachment) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Attachment) -> Single
        Set: BorderShade(self: _Attachment) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Attachment) -> Byte
        Set: BorderStyle(self: _Attachment) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Attachment) -> int
        Set: BorderThemeColorIndex(self: _Attachment) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Attachment) -> Single
        Set: BorderTint(self: _Attachment) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Attachment) -> Byte
        Set: BorderWidth(self: _Attachment) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Attachment) -> Int16
        Set: BottomPadding(self: _Attachment) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _Attachment) -> bool
        Set: ColumnHidden(self: _Attachment) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _Attachment) -> Int16
        Set: ColumnOrder(self: _Attachment) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _Attachment) -> Int16
        Set: ColumnWidth(self: _Attachment) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Attachment) -> str
        Set: ControlName(self: _Attachment) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Attachment) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _Attachment) -> str
        Set: ControlSource(self: _Attachment) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Attachment) -> str
        Set: ControlTipText(self: _Attachment) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Attachment) -> Byte
        Set: ControlType(self: _Attachment) = value
        """
        ...

    @property
    def CurrentAttachment(self) -> int:
        """
        Get: CurrentAttachment(self: _Attachment) -> int
        Set: CurrentAttachment(self: _Attachment) = value
        """
        ...

    @property
    def DefaultPicture(self) -> str:
        """
        Get: DefaultPicture(self: _Attachment) -> str
        Set: DefaultPicture(self: _Attachment) = value
        """
        ...

    @property
    def DefaultPictureType(self) -> Byte:
        """
        Get: DefaultPictureType(self: _Attachment) -> Byte
        Set: DefaultPictureType(self: _Attachment) = value
        """
        ...

    @property
    def DisplayAs(self) -> AcDisplayAs:
        """
        Get: DisplayAs(self: _Attachment) -> AcDisplayAs
        Set: DisplayAs(self: _Attachment) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Attachment) -> Byte
        Set: DisplayWhen(self: _Attachment) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _Attachment) -> bool
        Set: Enabled(self: _Attachment) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Attachment) -> str
        Set: EventProcPrefix(self: _Attachment) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Attachment) -> int
        Set: GridlineColor(self: _Attachment) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Attachment) -> Single
        Set: GridlineShade(self: _Attachment) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Attachment) -> Byte
        Set: GridlineStyleBottom(self: _Attachment) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Attachment) -> Byte
        Set: GridlineStyleLeft(self: _Attachment) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Attachment) -> Byte
        Set: GridlineStyleRight(self: _Attachment) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Attachment) -> Byte
        Set: GridlineStyleTop(self: _Attachment) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Attachment) -> int
        Set: GridlineThemeColorIndex(self: _Attachment) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Attachment) -> Single
        Set: GridlineTint(self: _Attachment) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Attachment) -> Byte
        Set: GridlineWidthBottom(self: _Attachment) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Attachment) -> Byte
        Set: GridlineWidthLeft(self: _Attachment) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Attachment) -> Byte
        Set: GridlineWidthRight(self: _Attachment) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Attachment) -> Byte
        Set: GridlineWidthTop(self: _Attachment) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Attachment) -> Int16
        Set: Height(self: _Attachment) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Attachment) -> int
        Set: HelpContextId(self: _Attachment) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Attachment) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Attachment) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Attachment) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Attachment) -> bool
        Set: InSelection(self: _Attachment) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Attachment) -> bool
        Set: IsVisible(self: _Attachment) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _Attachment) -> Byte
        Set: LabelAlign(self: _Attachment) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _Attachment) -> Int16
        Set: LabelX(self: _Attachment) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _Attachment) -> Int16
        Set: LabelY(self: _Attachment) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Attachment) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Attachment) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Attachment) -> Int16
        Set: Left(self: _Attachment) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Attachment) -> Int16
        Set: LeftPadding(self: _Attachment) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _Attachment) -> bool
        Set: Locked(self: _Attachment) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Attachment) -> str
        Set: Name(self: _Attachment) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Attachment) -> Byte
        Set: OldBorderStyle(self: _Attachment) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Attachment) -> object """
        ...

    @property
    def OnAttachmentCurrent(self) -> str:
        """
        Get: OnAttachmentCurrent(self: _Attachment) -> str
        Set: OnAttachmentCurrent(self: _Attachment) = value
        """
        ...

    @property
    def OnAttachmentCurrentMacro(self) -> str:
        """
        Get: OnAttachmentCurrentMacro(self: _Attachment) -> str
        Set: OnAttachmentCurrentMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: _Attachment) -> str
        Set: OnChange(self: _Attachment) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: _Attachment) -> str
        Set: OnChangeMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Attachment) -> str
        Set: OnClick(self: _Attachment) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Attachment) -> str
        Set: OnClickMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Attachment) -> str
        Set: OnDblClick(self: _Attachment) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Attachment) -> str
        Set: OnDblClickMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Attachment) -> str
        Set: OnDirty(self: _Attachment) = value
        """
        ...

    @property
    def OnDirtyMacro(self) -> str:
        """
        Get: OnDirtyMacro(self: _Attachment) -> str
        Set: OnDirtyMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _Attachment) -> str
        Set: OnEnter(self: _Attachment) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _Attachment) -> str
        Set: OnEnterMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _Attachment) -> str
        Set: OnExit(self: _Attachment) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _Attachment) -> str
        Set: OnExitMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Attachment) -> str
        Set: OnGotFocus(self: _Attachment) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Attachment) -> str
        Set: OnGotFocusMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Attachment) -> str
        Set: OnKeyDown(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Attachment) -> str
        Set: OnKeyDownMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Attachment) -> str
        Set: OnKeyPress(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Attachment) -> str
        Set: OnKeyPressMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Attachment) -> str
        Set: OnKeyUp(self: _Attachment) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Attachment) -> str
        Set: OnKeyUpMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Attachment) -> str
        Set: OnLostFocus(self: _Attachment) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Attachment) -> str
        Set: OnLostFocusMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Attachment) -> str
        Set: OnMouseDown(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Attachment) -> str
        Set: OnMouseDownMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Attachment) -> str
        Set: OnMouseMove(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Attachment) -> str
        Set: OnMouseMoveMacro(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Attachment) -> str
        Set: OnMouseUp(self: _Attachment) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Attachment) -> str
        Set: OnMouseUpMacro(self: _Attachment) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Attachment) -> object """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Attachment) -> Byte
        Set: PictureAlignment(self: _Attachment) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Attachment) -> Byte
        Set: PictureSizeMode(self: _Attachment) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Attachment) -> bool
        Set: PictureTiling(self: _Attachment) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Attachment) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Attachment) -> Int16
        Set: RightPadding(self: _Attachment) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Attachment) -> Int16
        Set: Section(self: _Attachment) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Attachment) -> str
        Set: ShortcutMenuBar(self: _Attachment) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Attachment) -> Byte
        Set: SpecialEffect(self: _Attachment) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _Attachment) -> str
        Set: StatusBarText(self: _Attachment) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _Attachment) -> Int16
        Set: TabIndex(self: _Attachment) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _Attachment) -> bool
        Set: TabStop(self: _Attachment) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Attachment) -> str
        Set: Tag(self: _Attachment) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Attachment) -> Int16
        Set: Top(self: _Attachment) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Attachment) -> Int16
        Set: TopPadding(self: _Attachment) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Attachment) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Attachment) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Attachment) -> bool
        Set: Visible(self: _Attachment) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Attachment) -> Int16
        Set: Width(self: _Attachment) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Attachment) -> str
        Set: _Name(self: _Attachment) = value
        """
        ...


    def Back(self): # -> 
        """ Back(self: _Attachment) """
        ...

    def Forward(self): # -> 
        """ Forward(self: _Attachment) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _Attachment) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Attachment, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Attachment, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Attachment) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Attachment) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Attachment) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Attachment, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Attachment(_Attachment, DispAttachmentEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class AttachmentClass(Attachment, __ComObject): # skipped bases: <type '_Attachment'>, <type 'DispAttachmentEvents_Event'>, <type 'IAccessible'>, <type 'object'>
    """ AttachmentClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: AttachmentClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: AttachmentClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: AttachmentClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: AttachmentClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: AttachmentClass) -> bool
        Set: AddColon(self: AttachmentClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: AttachmentClass) -> str
        Set: AfterUpdate(self: AttachmentClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: AttachmentClass) -> str
        Set: AfterUpdateMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: AttachmentClass) -> Application """
        ...

    @property
    def AttachmentCount(self) -> int:
        """ Get: AttachmentCount(self: AttachmentClass) -> int """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: AttachmentClass) -> bool
        Set: AutoLabel(self: AttachmentClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: AttachmentClass) -> int
        Set: BackColor(self: AttachmentClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: AttachmentClass) -> Single
        Set: BackShade(self: AttachmentClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: AttachmentClass) -> Byte
        Set: BackStyle(self: AttachmentClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: AttachmentClass) -> int
        Set: BackThemeColorIndex(self: AttachmentClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: AttachmentClass) -> Single
        Set: BackTint(self: AttachmentClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: AttachmentClass) -> str
        Set: BeforeUpdate(self: AttachmentClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: AttachmentClass) -> str
        Set: BeforeUpdateMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: AttachmentClass) -> int
        Set: BorderColor(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: AttachmentClass) -> Byte
        Set: BorderLineStyle(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: AttachmentClass) -> Single
        Set: BorderShade(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: AttachmentClass) -> Byte
        Set: BorderStyle(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: AttachmentClass) -> int
        Set: BorderThemeColorIndex(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: AttachmentClass) -> Single
        Set: BorderTint(self: AttachmentClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: AttachmentClass) -> Byte
        Set: BorderWidth(self: AttachmentClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: AttachmentClass) -> Int16
        Set: BottomPadding(self: AttachmentClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: AttachmentClass) -> bool
        Set: ColumnHidden(self: AttachmentClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: AttachmentClass) -> Int16
        Set: ColumnOrder(self: AttachmentClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: AttachmentClass) -> Int16
        Set: ColumnWidth(self: AttachmentClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: AttachmentClass) -> str
        Set: ControlName(self: AttachmentClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: AttachmentClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: AttachmentClass) -> str
        Set: ControlSource(self: AttachmentClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: AttachmentClass) -> str
        Set: ControlTipText(self: AttachmentClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: AttachmentClass) -> Byte
        Set: ControlType(self: AttachmentClass) = value
        """
        ...

    @property
    def CurrentAttachment(self) -> int:
        """
        Get: CurrentAttachment(self: AttachmentClass) -> int
        Set: CurrentAttachment(self: AttachmentClass) = value
        """
        ...

    @property
    def DefaultPicture(self) -> str:
        """
        Get: DefaultPicture(self: AttachmentClass) -> str
        Set: DefaultPicture(self: AttachmentClass) = value
        """
        ...

    @property
    def DefaultPictureType(self) -> Byte:
        """
        Get: DefaultPictureType(self: AttachmentClass) -> Byte
        Set: DefaultPictureType(self: AttachmentClass) = value
        """
        ...

    @property
    def DisplayAs(self) -> AcDisplayAs:
        """
        Get: DisplayAs(self: AttachmentClass) -> AcDisplayAs
        Set: DisplayAs(self: AttachmentClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: AttachmentClass) -> Byte
        Set: DisplayWhen(self: AttachmentClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: AttachmentClass) -> bool
        Set: Enabled(self: AttachmentClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: AttachmentClass) -> str
        Set: EventProcPrefix(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: AttachmentClass) -> int
        Set: GridlineColor(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: AttachmentClass) -> Single
        Set: GridlineShade(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: AttachmentClass) -> Byte
        Set: GridlineStyleBottom(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: AttachmentClass) -> Byte
        Set: GridlineStyleLeft(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: AttachmentClass) -> Byte
        Set: GridlineStyleRight(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: AttachmentClass) -> Byte
        Set: GridlineStyleTop(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: AttachmentClass) -> int
        Set: GridlineThemeColorIndex(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: AttachmentClass) -> Single
        Set: GridlineTint(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: AttachmentClass) -> Byte
        Set: GridlineWidthBottom(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: AttachmentClass) -> Byte
        Set: GridlineWidthLeft(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: AttachmentClass) -> Byte
        Set: GridlineWidthRight(self: AttachmentClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: AttachmentClass) -> Byte
        Set: GridlineWidthTop(self: AttachmentClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: AttachmentClass) -> Int16
        Set: Height(self: AttachmentClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: AttachmentClass) -> int
        Set: HelpContextId(self: AttachmentClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: AttachmentClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: AttachmentClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: AttachmentClass) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: AttachmentClass) -> bool
        Set: InSelection(self: AttachmentClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: AttachmentClass) -> bool
        Set: IsVisible(self: AttachmentClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: AttachmentClass) -> Byte
        Set: LabelAlign(self: AttachmentClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: AttachmentClass) -> Int16
        Set: LabelX(self: AttachmentClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: AttachmentClass) -> Int16
        Set: LabelY(self: AttachmentClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: AttachmentClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: AttachmentClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: AttachmentClass) -> Int16
        Set: Left(self: AttachmentClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: AttachmentClass) -> Int16
        Set: LeftPadding(self: AttachmentClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: AttachmentClass) -> bool
        Set: Locked(self: AttachmentClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: AttachmentClass) -> str
        Set: Name(self: AttachmentClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: AttachmentClass) -> Byte
        Set: OldBorderStyle(self: AttachmentClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: AttachmentClass) -> object """
        ...

    @property
    def OnAttachmentCurrent(self) -> str:
        """
        Get: OnAttachmentCurrent(self: AttachmentClass) -> str
        Set: OnAttachmentCurrent(self: AttachmentClass) = value
        """
        ...

    @property
    def OnAttachmentCurrentMacro(self) -> str:
        """
        Get: OnAttachmentCurrentMacro(self: AttachmentClass) -> str
        Set: OnAttachmentCurrentMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: AttachmentClass) -> str
        Set: OnChange(self: AttachmentClass) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: AttachmentClass) -> str
        Set: OnChangeMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: AttachmentClass) -> str
        Set: OnClick(self: AttachmentClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: AttachmentClass) -> str
        Set: OnClickMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: AttachmentClass) -> str
        Set: OnDblClick(self: AttachmentClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: AttachmentClass) -> str
        Set: OnDblClickMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: AttachmentClass) -> str
        Set: OnDirty(self: AttachmentClass) = value
        """
        ...

    @property
    def OnDirtyMacro(self) -> str:
        """
        Get: OnDirtyMacro(self: AttachmentClass) -> str
        Set: OnDirtyMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: AttachmentClass) -> str
        Set: OnEnter(self: AttachmentClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: AttachmentClass) -> str
        Set: OnEnterMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: AttachmentClass) -> str
        Set: OnExit(self: AttachmentClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: AttachmentClass) -> str
        Set: OnExitMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: AttachmentClass) -> str
        Set: OnGotFocus(self: AttachmentClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: AttachmentClass) -> str
        Set: OnGotFocusMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: AttachmentClass) -> str
        Set: OnKeyDown(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: AttachmentClass) -> str
        Set: OnKeyDownMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: AttachmentClass) -> str
        Set: OnKeyPress(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: AttachmentClass) -> str
        Set: OnKeyPressMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: AttachmentClass) -> str
        Set: OnKeyUp(self: AttachmentClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: AttachmentClass) -> str
        Set: OnKeyUpMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: AttachmentClass) -> str
        Set: OnLostFocus(self: AttachmentClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: AttachmentClass) -> str
        Set: OnLostFocusMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: AttachmentClass) -> str
        Set: OnMouseDown(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: AttachmentClass) -> str
        Set: OnMouseDownMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: AttachmentClass) -> str
        Set: OnMouseMove(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: AttachmentClass) -> str
        Set: OnMouseMoveMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: AttachmentClass) -> str
        Set: OnMouseUp(self: AttachmentClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: AttachmentClass) -> str
        Set: OnMouseUpMacro(self: AttachmentClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: AttachmentClass) -> object """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: AttachmentClass) -> Byte
        Set: PictureAlignment(self: AttachmentClass) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: AttachmentClass) -> Byte
        Set: PictureSizeMode(self: AttachmentClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: AttachmentClass) -> bool
        Set: PictureTiling(self: AttachmentClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: AttachmentClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: AttachmentClass) -> Int16
        Set: RightPadding(self: AttachmentClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: AttachmentClass) -> Int16
        Set: Section(self: AttachmentClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: AttachmentClass) -> str
        Set: ShortcutMenuBar(self: AttachmentClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: AttachmentClass) -> Byte
        Set: SpecialEffect(self: AttachmentClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: AttachmentClass) -> str
        Set: StatusBarText(self: AttachmentClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: AttachmentClass) -> Int16
        Set: TabIndex(self: AttachmentClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: AttachmentClass) -> bool
        Set: TabStop(self: AttachmentClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: AttachmentClass) -> str
        Set: Tag(self: AttachmentClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: AttachmentClass) -> Int16
        Set: Top(self: AttachmentClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: AttachmentClass) -> Int16
        Set: TopPadding(self: AttachmentClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: AttachmentClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: AttachmentClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: AttachmentClass) -> bool
        Set: Visible(self: AttachmentClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: AttachmentClass) -> Int16
        Set: Width(self: AttachmentClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: AttachmentClass) -> str
        Set: _Name(self: AttachmentClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: AttachmentClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: AttachmentClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: AttachmentClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: AttachmentClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: AttachmentClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: AttachmentClass, : DispAttachmentEvents_AfterUpdateEventHandler) """
        ...

    def add_AttachmentCurrent(self): # -> 
        """ add_AttachmentCurrent(self: AttachmentClass, : DispAttachmentEvents_AttachmentCurrentEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: AttachmentClass, : DispAttachmentEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: AttachmentClass, : DispAttachmentEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: AttachmentClass, : DispAttachmentEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: AttachmentClass, : DispAttachmentEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: AttachmentClass, : DispAttachmentEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: AttachmentClass, : DispAttachmentEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: AttachmentClass, : DispAttachmentEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: AttachmentClass, : DispAttachmentEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: AttachmentClass, : DispAttachmentEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: AttachmentClass, : DispAttachmentEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: AttachmentClass, : DispAttachmentEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: AttachmentClass, : DispAttachmentEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: AttachmentClass, : DispAttachmentEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: AttachmentClass, : DispAttachmentEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: AttachmentClass, : DispAttachmentEvents_MouseUpEventHandler) """
        ...

    def Back(self): # -> 
        """ Back(self: AttachmentClass) """
        ...

    def Forward(self): # -> 
        """ Forward(self: AttachmentClass) """
        ...

    def Goto(self): # -> 
        """ Goto(self: AttachmentClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AttachmentClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: AttachmentClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: AttachmentClass, : DispAttachmentEvents_AfterUpdateEventHandler) """
        ...

    def remove_AttachmentCurrent(self): # -> 
        """ remove_AttachmentCurrent(self: AttachmentClass, : DispAttachmentEvents_AttachmentCurrentEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: AttachmentClass, : DispAttachmentEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: AttachmentClass, : DispAttachmentEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: AttachmentClass, : DispAttachmentEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: AttachmentClass, : DispAttachmentEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: AttachmentClass, : DispAttachmentEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: AttachmentClass, : DispAttachmentEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: AttachmentClass, : DispAttachmentEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: AttachmentClass, : DispAttachmentEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: AttachmentClass, : DispAttachmentEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: AttachmentClass, : DispAttachmentEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: AttachmentClass, : DispAttachmentEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: AttachmentClass, : DispAttachmentEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: AttachmentClass, : DispAttachmentEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: AttachmentClass, : DispAttachmentEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: AttachmentClass, : DispAttachmentEvents_MouseUpEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: AttachmentClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: AttachmentClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: AttachmentClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: AttachmentClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    AttachmentCurrent = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DispAttachmentEvents_Event_AfterUpdate = ...
    DispAttachmentEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _AutoCorrect: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def DisplayAutoCorrectOptions(self) -> bool:
        """
        Get: DisplayAutoCorrectOptions(self: _AutoCorrect) -> bool
        Set: DisplayAutoCorrectOptions(self: _AutoCorrect) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _AutoCorrect, dispid: int) -> bool """
        ...


class AutoCorrect(_AutoCorrect): # skipped bases: <type 'object'>
    """ no doc """
    pass

class AutoCorrectClass(AutoCorrect, __ComObject): # skipped bases: <type '_AutoCorrect'>, <type 'object'>
    """ AutoCorrectClass() """
    @property
    def DisplayAutoCorrectOptions(self) -> bool:
        """
        Get: DisplayAutoCorrectOptions(self: AutoCorrectClass) -> bool
        Set: DisplayAutoCorrectOptions(self: AutoCorrectClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: AutoCorrectClass, dispid: int) -> bool """
        ...


class DispBoundObjectFrameEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: DispBoundObjectFrameEvents_Event, : DispBoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...


class _BoundObjectFrame(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Action(self) -> Int16:
        """
        Get: Action(self: _BoundObjectFrame) -> Int16
        Set: Action(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _BoundObjectFrame) -> bool
        Set: AddColon(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _BoundObjectFrame) -> str
        Set: AfterUpdate(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _BoundObjectFrame) -> str
        Set: AfterUpdateMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _BoundObjectFrame) -> Application """
        ...

    @property
    def AutoActivate(self) -> Int16:
        """
        Get: AutoActivate(self: _BoundObjectFrame) -> Int16
        Set: AutoActivate(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _BoundObjectFrame) -> bool
        Set: AutoLabel(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _BoundObjectFrame) -> int
        Set: BackColor(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _BoundObjectFrame) -> Single
        Set: BackShade(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _BoundObjectFrame) -> Byte
        Set: BackStyle(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _BoundObjectFrame) -> int
        Set: BackThemeColorIndex(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _BoundObjectFrame) -> Single
        Set: BackTint(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _BoundObjectFrame) -> str
        Set: BeforeUpdate(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _BoundObjectFrame) -> str
        Set: BeforeUpdateMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _BoundObjectFrame) -> int
        Set: BorderColor(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _BoundObjectFrame) -> Byte
        Set: BorderLineStyle(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _BoundObjectFrame) -> Single
        Set: BorderShade(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _BoundObjectFrame) -> Byte
        Set: BorderStyle(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _BoundObjectFrame) -> int
        Set: BorderThemeColorIndex(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _BoundObjectFrame) -> Single
        Set: BorderTint(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _BoundObjectFrame) -> Byte
        Set: BorderWidth(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _BoundObjectFrame) -> Int16
        Set: BottomPadding(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: _BoundObjectFrame) -> str
        Set: Class(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _BoundObjectFrame) -> bool
        Set: ColumnHidden(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _BoundObjectFrame) -> Int16
        Set: ColumnOrder(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _BoundObjectFrame) -> Int16
        Set: ColumnWidth(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _BoundObjectFrame) -> str
        Set: ControlName(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _BoundObjectFrame) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _BoundObjectFrame) -> str
        Set: ControlSource(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _BoundObjectFrame) -> str
        Set: ControlTipText(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _BoundObjectFrame) -> Byte
        Set: ControlType(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def DisplayType(self) -> bool:
        """
        Get: DisplayType(self: _BoundObjectFrame) -> bool
        Set: DisplayType(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _BoundObjectFrame) -> Byte
        Set: DisplayWhen(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _BoundObjectFrame) -> bool
        Set: Enabled(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _BoundObjectFrame) -> str
        Set: EventProcPrefix(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _BoundObjectFrame) -> int
        Set: GridlineColor(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _BoundObjectFrame) -> Single
        Set: GridlineShade(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _BoundObjectFrame) -> Byte
        Set: GridlineStyleBottom(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _BoundObjectFrame) -> Byte
        Set: GridlineStyleLeft(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _BoundObjectFrame) -> Byte
        Set: GridlineStyleRight(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _BoundObjectFrame) -> Byte
        Set: GridlineStyleTop(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _BoundObjectFrame) -> int
        Set: GridlineThemeColorIndex(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _BoundObjectFrame) -> Single
        Set: GridlineTint(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _BoundObjectFrame) -> Byte
        Set: GridlineWidthBottom(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _BoundObjectFrame) -> Byte
        Set: GridlineWidthLeft(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _BoundObjectFrame) -> Byte
        Set: GridlineWidthRight(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _BoundObjectFrame) -> Byte
        Set: GridlineWidthTop(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _BoundObjectFrame) -> Int16
        Set: Height(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _BoundObjectFrame) -> int
        Set: HelpContextId(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _BoundObjectFrame) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _BoundObjectFrame) -> bool
        Set: InSelection(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _BoundObjectFrame) -> bool
        Set: IsVisible(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _BoundObjectFrame) -> Byte
        Set: LabelAlign(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _BoundObjectFrame) -> Int16
        Set: LabelX(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _BoundObjectFrame) -> Int16
        Set: LabelY(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _BoundObjectFrame) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _BoundObjectFrame) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _BoundObjectFrame) -> Int16
        Set: Left(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _BoundObjectFrame) -> Int16
        Set: LeftPadding(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _BoundObjectFrame) -> bool
        Set: Locked(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: _BoundObjectFrame) -> int
        Set: LpOleObject(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _BoundObjectFrame) -> str
        Set: Name(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _BoundObjectFrame) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _BoundObjectFrame) -> object
        Set: ObjectPalette(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: _BoundObjectFrame) -> int
        Set: ObjectVerbsCount(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _BoundObjectFrame) -> Byte
        Set: OldBorderStyle(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _BoundObjectFrame) -> object """
        ...

    @property
    def OLEType(self) -> Byte:
        """
        Get: OLEType(self: _BoundObjectFrame) -> Byte
        Set: OLEType(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OLETypeAllowed(self) -> Byte:
        """
        Get: OLETypeAllowed(self: _BoundObjectFrame) -> Byte
        Set: OLETypeAllowed(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _BoundObjectFrame) -> str
        Set: OnClick(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _BoundObjectFrame) -> str
        Set: OnClickMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _BoundObjectFrame) -> str
        Set: OnDblClick(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _BoundObjectFrame) -> str
        Set: OnDblClickMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _BoundObjectFrame) -> str
        Set: OnEnter(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _BoundObjectFrame) -> str
        Set: OnEnterMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _BoundObjectFrame) -> str
        Set: OnExit(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _BoundObjectFrame) -> str
        Set: OnExitMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _BoundObjectFrame) -> str
        Set: OnGotFocus(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _BoundObjectFrame) -> str
        Set: OnGotFocusMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _BoundObjectFrame) -> str
        Set: OnKeyDown(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _BoundObjectFrame) -> str
        Set: OnKeyDownMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _BoundObjectFrame) -> str
        Set: OnKeyPress(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _BoundObjectFrame) -> str
        Set: OnKeyPressMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _BoundObjectFrame) -> str
        Set: OnKeyUp(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _BoundObjectFrame) -> str
        Set: OnKeyUpMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _BoundObjectFrame) -> str
        Set: OnLostFocus(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _BoundObjectFrame) -> str
        Set: OnLostFocusMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _BoundObjectFrame) -> str
        Set: OnMouseDown(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _BoundObjectFrame) -> str
        Set: OnMouseDownMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _BoundObjectFrame) -> str
        Set: OnMouseMove(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _BoundObjectFrame) -> str
        Set: OnMouseMoveMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _BoundObjectFrame) -> str
        Set: OnMouseUp(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _BoundObjectFrame) -> str
        Set: OnMouseUpMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: _BoundObjectFrame) -> str
        Set: OnUpdated(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: _BoundObjectFrame) -> str
        Set: OnUpdatedMacro(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _BoundObjectFrame) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _BoundObjectFrame) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _BoundObjectFrame) -> Int16
        Set: RightPadding(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Scaling(self) -> Byte:
        """
        Get: Scaling(self: _BoundObjectFrame) -> Byte
        Set: Scaling(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _BoundObjectFrame) -> Int16
        Set: Section(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _BoundObjectFrame) -> str
        Set: ShortcutMenuBar(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: _BoundObjectFrame) -> Byte
        Set: SizeMode(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def SourceDoc(self) -> str:
        """
        Get: SourceDoc(self: _BoundObjectFrame) -> str
        Set: SourceDoc(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def SourceItem(self) -> str:
        """
        Get: SourceItem(self: _BoundObjectFrame) -> str
        Set: SourceItem(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _BoundObjectFrame) -> Byte
        Set: SpecialEffect(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _BoundObjectFrame) -> str
        Set: StatusBarText(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _BoundObjectFrame) -> Int16
        Set: TabIndex(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _BoundObjectFrame) -> bool
        Set: TabStop(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _BoundObjectFrame) -> str
        Set: Tag(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _BoundObjectFrame) -> Int16
        Set: Top(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _BoundObjectFrame) -> Int16
        Set: TopPadding(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def UpdateOptions(self) -> Int16:
        """
        Get: UpdateOptions(self: _BoundObjectFrame) -> Int16
        Set: UpdateOptions(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _BoundObjectFrame) -> object
        Set: Value(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: _BoundObjectFrame) -> object
        Set: VarOleObject(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: _BoundObjectFrame) -> int
        Set: Verb(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _BoundObjectFrame) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _BoundObjectFrame) -> bool
        Set: Visible(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _BoundObjectFrame) -> Int16
        Set: Width(self: _BoundObjectFrame) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _BoundObjectFrame) -> str
        Set: _Name(self: _BoundObjectFrame) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _BoundObjectFrame) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _BoundObjectFrame, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _BoundObjectFrame, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _BoundObjectFrame) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _BoundObjectFrame) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _BoundObjectFrame) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _BoundObjectFrame, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class BoundObjectFrame(_BoundObjectFrame, DispBoundObjectFrameEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class BoundObjectFrameClass(BoundObjectFrame, _BoundObjectFrameEvents_Event, __ComObject): # skipped bases: <type 'DispBoundObjectFrameEvents_Event'>, <type '_BoundObjectFrame'>, <type 'IAccessible'>, <type 'object'>
    """ BoundObjectFrameClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: BoundObjectFrameClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def Action(self) -> Int16:
        """
        Get: Action(self: BoundObjectFrameClass) -> Int16
        Set: Action(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: BoundObjectFrameClass) -> bool
        Set: AddColon(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: BoundObjectFrameClass) -> str
        Set: AfterUpdate(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: BoundObjectFrameClass) -> str
        Set: AfterUpdateMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: BoundObjectFrameClass) -> Application """
        ...

    @property
    def AutoActivate(self) -> Int16:
        """
        Get: AutoActivate(self: BoundObjectFrameClass) -> Int16
        Set: AutoActivate(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: BoundObjectFrameClass) -> bool
        Set: AutoLabel(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: BoundObjectFrameClass) -> int
        Set: BackColor(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: BoundObjectFrameClass) -> Single
        Set: BackShade(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: BoundObjectFrameClass) -> Byte
        Set: BackStyle(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: BoundObjectFrameClass) -> int
        Set: BackThemeColorIndex(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: BoundObjectFrameClass) -> Single
        Set: BackTint(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: BoundObjectFrameClass) -> str
        Set: BeforeUpdate(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: BoundObjectFrameClass) -> str
        Set: BeforeUpdateMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: BoundObjectFrameClass) -> int
        Set: BorderColor(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: BoundObjectFrameClass) -> Byte
        Set: BorderLineStyle(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: BoundObjectFrameClass) -> Single
        Set: BorderShade(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: BoundObjectFrameClass) -> Byte
        Set: BorderStyle(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: BoundObjectFrameClass) -> int
        Set: BorderThemeColorIndex(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: BoundObjectFrameClass) -> Single
        Set: BorderTint(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: BoundObjectFrameClass) -> Byte
        Set: BorderWidth(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: BoundObjectFrameClass) -> Int16
        Set: BottomPadding(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: BoundObjectFrameClass) -> str
        Set: Class(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: BoundObjectFrameClass) -> bool
        Set: ColumnHidden(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: BoundObjectFrameClass) -> Int16
        Set: ColumnOrder(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: BoundObjectFrameClass) -> Int16
        Set: ColumnWidth(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: BoundObjectFrameClass) -> str
        Set: ControlName(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: BoundObjectFrameClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: BoundObjectFrameClass) -> str
        Set: ControlSource(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: BoundObjectFrameClass) -> str
        Set: ControlTipText(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: BoundObjectFrameClass) -> Byte
        Set: ControlType(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def DisplayType(self) -> bool:
        """
        Get: DisplayType(self: BoundObjectFrameClass) -> bool
        Set: DisplayType(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: BoundObjectFrameClass) -> Byte
        Set: DisplayWhen(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: BoundObjectFrameClass) -> bool
        Set: Enabled(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: BoundObjectFrameClass) -> str
        Set: EventProcPrefix(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: BoundObjectFrameClass) -> int
        Set: GridlineColor(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: BoundObjectFrameClass) -> Single
        Set: GridlineShade(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: BoundObjectFrameClass) -> Byte
        Set: GridlineStyleBottom(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: BoundObjectFrameClass) -> Byte
        Set: GridlineStyleLeft(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: BoundObjectFrameClass) -> Byte
        Set: GridlineStyleRight(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: BoundObjectFrameClass) -> Byte
        Set: GridlineStyleTop(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: BoundObjectFrameClass) -> int
        Set: GridlineThemeColorIndex(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: BoundObjectFrameClass) -> Single
        Set: GridlineTint(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: BoundObjectFrameClass) -> Byte
        Set: GridlineWidthBottom(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: BoundObjectFrameClass) -> Byte
        Set: GridlineWidthLeft(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: BoundObjectFrameClass) -> Byte
        Set: GridlineWidthRight(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: BoundObjectFrameClass) -> Byte
        Set: GridlineWidthTop(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: BoundObjectFrameClass) -> Int16
        Set: Height(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: BoundObjectFrameClass) -> int
        Set: HelpContextId(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: BoundObjectFrameClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: BoundObjectFrameClass) -> bool
        Set: InSelection(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: BoundObjectFrameClass) -> bool
        Set: IsVisible(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: BoundObjectFrameClass) -> Byte
        Set: LabelAlign(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: BoundObjectFrameClass) -> Int16
        Set: LabelX(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: BoundObjectFrameClass) -> Int16
        Set: LabelY(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: BoundObjectFrameClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: BoundObjectFrameClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: BoundObjectFrameClass) -> Int16
        Set: Left(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: BoundObjectFrameClass) -> Int16
        Set: LeftPadding(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: BoundObjectFrameClass) -> bool
        Set: Locked(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: BoundObjectFrameClass) -> int
        Set: LpOleObject(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: BoundObjectFrameClass) -> str
        Set: Name(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: BoundObjectFrameClass) -> object
        Set: ObjectPalette(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: BoundObjectFrameClass) -> int
        Set: ObjectVerbsCount(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: BoundObjectFrameClass) -> Byte
        Set: OldBorderStyle(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def OLEType(self) -> Byte:
        """
        Get: OLEType(self: BoundObjectFrameClass) -> Byte
        Set: OLEType(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OLETypeAllowed(self) -> Byte:
        """
        Get: OLETypeAllowed(self: BoundObjectFrameClass) -> Byte
        Set: OLETypeAllowed(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: BoundObjectFrameClass) -> str
        Set: OnClick(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: BoundObjectFrameClass) -> str
        Set: OnClickMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: BoundObjectFrameClass) -> str
        Set: OnDblClick(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: BoundObjectFrameClass) -> str
        Set: OnDblClickMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: BoundObjectFrameClass) -> str
        Set: OnEnter(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: BoundObjectFrameClass) -> str
        Set: OnEnterMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: BoundObjectFrameClass) -> str
        Set: OnExit(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: BoundObjectFrameClass) -> str
        Set: OnExitMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: BoundObjectFrameClass) -> str
        Set: OnGotFocus(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: BoundObjectFrameClass) -> str
        Set: OnGotFocusMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: BoundObjectFrameClass) -> str
        Set: OnKeyDown(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: BoundObjectFrameClass) -> str
        Set: OnKeyDownMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: BoundObjectFrameClass) -> str
        Set: OnKeyPress(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: BoundObjectFrameClass) -> str
        Set: OnKeyPressMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: BoundObjectFrameClass) -> str
        Set: OnKeyUp(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: BoundObjectFrameClass) -> str
        Set: OnKeyUpMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: BoundObjectFrameClass) -> str
        Set: OnLostFocus(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: BoundObjectFrameClass) -> str
        Set: OnLostFocusMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: BoundObjectFrameClass) -> str
        Set: OnMouseDown(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: BoundObjectFrameClass) -> str
        Set: OnMouseDownMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: BoundObjectFrameClass) -> str
        Set: OnMouseMove(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: BoundObjectFrameClass) -> str
        Set: OnMouseMoveMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: BoundObjectFrameClass) -> str
        Set: OnMouseUp(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: BoundObjectFrameClass) -> str
        Set: OnMouseUpMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: BoundObjectFrameClass) -> str
        Set: OnUpdated(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: BoundObjectFrameClass) -> str
        Set: OnUpdatedMacro(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: BoundObjectFrameClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: BoundObjectFrameClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: BoundObjectFrameClass) -> Int16
        Set: RightPadding(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Scaling(self) -> Byte:
        """
        Get: Scaling(self: BoundObjectFrameClass) -> Byte
        Set: Scaling(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: BoundObjectFrameClass) -> Int16
        Set: Section(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: BoundObjectFrameClass) -> str
        Set: ShortcutMenuBar(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: BoundObjectFrameClass) -> Byte
        Set: SizeMode(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def SourceDoc(self) -> str:
        """
        Get: SourceDoc(self: BoundObjectFrameClass) -> str
        Set: SourceDoc(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def SourceItem(self) -> str:
        """
        Get: SourceItem(self: BoundObjectFrameClass) -> str
        Set: SourceItem(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: BoundObjectFrameClass) -> Byte
        Set: SpecialEffect(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: BoundObjectFrameClass) -> str
        Set: StatusBarText(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: BoundObjectFrameClass) -> Int16
        Set: TabIndex(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: BoundObjectFrameClass) -> bool
        Set: TabStop(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: BoundObjectFrameClass) -> str
        Set: Tag(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: BoundObjectFrameClass) -> Int16
        Set: Top(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: BoundObjectFrameClass) -> Int16
        Set: TopPadding(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def UpdateOptions(self) -> Int16:
        """
        Get: UpdateOptions(self: BoundObjectFrameClass) -> Int16
        Set: UpdateOptions(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: BoundObjectFrameClass) -> object
        Set: Value(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: BoundObjectFrameClass) -> object
        Set: VarOleObject(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: BoundObjectFrameClass) -> int
        Set: Verb(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: BoundObjectFrameClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: BoundObjectFrameClass) -> bool
        Set: Visible(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: BoundObjectFrameClass) -> Int16
        Set: Width(self: BoundObjectFrameClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: BoundObjectFrameClass) -> str
        Set: _Name(self: BoundObjectFrameClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: BoundObjectFrameClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: BoundObjectFrameClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: BoundObjectFrameClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: BoundObjectFrameClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: BoundObjectFrameClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: BoundObjectFrameClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: BoundObjectFrameClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: BoundObjectFrameClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: BoundObjectFrameClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: BoundObjectFrameClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: BoundObjectFrameClass) """
        ...

    def _BoundObjectFrameEvents_Event_add_AfterUpdate(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_AfterUpdate(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_BeforeUpdate(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_BeforeUpdate(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_Click(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_Click(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_ClickEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_DblClick(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_DblClick(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_Enter(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_Enter(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_EnterEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_Exit(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_Exit(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_ExitEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_GotFocus(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_GotFocus(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_KeyDown(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_KeyDown(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_KeyPress(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_KeyPress(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_KeyUp(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_KeyUp(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_LostFocus(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_LostFocus(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_MouseDown(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_MouseDown(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_MouseMove(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_MouseMove(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_MouseUp(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_MouseUp(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_add_Updated(self): # -> 
        """ _BoundObjectFrameEvents_Event_add_Updated(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_AfterUpdate(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_AfterUpdate(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_BeforeUpdate(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_Click(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_Click(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_ClickEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_DblClick(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_DblClick(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_Enter(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_Enter(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_EnterEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_Exit(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_Exit(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_ExitEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_GotFocus(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_GotFocus(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_KeyDown(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_KeyDown(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_KeyPress(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_KeyPress(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_KeyUp(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_KeyUp(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_LostFocus(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_LostFocus(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_MouseDown(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_MouseDown(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_MouseMove(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_MouseMove(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_MouseUp(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_MouseUp(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def _BoundObjectFrameEvents_Event_remove_Updated(self): # -> 
        """ _BoundObjectFrameEvents_Event_remove_Updated(self: BoundObjectFrameClass, : _BoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: BoundObjectFrameClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispBoundObjectFrameEvents_Event_AfterUpdate = ...
    DispBoundObjectFrameEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...
    _BoundObjectFrameEvents_Event_AfterUpdate = ...
    _BoundObjectFrameEvents_Event_BeforeUpdate = ...
    _BoundObjectFrameEvents_Event_Click = ...
    _BoundObjectFrameEvents_Event_DblClick = ...
    _BoundObjectFrameEvents_Event_Enter = ...
    _BoundObjectFrameEvents_Event_Exit = ...
    _BoundObjectFrameEvents_Event_GotFocus = ...
    _BoundObjectFrameEvents_Event_KeyDown = ...
    _BoundObjectFrameEvents_Event_KeyPress = ...
    _BoundObjectFrameEvents_Event_KeyUp = ...
    _BoundObjectFrameEvents_Event_LostFocus = ...
    _BoundObjectFrameEvents_Event_MouseDown = ...
    _BoundObjectFrameEvents_Event_MouseMove = ...
    _BoundObjectFrameEvents_Event_MouseUp = ...
    _BoundObjectFrameEvents_Event_Updated = ...


class DispCheckBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispCheckBoxEvents_Event, : DispCheckBoxEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _Checkbox(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _Checkbox) -> bool
        Set: AddColon(self: _Checkbox) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Checkbox) -> str
        Set: AfterUpdate(self: _Checkbox) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _Checkbox) -> str
        Set: AfterUpdateMacro(self: _Checkbox) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Checkbox) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _Checkbox) -> bool
        Set: AutoLabel(self: _Checkbox) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Checkbox) -> str
        Set: BeforeUpdate(self: _Checkbox) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _Checkbox) -> str
        Set: BeforeUpdateMacro(self: _Checkbox) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Checkbox) -> int
        Set: BorderColor(self: _Checkbox) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Checkbox) -> Byte
        Set: BorderLineStyle(self: _Checkbox) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Checkbox) -> Single
        Set: BorderShade(self: _Checkbox) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Checkbox) -> Byte
        Set: BorderStyle(self: _Checkbox) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Checkbox) -> int
        Set: BorderThemeColorIndex(self: _Checkbox) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Checkbox) -> Single
        Set: BorderTint(self: _Checkbox) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Checkbox) -> Byte
        Set: BorderWidth(self: _Checkbox) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Checkbox) -> Int16
        Set: BottomPadding(self: _Checkbox) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _Checkbox) -> bool
        Set: ColumnHidden(self: _Checkbox) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _Checkbox) -> Int16
        Set: ColumnOrder(self: _Checkbox) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _Checkbox) -> Int16
        Set: ColumnWidth(self: _Checkbox) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Checkbox) -> str
        Set: ControlName(self: _Checkbox) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Checkbox) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _Checkbox) -> str
        Set: ControlSource(self: _Checkbox) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Checkbox) -> str
        Set: ControlTipText(self: _Checkbox) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Checkbox) -> Byte
        Set: ControlType(self: _Checkbox) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _Checkbox) -> str
        Set: DefaultValue(self: _Checkbox) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Checkbox) -> Byte
        Set: DisplayWhen(self: _Checkbox) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _Checkbox) -> bool
        Set: Enabled(self: _Checkbox) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Checkbox) -> str
        Set: EventProcPrefix(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Checkbox) -> int
        Set: GridlineColor(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Checkbox) -> Single
        Set: GridlineShade(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Checkbox) -> Byte
        Set: GridlineStyleBottom(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Checkbox) -> Byte
        Set: GridlineStyleLeft(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Checkbox) -> Byte
        Set: GridlineStyleRight(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Checkbox) -> Byte
        Set: GridlineStyleTop(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Checkbox) -> int
        Set: GridlineThemeColorIndex(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Checkbox) -> Single
        Set: GridlineTint(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Checkbox) -> Byte
        Set: GridlineWidthBottom(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Checkbox) -> Byte
        Set: GridlineWidthLeft(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Checkbox) -> Byte
        Set: GridlineWidthRight(self: _Checkbox) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Checkbox) -> Byte
        Set: GridlineWidthTop(self: _Checkbox) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Checkbox) -> Int16
        Set: Height(self: _Checkbox) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Checkbox) -> int
        Set: HelpContextId(self: _Checkbox) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _Checkbox) -> bool
        Set: HideDuplicates(self: _Checkbox) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Checkbox) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Checkbox) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Checkbox) -> bool
        Set: InSelection(self: _Checkbox) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Checkbox) -> bool
        Set: IsVisible(self: _Checkbox) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _Checkbox) -> Byte
        Set: LabelAlign(self: _Checkbox) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _Checkbox) -> Int16
        Set: LabelX(self: _Checkbox) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _Checkbox) -> Int16
        Set: LabelY(self: _Checkbox) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Checkbox) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Checkbox) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Checkbox) -> Int16
        Set: Left(self: _Checkbox) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Checkbox) -> Int16
        Set: LeftPadding(self: _Checkbox) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _Checkbox) -> bool
        Set: Locked(self: _Checkbox) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Checkbox) -> str
        Set: Name(self: _Checkbox) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Checkbox) -> Byte
        Set: OldBorderStyle(self: _Checkbox) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Checkbox) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Checkbox) -> str
        Set: OnClick(self: _Checkbox) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Checkbox) -> str
        Set: OnClickMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Checkbox) -> str
        Set: OnDblClick(self: _Checkbox) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Checkbox) -> str
        Set: OnDblClickMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _Checkbox) -> str
        Set: OnEnter(self: _Checkbox) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _Checkbox) -> str
        Set: OnEnterMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _Checkbox) -> str
        Set: OnExit(self: _Checkbox) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _Checkbox) -> str
        Set: OnExitMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Checkbox) -> str
        Set: OnGotFocus(self: _Checkbox) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Checkbox) -> str
        Set: OnGotFocusMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Checkbox) -> str
        Set: OnKeyDown(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Checkbox) -> str
        Set: OnKeyDownMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Checkbox) -> str
        Set: OnKeyPress(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Checkbox) -> str
        Set: OnKeyPressMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Checkbox) -> str
        Set: OnKeyUp(self: _Checkbox) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Checkbox) -> str
        Set: OnKeyUpMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Checkbox) -> str
        Set: OnLostFocus(self: _Checkbox) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Checkbox) -> str
        Set: OnLostFocusMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Checkbox) -> str
        Set: OnMouseDown(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Checkbox) -> str
        Set: OnMouseDownMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Checkbox) -> str
        Set: OnMouseMove(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Checkbox) -> str
        Set: OnMouseMoveMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Checkbox) -> str
        Set: OnMouseUp(self: _Checkbox) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Checkbox) -> str
        Set: OnMouseUpMacro(self: _Checkbox) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _Checkbox) -> int
        Set: OptionValue(self: _Checkbox) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Checkbox) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Checkbox) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _Checkbox) -> Byte
        Set: ReadingOrder(self: _Checkbox) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Checkbox) -> Int16
        Set: RightPadding(self: _Checkbox) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Checkbox) -> Int16
        Set: Section(self: _Checkbox) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Checkbox) -> str
        Set: ShortcutMenuBar(self: _Checkbox) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Checkbox) -> Byte
        Set: SpecialEffect(self: _Checkbox) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _Checkbox) -> str
        Set: StatusBarText(self: _Checkbox) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _Checkbox) -> Int16
        Set: TabIndex(self: _Checkbox) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _Checkbox) -> bool
        Set: TabStop(self: _Checkbox) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Checkbox) -> str
        Set: Tag(self: _Checkbox) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Checkbox) -> Int16
        Set: Top(self: _Checkbox) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Checkbox) -> Int16
        Set: TopPadding(self: _Checkbox) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _Checkbox) -> bool
        Set: TripleState(self: _Checkbox) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _Checkbox) -> str
        Set: ValidationRule(self: _Checkbox) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _Checkbox) -> str
        Set: ValidationText(self: _Checkbox) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _Checkbox) -> object
        Set: Value(self: _Checkbox) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Checkbox) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Checkbox) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Checkbox) -> bool
        Set: Visible(self: _Checkbox) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Checkbox) -> Int16
        Set: Width(self: _Checkbox) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Checkbox) -> str
        Set: _Name(self: _Checkbox) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _Checkbox) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Checkbox, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Checkbox, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Checkbox) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Checkbox) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Checkbox) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Checkbox) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Checkbox, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class CheckBox(DispCheckBoxEvents_Event, _Checkbox): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class CheckBoxClass(_CheckBoxEvents_Event, CheckBox, __ComObject): # skipped bases: <type '_Checkbox'>, <type 'DispCheckBoxEvents_Event'>, <type 'IAccessible'>, <type 'object'>
    """ CheckBoxClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: CheckBoxClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: CheckBoxClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: CheckBoxClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: CheckBoxClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: CheckBoxClass) -> bool
        Set: AddColon(self: CheckBoxClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: CheckBoxClass) -> str
        Set: AfterUpdate(self: CheckBoxClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: CheckBoxClass) -> str
        Set: AfterUpdateMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: CheckBoxClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: CheckBoxClass) -> bool
        Set: AutoLabel(self: CheckBoxClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: CheckBoxClass) -> str
        Set: BeforeUpdate(self: CheckBoxClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: CheckBoxClass) -> str
        Set: BeforeUpdateMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: CheckBoxClass) -> int
        Set: BorderColor(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: CheckBoxClass) -> Byte
        Set: BorderLineStyle(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: CheckBoxClass) -> Single
        Set: BorderShade(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: CheckBoxClass) -> Byte
        Set: BorderStyle(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: CheckBoxClass) -> int
        Set: BorderThemeColorIndex(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: CheckBoxClass) -> Single
        Set: BorderTint(self: CheckBoxClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: CheckBoxClass) -> Byte
        Set: BorderWidth(self: CheckBoxClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: CheckBoxClass) -> Int16
        Set: BottomPadding(self: CheckBoxClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: CheckBoxClass) -> bool
        Set: ColumnHidden(self: CheckBoxClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: CheckBoxClass) -> Int16
        Set: ColumnOrder(self: CheckBoxClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: CheckBoxClass) -> Int16
        Set: ColumnWidth(self: CheckBoxClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: CheckBoxClass) -> str
        Set: ControlName(self: CheckBoxClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: CheckBoxClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: CheckBoxClass) -> str
        Set: ControlSource(self: CheckBoxClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: CheckBoxClass) -> str
        Set: ControlTipText(self: CheckBoxClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: CheckBoxClass) -> Byte
        Set: ControlType(self: CheckBoxClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: CheckBoxClass) -> str
        Set: DefaultValue(self: CheckBoxClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: CheckBoxClass) -> Byte
        Set: DisplayWhen(self: CheckBoxClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: CheckBoxClass) -> bool
        Set: Enabled(self: CheckBoxClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: CheckBoxClass) -> str
        Set: EventProcPrefix(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: CheckBoxClass) -> int
        Set: GridlineColor(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: CheckBoxClass) -> Single
        Set: GridlineShade(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: CheckBoxClass) -> Byte
        Set: GridlineStyleBottom(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: CheckBoxClass) -> Byte
        Set: GridlineStyleLeft(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: CheckBoxClass) -> Byte
        Set: GridlineStyleRight(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: CheckBoxClass) -> Byte
        Set: GridlineStyleTop(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: CheckBoxClass) -> int
        Set: GridlineThemeColorIndex(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: CheckBoxClass) -> Single
        Set: GridlineTint(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: CheckBoxClass) -> Byte
        Set: GridlineWidthBottom(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: CheckBoxClass) -> Byte
        Set: GridlineWidthLeft(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: CheckBoxClass) -> Byte
        Set: GridlineWidthRight(self: CheckBoxClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: CheckBoxClass) -> Byte
        Set: GridlineWidthTop(self: CheckBoxClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: CheckBoxClass) -> Int16
        Set: Height(self: CheckBoxClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: CheckBoxClass) -> int
        Set: HelpContextId(self: CheckBoxClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: CheckBoxClass) -> bool
        Set: HideDuplicates(self: CheckBoxClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: CheckBoxClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: CheckBoxClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: CheckBoxClass) -> bool
        Set: InSelection(self: CheckBoxClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: CheckBoxClass) -> bool
        Set: IsVisible(self: CheckBoxClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: CheckBoxClass) -> Byte
        Set: LabelAlign(self: CheckBoxClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: CheckBoxClass) -> Int16
        Set: LabelX(self: CheckBoxClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: CheckBoxClass) -> Int16
        Set: LabelY(self: CheckBoxClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: CheckBoxClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: CheckBoxClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: CheckBoxClass) -> Int16
        Set: Left(self: CheckBoxClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: CheckBoxClass) -> Int16
        Set: LeftPadding(self: CheckBoxClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: CheckBoxClass) -> bool
        Set: Locked(self: CheckBoxClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: CheckBoxClass) -> str
        Set: Name(self: CheckBoxClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: CheckBoxClass) -> Byte
        Set: OldBorderStyle(self: CheckBoxClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: CheckBoxClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: CheckBoxClass) -> str
        Set: OnClick(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: CheckBoxClass) -> str
        Set: OnClickMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: CheckBoxClass) -> str
        Set: OnDblClick(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: CheckBoxClass) -> str
        Set: OnDblClickMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: CheckBoxClass) -> str
        Set: OnEnter(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: CheckBoxClass) -> str
        Set: OnEnterMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: CheckBoxClass) -> str
        Set: OnExit(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: CheckBoxClass) -> str
        Set: OnExitMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: CheckBoxClass) -> str
        Set: OnGotFocus(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: CheckBoxClass) -> str
        Set: OnGotFocusMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: CheckBoxClass) -> str
        Set: OnKeyDown(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: CheckBoxClass) -> str
        Set: OnKeyDownMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: CheckBoxClass) -> str
        Set: OnKeyPress(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: CheckBoxClass) -> str
        Set: OnKeyPressMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: CheckBoxClass) -> str
        Set: OnKeyUp(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: CheckBoxClass) -> str
        Set: OnKeyUpMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: CheckBoxClass) -> str
        Set: OnLostFocus(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: CheckBoxClass) -> str
        Set: OnLostFocusMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: CheckBoxClass) -> str
        Set: OnMouseDown(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: CheckBoxClass) -> str
        Set: OnMouseDownMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: CheckBoxClass) -> str
        Set: OnMouseMove(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: CheckBoxClass) -> str
        Set: OnMouseMoveMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: CheckBoxClass) -> str
        Set: OnMouseUp(self: CheckBoxClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: CheckBoxClass) -> str
        Set: OnMouseUpMacro(self: CheckBoxClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: CheckBoxClass) -> int
        Set: OptionValue(self: CheckBoxClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: CheckBoxClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: CheckBoxClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: CheckBoxClass) -> Byte
        Set: ReadingOrder(self: CheckBoxClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: CheckBoxClass) -> Int16
        Set: RightPadding(self: CheckBoxClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: CheckBoxClass) -> Int16
        Set: Section(self: CheckBoxClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: CheckBoxClass) -> str
        Set: ShortcutMenuBar(self: CheckBoxClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: CheckBoxClass) -> Byte
        Set: SpecialEffect(self: CheckBoxClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: CheckBoxClass) -> str
        Set: StatusBarText(self: CheckBoxClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: CheckBoxClass) -> Int16
        Set: TabIndex(self: CheckBoxClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: CheckBoxClass) -> bool
        Set: TabStop(self: CheckBoxClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: CheckBoxClass) -> str
        Set: Tag(self: CheckBoxClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: CheckBoxClass) -> Int16
        Set: Top(self: CheckBoxClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: CheckBoxClass) -> Int16
        Set: TopPadding(self: CheckBoxClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: CheckBoxClass) -> bool
        Set: TripleState(self: CheckBoxClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: CheckBoxClass) -> str
        Set: ValidationRule(self: CheckBoxClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: CheckBoxClass) -> str
        Set: ValidationText(self: CheckBoxClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: CheckBoxClass) -> object
        Set: Value(self: CheckBoxClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: CheckBoxClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: CheckBoxClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: CheckBoxClass) -> bool
        Set: Visible(self: CheckBoxClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: CheckBoxClass) -> Int16
        Set: Width(self: CheckBoxClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: CheckBoxClass) -> str
        Set: _Name(self: CheckBoxClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: CheckBoxClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: CheckBoxClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: CheckBoxClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: CheckBoxClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: CheckBoxClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: CheckBoxClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CheckBoxClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: CheckBoxClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: CheckBoxClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: CheckBoxClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: CheckBoxClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: CheckBoxClass) """
        ...

    def _CheckBoxEvents_Event_add_AfterUpdate(self): # -> 
        """ _CheckBoxEvents_Event_add_AfterUpdate(self: CheckBoxClass, : _CheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_BeforeUpdate(self): # -> 
        """ _CheckBoxEvents_Event_add_BeforeUpdate(self: CheckBoxClass, : _CheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_Click(self): # -> 
        """ _CheckBoxEvents_Event_add_Click(self: CheckBoxClass, : _CheckBoxEvents_ClickEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_DblClick(self): # -> 
        """ _CheckBoxEvents_Event_add_DblClick(self: CheckBoxClass, : _CheckBoxEvents_DblClickEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_Enter(self): # -> 
        """ _CheckBoxEvents_Event_add_Enter(self: CheckBoxClass, : _CheckBoxEvents_EnterEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_Exit(self): # -> 
        """ _CheckBoxEvents_Event_add_Exit(self: CheckBoxClass, : _CheckBoxEvents_ExitEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_GotFocus(self): # -> 
        """ _CheckBoxEvents_Event_add_GotFocus(self: CheckBoxClass, : _CheckBoxEvents_GotFocusEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_KeyDown(self): # -> 
        """ _CheckBoxEvents_Event_add_KeyDown(self: CheckBoxClass, : _CheckBoxEvents_KeyDownEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_KeyPress(self): # -> 
        """ _CheckBoxEvents_Event_add_KeyPress(self: CheckBoxClass, : _CheckBoxEvents_KeyPressEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_KeyUp(self): # -> 
        """ _CheckBoxEvents_Event_add_KeyUp(self: CheckBoxClass, : _CheckBoxEvents_KeyUpEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_LostFocus(self): # -> 
        """ _CheckBoxEvents_Event_add_LostFocus(self: CheckBoxClass, : _CheckBoxEvents_LostFocusEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_MouseDown(self): # -> 
        """ _CheckBoxEvents_Event_add_MouseDown(self: CheckBoxClass, : _CheckBoxEvents_MouseDownEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_MouseMove(self): # -> 
        """ _CheckBoxEvents_Event_add_MouseMove(self: CheckBoxClass, : _CheckBoxEvents_MouseMoveEventHandler) """
        ...

    def _CheckBoxEvents_Event_add_MouseUp(self): # -> 
        """ _CheckBoxEvents_Event_add_MouseUp(self: CheckBoxClass, : _CheckBoxEvents_MouseUpEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_AfterUpdate(self): # -> 
        """ _CheckBoxEvents_Event_remove_AfterUpdate(self: CheckBoxClass, : _CheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _CheckBoxEvents_Event_remove_BeforeUpdate(self: CheckBoxClass, : _CheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_Click(self): # -> 
        """ _CheckBoxEvents_Event_remove_Click(self: CheckBoxClass, : _CheckBoxEvents_ClickEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_DblClick(self): # -> 
        """ _CheckBoxEvents_Event_remove_DblClick(self: CheckBoxClass, : _CheckBoxEvents_DblClickEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_Enter(self): # -> 
        """ _CheckBoxEvents_Event_remove_Enter(self: CheckBoxClass, : _CheckBoxEvents_EnterEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_Exit(self): # -> 
        """ _CheckBoxEvents_Event_remove_Exit(self: CheckBoxClass, : _CheckBoxEvents_ExitEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_GotFocus(self): # -> 
        """ _CheckBoxEvents_Event_remove_GotFocus(self: CheckBoxClass, : _CheckBoxEvents_GotFocusEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_KeyDown(self): # -> 
        """ _CheckBoxEvents_Event_remove_KeyDown(self: CheckBoxClass, : _CheckBoxEvents_KeyDownEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_KeyPress(self): # -> 
        """ _CheckBoxEvents_Event_remove_KeyPress(self: CheckBoxClass, : _CheckBoxEvents_KeyPressEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_KeyUp(self): # -> 
        """ _CheckBoxEvents_Event_remove_KeyUp(self: CheckBoxClass, : _CheckBoxEvents_KeyUpEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_LostFocus(self): # -> 
        """ _CheckBoxEvents_Event_remove_LostFocus(self: CheckBoxClass, : _CheckBoxEvents_LostFocusEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_MouseDown(self): # -> 
        """ _CheckBoxEvents_Event_remove_MouseDown(self: CheckBoxClass, : _CheckBoxEvents_MouseDownEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_MouseMove(self): # -> 
        """ _CheckBoxEvents_Event_remove_MouseMove(self: CheckBoxClass, : _CheckBoxEvents_MouseMoveEventHandler) """
        ...

    def _CheckBoxEvents_Event_remove_MouseUp(self): # -> 
        """ _CheckBoxEvents_Event_remove_MouseUp(self: CheckBoxClass, : _CheckBoxEvents_MouseUpEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: CheckBoxClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispCheckBoxEvents_Event_AfterUpdate = ...
    DispCheckBoxEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _CheckBoxEvents_Event_AfterUpdate = ...
    _CheckBoxEvents_Event_BeforeUpdate = ...
    _CheckBoxEvents_Event_Click = ...
    _CheckBoxEvents_Event_DblClick = ...
    _CheckBoxEvents_Event_Enter = ...
    _CheckBoxEvents_Event_Exit = ...
    _CheckBoxEvents_Event_GotFocus = ...
    _CheckBoxEvents_Event_KeyDown = ...
    _CheckBoxEvents_Event_KeyPress = ...
    _CheckBoxEvents_Event_KeyUp = ...
    _CheckBoxEvents_Event_LostFocus = ...
    _CheckBoxEvents_Event_MouseDown = ...
    _CheckBoxEvents_Event_MouseMove = ...
    _CheckBoxEvents_Event_MouseUp = ...


class Children(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: Children) -> int """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Children, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _Dummy: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _DummyEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Initialize(self): # -> 
        """ add_Initialize(self: _DummyEvents_Event, : _DummyEvents_InitializeEventHandler) """
        ...

    def add_Terminate(self): # -> 
        """ add_Terminate(self: _DummyEvents_Event, : _DummyEvents_TerminateEventHandler) """
        ...

    def remove_Initialize(self): # -> 
        """ remove_Initialize(self: _DummyEvents_Event, : _DummyEvents_InitializeEventHandler) """
        ...

    def remove_Terminate(self): # -> 
        """ remove_Terminate(self: _DummyEvents_Event, : _DummyEvents_TerminateEventHandler) """
        ...

    Initialize = ...
    Terminate = ...


class Class(_Dummy, _DummyEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class ClassClass(__ComObject, Class): # skipped bases: <type '_Dummy'>, <type '_DummyEvents_Event'>, <type 'object'>
    """ ClassClass() """
    def add_Initialize(self): # -> 
        """ add_Initialize(self: ClassClass, : _DummyEvents_InitializeEventHandler) """
        ...

    def add_Terminate(self): # -> 
        """ add_Terminate(self: ClassClass, : _DummyEvents_TerminateEventHandler) """
        ...

    def remove_Initialize(self): # -> 
        """ remove_Initialize(self: ClassClass, : _DummyEvents_InitializeEventHandler) """
        ...

    def remove_Terminate(self): # -> 
        """ remove_Terminate(self: ClassClass, : _DummyEvents_TerminateEventHandler) """
        ...

    Initialize = ...
    Terminate = ...


class _CurrentData: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AllDatabaseDiagrams(self) -> AllObjects:
        """ Get: AllDatabaseDiagrams(self: _CurrentData) -> AllObjects """
        ...

    @property
    def AllFunctions(self) -> AllObjects:
        """ Get: AllFunctions(self: _CurrentData) -> AllObjects """
        ...

    @property
    def AllQueries(self) -> AllObjects:
        """ Get: AllQueries(self: _CurrentData) -> AllObjects """
        ...

    @property
    def AllStoredProcedures(self) -> AllObjects:
        """ Get: AllStoredProcedures(self: _CurrentData) -> AllObjects """
        ...

    @property
    def AllTables(self) -> AllObjects:
        """ Get: AllTables(self: _CurrentData) -> AllObjects """
        ...

    @property
    def AllViews(self) -> AllObjects:
        """ Get: AllViews(self: _CurrentData) -> AllObjects """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CurrentData, dispid: int) -> bool """
        ...


class CodeData(_CurrentData): # skipped bases: <type 'object'>
    """ no doc """
    pass

class CodeDataClass(CodeData, __ComObject): # skipped bases: <type '_CurrentData'>, <type 'object'>
    """ CodeDataClass() """
    @property
    def AllDatabaseDiagrams(self) -> AllObjects:
        """ Get: AllDatabaseDiagrams(self: CodeDataClass) -> AllObjects """
        ...

    @property
    def AllFunctions(self) -> AllObjects:
        """ Get: AllFunctions(self: CodeDataClass) -> AllObjects """
        ...

    @property
    def AllQueries(self) -> AllObjects:
        """ Get: AllQueries(self: CodeDataClass) -> AllObjects """
        ...

    @property
    def AllStoredProcedures(self) -> AllObjects:
        """ Get: AllStoredProcedures(self: CodeDataClass) -> AllObjects """
        ...

    @property
    def AllTables(self) -> AllObjects:
        """ Get: AllTables(self: CodeDataClass) -> AllObjects """
        ...

    @property
    def AllViews(self) -> AllObjects:
        """ Get: AllViews(self: CodeDataClass) -> AllObjects """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CodeDataClass, dispid: int) -> bool """
        ...


class _CurrentProject: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AccessConnection(self) -> Connection:
        """ Get: AccessConnection(self: _CurrentProject) -> Connection """
        ...

    @property
    def AllDataAccessPages(self) -> AllObjects:
        """ Get: AllDataAccessPages(self: _CurrentProject) -> AllObjects """
        ...

    @property
    def AllForms(self) -> AllObjects:
        """ Get: AllForms(self: _CurrentProject) -> AllObjects """
        ...

    @property
    def AllMacros(self) -> AllObjects:
        """ Get: AllMacros(self: _CurrentProject) -> AllObjects """
        ...

    @property
    def AllModules(self) -> AllObjects:
        """ Get: AllModules(self: _CurrentProject) -> AllObjects """
        ...

    @property
    def AllReports(self) -> AllObjects:
        """ Get: AllReports(self: _CurrentProject) -> AllObjects """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _CurrentProject) -> Application """
        ...

    @property
    def BaseConnectionString(self) -> str:
        """ Get: BaseConnectionString(self: _CurrentProject) -> str """
        ...

    @property
    def Connection(self) -> Connection:
        """ Get: Connection(self: _CurrentProject) -> Connection """
        ...

    @property
    def FileFormat(self) -> AcFileFormat:
        """ Get: FileFormat(self: _CurrentProject) -> AcFileFormat """
        ...

    @property
    def FullName(self) -> str:
        """ Get: FullName(self: _CurrentProject) -> str """
        ...

    @property
    def ImportExportSpecifications(self) -> ImportExportSpecifications:
        """ Get: ImportExportSpecifications(self: _CurrentProject) -> ImportExportSpecifications """
        ...

    @property
    def IsConnected(self) -> bool:
        """ Get: IsConnected(self: _CurrentProject) -> bool """
        ...

    @property
    def IsSQLBackend(self) -> bool:
        """ Get: IsSQLBackend(self: _CurrentProject) -> bool """
        ...

    @property
    def IsTrusted(self) -> bool:
        """ Get: IsTrusted(self: _CurrentProject) -> bool """
        ...

    @property
    def IsWeb(self) -> bool:
        """ Get: IsWeb(self: _CurrentProject) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: _CurrentProject) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _CurrentProject) -> object """
        ...

    @property
    def Path(self) -> str:
        """ Get: Path(self: _CurrentProject) -> str """
        ...

    @property
    def ProjectType(self) -> AcProjectType:
        """ Get: ProjectType(self: _CurrentProject) -> AcProjectType """
        ...

    @property
    def Properties(self) -> AccessObjectProperties:
        """ Get: Properties(self: _CurrentProject) -> AccessObjectProperties """
        ...

    @property
    def RemovePersonalInformation(self) -> bool:
        """
        Get: RemovePersonalInformation(self: _CurrentProject) -> bool
        Set: RemovePersonalInformation(self: _CurrentProject) = value
        """
        ...

    @property
    def Resources(self) -> SharedResources:
        """ Get: Resources(self: _CurrentProject) -> SharedResources """
        ...

    @property
    def WebSite(self) -> str:
        """ Get: WebSite(self: _CurrentProject) -> str """
        ...


    def AddSharedImage(self, SharedImageName:str, FileName:str): # -> 
        """ AddSharedImage(self: _CurrentProject, SharedImageName: str, FileName: str) """
        ...

    def CloseConnection(self): # -> 
        """ CloseConnection(self: _CurrentProject) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CurrentProject, dispid: int) -> bool """
        ...

    def OpenConnection(self, BaseConnectionString:object, UserID:object, Password:object): # -> 
        """ OpenConnection(self: _CurrentProject, BaseConnectionString: object, UserID: object, Password: object) """
        ...

    def UpdateDependencyInfo(self): # -> 
        """ UpdateDependencyInfo(self: _CurrentProject) """
        ...


class CodeProject(_CurrentProject): # skipped bases: <type 'object'>
    """ no doc """
    pass

class CodeProjectClass(CodeProject, __ComObject): # skipped bases: <type '_CurrentProject'>, <type 'object'>
    """ CodeProjectClass() """
    @property
    def AccessConnection(self) -> Connection:
        """ Get: AccessConnection(self: CodeProjectClass) -> Connection """
        ...

    @property
    def AllDataAccessPages(self) -> AllObjects:
        """ Get: AllDataAccessPages(self: CodeProjectClass) -> AllObjects """
        ...

    @property
    def AllForms(self) -> AllObjects:
        """ Get: AllForms(self: CodeProjectClass) -> AllObjects """
        ...

    @property
    def AllMacros(self) -> AllObjects:
        """ Get: AllMacros(self: CodeProjectClass) -> AllObjects """
        ...

    @property
    def AllModules(self) -> AllObjects:
        """ Get: AllModules(self: CodeProjectClass) -> AllObjects """
        ...

    @property
    def AllReports(self) -> AllObjects:
        """ Get: AllReports(self: CodeProjectClass) -> AllObjects """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: CodeProjectClass) -> Application """
        ...

    @property
    def BaseConnectionString(self) -> str:
        """ Get: BaseConnectionString(self: CodeProjectClass) -> str """
        ...

    @property
    def Connection(self) -> Connection:
        """ Get: Connection(self: CodeProjectClass) -> Connection """
        ...

    @property
    def FileFormat(self) -> AcFileFormat:
        """ Get: FileFormat(self: CodeProjectClass) -> AcFileFormat """
        ...

    @property
    def FullName(self) -> str:
        """ Get: FullName(self: CodeProjectClass) -> str """
        ...

    @property
    def ImportExportSpecifications(self) -> ImportExportSpecifications:
        """ Get: ImportExportSpecifications(self: CodeProjectClass) -> ImportExportSpecifications """
        ...

    @property
    def IsConnected(self) -> bool:
        """ Get: IsConnected(self: CodeProjectClass) -> bool """
        ...

    @property
    def IsSQLBackend(self) -> bool:
        """ Get: IsSQLBackend(self: CodeProjectClass) -> bool """
        ...

    @property
    def IsTrusted(self) -> bool:
        """ Get: IsTrusted(self: CodeProjectClass) -> bool """
        ...

    @property
    def IsWeb(self) -> bool:
        """ Get: IsWeb(self: CodeProjectClass) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: CodeProjectClass) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: CodeProjectClass) -> object """
        ...

    @property
    def Path(self) -> str:
        """ Get: Path(self: CodeProjectClass) -> str """
        ...

    @property
    def ProjectType(self) -> AcProjectType:
        """ Get: ProjectType(self: CodeProjectClass) -> AcProjectType """
        ...

    @property
    def Properties(self) -> AccessObjectProperties:
        """ Get: Properties(self: CodeProjectClass) -> AccessObjectProperties """
        ...

    @property
    def RemovePersonalInformation(self) -> bool:
        """
        Get: RemovePersonalInformation(self: CodeProjectClass) -> bool
        Set: RemovePersonalInformation(self: CodeProjectClass) = value
        """
        ...

    @property
    def Resources(self) -> SharedResources:
        """ Get: Resources(self: CodeProjectClass) -> SharedResources """
        ...

    @property
    def WebSite(self) -> str:
        """ Get: WebSite(self: CodeProjectClass) -> str """
        ...


    def AddSharedImage(self, SharedImageName:str, FileName:str): # -> 
        """ AddSharedImage(self: CodeProjectClass, SharedImageName: str, FileName: str) """
        ...

    def CloseConnection(self): # -> 
        """ CloseConnection(self: CodeProjectClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CodeProjectClass, dispid: int) -> bool """
        ...

    def OpenConnection(self, BaseConnectionString:object, UserID:object, Password:object): # -> 
        """ OpenConnection(self: CodeProjectClass, BaseConnectionString: object, UserID: object, Password: object) """
        ...

    def UpdateDependencyInfo(self): # -> 
        """ UpdateDependencyInfo(self: CodeProjectClass) """
        ...


class DispComboBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispComboBoxEvents_Event, : DispComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispComboBoxEvents_Event, : DispComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispComboBoxEvents_Event, : DispComboBoxEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: DispComboBoxEvents_Event, : DispComboBoxEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispComboBoxEvents_Event, : DispComboBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispComboBoxEvents_Event, : DispComboBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispComboBoxEvents_Event, : DispComboBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseUpEventHandler) """
        ...

    def add_NotInList(self): # -> 
        """ add_NotInList(self: DispComboBoxEvents_Event, : DispComboBoxEvents_NotInListEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: DispComboBoxEvents_Event, : DispComboBoxEvents_UndoEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispComboBoxEvents_Event, : DispComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispComboBoxEvents_Event, : DispComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispComboBoxEvents_Event, : DispComboBoxEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: DispComboBoxEvents_Event, : DispComboBoxEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispComboBoxEvents_Event, : DispComboBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispComboBoxEvents_Event, : DispComboBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispComboBoxEvents_Event, : DispComboBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispComboBoxEvents_Event, : DispComboBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispComboBoxEvents_Event, : DispComboBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispComboBoxEvents_Event, : DispComboBoxEvents_MouseUpEventHandler) """
        ...

    def remove_NotInList(self): # -> 
        """ remove_NotInList(self: DispComboBoxEvents_Event, : DispComboBoxEvents_NotInListEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: DispComboBoxEvents_Event, : DispComboBoxEvents_UndoEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NotInList = ...
    Undo = ...


class _Combobox(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _Combobox) -> bool
        Set: AddColon(self: _Combobox) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Combobox) -> str
        Set: AfterUpdate(self: _Combobox) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _Combobox) -> str
        Set: AfterUpdateMacro(self: _Combobox) = value
        """
        ...

    @property
    def AllowAutoCorrect(self) -> bool:
        """
        Get: AllowAutoCorrect(self: _Combobox) -> bool
        Set: AllowAutoCorrect(self: _Combobox) = value
        """
        ...

    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: _Combobox) -> Byte
        Set: AllowedText(self: _Combobox) = value
        """
        ...

    @property
    def AllowValueListEdits(self) -> bool:
        """
        Get: AllowValueListEdits(self: _Combobox) -> bool
        Set: AllowValueListEdits(self: _Combobox) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Combobox) -> Application """
        ...

    @property
    def AutoExpand(self) -> bool:
        """
        Get: AutoExpand(self: _Combobox) -> bool
        Set: AutoExpand(self: _Combobox) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _Combobox) -> bool
        Set: AutoLabel(self: _Combobox) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Combobox) -> int
        Set: BackColor(self: _Combobox) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Combobox) -> Single
        Set: BackShade(self: _Combobox) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Combobox) -> Byte
        Set: BackStyle(self: _Combobox) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Combobox) -> int
        Set: BackThemeColorIndex(self: _Combobox) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Combobox) -> Single
        Set: BackTint(self: _Combobox) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Combobox) -> str
        Set: BeforeUpdate(self: _Combobox) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _Combobox) -> str
        Set: BeforeUpdateMacro(self: _Combobox) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Combobox) -> int
        Set: BorderColor(self: _Combobox) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Combobox) -> Byte
        Set: BorderLineStyle(self: _Combobox) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Combobox) -> Single
        Set: BorderShade(self: _Combobox) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Combobox) -> Byte
        Set: BorderStyle(self: _Combobox) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Combobox) -> int
        Set: BorderThemeColorIndex(self: _Combobox) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Combobox) -> Single
        Set: BorderTint(self: _Combobox) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Combobox) -> Byte
        Set: BorderWidth(self: _Combobox) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: _Combobox) -> Int16
        Set: BottomMargin(self: _Combobox) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Combobox) -> Int16
        Set: BottomPadding(self: _Combobox) = value
        """
        ...

    @property
    def BoundColumn(self) -> int:
        """
        Get: BoundColumn(self: _Combobox) -> int
        Set: BoundColumn(self: _Combobox) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _Combobox) -> bool
        Set: CanGrow(self: _Combobox) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _Combobox) -> bool
        Set: CanShrink(self: _Combobox) = value
        """
        ...

    @property
    def Coltyp(self) -> int:
        """
        Get: Coltyp(self: _Combobox) -> int
        Set: Coltyp(self: _Combobox) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: _Combobox) -> Int16
        Set: ColumnCount(self: _Combobox) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: _Combobox) -> bool
        Set: ColumnHeads(self: _Combobox) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _Combobox) -> bool
        Set: ColumnHidden(self: _Combobox) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _Combobox) -> Int16
        Set: ColumnOrder(self: _Combobox) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _Combobox) -> Int16
        Set: ColumnWidth(self: _Combobox) = value
        """
        ...

    @property
    def ColumnWidths(self) -> str:
        """
        Get: ColumnWidths(self: _Combobox) -> str
        Set: ColumnWidths(self: _Combobox) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Combobox) -> str
        Set: ControlName(self: _Combobox) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Combobox) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _Combobox) -> str
        Set: ControlSource(self: _Combobox) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Combobox) -> str
        Set: ControlTipText(self: _Combobox) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Combobox) -> Byte
        Set: ControlType(self: _Combobox) = value
        """
        ...

    @property
    def DecimalPlaces(self) -> Byte:
        """
        Get: DecimalPlaces(self: _Combobox) -> Byte
        Set: DecimalPlaces(self: _Combobox) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _Combobox) -> str
        Set: DefaultValue(self: _Combobox) = value
        """
        ...

    @property
    def DisplayAsHyperlink(self) -> AcDisplayAsHyperlink:
        """
        Get: DisplayAsHyperlink(self: _Combobox) -> AcDisplayAsHyperlink
        Set: DisplayAsHyperlink(self: _Combobox) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Combobox) -> Byte
        Set: DisplayWhen(self: _Combobox) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _Combobox) -> bool
        Set: Enabled(self: _Combobox) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Combobox) -> str
        Set: EventProcPrefix(self: _Combobox) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Combobox) -> Int16
        Set: FontBold(self: _Combobox) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _Combobox) -> bool
        Set: FontItalic(self: _Combobox) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Combobox) -> str
        Set: FontName(self: _Combobox) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Combobox) -> Int16
        Set: FontSize(self: _Combobox) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _Combobox) -> bool
        Set: FontUnderline(self: _Combobox) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _Combobox) -> Int16
        Set: FontWeight(self: _Combobox) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Combobox) -> int
        Set: ForeColor(self: _Combobox) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _Combobox) -> Single
        Set: ForeShade(self: _Combobox) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _Combobox) -> int
        Set: ForeThemeColorIndex(self: _Combobox) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _Combobox) -> Single
        Set: ForeTint(self: _Combobox) = value
        """
        ...

    @property
    def Format(self) -> str:
        """
        Get: Format(self: _Combobox) -> str
        Set: Format(self: _Combobox) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: _Combobox) -> FormatConditions """
        ...

    @property
    def FormatPictureText(self) -> str:
        """
        Get: FormatPictureText(self: _Combobox) -> str
        Set: FormatPictureText(self: _Combobox) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Combobox) -> int
        Set: GridlineColor(self: _Combobox) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Combobox) -> Single
        Set: GridlineShade(self: _Combobox) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Combobox) -> Byte
        Set: GridlineStyleBottom(self: _Combobox) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Combobox) -> Byte
        Set: GridlineStyleLeft(self: _Combobox) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Combobox) -> Byte
        Set: GridlineStyleRight(self: _Combobox) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Combobox) -> Byte
        Set: GridlineStyleTop(self: _Combobox) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Combobox) -> int
        Set: GridlineThemeColorIndex(self: _Combobox) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Combobox) -> Single
        Set: GridlineTint(self: _Combobox) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Combobox) -> Byte
        Set: GridlineWidthBottom(self: _Combobox) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Combobox) -> Byte
        Set: GridlineWidthLeft(self: _Combobox) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Combobox) -> Byte
        Set: GridlineWidthRight(self: _Combobox) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Combobox) -> Byte
        Set: GridlineWidthTop(self: _Combobox) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Combobox) -> Int16
        Set: Height(self: _Combobox) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Combobox) -> int
        Set: HelpContextId(self: _Combobox) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _Combobox) -> bool
        Set: HideDuplicates(self: _Combobox) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Combobox) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Combobox) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Combobox) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: _Combobox) -> bool
        Set: IMEHold(self: _Combobox) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: _Combobox) -> AcImeMode
        Set: IMEMode(self: _Combobox) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: _Combobox) -> AcImeSentenceMode
        Set: IMESentenceMode(self: _Combobox) = value
        """
        ...

    @property
    def InheritValueList(self) -> bool:
        """
        Get: InheritValueList(self: _Combobox) -> bool
        Set: InheritValueList(self: _Combobox) = value
        """
        ...

    @property
    def InputMask(self) -> str:
        """
        Get: InputMask(self: _Combobox) -> str
        Set: InputMask(self: _Combobox) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Combobox) -> bool
        Set: InSelection(self: _Combobox) = value
        """
        ...

    @property
    def IsHyperlink(self) -> bool:
        """
        Get: IsHyperlink(self: _Combobox) -> bool
        Set: IsHyperlink(self: _Combobox) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Combobox) -> bool
        Set: IsVisible(self: _Combobox) = value
        """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: _Combobox) -> _ItemsSelected """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: _Combobox) -> Byte
        Set: KeyboardLanguage(self: _Combobox) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _Combobox) -> Byte
        Set: LabelAlign(self: _Combobox) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _Combobox) -> Int16
        Set: LabelX(self: _Combobox) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _Combobox) -> Int16
        Set: LabelY(self: _Combobox) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Combobox) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Combobox) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Combobox) -> Int16
        Set: Left(self: _Combobox) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: _Combobox) -> Int16
        Set: LeftMargin(self: _Combobox) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Combobox) -> Int16
        Set: LeftPadding(self: _Combobox) = value
        """
        ...

    @property
    def LimitToList(self) -> bool:
        """
        Get: LimitToList(self: _Combobox) -> bool
        Set: LimitToList(self: _Combobox) = value
        """
        ...

    @property
    def ListCount(self) -> int:
        """
        Get: ListCount(self: _Combobox) -> int
        Set: ListCount(self: _Combobox) = value
        """
        ...

    @property
    def ListIndex(self) -> int:
        """
        Get: ListIndex(self: _Combobox) -> int
        Set: ListIndex(self: _Combobox) = value
        """
        ...

    @property
    def ListItemsEditForm(self) -> str:
        """
        Get: ListItemsEditForm(self: _Combobox) -> str
        Set: ListItemsEditForm(self: _Combobox) = value
        """
        ...

    @property
    def ListRows(self) -> Int16:
        """
        Get: ListRows(self: _Combobox) -> Int16
        Set: ListRows(self: _Combobox) = value
        """
        ...

    @property
    def ListWidth(self) -> str:
        """
        Get: ListWidth(self: _Combobox) -> str
        Set: ListWidth(self: _Combobox) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _Combobox) -> bool
        Set: Locked(self: _Combobox) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Combobox) -> str
        Set: Name(self: _Combobox) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _Combobox) -> Byte
        Set: NumeralShapes(self: _Combobox) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Combobox) -> Byte
        Set: OldBorderStyle(self: _Combobox) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Combobox) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: _Combobox) -> str
        Set: OnChange(self: _Combobox) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: _Combobox) -> str
        Set: OnChangeMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Combobox) -> str
        Set: OnClick(self: _Combobox) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Combobox) -> str
        Set: OnClickMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Combobox) -> str
        Set: OnDblClick(self: _Combobox) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Combobox) -> str
        Set: OnDblClickMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Combobox) -> str
        Set: OnDirty(self: _Combobox) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _Combobox) -> str
        Set: OnEnter(self: _Combobox) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _Combobox) -> str
        Set: OnEnterMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _Combobox) -> str
        Set: OnExit(self: _Combobox) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _Combobox) -> str
        Set: OnExitMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Combobox) -> str
        Set: OnGotFocus(self: _Combobox) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Combobox) -> str
        Set: OnGotFocusMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Combobox) -> str
        Set: OnKeyDown(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Combobox) -> str
        Set: OnKeyDownMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Combobox) -> str
        Set: OnKeyPress(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Combobox) -> str
        Set: OnKeyPressMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Combobox) -> str
        Set: OnKeyUp(self: _Combobox) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Combobox) -> str
        Set: OnKeyUpMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Combobox) -> str
        Set: OnLostFocus(self: _Combobox) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Combobox) -> str
        Set: OnLostFocusMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Combobox) -> str
        Set: OnMouseDown(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Combobox) -> str
        Set: OnMouseDownMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Combobox) -> str
        Set: OnMouseMove(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Combobox) -> str
        Set: OnMouseMoveMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Combobox) -> str
        Set: OnMouseUp(self: _Combobox) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Combobox) -> str
        Set: OnMouseUpMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnNotInList(self) -> str:
        """
        Get: OnNotInList(self: _Combobox) -> str
        Set: OnNotInList(self: _Combobox) = value
        """
        ...

    @property
    def OnNotInListMacro(self) -> str:
        """
        Get: OnNotInListMacro(self: _Combobox) -> str
        Set: OnNotInListMacro(self: _Combobox) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: _Combobox) -> str
        Set: OnUndo(self: _Combobox) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Combobox) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Combobox) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _Combobox) -> Byte
        Set: ReadingOrder(self: _Combobox) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Combobox) -> object
        Set: Recordset(self: _Combobox) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: _Combobox) -> Int16
        Set: RightMargin(self: _Combobox) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Combobox) -> Int16
        Set: RightPadding(self: _Combobox) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: _Combobox) -> str
        Set: RowSource(self: _Combobox) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: _Combobox) -> str
        Set: RowSourceType(self: _Combobox) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: _Combobox) -> Byte
        Set: ScrollBarAlign(self: _Combobox) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Combobox) -> Int16
        Set: Section(self: _Combobox) = value
        """
        ...

    @property
    def SelLength(self) -> Int16:
        """
        Get: SelLength(self: _Combobox) -> Int16
        Set: SelLength(self: _Combobox) = value
        """
        ...

    @property
    def SelStart(self) -> Int16:
        """
        Get: SelStart(self: _Combobox) -> Int16
        Set: SelStart(self: _Combobox) = value
        """
        ...

    @property
    def SelText(self) -> str:
        """
        Get: SelText(self: _Combobox) -> str
        Set: SelText(self: _Combobox) = value
        """
        ...

    @property
    def SeparatorCharacters(self) -> AcSeparatorCharacters:
        """
        Get: SeparatorCharacters(self: _Combobox) -> AcSeparatorCharacters
        Set: SeparatorCharacters(self: _Combobox) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Combobox) -> str
        Set: ShortcutMenuBar(self: _Combobox) = value
        """
        ...

    @property
    def ShowOnlyRowSourceValues(self) -> bool:
        """
        Get: ShowOnlyRowSourceValues(self: _Combobox) -> bool
        Set: ShowOnlyRowSourceValues(self: _Combobox) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _Combobox) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Combobox) -> Byte
        Set: SpecialEffect(self: _Combobox) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _Combobox) -> str
        Set: StatusBarText(self: _Combobox) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _Combobox) -> Int16
        Set: TabIndex(self: _Combobox) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _Combobox) -> bool
        Set: TabStop(self: _Combobox) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Combobox) -> str
        Set: Tag(self: _Combobox) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _Combobox) -> str
        Set: Target(self: _Combobox) = value
        """
        ...

    @property
    def Text(self) -> str:
        """
        Get: Text(self: _Combobox) -> str
        Set: Text(self: _Combobox) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: _Combobox) -> Byte
        Set: TextAlign(self: _Combobox) = value
        """
        ...

    @property
    def TextAlignGeneral(self) -> Int16:
        """
        Get: TextAlignGeneral(self: _Combobox) -> Int16
        Set: TextAlignGeneral(self: _Combobox) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _Combobox) -> Byte
        Set: TextFontCharSet(self: _Combobox) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _Combobox) -> int
        Set: ThemeFontIndex(self: _Combobox) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Combobox) -> Int16
        Set: Top(self: _Combobox) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: _Combobox) -> Int16
        Set: TopMargin(self: _Combobox) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Combobox) -> Int16
        Set: TopPadding(self: _Combobox) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _Combobox) -> str
        Set: ValidationRule(self: _Combobox) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _Combobox) -> str
        Set: ValidationText(self: _Combobox) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _Combobox) -> object
        Set: Value(self: _Combobox) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Combobox) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Combobox) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Combobox) -> bool
        Set: Visible(self: _Combobox) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Combobox) -> Int16
        Set: Width(self: _Combobox) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Combobox) -> str
        Set: _Name(self: _Combobox) = value
        """
        ...


    def AddItem(self, Item:str, Index:object): # -> 
        """ AddItem(self: _Combobox, Item: str, Index: object) """
        ...

    def Dropdown(self): # -> 
        """ Dropdown(self: _Combobox) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _Combobox) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Combobox, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Combobox, Left: object, Top: object, Width: object, Height: object) """
        ...

    def RemoveItem(self, Index:object): # -> 
        """ RemoveItem(self: _Combobox, Index: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Combobox) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Combobox) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Combobox) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Combobox) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Combobox, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class ComboBox(DispComboBoxEvents_Event, _Combobox): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class ComboBoxClass(_ComboBoxEvents_Event, ComboBox, __ComObject): # skipped bases: <type 'DispComboBoxEvents_Event'>, <type '_Combobox'>, <type 'IAccessible'>, <type 'object'>
    """ ComboBoxClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: ComboBoxClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: ComboBoxClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: ComboBoxClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: ComboBoxClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: ComboBoxClass) -> bool
        Set: AddColon(self: ComboBoxClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: ComboBoxClass) -> str
        Set: AfterUpdate(self: ComboBoxClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: ComboBoxClass) -> str
        Set: AfterUpdateMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def AllowAutoCorrect(self) -> bool:
        """
        Get: AllowAutoCorrect(self: ComboBoxClass) -> bool
        Set: AllowAutoCorrect(self: ComboBoxClass) = value
        """
        ...

    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: ComboBoxClass) -> Byte
        Set: AllowedText(self: ComboBoxClass) = value
        """
        ...

    @property
    def AllowValueListEdits(self) -> bool:
        """
        Get: AllowValueListEdits(self: ComboBoxClass) -> bool
        Set: AllowValueListEdits(self: ComboBoxClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ComboBoxClass) -> Application """
        ...

    @property
    def AutoExpand(self) -> bool:
        """
        Get: AutoExpand(self: ComboBoxClass) -> bool
        Set: AutoExpand(self: ComboBoxClass) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: ComboBoxClass) -> bool
        Set: AutoLabel(self: ComboBoxClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: ComboBoxClass) -> int
        Set: BackColor(self: ComboBoxClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: ComboBoxClass) -> Single
        Set: BackShade(self: ComboBoxClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: ComboBoxClass) -> Byte
        Set: BackStyle(self: ComboBoxClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: ComboBoxClass) -> int
        Set: BackThemeColorIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: ComboBoxClass) -> Single
        Set: BackTint(self: ComboBoxClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: ComboBoxClass) -> str
        Set: BeforeUpdate(self: ComboBoxClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: ComboBoxClass) -> str
        Set: BeforeUpdateMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: ComboBoxClass) -> int
        Set: BorderColor(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: ComboBoxClass) -> Byte
        Set: BorderLineStyle(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: ComboBoxClass) -> Single
        Set: BorderShade(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ComboBoxClass) -> Byte
        Set: BorderStyle(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: ComboBoxClass) -> int
        Set: BorderThemeColorIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: ComboBoxClass) -> Single
        Set: BorderTint(self: ComboBoxClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: ComboBoxClass) -> Byte
        Set: BorderWidth(self: ComboBoxClass) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: ComboBoxClass) -> Int16
        Set: BottomMargin(self: ComboBoxClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ComboBoxClass) -> Int16
        Set: BottomPadding(self: ComboBoxClass) = value
        """
        ...

    @property
    def BoundColumn(self) -> int:
        """
        Get: BoundColumn(self: ComboBoxClass) -> int
        Set: BoundColumn(self: ComboBoxClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: ComboBoxClass) -> bool
        Set: CanGrow(self: ComboBoxClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: ComboBoxClass) -> bool
        Set: CanShrink(self: ComboBoxClass) = value
        """
        ...

    @property
    def Coltyp(self) -> int:
        """
        Get: Coltyp(self: ComboBoxClass) -> int
        Set: Coltyp(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: ComboBoxClass) -> Int16
        Set: ColumnCount(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: ComboBoxClass) -> bool
        Set: ColumnHeads(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: ComboBoxClass) -> bool
        Set: ColumnHidden(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: ComboBoxClass) -> Int16
        Set: ColumnOrder(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: ComboBoxClass) -> Int16
        Set: ColumnWidth(self: ComboBoxClass) = value
        """
        ...

    @property
    def ColumnWidths(self) -> str:
        """
        Get: ColumnWidths(self: ComboBoxClass) -> str
        Set: ColumnWidths(self: ComboBoxClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: ComboBoxClass) -> str
        Set: ControlName(self: ComboBoxClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ComboBoxClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: ComboBoxClass) -> str
        Set: ControlSource(self: ComboBoxClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: ComboBoxClass) -> str
        Set: ControlTipText(self: ComboBoxClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: ComboBoxClass) -> Byte
        Set: ControlType(self: ComboBoxClass) = value
        """
        ...

    @property
    def DecimalPlaces(self) -> Byte:
        """
        Get: DecimalPlaces(self: ComboBoxClass) -> Byte
        Set: DecimalPlaces(self: ComboBoxClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: ComboBoxClass) -> str
        Set: DefaultValue(self: ComboBoxClass) = value
        """
        ...

    @property
    def DisplayAsHyperlink(self) -> AcDisplayAsHyperlink:
        """
        Get: DisplayAsHyperlink(self: ComboBoxClass) -> AcDisplayAsHyperlink
        Set: DisplayAsHyperlink(self: ComboBoxClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: ComboBoxClass) -> Byte
        Set: DisplayWhen(self: ComboBoxClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: ComboBoxClass) -> bool
        Set: Enabled(self: ComboBoxClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: ComboBoxClass) -> str
        Set: EventProcPrefix(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ComboBoxClass) -> Int16
        Set: FontBold(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: ComboBoxClass) -> bool
        Set: FontItalic(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ComboBoxClass) -> str
        Set: FontName(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ComboBoxClass) -> Int16
        Set: FontSize(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: ComboBoxClass) -> bool
        Set: FontUnderline(self: ComboBoxClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: ComboBoxClass) -> Int16
        Set: FontWeight(self: ComboBoxClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ComboBoxClass) -> int
        Set: ForeColor(self: ComboBoxClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: ComboBoxClass) -> Single
        Set: ForeShade(self: ComboBoxClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: ComboBoxClass) -> int
        Set: ForeThemeColorIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: ComboBoxClass) -> Single
        Set: ForeTint(self: ComboBoxClass) = value
        """
        ...

    @property
    def Format(self) -> str:
        """
        Get: Format(self: ComboBoxClass) -> str
        Set: Format(self: ComboBoxClass) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: ComboBoxClass) -> FormatConditions """
        ...

    @property
    def FormatPictureText(self) -> str:
        """
        Get: FormatPictureText(self: ComboBoxClass) -> str
        Set: FormatPictureText(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ComboBoxClass) -> int
        Set: GridlineColor(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: ComboBoxClass) -> Single
        Set: GridlineShade(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ComboBoxClass) -> Byte
        Set: GridlineStyleBottom(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ComboBoxClass) -> Byte
        Set: GridlineStyleLeft(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ComboBoxClass) -> Byte
        Set: GridlineStyleRight(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ComboBoxClass) -> Byte
        Set: GridlineStyleTop(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: ComboBoxClass) -> int
        Set: GridlineThemeColorIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: ComboBoxClass) -> Single
        Set: GridlineTint(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ComboBoxClass) -> Byte
        Set: GridlineWidthBottom(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ComboBoxClass) -> Byte
        Set: GridlineWidthLeft(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ComboBoxClass) -> Byte
        Set: GridlineWidthRight(self: ComboBoxClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ComboBoxClass) -> Byte
        Set: GridlineWidthTop(self: ComboBoxClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: ComboBoxClass) -> Int16
        Set: Height(self: ComboBoxClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ComboBoxClass) -> int
        Set: HelpContextId(self: ComboBoxClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: ComboBoxClass) -> bool
        Set: HideDuplicates(self: ComboBoxClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ComboBoxClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ComboBoxClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: ComboBoxClass) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: ComboBoxClass) -> bool
        Set: IMEHold(self: ComboBoxClass) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: ComboBoxClass) -> AcImeMode
        Set: IMEMode(self: ComboBoxClass) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: ComboBoxClass) -> AcImeSentenceMode
        Set: IMESentenceMode(self: ComboBoxClass) = value
        """
        ...

    @property
    def InheritValueList(self) -> bool:
        """
        Get: InheritValueList(self: ComboBoxClass) -> bool
        Set: InheritValueList(self: ComboBoxClass) = value
        """
        ...

    @property
    def InputMask(self) -> str:
        """
        Get: InputMask(self: ComboBoxClass) -> str
        Set: InputMask(self: ComboBoxClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: ComboBoxClass) -> bool
        Set: InSelection(self: ComboBoxClass) = value
        """
        ...

    @property
    def IsHyperlink(self) -> bool:
        """
        Get: IsHyperlink(self: ComboBoxClass) -> bool
        Set: IsHyperlink(self: ComboBoxClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: ComboBoxClass) -> bool
        Set: IsVisible(self: ComboBoxClass) = value
        """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: ComboBoxClass) -> _ItemsSelected """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: ComboBoxClass) -> Byte
        Set: KeyboardLanguage(self: ComboBoxClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: ComboBoxClass) -> Byte
        Set: LabelAlign(self: ComboBoxClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: ComboBoxClass) -> Int16
        Set: LabelX(self: ComboBoxClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: ComboBoxClass) -> Int16
        Set: LabelY(self: ComboBoxClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ComboBoxClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ComboBoxClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: ComboBoxClass) -> Int16
        Set: Left(self: ComboBoxClass) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: ComboBoxClass) -> Int16
        Set: LeftMargin(self: ComboBoxClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ComboBoxClass) -> Int16
        Set: LeftPadding(self: ComboBoxClass) = value
        """
        ...

    @property
    def LimitToList(self) -> bool:
        """
        Get: LimitToList(self: ComboBoxClass) -> bool
        Set: LimitToList(self: ComboBoxClass) = value
        """
        ...

    @property
    def ListCount(self) -> int:
        """
        Get: ListCount(self: ComboBoxClass) -> int
        Set: ListCount(self: ComboBoxClass) = value
        """
        ...

    @property
    def ListIndex(self) -> int:
        """
        Get: ListIndex(self: ComboBoxClass) -> int
        Set: ListIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def ListItemsEditForm(self) -> str:
        """
        Get: ListItemsEditForm(self: ComboBoxClass) -> str
        Set: ListItemsEditForm(self: ComboBoxClass) = value
        """
        ...

    @property
    def ListRows(self) -> Int16:
        """
        Get: ListRows(self: ComboBoxClass) -> Int16
        Set: ListRows(self: ComboBoxClass) = value
        """
        ...

    @property
    def ListWidth(self) -> str:
        """
        Get: ListWidth(self: ComboBoxClass) -> str
        Set: ListWidth(self: ComboBoxClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: ComboBoxClass) -> bool
        Set: Locked(self: ComboBoxClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ComboBoxClass) -> str
        Set: Name(self: ComboBoxClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: ComboBoxClass) -> Byte
        Set: NumeralShapes(self: ComboBoxClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: ComboBoxClass) -> Byte
        Set: OldBorderStyle(self: ComboBoxClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ComboBoxClass) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: ComboBoxClass) -> str
        Set: OnChange(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: ComboBoxClass) -> str
        Set: OnChangeMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ComboBoxClass) -> str
        Set: OnClick(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ComboBoxClass) -> str
        Set: OnClickMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ComboBoxClass) -> str
        Set: OnDblClick(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ComboBoxClass) -> str
        Set: OnDblClickMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: ComboBoxClass) -> str
        Set: OnDirty(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: ComboBoxClass) -> str
        Set: OnEnter(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: ComboBoxClass) -> str
        Set: OnEnterMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: ComboBoxClass) -> str
        Set: OnExit(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: ComboBoxClass) -> str
        Set: OnExitMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: ComboBoxClass) -> str
        Set: OnGotFocus(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: ComboBoxClass) -> str
        Set: OnGotFocusMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: ComboBoxClass) -> str
        Set: OnKeyDown(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: ComboBoxClass) -> str
        Set: OnKeyDownMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: ComboBoxClass) -> str
        Set: OnKeyPress(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: ComboBoxClass) -> str
        Set: OnKeyPressMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: ComboBoxClass) -> str
        Set: OnKeyUp(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: ComboBoxClass) -> str
        Set: OnKeyUpMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: ComboBoxClass) -> str
        Set: OnLostFocus(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: ComboBoxClass) -> str
        Set: OnLostFocusMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ComboBoxClass) -> str
        Set: OnMouseDown(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ComboBoxClass) -> str
        Set: OnMouseDownMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ComboBoxClass) -> str
        Set: OnMouseMove(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ComboBoxClass) -> str
        Set: OnMouseMoveMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ComboBoxClass) -> str
        Set: OnMouseUp(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ComboBoxClass) -> str
        Set: OnMouseUpMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnNotInList(self) -> str:
        """
        Get: OnNotInList(self: ComboBoxClass) -> str
        Set: OnNotInList(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnNotInListMacro(self) -> str:
        """
        Get: OnNotInListMacro(self: ComboBoxClass) -> str
        Set: OnNotInListMacro(self: ComboBoxClass) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: ComboBoxClass) -> str
        Set: OnUndo(self: ComboBoxClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ComboBoxClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ComboBoxClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: ComboBoxClass) -> Byte
        Set: ReadingOrder(self: ComboBoxClass) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: ComboBoxClass) -> object
        Set: Recordset(self: ComboBoxClass) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: ComboBoxClass) -> Int16
        Set: RightMargin(self: ComboBoxClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ComboBoxClass) -> Int16
        Set: RightPadding(self: ComboBoxClass) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: ComboBoxClass) -> str
        Set: RowSource(self: ComboBoxClass) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: ComboBoxClass) -> str
        Set: RowSourceType(self: ComboBoxClass) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: ComboBoxClass) -> Byte
        Set: ScrollBarAlign(self: ComboBoxClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: ComboBoxClass) -> Int16
        Set: Section(self: ComboBoxClass) = value
        """
        ...

    @property
    def SelLength(self) -> Int16:
        """
        Get: SelLength(self: ComboBoxClass) -> Int16
        Set: SelLength(self: ComboBoxClass) = value
        """
        ...

    @property
    def SelStart(self) -> Int16:
        """
        Get: SelStart(self: ComboBoxClass) -> Int16
        Set: SelStart(self: ComboBoxClass) = value
        """
        ...

    @property
    def SelText(self) -> str:
        """
        Get: SelText(self: ComboBoxClass) -> str
        Set: SelText(self: ComboBoxClass) = value
        """
        ...

    @property
    def SeparatorCharacters(self) -> AcSeparatorCharacters:
        """
        Get: SeparatorCharacters(self: ComboBoxClass) -> AcSeparatorCharacters
        Set: SeparatorCharacters(self: ComboBoxClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ComboBoxClass) -> str
        Set: ShortcutMenuBar(self: ComboBoxClass) = value
        """
        ...

    @property
    def ShowOnlyRowSourceValues(self) -> bool:
        """
        Get: ShowOnlyRowSourceValues(self: ComboBoxClass) -> bool
        Set: ShowOnlyRowSourceValues(self: ComboBoxClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: ComboBoxClass) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: ComboBoxClass) -> Byte
        Set: SpecialEffect(self: ComboBoxClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: ComboBoxClass) -> str
        Set: StatusBarText(self: ComboBoxClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: ComboBoxClass) -> Int16
        Set: TabIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: ComboBoxClass) -> bool
        Set: TabStop(self: ComboBoxClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ComboBoxClass) -> str
        Set: Tag(self: ComboBoxClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: ComboBoxClass) -> str
        Set: Target(self: ComboBoxClass) = value
        """
        ...

    @property
    def Text(self) -> str:
        """
        Get: Text(self: ComboBoxClass) -> str
        Set: Text(self: ComboBoxClass) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: ComboBoxClass) -> Byte
        Set: TextAlign(self: ComboBoxClass) = value
        """
        ...

    @property
    def TextAlignGeneral(self) -> Int16:
        """
        Get: TextAlignGeneral(self: ComboBoxClass) -> Int16
        Set: TextAlignGeneral(self: ComboBoxClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: ComboBoxClass) -> Byte
        Set: TextFontCharSet(self: ComboBoxClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: ComboBoxClass) -> int
        Set: ThemeFontIndex(self: ComboBoxClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: ComboBoxClass) -> Int16
        Set: Top(self: ComboBoxClass) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: ComboBoxClass) -> Int16
        Set: TopMargin(self: ComboBoxClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ComboBoxClass) -> Int16
        Set: TopPadding(self: ComboBoxClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: ComboBoxClass) -> str
        Set: ValidationRule(self: ComboBoxClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: ComboBoxClass) -> str
        Set: ValidationText(self: ComboBoxClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: ComboBoxClass) -> object
        Set: Value(self: ComboBoxClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ComboBoxClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ComboBoxClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ComboBoxClass) -> bool
        Set: Visible(self: ComboBoxClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ComboBoxClass) -> Int16
        Set: Width(self: ComboBoxClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ComboBoxClass) -> str
        Set: _Name(self: ComboBoxClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: ComboBoxClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: ComboBoxClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: ComboBoxClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: ComboBoxClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: ComboBoxClass, flagsSelect: int, varChild: object) """
        ...

    def AddItem(self, Item:str, Index:object): # -> 
        """ AddItem(self: ComboBoxClass, Item: str, Index: object) """
        ...

    def Dropdown(self): # -> 
        """ Dropdown(self: ComboBoxClass) """
        ...

    def Goto(self): # -> 
        """ Goto(self: ComboBoxClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ComboBoxClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ComboBoxClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def RemoveItem(self, Index:object): # -> 
        """ RemoveItem(self: ComboBoxClass, Index: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ComboBoxClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ComboBoxClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ComboBoxClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: ComboBoxClass) """
        ...

    def _ComboBoxEvents_Event_add_AfterUpdate(self): # -> 
        """ _ComboBoxEvents_Event_add_AfterUpdate(self: ComboBoxClass, : _ComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_BeforeUpdate(self): # -> 
        """ _ComboBoxEvents_Event_add_BeforeUpdate(self: ComboBoxClass, : _ComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Change(self): # -> 
        """ _ComboBoxEvents_Event_add_Change(self: ComboBoxClass, : _ComboBoxEvents_ChangeEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Click(self): # -> 
        """ _ComboBoxEvents_Event_add_Click(self: ComboBoxClass, : _ComboBoxEvents_ClickEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_DblClick(self): # -> 
        """ _ComboBoxEvents_Event_add_DblClick(self: ComboBoxClass, : _ComboBoxEvents_DblClickEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Dirty(self): # -> 
        """ _ComboBoxEvents_Event_add_Dirty(self: ComboBoxClass, : _ComboBoxEvents_DirtyEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Enter(self): # -> 
        """ _ComboBoxEvents_Event_add_Enter(self: ComboBoxClass, : _ComboBoxEvents_EnterEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Exit(self): # -> 
        """ _ComboBoxEvents_Event_add_Exit(self: ComboBoxClass, : _ComboBoxEvents_ExitEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_GotFocus(self): # -> 
        """ _ComboBoxEvents_Event_add_GotFocus(self: ComboBoxClass, : _ComboBoxEvents_GotFocusEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_KeyDown(self): # -> 
        """ _ComboBoxEvents_Event_add_KeyDown(self: ComboBoxClass, : _ComboBoxEvents_KeyDownEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_KeyPress(self): # -> 
        """ _ComboBoxEvents_Event_add_KeyPress(self: ComboBoxClass, : _ComboBoxEvents_KeyPressEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_KeyUp(self): # -> 
        """ _ComboBoxEvents_Event_add_KeyUp(self: ComboBoxClass, : _ComboBoxEvents_KeyUpEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_LostFocus(self): # -> 
        """ _ComboBoxEvents_Event_add_LostFocus(self: ComboBoxClass, : _ComboBoxEvents_LostFocusEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_MouseDown(self): # -> 
        """ _ComboBoxEvents_Event_add_MouseDown(self: ComboBoxClass, : _ComboBoxEvents_MouseDownEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_MouseMove(self): # -> 
        """ _ComboBoxEvents_Event_add_MouseMove(self: ComboBoxClass, : _ComboBoxEvents_MouseMoveEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_MouseUp(self): # -> 
        """ _ComboBoxEvents_Event_add_MouseUp(self: ComboBoxClass, : _ComboBoxEvents_MouseUpEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_NotInList(self): # -> 
        """ _ComboBoxEvents_Event_add_NotInList(self: ComboBoxClass, : _ComboBoxEvents_NotInListEventHandler) """
        ...

    def _ComboBoxEvents_Event_add_Undo(self): # -> 
        """ _ComboBoxEvents_Event_add_Undo(self: ComboBoxClass, : _ComboBoxEvents_UndoEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_AfterUpdate(self): # -> 
        """ _ComboBoxEvents_Event_remove_AfterUpdate(self: ComboBoxClass, : _ComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _ComboBoxEvents_Event_remove_BeforeUpdate(self: ComboBoxClass, : _ComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Change(self): # -> 
        """ _ComboBoxEvents_Event_remove_Change(self: ComboBoxClass, : _ComboBoxEvents_ChangeEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Click(self): # -> 
        """ _ComboBoxEvents_Event_remove_Click(self: ComboBoxClass, : _ComboBoxEvents_ClickEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_DblClick(self): # -> 
        """ _ComboBoxEvents_Event_remove_DblClick(self: ComboBoxClass, : _ComboBoxEvents_DblClickEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Dirty(self): # -> 
        """ _ComboBoxEvents_Event_remove_Dirty(self: ComboBoxClass, : _ComboBoxEvents_DirtyEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Enter(self): # -> 
        """ _ComboBoxEvents_Event_remove_Enter(self: ComboBoxClass, : _ComboBoxEvents_EnterEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Exit(self): # -> 
        """ _ComboBoxEvents_Event_remove_Exit(self: ComboBoxClass, : _ComboBoxEvents_ExitEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_GotFocus(self): # -> 
        """ _ComboBoxEvents_Event_remove_GotFocus(self: ComboBoxClass, : _ComboBoxEvents_GotFocusEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_KeyDown(self): # -> 
        """ _ComboBoxEvents_Event_remove_KeyDown(self: ComboBoxClass, : _ComboBoxEvents_KeyDownEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_KeyPress(self): # -> 
        """ _ComboBoxEvents_Event_remove_KeyPress(self: ComboBoxClass, : _ComboBoxEvents_KeyPressEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_KeyUp(self): # -> 
        """ _ComboBoxEvents_Event_remove_KeyUp(self: ComboBoxClass, : _ComboBoxEvents_KeyUpEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_LostFocus(self): # -> 
        """ _ComboBoxEvents_Event_remove_LostFocus(self: ComboBoxClass, : _ComboBoxEvents_LostFocusEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_MouseDown(self): # -> 
        """ _ComboBoxEvents_Event_remove_MouseDown(self: ComboBoxClass, : _ComboBoxEvents_MouseDownEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_MouseMove(self): # -> 
        """ _ComboBoxEvents_Event_remove_MouseMove(self: ComboBoxClass, : _ComboBoxEvents_MouseMoveEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_MouseUp(self): # -> 
        """ _ComboBoxEvents_Event_remove_MouseUp(self: ComboBoxClass, : _ComboBoxEvents_MouseUpEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_NotInList(self): # -> 
        """ _ComboBoxEvents_Event_remove_NotInList(self: ComboBoxClass, : _ComboBoxEvents_NotInListEventHandler) """
        ...

    def _ComboBoxEvents_Event_remove_Undo(self): # -> 
        """ _ComboBoxEvents_Event_remove_Undo(self: ComboBoxClass, : _ComboBoxEvents_UndoEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ComboBoxClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DispComboBoxEvents_Event_AfterUpdate = ...
    DispComboBoxEvents_Event_BeforeUpdate = ...
    DispComboBoxEvents_Event_Undo = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NotInList = ...
    _ComboBoxEvents_Event_AfterUpdate = ...
    _ComboBoxEvents_Event_BeforeUpdate = ...
    _ComboBoxEvents_Event_Change = ...
    _ComboBoxEvents_Event_Click = ...
    _ComboBoxEvents_Event_DblClick = ...
    _ComboBoxEvents_Event_Dirty = ...
    _ComboBoxEvents_Event_Enter = ...
    _ComboBoxEvents_Event_Exit = ...
    _ComboBoxEvents_Event_GotFocus = ...
    _ComboBoxEvents_Event_KeyDown = ...
    _ComboBoxEvents_Event_KeyPress = ...
    _ComboBoxEvents_Event_KeyUp = ...
    _ComboBoxEvents_Event_LostFocus = ...
    _ComboBoxEvents_Event_MouseDown = ...
    _ComboBoxEvents_Event_MouseMove = ...
    _ComboBoxEvents_Event_MouseUp = ...
    _ComboBoxEvents_Event_NotInList = ...
    _ComboBoxEvents_Event_Undo = ...


class DispCommandButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispCommandButtonEvents_Event, : DispCommandButtonEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _CommandButton(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _CommandButton) -> bool
        Set: AddColon(self: _CommandButton) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _CommandButton) -> str
        Set: AfterUpdateMacro(self: _CommandButton) = value
        """
        ...

    @property
    def Alignment(self) -> Byte:
        """
        Get: Alignment(self: _CommandButton) -> Byte
        Set: Alignment(self: _CommandButton) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _CommandButton) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _CommandButton) -> bool
        Set: AutoLabel(self: _CommandButton) = value
        """
        ...

    @property
    def AutoRepeat(self) -> bool:
        """
        Get: AutoRepeat(self: _CommandButton) -> bool
        Set: AutoRepeat(self: _CommandButton) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _CommandButton) -> int
        Set: BackColor(self: _CommandButton) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _CommandButton) -> Single
        Set: BackShade(self: _CommandButton) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _CommandButton) -> Byte
        Set: BackStyle(self: _CommandButton) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _CommandButton) -> int
        Set: BackThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _CommandButton) -> Single
        Set: BackTint(self: _CommandButton) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _CommandButton) -> str
        Set: BeforeUpdateMacro(self: _CommandButton) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: _CommandButton) -> int
        Set: Bevel(self: _CommandButton) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _CommandButton) -> int
        Set: BorderColor(self: _CommandButton) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _CommandButton) -> Single
        Set: BorderShade(self: _CommandButton) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _CommandButton) -> Byte
        Set: BorderStyle(self: _CommandButton) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _CommandButton) -> int
        Set: BorderThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _CommandButton) -> Single
        Set: BorderTint(self: _CommandButton) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _CommandButton) -> Byte
        Set: BorderWidth(self: _CommandButton) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _CommandButton) -> Int16
        Set: BottomPadding(self: _CommandButton) = value
        """
        ...

    @property
    def Cancel(self) -> bool:
        """
        Get: Cancel(self: _CommandButton) -> bool
        Set: Cancel(self: _CommandButton) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _CommandButton) -> str
        Set: Caption(self: _CommandButton) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _CommandButton) -> str
        Set: ControlName(self: _CommandButton) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _CommandButton) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _CommandButton) -> str
        Set: ControlTipText(self: _CommandButton) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _CommandButton) -> Byte
        Set: ControlType(self: _CommandButton) = value
        """
        ...

    @property
    def CursorOnHover(self) -> AcCursorOnHover:
        """
        Get: CursorOnHover(self: _CommandButton) -> AcCursorOnHover
        Set: CursorOnHover(self: _CommandButton) = value
        """
        ...

    @property
    def Default(self) -> bool:
        """
        Get: Default(self: _CommandButton) -> bool
        Set: Default(self: _CommandButton) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _CommandButton) -> Byte
        Set: DisplayWhen(self: _CommandButton) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _CommandButton) -> bool
        Set: Enabled(self: _CommandButton) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _CommandButton) -> str
        Set: EventProcPrefix(self: _CommandButton) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _CommandButton) -> Int16
        Set: FontBold(self: _CommandButton) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _CommandButton) -> bool
        Set: FontItalic(self: _CommandButton) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _CommandButton) -> str
        Set: FontName(self: _CommandButton) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _CommandButton) -> Int16
        Set: FontSize(self: _CommandButton) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _CommandButton) -> bool
        Set: FontUnderline(self: _CommandButton) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _CommandButton) -> Int16
        Set: FontWeight(self: _CommandButton) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _CommandButton) -> int
        Set: ForeColor(self: _CommandButton) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _CommandButton) -> Single
        Set: ForeShade(self: _CommandButton) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _CommandButton) -> int
        Set: ForeThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _CommandButton) -> Single
        Set: ForeTint(self: _CommandButton) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: _CommandButton) -> int
        Set: Glow(self: _CommandButton) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: _CommandButton) -> int
        Set: Gradient(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _CommandButton) -> int
        Set: GridlineColor(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _CommandButton) -> Single
        Set: GridlineShade(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _CommandButton) -> Byte
        Set: GridlineStyleBottom(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _CommandButton) -> Byte
        Set: GridlineStyleLeft(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _CommandButton) -> Byte
        Set: GridlineStyleRight(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _CommandButton) -> Byte
        Set: GridlineStyleTop(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _CommandButton) -> int
        Set: GridlineThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _CommandButton) -> Single
        Set: GridlineTint(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _CommandButton) -> Byte
        Set: GridlineWidthBottom(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _CommandButton) -> Byte
        Set: GridlineWidthLeft(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _CommandButton) -> Byte
        Set: GridlineWidthRight(self: _CommandButton) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _CommandButton) -> Byte
        Set: GridlineWidthTop(self: _CommandButton) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _CommandButton) -> Int16
        Set: Height(self: _CommandButton) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _CommandButton) -> int
        Set: HelpContextId(self: _CommandButton) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _CommandButton) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _CommandButton) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: _CommandButton) -> int
        Set: HoverColor(self: _CommandButton) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: _CommandButton) -> int
        Set: HoverForeColor(self: _CommandButton) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: _CommandButton) -> Single
        Set: HoverForeShade(self: _CommandButton) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: _CommandButton) -> int
        Set: HoverForeThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: _CommandButton) -> Single
        Set: HoverForeTint(self: _CommandButton) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: _CommandButton) -> Single
        Set: HoverShade(self: _CommandButton) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: _CommandButton) -> int
        Set: HoverThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: _CommandButton) -> Single
        Set: HoverTint(self: _CommandButton) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _CommandButton) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: _CommandButton) -> str
        Set: HyperlinkAddress(self: _CommandButton) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: _CommandButton) -> str
        Set: HyperlinkSubAddress(self: _CommandButton) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _CommandButton) -> bool
        Set: InSelection(self: _CommandButton) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _CommandButton) -> bool
        Set: IsVisible(self: _CommandButton) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _CommandButton) -> Byte
        Set: LabelAlign(self: _CommandButton) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _CommandButton) -> Int16
        Set: LabelX(self: _CommandButton) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _CommandButton) -> Int16
        Set: LabelY(self: _CommandButton) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _CommandButton) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _CommandButton) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _CommandButton) -> Int16
        Set: Left(self: _CommandButton) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _CommandButton) -> Int16
        Set: LeftPadding(self: _CommandButton) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _CommandButton) -> str
        Set: Name(self: _CommandButton) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _CommandButton) -> object
        Set: ObjectPalette(self: _CommandButton) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _CommandButton) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _CommandButton) -> str
        Set: OnClick(self: _CommandButton) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _CommandButton) -> str
        Set: OnClickMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _CommandButton) -> str
        Set: OnDblClick(self: _CommandButton) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _CommandButton) -> str
        Set: OnDblClickMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _CommandButton) -> str
        Set: OnEnter(self: _CommandButton) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _CommandButton) -> str
        Set: OnEnterMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _CommandButton) -> str
        Set: OnExit(self: _CommandButton) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _CommandButton) -> str
        Set: OnExitMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _CommandButton) -> str
        Set: OnGotFocus(self: _CommandButton) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _CommandButton) -> str
        Set: OnGotFocusMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _CommandButton) -> str
        Set: OnKeyDown(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _CommandButton) -> str
        Set: OnKeyDownMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _CommandButton) -> str
        Set: OnKeyPress(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _CommandButton) -> str
        Set: OnKeyPressMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _CommandButton) -> str
        Set: OnKeyUp(self: _CommandButton) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _CommandButton) -> str
        Set: OnKeyUpMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _CommandButton) -> str
        Set: OnLostFocus(self: _CommandButton) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _CommandButton) -> str
        Set: OnLostFocusMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _CommandButton) -> str
        Set: OnMouseDown(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _CommandButton) -> str
        Set: OnMouseDownMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _CommandButton) -> str
        Set: OnMouseMove(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _CommandButton) -> str
        Set: OnMouseMoveMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _CommandButton) -> str
        Set: OnMouseUp(self: _CommandButton) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _CommandButton) -> str
        Set: OnMouseUpMacro(self: _CommandButton) = value
        """
        ...

    @property
    def OnPush(self) -> str:
        """
        Get: OnPush(self: _CommandButton) -> str
        Set: OnPush(self: _CommandButton) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _CommandButton) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _CommandButton) -> str
        Set: Picture(self: _CommandButton) = value
        """
        ...

    @property
    def PictureCaptionArrangement(self) -> AcPictureCaptionArrangement:
        """
        Get: PictureCaptionArrangement(self: _CommandButton) -> AcPictureCaptionArrangement
        Set: PictureCaptionArrangement(self: _CommandButton) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _CommandButton) -> object
        Set: PictureData(self: _CommandButton) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _CommandButton) -> Byte
        Set: PictureType(self: _CommandButton) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: _CommandButton) -> int
        Set: PressedColor(self: _CommandButton) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: _CommandButton) -> int
        Set: PressedForeColor(self: _CommandButton) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: _CommandButton) -> Single
        Set: PressedForeShade(self: _CommandButton) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: _CommandButton) -> int
        Set: PressedForeThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: _CommandButton) -> Single
        Set: PressedForeTint(self: _CommandButton) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: _CommandButton) -> Single
        Set: PressedShade(self: _CommandButton) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: _CommandButton) -> int
        Set: PressedThemeColorIndex(self: _CommandButton) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: _CommandButton) -> Single
        Set: PressedTint(self: _CommandButton) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _CommandButton) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: _CommandButton) -> int
        Set: QuickStyle(self: _CommandButton) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: _CommandButton) -> int
        Set: QuickStyleMask(self: _CommandButton) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _CommandButton) -> Byte
        Set: ReadingOrder(self: _CommandButton) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _CommandButton) -> Int16
        Set: RightPadding(self: _CommandButton) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _CommandButton) -> Int16
        Set: Section(self: _CommandButton) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: _CommandButton) -> int
        Set: Shadow(self: _CommandButton) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: _CommandButton) -> int
        Set: Shape(self: _CommandButton) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _CommandButton) -> str
        Set: ShortcutMenuBar(self: _CommandButton) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: _CommandButton) -> int
        Set: SoftEdges(self: _CommandButton) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _CommandButton) -> str
        Set: StatusBarText(self: _CommandButton) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _CommandButton) -> Int16
        Set: TabIndex(self: _CommandButton) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _CommandButton) -> bool
        Set: TabStop(self: _CommandButton) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _CommandButton) -> str
        Set: Tag(self: _CommandButton) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _CommandButton) -> str
        Set: Target(self: _CommandButton) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _CommandButton) -> Byte
        Set: TextFontCharSet(self: _CommandButton) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _CommandButton) -> int
        Set: ThemeFontIndex(self: _CommandButton) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _CommandButton) -> Int16
        Set: Top(self: _CommandButton) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _CommandButton) -> Int16
        Set: TopPadding(self: _CommandButton) = value
        """
        ...

    @property
    def Transparent(self) -> bool:
        """
        Get: Transparent(self: _CommandButton) -> bool
        Set: Transparent(self: _CommandButton) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: _CommandButton) -> bool
        Set: UseTheme(self: _CommandButton) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _CommandButton) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _CommandButton) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _CommandButton) -> bool
        Set: Visible(self: _CommandButton) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _CommandButton) -> Int16
        Set: Width(self: _CommandButton) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _CommandButton) -> str
        Set: _Name(self: _CommandButton) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _CommandButton) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CommandButton, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _CommandButton, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _CommandButton) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _CommandButton) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _CommandButton) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _CommandButton, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class CommandButton(DispCommandButtonEvents_Event, _CommandButton): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class CommandButtonClass(CommandButton, _CommandButtonEvents_Event, __ComObject): # skipped bases: <type 'DispCommandButtonEvents_Event'>, <type 'IAccessible'>, <type '_CommandButton'>, <type 'object'>
    """ CommandButtonClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: CommandButtonClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: CommandButtonClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: CommandButtonClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: CommandButtonClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: CommandButtonClass) -> bool
        Set: AddColon(self: CommandButtonClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: CommandButtonClass) -> str
        Set: AfterUpdateMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def Alignment(self) -> Byte:
        """
        Get: Alignment(self: CommandButtonClass) -> Byte
        Set: Alignment(self: CommandButtonClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: CommandButtonClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: CommandButtonClass) -> bool
        Set: AutoLabel(self: CommandButtonClass) = value
        """
        ...

    @property
    def AutoRepeat(self) -> bool:
        """
        Get: AutoRepeat(self: CommandButtonClass) -> bool
        Set: AutoRepeat(self: CommandButtonClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: CommandButtonClass) -> int
        Set: BackColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: CommandButtonClass) -> Single
        Set: BackShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: CommandButtonClass) -> Byte
        Set: BackStyle(self: CommandButtonClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: CommandButtonClass) -> int
        Set: BackThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: CommandButtonClass) -> Single
        Set: BackTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: CommandButtonClass) -> str
        Set: BeforeUpdateMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: CommandButtonClass) -> int
        Set: Bevel(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: CommandButtonClass) -> int
        Set: BorderColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: CommandButtonClass) -> Single
        Set: BorderShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: CommandButtonClass) -> Byte
        Set: BorderStyle(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: CommandButtonClass) -> int
        Set: BorderThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: CommandButtonClass) -> Single
        Set: BorderTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: CommandButtonClass) -> Byte
        Set: BorderWidth(self: CommandButtonClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: CommandButtonClass) -> Int16
        Set: BottomPadding(self: CommandButtonClass) = value
        """
        ...

    @property
    def Cancel(self) -> bool:
        """
        Get: Cancel(self: CommandButtonClass) -> bool
        Set: Cancel(self: CommandButtonClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: CommandButtonClass) -> str
        Set: Caption(self: CommandButtonClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: CommandButtonClass) -> str
        Set: ControlName(self: CommandButtonClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: CommandButtonClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: CommandButtonClass) -> str
        Set: ControlTipText(self: CommandButtonClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: CommandButtonClass) -> Byte
        Set: ControlType(self: CommandButtonClass) = value
        """
        ...

    @property
    def CursorOnHover(self) -> AcCursorOnHover:
        """
        Get: CursorOnHover(self: CommandButtonClass) -> AcCursorOnHover
        Set: CursorOnHover(self: CommandButtonClass) = value
        """
        ...

    @property
    def Default(self) -> bool:
        """
        Get: Default(self: CommandButtonClass) -> bool
        Set: Default(self: CommandButtonClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: CommandButtonClass) -> Byte
        Set: DisplayWhen(self: CommandButtonClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: CommandButtonClass) -> bool
        Set: Enabled(self: CommandButtonClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: CommandButtonClass) -> str
        Set: EventProcPrefix(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: CommandButtonClass) -> Int16
        Set: FontBold(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: CommandButtonClass) -> bool
        Set: FontItalic(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: CommandButtonClass) -> str
        Set: FontName(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: CommandButtonClass) -> Int16
        Set: FontSize(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: CommandButtonClass) -> bool
        Set: FontUnderline(self: CommandButtonClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: CommandButtonClass) -> Int16
        Set: FontWeight(self: CommandButtonClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: CommandButtonClass) -> int
        Set: ForeColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: CommandButtonClass) -> Single
        Set: ForeShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: CommandButtonClass) -> int
        Set: ForeThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: CommandButtonClass) -> Single
        Set: ForeTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: CommandButtonClass) -> int
        Set: Glow(self: CommandButtonClass) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: CommandButtonClass) -> int
        Set: Gradient(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: CommandButtonClass) -> int
        Set: GridlineColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: CommandButtonClass) -> Single
        Set: GridlineShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: CommandButtonClass) -> Byte
        Set: GridlineStyleBottom(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: CommandButtonClass) -> Byte
        Set: GridlineStyleLeft(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: CommandButtonClass) -> Byte
        Set: GridlineStyleRight(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: CommandButtonClass) -> Byte
        Set: GridlineStyleTop(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: CommandButtonClass) -> int
        Set: GridlineThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: CommandButtonClass) -> Single
        Set: GridlineTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: CommandButtonClass) -> Byte
        Set: GridlineWidthBottom(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: CommandButtonClass) -> Byte
        Set: GridlineWidthLeft(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: CommandButtonClass) -> Byte
        Set: GridlineWidthRight(self: CommandButtonClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: CommandButtonClass) -> Byte
        Set: GridlineWidthTop(self: CommandButtonClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: CommandButtonClass) -> Int16
        Set: Height(self: CommandButtonClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: CommandButtonClass) -> int
        Set: HelpContextId(self: CommandButtonClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: CommandButtonClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: CommandButtonClass) -> int
        Set: HoverColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: CommandButtonClass) -> int
        Set: HoverForeColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: CommandButtonClass) -> Single
        Set: HoverForeShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: CommandButtonClass) -> int
        Set: HoverForeThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: CommandButtonClass) -> Single
        Set: HoverForeTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: CommandButtonClass) -> Single
        Set: HoverShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: CommandButtonClass) -> int
        Set: HoverThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: CommandButtonClass) -> Single
        Set: HoverTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: CommandButtonClass) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: CommandButtonClass) -> str
        Set: HyperlinkAddress(self: CommandButtonClass) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: CommandButtonClass) -> str
        Set: HyperlinkSubAddress(self: CommandButtonClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: CommandButtonClass) -> bool
        Set: InSelection(self: CommandButtonClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: CommandButtonClass) -> bool
        Set: IsVisible(self: CommandButtonClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: CommandButtonClass) -> Byte
        Set: LabelAlign(self: CommandButtonClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: CommandButtonClass) -> Int16
        Set: LabelX(self: CommandButtonClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: CommandButtonClass) -> Int16
        Set: LabelY(self: CommandButtonClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: CommandButtonClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: CommandButtonClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: CommandButtonClass) -> Int16
        Set: Left(self: CommandButtonClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: CommandButtonClass) -> Int16
        Set: LeftPadding(self: CommandButtonClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: CommandButtonClass) -> str
        Set: Name(self: CommandButtonClass) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: CommandButtonClass) -> object
        Set: ObjectPalette(self: CommandButtonClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: CommandButtonClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: CommandButtonClass) -> str
        Set: OnClick(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: CommandButtonClass) -> str
        Set: OnClickMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: CommandButtonClass) -> str
        Set: OnDblClick(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: CommandButtonClass) -> str
        Set: OnDblClickMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: CommandButtonClass) -> str
        Set: OnEnter(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: CommandButtonClass) -> str
        Set: OnEnterMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: CommandButtonClass) -> str
        Set: OnExit(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: CommandButtonClass) -> str
        Set: OnExitMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: CommandButtonClass) -> str
        Set: OnGotFocus(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: CommandButtonClass) -> str
        Set: OnGotFocusMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: CommandButtonClass) -> str
        Set: OnKeyDown(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: CommandButtonClass) -> str
        Set: OnKeyDownMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: CommandButtonClass) -> str
        Set: OnKeyPress(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: CommandButtonClass) -> str
        Set: OnKeyPressMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: CommandButtonClass) -> str
        Set: OnKeyUp(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: CommandButtonClass) -> str
        Set: OnKeyUpMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: CommandButtonClass) -> str
        Set: OnLostFocus(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: CommandButtonClass) -> str
        Set: OnLostFocusMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: CommandButtonClass) -> str
        Set: OnMouseDown(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: CommandButtonClass) -> str
        Set: OnMouseDownMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: CommandButtonClass) -> str
        Set: OnMouseMove(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: CommandButtonClass) -> str
        Set: OnMouseMoveMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: CommandButtonClass) -> str
        Set: OnMouseUp(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: CommandButtonClass) -> str
        Set: OnMouseUpMacro(self: CommandButtonClass) = value
        """
        ...

    @property
    def OnPush(self) -> str:
        """
        Get: OnPush(self: CommandButtonClass) -> str
        Set: OnPush(self: CommandButtonClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: CommandButtonClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: CommandButtonClass) -> str
        Set: Picture(self: CommandButtonClass) = value
        """
        ...

    @property
    def PictureCaptionArrangement(self) -> AcPictureCaptionArrangement:
        """
        Get: PictureCaptionArrangement(self: CommandButtonClass) -> AcPictureCaptionArrangement
        Set: PictureCaptionArrangement(self: CommandButtonClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: CommandButtonClass) -> object
        Set: PictureData(self: CommandButtonClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: CommandButtonClass) -> Byte
        Set: PictureType(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: CommandButtonClass) -> int
        Set: PressedColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: CommandButtonClass) -> int
        Set: PressedForeColor(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: CommandButtonClass) -> Single
        Set: PressedForeShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: CommandButtonClass) -> int
        Set: PressedForeThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: CommandButtonClass) -> Single
        Set: PressedForeTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: CommandButtonClass) -> Single
        Set: PressedShade(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: CommandButtonClass) -> int
        Set: PressedThemeColorIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: CommandButtonClass) -> Single
        Set: PressedTint(self: CommandButtonClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: CommandButtonClass) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: CommandButtonClass) -> int
        Set: QuickStyle(self: CommandButtonClass) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: CommandButtonClass) -> int
        Set: QuickStyleMask(self: CommandButtonClass) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: CommandButtonClass) -> Byte
        Set: ReadingOrder(self: CommandButtonClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: CommandButtonClass) -> Int16
        Set: RightPadding(self: CommandButtonClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: CommandButtonClass) -> Int16
        Set: Section(self: CommandButtonClass) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: CommandButtonClass) -> int
        Set: Shadow(self: CommandButtonClass) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: CommandButtonClass) -> int
        Set: Shape(self: CommandButtonClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: CommandButtonClass) -> str
        Set: ShortcutMenuBar(self: CommandButtonClass) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: CommandButtonClass) -> int
        Set: SoftEdges(self: CommandButtonClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: CommandButtonClass) -> str
        Set: StatusBarText(self: CommandButtonClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: CommandButtonClass) -> Int16
        Set: TabIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: CommandButtonClass) -> bool
        Set: TabStop(self: CommandButtonClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: CommandButtonClass) -> str
        Set: Tag(self: CommandButtonClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: CommandButtonClass) -> str
        Set: Target(self: CommandButtonClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: CommandButtonClass) -> Byte
        Set: TextFontCharSet(self: CommandButtonClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: CommandButtonClass) -> int
        Set: ThemeFontIndex(self: CommandButtonClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: CommandButtonClass) -> Int16
        Set: Top(self: CommandButtonClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: CommandButtonClass) -> Int16
        Set: TopPadding(self: CommandButtonClass) = value
        """
        ...

    @property
    def Transparent(self) -> bool:
        """
        Get: Transparent(self: CommandButtonClass) -> bool
        Set: Transparent(self: CommandButtonClass) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: CommandButtonClass) -> bool
        Set: UseTheme(self: CommandButtonClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: CommandButtonClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: CommandButtonClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: CommandButtonClass) -> bool
        Set: Visible(self: CommandButtonClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: CommandButtonClass) -> Int16
        Set: Width(self: CommandButtonClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: CommandButtonClass) -> str
        Set: _Name(self: CommandButtonClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: CommandButtonClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: CommandButtonClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: CommandButtonClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: CommandButtonClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: CommandButtonClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: CommandButtonClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CommandButtonClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: CommandButtonClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: CommandButtonClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: CommandButtonClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: CommandButtonClass) """
        ...

    def _CommandButtonEvents_Event_add_Click(self): # -> 
        """ _CommandButtonEvents_Event_add_Click(self: CommandButtonClass, : _CommandButtonEvents_ClickEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_DblClick(self): # -> 
        """ _CommandButtonEvents_Event_add_DblClick(self: CommandButtonClass, : _CommandButtonEvents_DblClickEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_Enter(self): # -> 
        """ _CommandButtonEvents_Event_add_Enter(self: CommandButtonClass, : _CommandButtonEvents_EnterEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_Exit(self): # -> 
        """ _CommandButtonEvents_Event_add_Exit(self: CommandButtonClass, : _CommandButtonEvents_ExitEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_GotFocus(self): # -> 
        """ _CommandButtonEvents_Event_add_GotFocus(self: CommandButtonClass, : _CommandButtonEvents_GotFocusEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_KeyDown(self): # -> 
        """ _CommandButtonEvents_Event_add_KeyDown(self: CommandButtonClass, : _CommandButtonEvents_KeyDownEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_KeyPress(self): # -> 
        """ _CommandButtonEvents_Event_add_KeyPress(self: CommandButtonClass, : _CommandButtonEvents_KeyPressEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_KeyUp(self): # -> 
        """ _CommandButtonEvents_Event_add_KeyUp(self: CommandButtonClass, : _CommandButtonEvents_KeyUpEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_LostFocus(self): # -> 
        """ _CommandButtonEvents_Event_add_LostFocus(self: CommandButtonClass, : _CommandButtonEvents_LostFocusEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_MouseDown(self): # -> 
        """ _CommandButtonEvents_Event_add_MouseDown(self: CommandButtonClass, : _CommandButtonEvents_MouseDownEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_MouseMove(self): # -> 
        """ _CommandButtonEvents_Event_add_MouseMove(self: CommandButtonClass, : _CommandButtonEvents_MouseMoveEventHandler) """
        ...

    def _CommandButtonEvents_Event_add_MouseUp(self): # -> 
        """ _CommandButtonEvents_Event_add_MouseUp(self: CommandButtonClass, : _CommandButtonEvents_MouseUpEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_Click(self): # -> 
        """ _CommandButtonEvents_Event_remove_Click(self: CommandButtonClass, : _CommandButtonEvents_ClickEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_DblClick(self): # -> 
        """ _CommandButtonEvents_Event_remove_DblClick(self: CommandButtonClass, : _CommandButtonEvents_DblClickEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_Enter(self): # -> 
        """ _CommandButtonEvents_Event_remove_Enter(self: CommandButtonClass, : _CommandButtonEvents_EnterEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_Exit(self): # -> 
        """ _CommandButtonEvents_Event_remove_Exit(self: CommandButtonClass, : _CommandButtonEvents_ExitEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_GotFocus(self): # -> 
        """ _CommandButtonEvents_Event_remove_GotFocus(self: CommandButtonClass, : _CommandButtonEvents_GotFocusEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_KeyDown(self): # -> 
        """ _CommandButtonEvents_Event_remove_KeyDown(self: CommandButtonClass, : _CommandButtonEvents_KeyDownEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_KeyPress(self): # -> 
        """ _CommandButtonEvents_Event_remove_KeyPress(self: CommandButtonClass, : _CommandButtonEvents_KeyPressEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_KeyUp(self): # -> 
        """ _CommandButtonEvents_Event_remove_KeyUp(self: CommandButtonClass, : _CommandButtonEvents_KeyUpEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_LostFocus(self): # -> 
        """ _CommandButtonEvents_Event_remove_LostFocus(self: CommandButtonClass, : _CommandButtonEvents_LostFocusEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_MouseDown(self): # -> 
        """ _CommandButtonEvents_Event_remove_MouseDown(self: CommandButtonClass, : _CommandButtonEvents_MouseDownEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_MouseMove(self): # -> 
        """ _CommandButtonEvents_Event_remove_MouseMove(self: CommandButtonClass, : _CommandButtonEvents_MouseMoveEventHandler) """
        ...

    def _CommandButtonEvents_Event_remove_MouseUp(self): # -> 
        """ _CommandButtonEvents_Event_remove_MouseUp(self: CommandButtonClass, : _CommandButtonEvents_MouseUpEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: CommandButtonClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _CommandButtonEvents_Event_Click = ...
    _CommandButtonEvents_Event_DblClick = ...
    _CommandButtonEvents_Event_Enter = ...
    _CommandButtonEvents_Event_Exit = ...
    _CommandButtonEvents_Event_GotFocus = ...
    _CommandButtonEvents_Event_KeyDown = ...
    _CommandButtonEvents_Event_KeyPress = ...
    _CommandButtonEvents_Event_KeyUp = ...
    _CommandButtonEvents_Event_LostFocus = ...
    _CommandButtonEvents_Event_MouseDown = ...
    _CommandButtonEvents_Event_MouseMove = ...
    _CommandButtonEvents_Event_MouseUp = ...


class Constants: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    acAltMask: Int16 = ...
    acApplyFilter: Int16 = ...
    acApplyServerFilter: Int16 = ...
    acCloseFilterWindow: Int16 = ...
    acCloseServerFilterWindow: Int16 = ...
    acCopy: Int16 = ...
    acCtrlMask: Int16 = ...
    acCut: Int16 = ...
    acDataErrAdded: Int16 = ...
    acDataErrContinue: Int16 = ...
    acDataErrDisplay: Int16 = ...
    acDelete: Int16 = ...
    acDeleteCancel: Int16 = ...
    acDeleteOK: Int16 = ...
    acDeleteUserCancel: Int16 = ...
    acEditMenu: Int16 = ...
    acEffectChisel: Int16 = ...
    acEffectEtched: Int16 = ...
    acEffectNormal: Int16 = ...
    acEffectRaised: Int16 = ...
    acEffectShadow: Int16 = ...
    acEffectSunken: Int16 = ...
    acExit: Int16 = ...
    acFile: Int16 = ...
    acFilterAdvanced: Int16 = ...
    acFilterByForm: Int16 = ...
    acFormatASP: str = ...
    acFormatDAP: str = ...
    acFormatHTML: str = ...
    acFormatIIS: str = ...
    acFormatPDF: str = ...
    acFormatRTF: str = ...
    acFormatSNP: str = ...
    acFormatTXT: str = ...
    acFormatXLS: str = ...
    acFormatXLSB: str = ...
    acFormatXLSX: str = ...
    acFormatXPS: str = ...
    acFormBar: Int16 = ...
    acGridlinesBoth: Int16 = ...
    acGridlinesBothV2: Int16 = ...
    acGridlinesHoriz: Int16 = ...
    acGridlinesNone: Int16 = ...
    acGridlinesVert: Int16 = ...
    acLBClose: Int16 = ...
    acLBEnd: Int16 = ...
    acLBGetColumnCount: Int16 = ...
    acLBGetColumnWidth: Int16 = ...
    acLBGetFormat: Int16 = ...
    acLBGetRowCount: Int16 = ...
    acLBGetValue: Int16 = ...
    acLBInitialize: Int16 = ...
    acLBOpen: Int16 = ...
    acLeftButton: Int16 = ...
    acMenuCheck: Int16 = ...
    acMenuGray: Int16 = ...
    acMenuUncheck: Int16 = ...
    acMenuUngray: Int16 = ...
    acMenuVer1X: Int16 = ...
    acMenuVer20: Int16 = ...
    acMenuVer70: Int16 = ...
    acMiddleButton: Int16 = ...
    acNew: Int16 = ...
    acObject: Int16 = ...
    acObjectUpdate: Int16 = ...
    acObjectVerb: Int16 = ...
    acObjStateDirty: Int16 = ...
    acObjStateNew: Int16 = ...
    acObjStateOpen: Int16 = ...
    acOLEActivate: Int16 = ...
    acOLEActivateDoubleClick: Int16 = ...
    acOLEActivateGetFocus: Int16 = ...
    acOLEActivateManual: Int16 = ...
    acOLEChanged: Int16 = ...
    acOLEClose: Int16 = ...
    acOLEClosed: Int16 = ...
    acOLECopy: Int16 = ...
    acOLECreateEmbed: Int16 = ...
    acOLECreateFromFile: Int16 = ...
    acOLECreateLink: Int16 = ...
    acOLECreateNew: Int16 = ...
    acOLEDelete: Int16 = ...
    acOLEDisplayContent: Int16 = ...
    acOLEDisplayIcon: Int16 = ...
    acOLEEither: Int16 = ...
    acOLEEmbedded: Int16 = ...
    acOLEFetchVerbs: Int16 = ...
    acOLEInsertObjDlg: Int16 = ...
    acOLELinked: Int16 = ...
    acOLENone: Int16 = ...
    acOLEPaste: Int16 = ...
    acOLEPasteSpecialDlg: Int16 = ...
    acOLERenamed: Int16 = ...
    acOLESaved: Int16 = ...
    acOLESizeAutoSize: Int16 = ...
    acOLESizeClip: Int16 = ...
    acOLESizeStretch: Int16 = ...
    acOLESizeZoom: Int16 = ...
    acOLEUpdate: Int16 = ...
    acOLEUpdateAutomatic: Int16 = ...
    acOLEUpdateFrozen: Int16 = ...
    acOLEUpdateManual: Int16 = ...
    acOLEVerbHide: Int16 = ...
    acOLEVerbInPlaceActivate: Int16 = ...
    acOLEVerbInPlaceUIActivate: Int16 = ...
    acOLEVerbOpen: Int16 = ...
    acOLEVerbPrimary: Int16 = ...
    acOLEVerbShow: Int16 = ...
    acPaste: Int16 = ...
    acPrompt: Int16 = ...
    acPropCatData: Int16 = ...
    acPropCatEvent: Int16 = ...
    acPropCatLayout: Int16 = ...
    acPropCatNA: Int16 = ...
    acPropCatOther: Int16 = ...
    acRecordsMenu: Int16 = ...
    acRefresh: Int16 = ...
    acRightButton: Int16 = ...
    acSave: Int16 = ...
    acSaveForm: Int16 = ...
    acSaveFormAs: Int16 = ...
    acSaveRecord: Int16 = ...
    acSecFrmRptExecute: int = ...
    acSecFrmRptReadDef: int = ...
    acSecFrmRptWriteDef: int = ...
    acSecMacExecute: int = ...
    acSecMacReadDef: int = ...
    acSecMacWriteDef: int = ...
    acSecModReadDef: int = ...
    acSecModWriteDef: int = ...
    acSelectAllRecords: Int16 = ...
    acSelectRecord: Int16 = ...
    acServerFilterByForm: Int16 = ...
    acShiftMask: Int16 = ...
    acShowAllRecords: Int16 = ...
    acUndo: Int16 = ...
    vbKey0: Int16 = ...
    vbKey1: Int16 = ...
    vbKey2: Int16 = ...
    vbKey3: Int16 = ...
    vbKey4: Int16 = ...
    vbKey5: Int16 = ...
    vbKey6: Int16 = ...
    vbKey7: Int16 = ...
    vbKey8: Int16 = ...
    vbKey9: Int16 = ...
    vbKeyA: Int16 = ...
    vbKeyAdd: Int16 = ...
    vbKeyB: Int16 = ...
    vbKeyBack: Int16 = ...
    vbKeyC: Int16 = ...
    vbKeyCancel: Int16 = ...
    vbKeyCapital: Int16 = ...
    vbKeyClear: Int16 = ...
    vbKeyControl: Int16 = ...
    vbKeyD: Int16 = ...
    vbKeyDecimal: Int16 = ...
    vbKeyDelete: Int16 = ...
    vbKeyDivide: Int16 = ...
    vbKeyDown: Int16 = ...
    vbKeyE: Int16 = ...
    vbKeyEnd: Int16 = ...
    vbKeyEscape: Int16 = ...
    vbKeyExecute: Int16 = ...
    vbKeyF: Int16 = ...
    vbKeyF1: Int16 = ...
    vbKeyF10: Int16 = ...
    vbKeyF11: Int16 = ...
    vbKeyF12: Int16 = ...
    vbKeyF13: Int16 = ...
    vbKeyF14: Int16 = ...
    vbKeyF15: Int16 = ...
    vbKeyF16: Int16 = ...
    vbKeyF2: Int16 = ...
    vbKeyF3: Int16 = ...
    vbKeyF4: Int16 = ...
    vbKeyF5: Int16 = ...
    vbKeyF6: Int16 = ...
    vbKeyF7: Int16 = ...
    vbKeyF8: Int16 = ...
    vbKeyF9: Int16 = ...
    vbKeyG: Int16 = ...
    vbKeyH: Int16 = ...
    vbKeyHelp: Int16 = ...
    vbKeyHome: Int16 = ...
    vbKeyI: Int16 = ...
    vbKeyInsert: Int16 = ...
    vbKeyJ: Int16 = ...
    vbKeyK: Int16 = ...
    vbKeyL: Int16 = ...
    vbKeyLButton: Int16 = ...
    vbKeyLeft: Int16 = ...
    vbKeyM: Int16 = ...
    vbKeyMButton: Int16 = ...
    vbKeyMenu: Int16 = ...
    vbKeyMultiply: Int16 = ...
    vbKeyN: Int16 = ...
    vbKeyNumlock: Int16 = ...
    vbKeyNumpad0: Int16 = ...
    vbKeyNumpad1: Int16 = ...
    vbKeyNumpad2: Int16 = ...
    vbKeyNumpad3: Int16 = ...
    vbKeyNumpad4: Int16 = ...
    vbKeyNumpad5: Int16 = ...
    vbKeyNumpad6: Int16 = ...
    vbKeyNumpad7: Int16 = ...
    vbKeyNumpad8: Int16 = ...
    vbKeyNumpad9: Int16 = ...
    vbKeyO: Int16 = ...
    vbKeyP: Int16 = ...
    vbKeyPageDown: Int16 = ...
    vbKeyPageUp: Int16 = ...
    vbKeyPause: Int16 = ...
    vbKeyPrint: Int16 = ...
    vbKeyQ: Int16 = ...
    vbKeyR: Int16 = ...
    vbKeyRButton: Int16 = ...
    vbKeyReturn: Int16 = ...
    vbKeyRight: Int16 = ...
    vbKeyS: Int16 = ...
    vbKeySelect: Int16 = ...
    vbKeySeparator: Int16 = ...
    vbKeyShift: Int16 = ...
    vbKeySnapshot: Int16 = ...
    vbKeySpace: Int16 = ...
    vbKeySubtract: Int16 = ...
    vbKeyT: Int16 = ...
    vbKeyTab: Int16 = ...
    vbKeyU: Int16 = ...
    vbKeyUp: Int16 = ...
    vbKeyV: Int16 = ...
    vbKeyW: Int16 = ...
    vbKeyX: Int16 = ...
    vbKeyY: Int16 = ...
    vbKeyZ: Int16 = ...


class _Control: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Control) -> Application """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Control) -> Int16
        Set: BottomPadding(self: _Control) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Control) -> Children """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _Control) -> Form """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Control) -> int
        Set: GridlineColor(self: _Control) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Control) -> Byte
        Set: GridlineStyleBottom(self: _Control) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Control) -> Byte
        Set: GridlineStyleLeft(self: _Control) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Control) -> Byte
        Set: GridlineStyleRight(self: _Control) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Control) -> Byte
        Set: GridlineStyleTop(self: _Control) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Control) -> Byte
        Set: GridlineWidthBottom(self: _Control) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Control) -> Byte
        Set: GridlineWidthLeft(self: _Control) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Control) -> Byte
        Set: GridlineWidthRight(self: _Control) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Control) -> Byte
        Set: GridlineWidthTop(self: _Control) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Control) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Control) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Control) -> Hyperlink """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: _Control) -> _ItemsSelected """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Control) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Control) -> int """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Control) -> Int16
        Set: LeftPadding(self: _Control) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Control) -> str
        Set: Name(self: _Control) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _Control) -> object """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Control) -> object """
        ...

    @property
    def Pages(self) -> Pages:
        """ Get: Pages(self: _Control) -> Pages """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Control) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Control) -> Properties """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _Control) -> Report """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Control) -> Int16
        Set: RightPadding(self: _Control) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _Control) -> SmartTags """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Control) -> Int16
        Set: TopPadding(self: _Control) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Control) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Control) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Control) -> str
        Set: _Name(self: _Control) = value
        """
        ...


    def Dropdown(self): # -> 
        """ Dropdown(self: _Control) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _Control) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Control, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Control, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Control) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Control) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Control) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Control) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Control, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Control(_Control): # skipped bases: <type 'object'>
    """ no doc """
    pass

class ControlClass(Control, __ComObject): # skipped bases: <type '_Control'>, <type 'object'>
    """ ControlClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: ControlClass) -> Application """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ControlClass) -> Int16
        Set: BottomPadding(self: ControlClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ControlClass) -> Children """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: ControlClass) -> Form """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ControlClass) -> int
        Set: GridlineColor(self: ControlClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ControlClass) -> Byte
        Set: GridlineStyleBottom(self: ControlClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ControlClass) -> Byte
        Set: GridlineStyleLeft(self: ControlClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ControlClass) -> Byte
        Set: GridlineStyleRight(self: ControlClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ControlClass) -> Byte
        Set: GridlineStyleTop(self: ControlClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ControlClass) -> Byte
        Set: GridlineWidthBottom(self: ControlClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ControlClass) -> Byte
        Set: GridlineWidthLeft(self: ControlClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ControlClass) -> Byte
        Set: GridlineWidthRight(self: ControlClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ControlClass) -> Byte
        Set: GridlineWidthTop(self: ControlClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ControlClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ControlClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: ControlClass) -> Hyperlink """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: ControlClass) -> _ItemsSelected """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ControlClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ControlClass) -> int """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ControlClass) -> Int16
        Set: LeftPadding(self: ControlClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ControlClass) -> str
        Set: Name(self: ControlClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: ControlClass) -> object """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ControlClass) -> object """
        ...

    @property
    def Pages(self) -> Pages:
        """ Get: Pages(self: ControlClass) -> Pages """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ControlClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ControlClass) -> Properties """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: ControlClass) -> Report """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ControlClass) -> Int16
        Set: RightPadding(self: ControlClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: ControlClass) -> SmartTags """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ControlClass) -> Int16
        Set: TopPadding(self: ControlClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ControlClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ControlClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ControlClass) -> str
        Set: _Name(self: ControlClass) = value
        """
        ...


    def Dropdown(self): # -> 
        """ Dropdown(self: ControlClass) """
        ...

    def Goto(self): # -> 
        """ Goto(self: ControlClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ControlClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ControlClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ControlClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ControlClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ControlClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: ControlClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ControlClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Controls(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Controls) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Controls) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Controls) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Controls, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class CurrentData(_CurrentData): # skipped bases: <type 'object'>
    """ no doc """
    pass

class CurrentDataClass(CurrentData, __ComObject): # skipped bases: <type '_CurrentData'>, <type 'object'>
    """ CurrentDataClass() """
    @property
    def AllDatabaseDiagrams(self) -> AllObjects:
        """ Get: AllDatabaseDiagrams(self: CurrentDataClass) -> AllObjects """
        ...

    @property
    def AllFunctions(self) -> AllObjects:
        """ Get: AllFunctions(self: CurrentDataClass) -> AllObjects """
        ...

    @property
    def AllQueries(self) -> AllObjects:
        """ Get: AllQueries(self: CurrentDataClass) -> AllObjects """
        ...

    @property
    def AllStoredProcedures(self) -> AllObjects:
        """ Get: AllStoredProcedures(self: CurrentDataClass) -> AllObjects """
        ...

    @property
    def AllTables(self) -> AllObjects:
        """ Get: AllTables(self: CurrentDataClass) -> AllObjects """
        ...

    @property
    def AllViews(self) -> AllObjects:
        """ Get: AllViews(self: CurrentDataClass) -> AllObjects """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CurrentDataClass, dispid: int) -> bool """
        ...


class CurrentProject(_CurrentProject): # skipped bases: <type 'object'>
    """ no doc """
    pass

class CurrentProjectClass(CurrentProject, __ComObject): # skipped bases: <type '_CurrentProject'>, <type 'object'>
    """ CurrentProjectClass() """
    @property
    def AccessConnection(self) -> Connection:
        """ Get: AccessConnection(self: CurrentProjectClass) -> Connection """
        ...

    @property
    def AllDataAccessPages(self) -> AllObjects:
        """ Get: AllDataAccessPages(self: CurrentProjectClass) -> AllObjects """
        ...

    @property
    def AllForms(self) -> AllObjects:
        """ Get: AllForms(self: CurrentProjectClass) -> AllObjects """
        ...

    @property
    def AllMacros(self) -> AllObjects:
        """ Get: AllMacros(self: CurrentProjectClass) -> AllObjects """
        ...

    @property
    def AllModules(self) -> AllObjects:
        """ Get: AllModules(self: CurrentProjectClass) -> AllObjects """
        ...

    @property
    def AllReports(self) -> AllObjects:
        """ Get: AllReports(self: CurrentProjectClass) -> AllObjects """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: CurrentProjectClass) -> Application """
        ...

    @property
    def BaseConnectionString(self) -> str:
        """ Get: BaseConnectionString(self: CurrentProjectClass) -> str """
        ...

    @property
    def Connection(self) -> Connection:
        """ Get: Connection(self: CurrentProjectClass) -> Connection """
        ...

    @property
    def FileFormat(self) -> AcFileFormat:
        """ Get: FileFormat(self: CurrentProjectClass) -> AcFileFormat """
        ...

    @property
    def FullName(self) -> str:
        """ Get: FullName(self: CurrentProjectClass) -> str """
        ...

    @property
    def ImportExportSpecifications(self) -> ImportExportSpecifications:
        """ Get: ImportExportSpecifications(self: CurrentProjectClass) -> ImportExportSpecifications """
        ...

    @property
    def IsConnected(self) -> bool:
        """ Get: IsConnected(self: CurrentProjectClass) -> bool """
        ...

    @property
    def IsSQLBackend(self) -> bool:
        """ Get: IsSQLBackend(self: CurrentProjectClass) -> bool """
        ...

    @property
    def IsTrusted(self) -> bool:
        """ Get: IsTrusted(self: CurrentProjectClass) -> bool """
        ...

    @property
    def IsWeb(self) -> bool:
        """ Get: IsWeb(self: CurrentProjectClass) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: CurrentProjectClass) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: CurrentProjectClass) -> object """
        ...

    @property
    def Path(self) -> str:
        """ Get: Path(self: CurrentProjectClass) -> str """
        ...

    @property
    def ProjectType(self) -> AcProjectType:
        """ Get: ProjectType(self: CurrentProjectClass) -> AcProjectType """
        ...

    @property
    def Properties(self) -> AccessObjectProperties:
        """ Get: Properties(self: CurrentProjectClass) -> AccessObjectProperties """
        ...

    @property
    def RemovePersonalInformation(self) -> bool:
        """
        Get: RemovePersonalInformation(self: CurrentProjectClass) -> bool
        Set: RemovePersonalInformation(self: CurrentProjectClass) = value
        """
        ...

    @property
    def Resources(self) -> SharedResources:
        """ Get: Resources(self: CurrentProjectClass) -> SharedResources """
        ...

    @property
    def WebSite(self) -> str:
        """ Get: WebSite(self: CurrentProjectClass) -> str """
        ...


    def AddSharedImage(self, SharedImageName:str, FileName:str): # -> 
        """ AddSharedImage(self: CurrentProjectClass, SharedImageName: str, FileName: str) """
        ...

    def CloseConnection(self): # -> 
        """ CloseConnection(self: CurrentProjectClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CurrentProjectClass, dispid: int) -> bool """
        ...

    def OpenConnection(self, BaseConnectionString:object, UserID:object, Password:object): # -> 
        """ OpenConnection(self: CurrentProjectClass, BaseConnectionString: object, UserID: object, Password: object) """
        ...

    def UpdateDependencyInfo(self): # -> 
        """ UpdateDependencyInfo(self: CurrentProjectClass) """
        ...


class DispCustomControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: DispCustomControlEvents_Event, : DispCustomControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispCustomControlEvents_Event, : DispCustomControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispCustomControlEvents_Event, : DispCustomControlEvents_GotFocusEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispCustomControlEvents_Event, : DispCustomControlEvents_LostFocusEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: DispCustomControlEvents_Event, : DispCustomControlEvents_UpdatedEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispCustomControlEvents_Event, : DispCustomControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispCustomControlEvents_Event, : DispCustomControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispCustomControlEvents_Event, : DispCustomControlEvents_GotFocusEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispCustomControlEvents_Event, : DispCustomControlEvents_LostFocusEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: DispCustomControlEvents_Event, : DispCustomControlEvents_UpdatedEventHandler) """
        ...

    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    Updated = ...


class _CustomControl(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def About(self) -> str:
        """
        Get: About(self: _CustomControl) -> str
        Set: About(self: _CustomControl) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _CustomControl) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _CustomControl) -> int
        Set: BorderColor(self: _CustomControl) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _CustomControl) -> Byte
        Set: BorderLineStyle(self: _CustomControl) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _CustomControl) -> Single
        Set: BorderShade(self: _CustomControl) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _CustomControl) -> Byte
        Set: BorderStyle(self: _CustomControl) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _CustomControl) -> int
        Set: BorderThemeColorIndex(self: _CustomControl) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _CustomControl) -> Single
        Set: BorderTint(self: _CustomControl) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _CustomControl) -> Byte
        Set: BorderWidth(self: _CustomControl) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _CustomControl) -> Int16
        Set: BottomPadding(self: _CustomControl) = value
        """
        ...

    @property
    def Cancel(self) -> bool:
        """
        Get: Cancel(self: _CustomControl) -> bool
        Set: Cancel(self: _CustomControl) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: _CustomControl) -> str
        Set: Class(self: _CustomControl) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _CustomControl) -> str
        Set: ControlName(self: _CustomControl) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _CustomControl) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _CustomControl) -> str
        Set: ControlSource(self: _CustomControl) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _CustomControl) -> str
        Set: ControlTipText(self: _CustomControl) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _CustomControl) -> Byte
        Set: ControlType(self: _CustomControl) = value
        """
        ...

    @property
    def Custom(self) -> str:
        """
        Get: Custom(self: _CustomControl) -> str
        Set: Custom(self: _CustomControl) = value
        """
        ...

    @property
    def Default(self) -> bool:
        """
        Get: Default(self: _CustomControl) -> bool
        Set: Default(self: _CustomControl) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _CustomControl) -> Byte
        Set: DisplayWhen(self: _CustomControl) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _CustomControl) -> bool
        Set: Enabled(self: _CustomControl) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _CustomControl) -> str
        Set: EventProcPrefix(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _CustomControl) -> int
        Set: GridlineColor(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _CustomControl) -> Byte
        Set: GridlineStyleBottom(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _CustomControl) -> Byte
        Set: GridlineStyleLeft(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _CustomControl) -> Byte
        Set: GridlineStyleRight(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _CustomControl) -> Byte
        Set: GridlineStyleTop(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _CustomControl) -> Byte
        Set: GridlineWidthBottom(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _CustomControl) -> Byte
        Set: GridlineWidthLeft(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _CustomControl) -> Byte
        Set: GridlineWidthRight(self: _CustomControl) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _CustomControl) -> Byte
        Set: GridlineWidthTop(self: _CustomControl) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _CustomControl) -> Int16
        Set: Height(self: _CustomControl) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _CustomControl) -> int
        Set: HelpContextId(self: _CustomControl) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _CustomControl) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _CustomControl) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _CustomControl) -> bool
        Set: InSelection(self: _CustomControl) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _CustomControl) -> bool
        Set: IsVisible(self: _CustomControl) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _CustomControl) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _CustomControl) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _CustomControl) -> Int16
        Set: Left(self: _CustomControl) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _CustomControl) -> Int16
        Set: LeftPadding(self: _CustomControl) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _CustomControl) -> bool
        Set: Locked(self: _CustomControl) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: _CustomControl) -> int
        Set: LpOleObject(self: _CustomControl) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _CustomControl) -> str
        Set: Name(self: _CustomControl) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _CustomControl) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _CustomControl) -> object
        Set: ObjectPalette(self: _CustomControl) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: _CustomControl) -> int
        Set: ObjectVerbsCount(self: _CustomControl) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _CustomControl) -> Byte
        Set: OldBorderStyle(self: _CustomControl) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _CustomControl) -> object """
        ...

    @property
    def OLEClass(self) -> str:
        """
        Get: OLEClass(self: _CustomControl) -> str
        Set: OLEClass(self: _CustomControl) = value
        """
        ...

    @property
    def OleData(self) -> object:
        """
        Get: OleData(self: _CustomControl) -> object
        Set: OleData(self: _CustomControl) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _CustomControl) -> str
        Set: OnEnter(self: _CustomControl) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _CustomControl) -> str
        Set: OnEnterMacro(self: _CustomControl) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _CustomControl) -> str
        Set: OnExit(self: _CustomControl) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _CustomControl) -> str
        Set: OnExitMacro(self: _CustomControl) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _CustomControl) -> str
        Set: OnGotFocus(self: _CustomControl) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _CustomControl) -> str
        Set: OnGotFocusMacro(self: _CustomControl) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _CustomControl) -> str
        Set: OnLostFocus(self: _CustomControl) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _CustomControl) -> str
        Set: OnLostFocusMacro(self: _CustomControl) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: _CustomControl) -> str
        Set: OnUpdated(self: _CustomControl) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: _CustomControl) -> str
        Set: OnUpdatedMacro(self: _CustomControl) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _CustomControl) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _CustomControl) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _CustomControl) -> Int16
        Set: RightPadding(self: _CustomControl) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _CustomControl) -> Int16
        Set: Section(self: _CustomControl) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _CustomControl) -> Byte
        Set: SpecialEffect(self: _CustomControl) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _CustomControl) -> Int16
        Set: TabIndex(self: _CustomControl) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _CustomControl) -> bool
        Set: TabStop(self: _CustomControl) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _CustomControl) -> str
        Set: Tag(self: _CustomControl) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _CustomControl) -> Int16
        Set: Top(self: _CustomControl) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _CustomControl) -> Int16
        Set: TopPadding(self: _CustomControl) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _CustomControl) -> object
        Set: Value(self: _CustomControl) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: _CustomControl) -> object
        Set: VarOleObject(self: _CustomControl) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: _CustomControl) -> int
        Set: Verb(self: _CustomControl) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _CustomControl) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _CustomControl) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _CustomControl) -> bool
        Set: Visible(self: _CustomControl) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _CustomControl) -> Int16
        Set: Width(self: _CustomControl) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _CustomControl) -> str
        Set: _Name(self: _CustomControl) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _CustomControl) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CustomControl, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _CustomControl, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _CustomControl) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _CustomControl) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _CustomControl) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _CustomControl, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class CustomControl(DispCustomControlEvents_Event, _CustomControl): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class CustomControlClass(CustomControl, __ComObject, _CustomControlEvents_Event): # skipped bases: <type 'DispCustomControlEvents_Event'>, <type '_CustomControl'>, <type 'IAccessible'>, <type 'object'>
    """ CustomControlClass() """
    @property
    def About(self) -> str:
        """
        Get: About(self: CustomControlClass) -> str
        Set: About(self: CustomControlClass) = value
        """
        ...

    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: CustomControlClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: CustomControlClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: CustomControlClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: CustomControlClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: CustomControlClass) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: CustomControlClass) -> int
        Set: BorderColor(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: CustomControlClass) -> Byte
        Set: BorderLineStyle(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: CustomControlClass) -> Single
        Set: BorderShade(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: CustomControlClass) -> Byte
        Set: BorderStyle(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: CustomControlClass) -> int
        Set: BorderThemeColorIndex(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: CustomControlClass) -> Single
        Set: BorderTint(self: CustomControlClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: CustomControlClass) -> Byte
        Set: BorderWidth(self: CustomControlClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: CustomControlClass) -> Int16
        Set: BottomPadding(self: CustomControlClass) = value
        """
        ...

    @property
    def Cancel(self) -> bool:
        """
        Get: Cancel(self: CustomControlClass) -> bool
        Set: Cancel(self: CustomControlClass) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: CustomControlClass) -> str
        Set: Class(self: CustomControlClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: CustomControlClass) -> str
        Set: ControlName(self: CustomControlClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: CustomControlClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: CustomControlClass) -> str
        Set: ControlSource(self: CustomControlClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: CustomControlClass) -> str
        Set: ControlTipText(self: CustomControlClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: CustomControlClass) -> Byte
        Set: ControlType(self: CustomControlClass) = value
        """
        ...

    @property
    def Custom(self) -> str:
        """
        Get: Custom(self: CustomControlClass) -> str
        Set: Custom(self: CustomControlClass) = value
        """
        ...

    @property
    def Default(self) -> bool:
        """
        Get: Default(self: CustomControlClass) -> bool
        Set: Default(self: CustomControlClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: CustomControlClass) -> Byte
        Set: DisplayWhen(self: CustomControlClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: CustomControlClass) -> bool
        Set: Enabled(self: CustomControlClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: CustomControlClass) -> str
        Set: EventProcPrefix(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: CustomControlClass) -> int
        Set: GridlineColor(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: CustomControlClass) -> Byte
        Set: GridlineStyleBottom(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: CustomControlClass) -> Byte
        Set: GridlineStyleLeft(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: CustomControlClass) -> Byte
        Set: GridlineStyleRight(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: CustomControlClass) -> Byte
        Set: GridlineStyleTop(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: CustomControlClass) -> Byte
        Set: GridlineWidthBottom(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: CustomControlClass) -> Byte
        Set: GridlineWidthLeft(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: CustomControlClass) -> Byte
        Set: GridlineWidthRight(self: CustomControlClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: CustomControlClass) -> Byte
        Set: GridlineWidthTop(self: CustomControlClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: CustomControlClass) -> Int16
        Set: Height(self: CustomControlClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: CustomControlClass) -> int
        Set: HelpContextId(self: CustomControlClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: CustomControlClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: CustomControlClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: CustomControlClass) -> bool
        Set: InSelection(self: CustomControlClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: CustomControlClass) -> bool
        Set: IsVisible(self: CustomControlClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: CustomControlClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: CustomControlClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: CustomControlClass) -> Int16
        Set: Left(self: CustomControlClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: CustomControlClass) -> Int16
        Set: LeftPadding(self: CustomControlClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: CustomControlClass) -> bool
        Set: Locked(self: CustomControlClass) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: CustomControlClass) -> int
        Set: LpOleObject(self: CustomControlClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: CustomControlClass) -> str
        Set: Name(self: CustomControlClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: CustomControlClass) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: CustomControlClass) -> object
        Set: ObjectPalette(self: CustomControlClass) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: CustomControlClass) -> int
        Set: ObjectVerbsCount(self: CustomControlClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: CustomControlClass) -> Byte
        Set: OldBorderStyle(self: CustomControlClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: CustomControlClass) -> object """
        ...

    @property
    def OLEClass(self) -> str:
        """
        Get: OLEClass(self: CustomControlClass) -> str
        Set: OLEClass(self: CustomControlClass) = value
        """
        ...

    @property
    def OleData(self) -> object:
        """
        Get: OleData(self: CustomControlClass) -> object
        Set: OleData(self: CustomControlClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: CustomControlClass) -> str
        Set: OnEnter(self: CustomControlClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: CustomControlClass) -> str
        Set: OnEnterMacro(self: CustomControlClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: CustomControlClass) -> str
        Set: OnExit(self: CustomControlClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: CustomControlClass) -> str
        Set: OnExitMacro(self: CustomControlClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: CustomControlClass) -> str
        Set: OnGotFocus(self: CustomControlClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: CustomControlClass) -> str
        Set: OnGotFocusMacro(self: CustomControlClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: CustomControlClass) -> str
        Set: OnLostFocus(self: CustomControlClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: CustomControlClass) -> str
        Set: OnLostFocusMacro(self: CustomControlClass) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: CustomControlClass) -> str
        Set: OnUpdated(self: CustomControlClass) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: CustomControlClass) -> str
        Set: OnUpdatedMacro(self: CustomControlClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: CustomControlClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: CustomControlClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: CustomControlClass) -> Int16
        Set: RightPadding(self: CustomControlClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: CustomControlClass) -> Int16
        Set: Section(self: CustomControlClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: CustomControlClass) -> Byte
        Set: SpecialEffect(self: CustomControlClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: CustomControlClass) -> Int16
        Set: TabIndex(self: CustomControlClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: CustomControlClass) -> bool
        Set: TabStop(self: CustomControlClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: CustomControlClass) -> str
        Set: Tag(self: CustomControlClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: CustomControlClass) -> Int16
        Set: Top(self: CustomControlClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: CustomControlClass) -> Int16
        Set: TopPadding(self: CustomControlClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: CustomControlClass) -> object
        Set: Value(self: CustomControlClass) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: CustomControlClass) -> object
        Set: VarOleObject(self: CustomControlClass) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: CustomControlClass) -> int
        Set: Verb(self: CustomControlClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: CustomControlClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: CustomControlClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: CustomControlClass) -> bool
        Set: Visible(self: CustomControlClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: CustomControlClass) -> Int16
        Set: Width(self: CustomControlClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: CustomControlClass) -> str
        Set: _Name(self: CustomControlClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: CustomControlClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: CustomControlClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: CustomControlClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: CustomControlClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: CustomControlClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: CustomControlClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: CustomControlClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: CustomControlClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: CustomControlClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: CustomControlClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: CustomControlClass) """
        ...

    def _CustomControlEvents_Event_add_Enter(self): # -> 
        """ _CustomControlEvents_Event_add_Enter(self: CustomControlClass, : _CustomControlEvents_EnterEventHandler) """
        ...

    def _CustomControlEvents_Event_add_Exit(self): # -> 
        """ _CustomControlEvents_Event_add_Exit(self: CustomControlClass, : _CustomControlEvents_ExitEventHandler) """
        ...

    def _CustomControlEvents_Event_add_GotFocus(self): # -> 
        """ _CustomControlEvents_Event_add_GotFocus(self: CustomControlClass, : _CustomControlEvents_GotFocusEventHandler) """
        ...

    def _CustomControlEvents_Event_add_LostFocus(self): # -> 
        """ _CustomControlEvents_Event_add_LostFocus(self: CustomControlClass, : _CustomControlEvents_LostFocusEventHandler) """
        ...

    def _CustomControlEvents_Event_add_Updated(self): # -> 
        """ _CustomControlEvents_Event_add_Updated(self: CustomControlClass, : _CustomControlEvents_UpdatedEventHandler) """
        ...

    def _CustomControlEvents_Event_remove_Enter(self): # -> 
        """ _CustomControlEvents_Event_remove_Enter(self: CustomControlClass, : _CustomControlEvents_EnterEventHandler) """
        ...

    def _CustomControlEvents_Event_remove_Exit(self): # -> 
        """ _CustomControlEvents_Event_remove_Exit(self: CustomControlClass, : _CustomControlEvents_ExitEventHandler) """
        ...

    def _CustomControlEvents_Event_remove_GotFocus(self): # -> 
        """ _CustomControlEvents_Event_remove_GotFocus(self: CustomControlClass, : _CustomControlEvents_GotFocusEventHandler) """
        ...

    def _CustomControlEvents_Event_remove_LostFocus(self): # -> 
        """ _CustomControlEvents_Event_remove_LostFocus(self: CustomControlClass, : _CustomControlEvents_LostFocusEventHandler) """
        ...

    def _CustomControlEvents_Event_remove_Updated(self): # -> 
        """ _CustomControlEvents_Event_remove_Updated(self: CustomControlClass, : _CustomControlEvents_UpdatedEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: CustomControlClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    Updated = ...
    _CustomControlEvents_Event_Enter = ...
    _CustomControlEvents_Event_Exit = ...
    _CustomControlEvents_Event_GotFocus = ...
    _CustomControlEvents_Event_LostFocus = ...
    _CustomControlEvents_Event_Updated = ...


class _DataAccessPage: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _DataAccessPage) -> Application """
        ...

    @property
    def ConnectionString(self) -> str:
        """
        Get: ConnectionString(self: _DataAccessPage) -> str
        Set: ConnectionString(self: _DataAccessPage) = value
        """
        ...

    @property
    def CurrentSelection(self) -> object:
        """ Get: CurrentSelection(self: _DataAccessPage) -> object """
        ...

    @property
    def CurrentView(self) -> Int16:
        """ Get: CurrentView(self: _DataAccessPage) -> Int16 """
        ...

    @property
    def Document(self) -> object:
        """ Get: Document(self: _DataAccessPage) -> object """
        ...

    @property
    def FieldListConnection(self) -> object:
        """ Get: FieldListConnection(self: _DataAccessPage) -> object """
        ...

    @property
    def MailEnvelope(self): # -> MsoEnvelope
        """ Get: MailEnvelope(self: _DataAccessPage) -> MsoEnvelope """
        ...

    @property
    def MSODSC(self) -> object:
        """ Get: MSODSC(self: _DataAccessPage) -> object """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: _DataAccessPage) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _DataAccessPage) -> object """
        ...

    @property
    def RemovePersonalInformation(self) -> bool:
        """
        Get: RemovePersonalInformation(self: _DataAccessPage) -> bool
        Set: RemovePersonalInformation(self: _DataAccessPage) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _DataAccessPage) -> str
        Set: Tag(self: _DataAccessPage) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _DataAccessPage) -> bool
        Set: Visible(self: _DataAccessPage) = value
        """
        ...

    @property
    def WebOptions(self) -> WebOptions:
        """ Get: WebOptions(self: _DataAccessPage) -> WebOptions """
        ...

    @property
    def WindowHeight(self) -> int:
        """ Get: WindowHeight(self: _DataAccessPage) -> int """
        ...

    @property
    def WindowWidth(self) -> int:
        """ Get: WindowWidth(self: _DataAccessPage) -> int """
        ...

    @property
    def _Name(self) -> str:
        """ Get: _Name(self: _DataAccessPage) -> str """
        ...


    def ApplyTheme(self, ThemeName:str): # -> 
        """ ApplyTheme(self: _DataAccessPage, ThemeName: str) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _DataAccessPage, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class DataAccessPage(_DataAccessPage): # skipped bases: <type 'object'>
    """ no doc """
    pass

class DataAccessPageClass(__ComObject, DataAccessPage): # skipped bases: <type '_DataAccessPage'>, <type 'object'>
    """ DataAccessPageClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: DataAccessPageClass) -> Application """
        ...

    @property
    def ConnectionString(self) -> str:
        """
        Get: ConnectionString(self: DataAccessPageClass) -> str
        Set: ConnectionString(self: DataAccessPageClass) = value
        """
        ...

    @property
    def CurrentSelection(self) -> object:
        """ Get: CurrentSelection(self: DataAccessPageClass) -> object """
        ...

    @property
    def CurrentView(self) -> Int16:
        """ Get: CurrentView(self: DataAccessPageClass) -> Int16 """
        ...

    @property
    def Document(self) -> object:
        """ Get: Document(self: DataAccessPageClass) -> object """
        ...

    @property
    def FieldListConnection(self) -> object:
        """ Get: FieldListConnection(self: DataAccessPageClass) -> object """
        ...

    @property
    def MailEnvelope(self): # -> MsoEnvelope
        """ Get: MailEnvelope(self: DataAccessPageClass) -> MsoEnvelope """
        ...

    @property
    def MSODSC(self) -> object:
        """ Get: MSODSC(self: DataAccessPageClass) -> object """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: DataAccessPageClass) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: DataAccessPageClass) -> object """
        ...

    @property
    def RemovePersonalInformation(self) -> bool:
        """
        Get: RemovePersonalInformation(self: DataAccessPageClass) -> bool
        Set: RemovePersonalInformation(self: DataAccessPageClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: DataAccessPageClass) -> str
        Set: Tag(self: DataAccessPageClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: DataAccessPageClass) -> bool
        Set: Visible(self: DataAccessPageClass) = value
        """
        ...

    @property
    def WebOptions(self) -> WebOptions:
        """ Get: WebOptions(self: DataAccessPageClass) -> WebOptions """
        ...

    @property
    def WindowHeight(self) -> int:
        """ Get: WindowHeight(self: DataAccessPageClass) -> int """
        ...

    @property
    def WindowWidth(self) -> int:
        """ Get: WindowWidth(self: DataAccessPageClass) -> int """
        ...

    @property
    def _Name(self) -> str:
        """ Get: _Name(self: DataAccessPageClass) -> str """
        ...


    def ApplyTheme(self, ThemeName:str): # -> 
        """ ApplyTheme(self: DataAccessPageClass, ThemeName: str) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: DataAccessPageClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class DataAccessPages(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: DataAccessPages) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: DataAccessPages) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: DataAccessPages) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: DataAccessPages, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _DefaultWebOptions: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AlwaysSaveInDefaultEncoding(self) -> bool:
        """
        Get: AlwaysSaveInDefaultEncoding(self: _DefaultWebOptions) -> bool
        Set: AlwaysSaveInDefaultEncoding(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _DefaultWebOptions) -> Application """
        ...

    @property
    def CheckIfOfficeIsHTMLEditor(self) -> bool:
        """
        Get: CheckIfOfficeIsHTMLEditor(self: _DefaultWebOptions) -> bool
        Set: CheckIfOfficeIsHTMLEditor(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def DownloadComponents(self) -> bool:
        """
        Get: DownloadComponents(self: _DefaultWebOptions) -> bool
        Set: DownloadComponents(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def Encoding(self): # -> MsoEncoding
        """
        Get: Encoding(self: _DefaultWebOptions) -> MsoEncoding
        Set: Encoding(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def FolderSuffix(self) -> str:
        """ Get: FolderSuffix(self: _DefaultWebOptions) -> str """
        ...

    @property
    def FollowedHyperlinkColor(self) -> AcColorIndex:
        """
        Get: FollowedHyperlinkColor(self: _DefaultWebOptions) -> AcColorIndex
        Set: FollowedHyperlinkColor(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def HyperlinkColor(self) -> AcColorIndex:
        """
        Get: HyperlinkColor(self: _DefaultWebOptions) -> AcColorIndex
        Set: HyperlinkColor(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def LocationOfComponents(self) -> str:
        """
        Get: LocationOfComponents(self: _DefaultWebOptions) -> str
        Set: LocationOfComponents(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def OrganizeInFolder(self) -> bool:
        """
        Get: OrganizeInFolder(self: _DefaultWebOptions) -> bool
        Set: OrganizeInFolder(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _DefaultWebOptions) -> object """
        ...

    @property
    def TargetBrowser(self): # -> MsoTargetBrowser
        """
        Get: TargetBrowser(self: _DefaultWebOptions) -> MsoTargetBrowser
        Set: TargetBrowser(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def UnderlineHyperlinks(self) -> bool:
        """
        Get: UnderlineHyperlinks(self: _DefaultWebOptions) -> bool
        Set: UnderlineHyperlinks(self: _DefaultWebOptions) = value
        """
        ...

    @property
    def UseLongFileNames(self) -> bool:
        """
        Get: UseLongFileNames(self: _DefaultWebOptions) -> bool
        Set: UseLongFileNames(self: _DefaultWebOptions) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _DefaultWebOptions, dispid: int) -> bool """
        ...


class DefaultWebOptions(_DefaultWebOptions): # skipped bases: <type 'object'>
    """ no doc """
    pass

class DefaultWebOptionsClass(__ComObject, DefaultWebOptions): # skipped bases: <type '_DefaultWebOptions'>, <type 'object'>
    """ DefaultWebOptionsClass() """
    @property
    def AlwaysSaveInDefaultEncoding(self) -> bool:
        """
        Get: AlwaysSaveInDefaultEncoding(self: DefaultWebOptionsClass) -> bool
        Set: AlwaysSaveInDefaultEncoding(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: DefaultWebOptionsClass) -> Application """
        ...

    @property
    def CheckIfOfficeIsHTMLEditor(self) -> bool:
        """
        Get: CheckIfOfficeIsHTMLEditor(self: DefaultWebOptionsClass) -> bool
        Set: CheckIfOfficeIsHTMLEditor(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def DownloadComponents(self) -> bool:
        """
        Get: DownloadComponents(self: DefaultWebOptionsClass) -> bool
        Set: DownloadComponents(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def Encoding(self): # -> MsoEncoding
        """
        Get: Encoding(self: DefaultWebOptionsClass) -> MsoEncoding
        Set: Encoding(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def FolderSuffix(self) -> str:
        """ Get: FolderSuffix(self: DefaultWebOptionsClass) -> str """
        ...

    @property
    def FollowedHyperlinkColor(self) -> AcColorIndex:
        """
        Get: FollowedHyperlinkColor(self: DefaultWebOptionsClass) -> AcColorIndex
        Set: FollowedHyperlinkColor(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def HyperlinkColor(self) -> AcColorIndex:
        """
        Get: HyperlinkColor(self: DefaultWebOptionsClass) -> AcColorIndex
        Set: HyperlinkColor(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def LocationOfComponents(self) -> str:
        """
        Get: LocationOfComponents(self: DefaultWebOptionsClass) -> str
        Set: LocationOfComponents(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def OrganizeInFolder(self) -> bool:
        """
        Get: OrganizeInFolder(self: DefaultWebOptionsClass) -> bool
        Set: OrganizeInFolder(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: DefaultWebOptionsClass) -> object """
        ...

    @property
    def TargetBrowser(self): # -> MsoTargetBrowser
        """
        Get: TargetBrowser(self: DefaultWebOptionsClass) -> MsoTargetBrowser
        Set: TargetBrowser(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def UnderlineHyperlinks(self) -> bool:
        """
        Get: UnderlineHyperlinks(self: DefaultWebOptionsClass) -> bool
        Set: UnderlineHyperlinks(self: DefaultWebOptionsClass) = value
        """
        ...

    @property
    def UseLongFileNames(self) -> bool:
        """
        Get: UseLongFileNames(self: DefaultWebOptionsClass) -> bool
        Set: UseLongFileNames(self: DefaultWebOptionsClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: DefaultWebOptionsClass, dispid: int) -> bool """
        ...


class _DependencyInfo: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Dependants(self) -> DependencyObjects:
        """ Get: Dependants(self: _DependencyInfo) -> DependencyObjects """
        ...

    @property
    def Dependencies(self) -> DependencyObjects:
        """ Get: Dependencies(self: _DependencyInfo) -> DependencyObjects """
        ...

    @property
    def InsufficientPermissions(self) -> DependencyObjects:
        """ Get: InsufficientPermissions(self: _DependencyInfo) -> DependencyObjects """
        ...

    @property
    def OutOfDateObjects(self) -> DependencyObjects:
        """ Get: OutOfDateObjects(self: _DependencyInfo) -> DependencyObjects """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _DependencyInfo) -> object """
        ...

    @property
    def UnsupportedObjects(self) -> DependencyObjects:
        """ Get: UnsupportedObjects(self: _DependencyInfo) -> DependencyObjects """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _DependencyInfo, dispid: int) -> bool """
        ...


class DependencyInfo(_DependencyInfo): # skipped bases: <type 'object'>
    """ no doc """
    pass

class DependencyInfoClass(DependencyInfo, __ComObject): # skipped bases: <type '_DependencyInfo'>, <type 'object'>
    """ DependencyInfoClass() """
    @property
    def Dependants(self) -> DependencyObjects:
        """ Get: Dependants(self: DependencyInfoClass) -> DependencyObjects """
        ...

    @property
    def Dependencies(self) -> DependencyObjects:
        """ Get: Dependencies(self: DependencyInfoClass) -> DependencyObjects """
        ...

    @property
    def InsufficientPermissions(self) -> DependencyObjects:
        """ Get: InsufficientPermissions(self: DependencyInfoClass) -> DependencyObjects """
        ...

    @property
    def OutOfDateObjects(self) -> DependencyObjects:
        """ Get: OutOfDateObjects(self: DependencyInfoClass) -> DependencyObjects """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: DependencyInfoClass) -> object """
        ...

    @property
    def UnsupportedObjects(self) -> DependencyObjects:
        """ Get: UnsupportedObjects(self: DependencyInfoClass) -> DependencyObjects """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: DependencyInfoClass, dispid: int) -> bool """
        ...


class _DependencyObjects(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _DependencyObjects) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _DependencyObjects) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _DependencyObjects) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _DependencyObjects, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class DependencyObjects(_DependencyObjects): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class DependencyObjectsClass(DependencyObjects, __ComObject): # skipped bases: <type '_DependencyObjects'>, <type 'IEnumerable'>, <type 'object'>
    """ DependencyObjectsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: DependencyObjectsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: DependencyObjectsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: DependencyObjectsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: DependencyObjectsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: DependencyObjectsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class DispAttachmentEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispAttachmentEvents) """
        ...

    def AttachmentCurrent(self): # -> 
        """ AttachmentCurrent(self: DispAttachmentEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispAttachmentEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: DispAttachmentEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispAttachmentEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispAttachmentEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: DispAttachmentEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispAttachmentEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispAttachmentEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispAttachmentEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispAttachmentEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispAttachmentEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispAttachmentEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispAttachmentEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispAttachmentEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispAttachmentEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispAttachmentEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispAttachmentEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_AfterUpdateEventHandler) """
        ...


class DispAttachmentEvents_AttachmentCurrentEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_AttachmentCurrentEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_AttachmentCurrentEventHandler) """
        ...


class DispAttachmentEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispAttachmentEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispAttachmentEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_ChangeEventHandler) """
        ...


class DispAttachmentEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_ClickEventHandler) """
        ...


class DispAttachmentEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispAttachmentEvents_DblClickEventHandler) -> Int16 """
        ...


class DispAttachmentEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispAttachmentEvents_DirtyEventHandler) -> Int16 """
        ...


class DispAttachmentEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_EnterEventHandler) """
        ...


class DispAttachmentEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispAttachmentEvents_ExitEventHandler) -> Int16 """
        ...


class DispAttachmentEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_GotFocusEventHandler) """
        ...


class DispAttachmentEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispAttachmentEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispAttachmentEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispAttachmentEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispAttachmentEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispAttachmentEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispAttachmentEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispAttachmentEvents_LostFocusEventHandler) """
        ...


class DispAttachmentEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispAttachmentEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispAttachmentEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispAttachmentEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispAttachmentEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispAttachmentEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispAttachmentEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispAttachmentEvents_SinkHelper(DispAttachmentEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_AttachmentCurrentDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispBoundObjectFrameEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispBoundObjectFrameEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispBoundObjectFrameEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispBoundObjectFrameEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispBoundObjectFrameEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispBoundObjectFrameEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispBoundObjectFrameEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispBoundObjectFrameEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispBoundObjectFrameEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispBoundObjectFrameEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispBoundObjectFrameEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispBoundObjectFrameEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispBoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispBoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispBoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: DispBoundObjectFrameEvents) -> Int16 """
        ...


class DispBoundObjectFrameEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispBoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...


class DispBoundObjectFrameEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispBoundObjectFrameEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispBoundObjectFrameEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispBoundObjectFrameEvents_ClickEventHandler) """
        ...


class DispBoundObjectFrameEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispBoundObjectFrameEvents_DblClickEventHandler) -> Int16 """
        ...


class DispBoundObjectFrameEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispBoundObjectFrameEvents_EnterEventHandler) """
        ...


class DispBoundObjectFrameEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispBoundObjectFrameEvents_ExitEventHandler) -> Int16 """
        ...


class DispBoundObjectFrameEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispBoundObjectFrameEvents_GotFocusEventHandler) """
        ...


class DispBoundObjectFrameEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispBoundObjectFrameEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispBoundObjectFrameEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispBoundObjectFrameEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispBoundObjectFrameEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispBoundObjectFrameEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispBoundObjectFrameEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispBoundObjectFrameEvents_LostFocusEventHandler) """
        ...


class DispBoundObjectFrameEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispBoundObjectFrameEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispBoundObjectFrameEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispBoundObjectFrameEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispBoundObjectFrameEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispBoundObjectFrameEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispBoundObjectFrameEvents_SinkHelper(DispBoundObjectFrameEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UpdatedDelegate = ...


class DispBoundObjectFrameEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispBoundObjectFrameEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: DispBoundObjectFrameEvents_UpdatedEventHandler) -> Int16 """
        ...


class DispCheckBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispCheckBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispCheckBoxEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispCheckBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispCheckBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispCheckBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispCheckBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispCheckBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispCheckBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispCheckBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispCheckBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispCheckBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispCheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispCheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispCheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispCheckBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCheckBoxEvents_AfterUpdateEventHandler) """
        ...


class DispCheckBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCheckBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispCheckBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCheckBoxEvents_ClickEventHandler) """
        ...


class DispCheckBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCheckBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class DispCheckBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCheckBoxEvents_EnterEventHandler) """
        ...


class DispCheckBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCheckBoxEvents_ExitEventHandler) -> Int16 """
        ...


class DispCheckBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCheckBoxEvents_GotFocusEventHandler) """
        ...


class DispCheckBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispCheckBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispCheckBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispCheckBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispCheckBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispCheckBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispCheckBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCheckBoxEvents_LostFocusEventHandler) """
        ...


class DispCheckBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCheckBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCheckBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCheckBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCheckBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCheckBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCheckBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCheckBoxEvents_SinkHelper(DispCheckBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispChildLabelEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispChildLabelEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispChildLabelEvents_SinkHelper(DispChildLabelEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class DispComboBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispComboBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispComboBoxEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: DispComboBoxEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispComboBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispComboBoxEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: DispComboBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispComboBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispComboBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispComboBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispComboBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispComboBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispComboBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispComboBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def NotInList(self, NewData, Response) -> Tuple_[str, Int16]:
        """ NotInList(self: DispComboBoxEvents) -> (str, Int16) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: DispComboBoxEvents) -> Int16 """
        ...


class DispComboBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_AfterUpdateEventHandler) """
        ...


class DispComboBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispComboBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispComboBoxEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_ChangeEventHandler) """
        ...


class DispComboBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_ClickEventHandler) """
        ...


class DispComboBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispComboBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class DispComboBoxEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispComboBoxEvents_DirtyEventHandler) -> Int16 """
        ...


class DispComboBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_EnterEventHandler) """
        ...


class DispComboBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispComboBoxEvents_ExitEventHandler) -> Int16 """
        ...


class DispComboBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_GotFocusEventHandler) """
        ...


class DispComboBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispComboBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispComboBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispComboBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispComboBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispComboBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispComboBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispComboBoxEvents_LostFocusEventHandler) """
        ...


class DispComboBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispComboBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispComboBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispComboBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispComboBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispComboBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispComboBoxEvents_NotInListEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_NotInListEventHandler(: object, : UIntPtr) """
    def Invoke(self, NewData, Response) -> Tuple_[str, Int16]:
        """ Invoke(self: DispComboBoxEvents_NotInListEventHandler) -> (str, Int16) """
        ...


class DispComboBoxEvents_SinkHelper(DispComboBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_NotInListDelegate = ...
    m_UndoDelegate = ...


class DispComboBoxEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispComboBoxEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispComboBoxEvents_UndoEventHandler) -> Int16 """
        ...


class DispCommandButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispCommandButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispCommandButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispCommandButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispCommandButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispCommandButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispCommandButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispCommandButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispCommandButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispCommandButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispCommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispCommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispCommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispCommandButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCommandButtonEvents_ClickEventHandler) """
        ...


class DispCommandButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCommandButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class DispCommandButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCommandButtonEvents_EnterEventHandler) """
        ...


class DispCommandButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCommandButtonEvents_ExitEventHandler) -> Int16 """
        ...


class DispCommandButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCommandButtonEvents_GotFocusEventHandler) """
        ...


class DispCommandButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispCommandButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispCommandButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispCommandButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispCommandButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispCommandButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispCommandButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCommandButtonEvents_LostFocusEventHandler) """
        ...


class DispCommandButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCommandButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCommandButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCommandButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCommandButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCommandButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispCommandButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispCommandButtonEvents_SinkHelper(DispCommandButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispCustomControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: DispCustomControlEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispCustomControlEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispCustomControlEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispCustomControlEvents) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: DispCustomControlEvents) -> Int16 """
        ...


class DispCustomControlEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCustomControlEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCustomControlEvents_EnterEventHandler) """
        ...


class DispCustomControlEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCustomControlEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispCustomControlEvents_ExitEventHandler) -> Int16 """
        ...


class DispCustomControlEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCustomControlEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCustomControlEvents_GotFocusEventHandler) """
        ...


class DispCustomControlEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCustomControlEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispCustomControlEvents_LostFocusEventHandler) """
        ...


class DispCustomControlEvents_SinkHelper(DispCustomControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_LostFocusDelegate = ...
    m_UpdatedDelegate = ...


class DispCustomControlEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispCustomControlEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: DispCustomControlEvents_UpdatedEventHandler) -> Int16 """
        ...


class DispCustomControlInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispCustomControlInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispCustomControlInReportEvents_SinkHelper(DispCustomControlInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class DispEmptyCellEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispEmptyCellEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispEmptyCellEvents_SinkHelper(DispEmptyCellEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class DispImageEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispImageEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispImageEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispImageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispImageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispImageEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispImageEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispImageEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispImageEvents_ClickEventHandler) """
        ...


class DispImageEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispImageEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispImageEvents_DblClickEventHandler) -> Int16 """
        ...


class DispImageEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispImageEvents_Event, : DispImageEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispImageEvents_Event, : DispImageEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispImageEvents_Event, : DispImageEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispImageEvents_Event, : DispImageEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispImageEvents_Event, : DispImageEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispImageEvents_Event, : DispImageEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispImageEvents_Event, : DispImageEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispImageEvents_Event, : DispImageEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispImageEvents_Event, : DispImageEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispImageEvents_Event, : DispImageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispImageEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispImageEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispImageEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispImageEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispImageEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispImageEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispImageEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispImageEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispImageEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispImageEvents_SinkHelper(DispImageEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispLabelEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispLabelEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispLabelEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispLabelEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispLabelEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispLabelEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispLabelEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispLabelEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispLabelEvents_ClickEventHandler) """
        ...


class DispLabelEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispLabelEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispLabelEvents_DblClickEventHandler) -> Int16 """
        ...


class DispLabelEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispLabelEvents_Event, : DispLabelEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispLabelEvents_Event, : DispLabelEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispLabelEvents_Event, : DispLabelEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispLabelEvents_Event, : DispLabelEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispLabelEvents_Event, : DispLabelEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispLabelEvents_Event, : DispLabelEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispLabelEvents_Event, : DispLabelEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispLabelEvents_Event, : DispLabelEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispLabelEvents_Event, : DispLabelEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispLabelEvents_Event, : DispLabelEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispLabelEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispLabelEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispLabelEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispLabelEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispLabelEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispLabelEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispLabelEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispLabelEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispLabelEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispLabelEvents_SinkHelper(DispLabelEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispLineEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispLineEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispLineEvents_SinkHelper(DispLineEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class DispListBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispListBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispListBoxEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispListBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispListBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispListBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispListBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispListBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispListBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispListBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispListBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispListBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispListBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispListBoxEvents_AfterUpdateEventHandler) """
        ...


class DispListBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispListBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispListBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispListBoxEvents_ClickEventHandler) """
        ...


class DispListBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispListBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class DispListBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispListBoxEvents_EnterEventHandler) """
        ...


class DispListBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispListBoxEvents_Event, : DispListBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispListBoxEvents_Event, : DispListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispListBoxEvents_Event, : DispListBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispListBoxEvents_Event, : DispListBoxEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispListBoxEvents_Event, : DispListBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispListBoxEvents_Event, : DispListBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispListBoxEvents_Event, : DispListBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispListBoxEvents_Event, : DispListBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispListBoxEvents_Event, : DispListBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispListBoxEvents_Event, : DispListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispListBoxEvents_Event, : DispListBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispListBoxEvents_Event, : DispListBoxEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispListBoxEvents_Event, : DispListBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispListBoxEvents_Event, : DispListBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispListBoxEvents_Event, : DispListBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispListBoxEvents_Event, : DispListBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispListBoxEvents_Event, : DispListBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispListBoxEvents_Event, : DispListBoxEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispListBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispListBoxEvents_ExitEventHandler) -> Int16 """
        ...


class DispListBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispListBoxEvents_GotFocusEventHandler) """
        ...


class DispListBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispListBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispListBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispListBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispListBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispListBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispListBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispListBoxEvents_LostFocusEventHandler) """
        ...


class DispListBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispListBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispListBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispListBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispListBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispListBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispListBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispListBoxEvents_SinkHelper(DispListBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispNavigationButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispNavigationButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispNavigationButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispNavigationButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispNavigationButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispNavigationButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispNavigationButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispNavigationButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispNavigationButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispNavigationButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispNavigationButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispNavigationButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispNavigationButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationButtonEvents_ClickEventHandler) """
        ...


class DispNavigationButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class DispNavigationButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationButtonEvents_EnterEventHandler) """
        ...


class DispNavigationButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispNavigationButtonEvents_Event, : DispNavigationButtonEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispNavigationButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationButtonEvents_ExitEventHandler) -> Int16 """
        ...


class DispNavigationButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationButtonEvents_GotFocusEventHandler) """
        ...


class DispNavigationButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispNavigationButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispNavigationButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispNavigationButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispNavigationButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispNavigationButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispNavigationButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationButtonEvents_LostFocusEventHandler) """
        ...


class DispNavigationButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationButtonEvents_SinkHelper(DispNavigationButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispNavigationControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispNavigationControlEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispNavigationControlEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: DispNavigationControlEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispNavigationControlEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispNavigationControlEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: DispNavigationControlEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispNavigationControlEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispNavigationControlEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispNavigationControlEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispNavigationControlEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispNavigationControlEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispNavigationControlEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispNavigationControlEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispNavigationControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispNavigationControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispNavigationControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: DispNavigationControlEvents) -> Int16 """
        ...


class DispNavigationControlEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_AfterUpdateEventHandler) """
        ...


class DispNavigationControlEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispNavigationControlEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_ChangeEventHandler) """
        ...


class DispNavigationControlEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_ClickEventHandler) """
        ...


class DispNavigationControlEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_DblClickEventHandler) -> Int16 """
        ...


class DispNavigationControlEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_DirtyEventHandler) -> Int16 """
        ...


class DispNavigationControlEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_EnterEventHandler) """
        ...


class DispNavigationControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseUpEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_UndoEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_MouseUpEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: DispNavigationControlEvents_Event, : DispNavigationControlEvents_UndoEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Undo = ...


class DispNavigationControlEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_ExitEventHandler) -> Int16 """
        ...


class DispNavigationControlEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_GotFocusEventHandler) """
        ...


class DispNavigationControlEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispNavigationControlEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispNavigationControlEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispNavigationControlEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispNavigationControlEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispNavigationControlEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispNavigationControlEvents_LostFocusEventHandler) """
        ...


class DispNavigationControlEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationControlEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationControlEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationControlEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationControlEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispNavigationControlEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispNavigationControlEvents_SinkHelper(DispNavigationControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UndoDelegate = ...


class DispNavigationControlEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispNavigationControlEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispNavigationControlEvents_UndoEventHandler) -> Int16 """
        ...


class DispObjectFrameEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispObjectFrameEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispObjectFrameEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispObjectFrameEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispObjectFrameEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispObjectFrameEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispObjectFrameEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: DispObjectFrameEvents) -> Int16 """
        ...


class DispObjectFrameEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispObjectFrameEvents_ClickEventHandler) """
        ...


class DispObjectFrameEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispObjectFrameEvents_DblClickEventHandler) -> Int16 """
        ...


class DispObjectFrameEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispObjectFrameEvents_EnterEventHandler) """
        ...


class DispObjectFrameEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_GotFocusEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseUpEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_UpdatedEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_GotFocusEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_MouseUpEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: DispObjectFrameEvents_Event, : DispObjectFrameEvents_UpdatedEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...


class DispObjectFrameEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispObjectFrameEvents_ExitEventHandler) -> Int16 """
        ...


class DispObjectFrameEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispObjectFrameEvents_GotFocusEventHandler) """
        ...


class DispObjectFrameEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispObjectFrameEvents_LostFocusEventHandler) """
        ...


class DispObjectFrameEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispObjectFrameEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispObjectFrameEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispObjectFrameEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispObjectFrameEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispObjectFrameEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispObjectFrameEvents_SinkHelper(DispObjectFrameEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UpdatedDelegate = ...


class DispObjectFrameEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispObjectFrameEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: DispObjectFrameEvents_UpdatedEventHandler) -> Int16 """
        ...


class DispOptionButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispOptionButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispOptionButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispOptionButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispOptionButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispOptionButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispOptionButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispOptionButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispOptionButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispOptionButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispOptionButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispOptionButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispOptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispOptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispOptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionButtonEvents_AfterUpdateEventHandler) """
        ...


class DispOptionButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispOptionButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionButtonEvents_ClickEventHandler) """
        ...


class DispOptionButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class DispOptionButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionButtonEvents_EnterEventHandler) """
        ...


class DispOptionButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispOptionButtonEvents_Event, : DispOptionButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispOptionButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionButtonEvents_ExitEventHandler) -> Int16 """
        ...


class DispOptionButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionButtonEvents_GotFocusEventHandler) """
        ...


class DispOptionButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispOptionButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispOptionButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispOptionButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispOptionButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispOptionButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispOptionButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionButtonEvents_LostFocusEventHandler) """
        ...


class DispOptionButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionButtonEvents_SinkHelper(DispOptionButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispOptionGroupEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispOptionGroupEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispOptionGroupEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispOptionGroupEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispOptionGroupEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispOptionGroupEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispOptionGroupEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispOptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispOptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispOptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionGroupEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionGroupEvents_AfterUpdateEventHandler) """
        ...


class DispOptionGroupEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionGroupEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispOptionGroupEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionGroupEvents_ClickEventHandler) """
        ...


class DispOptionGroupEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionGroupEvents_DblClickEventHandler) -> Int16 """
        ...


class DispOptionGroupEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispOptionGroupEvents_EnterEventHandler) """
        ...


class DispOptionGroupEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_ExitEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_ExitEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispOptionGroupEvents_Event, : DispOptionGroupEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispOptionGroupEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispOptionGroupEvents_ExitEventHandler) -> Int16 """
        ...


class DispOptionGroupEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionGroupEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionGroupEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionGroupEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionGroupEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispOptionGroupEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispOptionGroupEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispOptionGroupEvents_SinkHelper(DispOptionGroupEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispPageBreakEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispPageBreakEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class DispPageBreakEvents_SinkHelper(DispPageBreakEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class DispPageEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispPageEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispPageEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispPageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispPageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispPageEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispPageEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPageEvents_ClickEventHandler) """
        ...


class DispPageEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispPageEvents_DblClickEventHandler) -> Int16 """
        ...


class DispPageEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispPageEvents_Event, : DispPageEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispPageEvents_Event, : DispPageEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispPageEvents_Event, : DispPageEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispPageEvents_Event, : DispPageEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispPageEvents_Event, : DispPageEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispPageEvents_Event, : DispPageEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispPageEvents_Event, : DispPageEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispPageEvents_Event, : DispPageEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispPageEvents_Event, : DispPageEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispPageEvents_Event, : DispPageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispPageEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageEvents_SinkHelper(DispPageEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispPageHdrFtrInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispPageHdrFtrInReportEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispPageHdrFtrInReportEvents) -> Int16 """
        ...

    def Format(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Format(self: DispPageHdrFtrInReportEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispPageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispPageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispPageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Paint(self): # -> 
        """ Paint(self: DispPageHdrFtrInReportEvents) """
        ...

    def Print(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Print(self: DispPageHdrFtrInReportEvents) -> (Int16, Int16) """
        ...


class DispPageHdrFtrInReportEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPageHdrFtrInReportEvents_ClickEventHandler) """
        ...


class DispPageHdrFtrInReportEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispPageHdrFtrInReportEvents_DblClickEventHandler) -> Int16 """
        ...


class DispPageHdrFtrInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def add_Format(self): # -> 
        """ add_Format(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def add_Paint(self): # -> 
        """ add_Paint(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_PaintEventHandler) """
        ...

    def add_Print(self): # -> 
        """ add_Print(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def remove_Format(self): # -> 
        """ remove_Format(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_PaintEventHandler) """
        ...

    def remove_Print(self): # -> 
        """ remove_Print(self: DispPageHdrFtrInReportEvents_Event, : DispPageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    Print = ...


class DispPageHdrFtrInReportEvents_FormatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_FormatEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispPageHdrFtrInReportEvents_FormatEventHandler) -> (Int16, Int16) """
        ...


class DispPageHdrFtrInReportEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageHdrFtrInReportEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageHdrFtrInReportEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageHdrFtrInReportEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageHdrFtrInReportEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPageHdrFtrInReportEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPageHdrFtrInReportEvents_PaintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_PaintEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPageHdrFtrInReportEvents_PaintEventHandler) """
        ...


class DispPageHdrFtrInReportEvents_PrintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPageHdrFtrInReportEvents_PrintEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispPageHdrFtrInReportEvents_PrintEventHandler) -> (Int16, Int16) """
        ...


class DispPageHdrFtrInReportEvents_SinkHelper(DispPageHdrFtrInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_FormatDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PaintDelegate = ...
    m_PrintDelegate = ...


class DispPaletteButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispPaletteButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispPaletteButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispPaletteButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispPaletteButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispPaletteButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispPaletteButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispPaletteButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispPaletteButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispPaletteButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispPaletteButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispPaletteButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispPaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispPaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispPaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispPaletteButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPaletteButtonEvents_AfterUpdateEventHandler) """
        ...


class DispPaletteButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispPaletteButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispPaletteButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPaletteButtonEvents_ClickEventHandler) """
        ...


class DispPaletteButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispPaletteButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class DispPaletteButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPaletteButtonEvents_EnterEventHandler) """
        ...


class DispPaletteButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispPaletteButtonEvents_Event, : DispPaletteButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispPaletteButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispPaletteButtonEvents_ExitEventHandler) -> Int16 """
        ...


class DispPaletteButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPaletteButtonEvents_GotFocusEventHandler) """
        ...


class DispPaletteButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispPaletteButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispPaletteButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispPaletteButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispPaletteButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispPaletteButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispPaletteButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispPaletteButtonEvents_LostFocusEventHandler) """
        ...


class DispPaletteButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPaletteButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPaletteButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPaletteButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPaletteButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispPaletteButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispPaletteButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispPaletteButtonEvents_SinkHelper(DispPaletteButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispRectangleEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispRectangleEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispRectangleEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispRectangleEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispRectangleEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispRectangleEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispRectangleEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispRectangleEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispRectangleEvents_ClickEventHandler) """
        ...


class DispRectangleEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispRectangleEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispRectangleEvents_DblClickEventHandler) -> Int16 """
        ...


class DispRectangleEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispRectangleEvents_Event, : DispRectangleEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispRectangleEvents_Event, : DispRectangleEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispRectangleEvents_Event, : DispRectangleEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispRectangleEvents_Event, : DispRectangleEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispRectangleEvents_Event, : DispRectangleEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispRectangleEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispRectangleEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispRectangleEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispRectangleEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispRectangleEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispRectangleEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispRectangleEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispRectangleEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispRectangleEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispRectangleEvents_SinkHelper(DispRectangleEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispSectionEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispSectionEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispSectionEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispSectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispSectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispSectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Paint(self): # -> 
        """ Paint(self: DispSectionEvents) """
        ...


class DispSectionEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSectionEvents_ClickEventHandler) """
        ...


class DispSectionEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispSectionEvents_DblClickEventHandler) -> Int16 """
        ...


class DispSectionEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispSectionEvents_Event, : DispSectionEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispSectionEvents_Event, : DispSectionEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispSectionEvents_Event, : DispSectionEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispSectionEvents_Event, : DispSectionEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispSectionEvents_Event, : DispSectionEvents_MouseUpEventHandler) """
        ...

    def add_Paint(self): # -> 
        """ add_Paint(self: DispSectionEvents_Event, : DispSectionEvents_PaintEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispSectionEvents_Event, : DispSectionEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispSectionEvents_Event, : DispSectionEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispSectionEvents_Event, : DispSectionEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispSectionEvents_Event, : DispSectionEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispSectionEvents_Event, : DispSectionEvents_MouseUpEventHandler) """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: DispSectionEvents_Event, : DispSectionEvents_PaintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...


class DispSectionEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionEvents_PaintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionEvents_PaintEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSectionEvents_PaintEventHandler) """
        ...


class DispSectionEvents_SinkHelper(DispSectionEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PaintDelegate = ...


class DispSectionInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: DispSectionInReportEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispSectionInReportEvents) -> Int16 """
        ...

    def Format(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Format(self: DispSectionInReportEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispSectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispSectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispSectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Paint(self): # -> 
        """ Paint(self: DispSectionInReportEvents) """
        ...

    def Print(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Print(self: DispSectionInReportEvents) -> (Int16, Int16) """
        ...

    def Retreat(self): # -> 
        """ Retreat(self: DispSectionInReportEvents) """
        ...


class DispSectionInReportEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSectionInReportEvents_ClickEventHandler) """
        ...


class DispSectionInReportEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispSectionInReportEvents_DblClickEventHandler) -> Int16 """
        ...


class DispSectionInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_DblClickEventHandler) """
        ...

    def add_Format(self): # -> 
        """ add_Format(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_FormatEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseUpEventHandler) """
        ...

    def add_Paint(self): # -> 
        """ add_Paint(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_PaintEventHandler) """
        ...

    def add_Print(self): # -> 
        """ add_Print(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_PrintEventHandler) """
        ...

    def add_Retreat(self): # -> 
        """ add_Retreat(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_RetreatEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_DblClickEventHandler) """
        ...

    def remove_Format(self): # -> 
        """ remove_Format(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_FormatEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_MouseUpEventHandler) """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_PaintEventHandler) """
        ...

    def remove_Print(self): # -> 
        """ remove_Print(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_PrintEventHandler) """
        ...

    def remove_Retreat(self): # -> 
        """ remove_Retreat(self: DispSectionInReportEvents_Event, : DispSectionInReportEvents_RetreatEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    Print = ...
    Retreat = ...


class DispSectionInReportEvents_FormatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_FormatEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispSectionInReportEvents_FormatEventHandler) -> (Int16, Int16) """
        ...


class DispSectionInReportEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionInReportEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionInReportEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionInReportEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionInReportEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispSectionInReportEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispSectionInReportEvents_PaintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_PaintEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSectionInReportEvents_PaintEventHandler) """
        ...


class DispSectionInReportEvents_PrintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_PrintEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispSectionInReportEvents_PrintEventHandler) -> (Int16, Int16) """
        ...


class DispSectionInReportEvents_RetreatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSectionInReportEvents_RetreatEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSectionInReportEvents_RetreatEventHandler) """
        ...


class DispSectionInReportEvents_SinkHelper(DispSectionInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_FormatDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PaintDelegate = ...
    m_PrintDelegate = ...
    m_RetreatDelegate = ...


class DispSubFormEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: DispSubFormEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispSubFormEvents) -> Int16 """
        ...


class DispSubFormEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSubFormEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSubFormEvents_EnterEventHandler) """
        ...


class DispSubFormEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: DispSubFormEvents_Event, : DispSubFormEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispSubFormEvents_Event, : DispSubFormEvents_ExitEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispSubFormEvents_Event, : DispSubFormEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispSubFormEvents_Event, : DispSubFormEvents_ExitEventHandler) """
        ...

    Enter = ...
    Exit = ...


class DispSubFormEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSubFormEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispSubFormEvents_ExitEventHandler) -> Int16 """
        ...


class DispSubFormEvents_SinkHelper(DispSubFormEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...


class DispSubReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: DispSubReportEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispSubReportEvents) -> Int16 """
        ...


class DispSubReportEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSubReportEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispSubReportEvents_EnterEventHandler) """
        ...


class DispSubReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: DispSubReportEvents_Event, : DispSubReportEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispSubReportEvents_Event, : DispSubReportEvents_ExitEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispSubReportEvents_Event, : DispSubReportEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispSubReportEvents_Event, : DispSubReportEvents_ExitEventHandler) """
        ...

    Enter = ...
    Exit = ...


class DispSubReportEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispSubReportEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispSubReportEvents_ExitEventHandler) -> Int16 """
        ...


class DispSubReportEvents_SinkHelper(DispSubReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...


class DispTabControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Change(self): # -> 
        """ Change(self: DispTabControlEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispTabControlEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispTabControlEvents) -> Int16 """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispTabControlEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispTabControlEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispTabControlEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispTabControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispTabControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispTabControlEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispTabControlEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTabControlEvents_ChangeEventHandler) """
        ...


class DispTabControlEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTabControlEvents_ClickEventHandler) """
        ...


class DispTabControlEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTabControlEvents_DblClickEventHandler) -> Int16 """
        ...


class DispTabControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Change(self): # -> 
        """ add_Change(self: DispTabControlEvents_Event, : DispTabControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispTabControlEvents_Event, : DispTabControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispTabControlEvents_Event, : DispTabControlEvents_DblClickEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyUpEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseUpEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispTabControlEvents_Event, : DispTabControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispTabControlEvents_Event, : DispTabControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispTabControlEvents_Event, : DispTabControlEvents_DblClickEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispTabControlEvents_Event, : DispTabControlEvents_KeyUpEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispTabControlEvents_Event, : DispTabControlEvents_MouseUpEventHandler) """
        ...

    Change = ...
    Click = ...
    DblClick = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispTabControlEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispTabControlEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispTabControlEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispTabControlEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispTabControlEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispTabControlEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispTabControlEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTabControlEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTabControlEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTabControlEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTabControlEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTabControlEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTabControlEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTabControlEvents_SinkHelper(DispTabControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispTextBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispTextBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispTextBoxEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: DispTextBoxEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispTextBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispTextBoxEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: DispTextBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispTextBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispTextBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispTextBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispTextBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispTextBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispTextBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispTextBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispTextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispTextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispTextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: DispTextBoxEvents) -> Int16 """
        ...


class DispTextBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_AfterUpdateEventHandler) """
        ...


class DispTextBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTextBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispTextBoxEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_ChangeEventHandler) """
        ...


class DispTextBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_ClickEventHandler) """
        ...


class DispTextBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTextBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class DispTextBoxEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTextBoxEvents_DirtyEventHandler) -> Int16 """
        ...


class DispTextBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_EnterEventHandler) """
        ...


class DispTextBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispTextBoxEvents_Event, : DispTextBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispTextBoxEvents_Event, : DispTextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispTextBoxEvents_Event, : DispTextBoxEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: DispTextBoxEvents_Event, : DispTextBoxEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispTextBoxEvents_Event, : DispTextBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispTextBoxEvents_Event, : DispTextBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispTextBoxEvents_Event, : DispTextBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseUpEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: DispTextBoxEvents_Event, : DispTextBoxEvents_UndoEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispTextBoxEvents_Event, : DispTextBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispTextBoxEvents_Event, : DispTextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispTextBoxEvents_Event, : DispTextBoxEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: DispTextBoxEvents_Event, : DispTextBoxEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispTextBoxEvents_Event, : DispTextBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispTextBoxEvents_Event, : DispTextBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispTextBoxEvents_Event, : DispTextBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispTextBoxEvents_Event, : DispTextBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispTextBoxEvents_Event, : DispTextBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispTextBoxEvents_Event, : DispTextBoxEvents_MouseUpEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: DispTextBoxEvents_Event, : DispTextBoxEvents_UndoEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Undo = ...


class DispTextBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTextBoxEvents_ExitEventHandler) -> Int16 """
        ...


class DispTextBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_GotFocusEventHandler) """
        ...


class DispTextBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispTextBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispTextBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispTextBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispTextBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispTextBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispTextBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispTextBoxEvents_LostFocusEventHandler) """
        ...


class DispTextBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTextBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTextBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTextBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTextBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispTextBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispTextBoxEvents_SinkHelper(DispTextBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UndoDelegate = ...


class DispTextBoxEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispTextBoxEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispTextBoxEvents_UndoEventHandler) -> Int16 """
        ...


class DispToggleButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispToggleButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispToggleButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: DispToggleButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispToggleButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispToggleButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispToggleButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispToggleButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispToggleButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispToggleButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispToggleButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispToggleButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class DispToggleButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispToggleButtonEvents_AfterUpdateEventHandler) """
        ...


class DispToggleButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispToggleButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispToggleButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispToggleButtonEvents_ClickEventHandler) """
        ...


class DispToggleButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispToggleButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class DispToggleButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispToggleButtonEvents_EnterEventHandler) """
        ...


class DispToggleButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispToggleButtonEvents_Event, : DispToggleButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class DispToggleButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispToggleButtonEvents_ExitEventHandler) -> Int16 """
        ...


class DispToggleButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispToggleButtonEvents_GotFocusEventHandler) """
        ...


class DispToggleButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispToggleButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispToggleButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispToggleButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispToggleButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispToggleButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispToggleButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispToggleButtonEvents_LostFocusEventHandler) """
        ...


class DispToggleButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispToggleButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispToggleButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispToggleButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispToggleButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispToggleButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispToggleButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispToggleButtonEvents_SinkHelper(DispToggleButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class DispWebBrowserControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: DispWebBrowserControlEvents) """
        ...

    def BeforeNavigate2(self, pDisp, URL, flags, TargetFrameName, PostData, Headers, Cancel) -> Tuple_[object, object, object, object, object, bool]:
        """ BeforeNavigate2(self: DispWebBrowserControlEvents, pDisp: object, URL: object, flags: object, TargetFrameName: object, PostData: object, Headers: object) -> (object, object, object, object, object, bool) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: DispWebBrowserControlEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: DispWebBrowserControlEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: DispWebBrowserControlEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: DispWebBrowserControlEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: DispWebBrowserControlEvents) -> Int16 """
        ...

    def DocumentComplete(self, pDisp:object, URL:object) -> object:
        """ DocumentComplete(self: DispWebBrowserControlEvents, pDisp: object, URL: object) -> object """
        ...

    def Enter(self): # -> 
        """ Enter(self: DispWebBrowserControlEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: DispWebBrowserControlEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: DispWebBrowserControlEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: DispWebBrowserControlEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: DispWebBrowserControlEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: DispWebBrowserControlEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: DispWebBrowserControlEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: DispWebBrowserControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: DispWebBrowserControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: DispWebBrowserControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def NavigateError(self, pDisp, URL, TargetFrameName, StatusCode, Cancel) -> Tuple_[object, object, object, bool]:
        """ NavigateError(self: DispWebBrowserControlEvents, pDisp: object, URL: object, TargetFrameName: object, StatusCode: object) -> (object, object, object, bool) """
        ...

    def ProgressChange(self, Progress:int, ProgressMax:int): # -> 
        """ ProgressChange(self: DispWebBrowserControlEvents, Progress: int, ProgressMax: int) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: DispWebBrowserControlEvents) -> Int16 """
        ...


class DispWebBrowserControlEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_AfterUpdateEventHandler) """
        ...


class DispWebBrowserControlEvents_BeforeNavigate2EventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_BeforeNavigate2EventHandler(: object, : UIntPtr) """
    def Invoke(self, pDisp, URL, flags, TargetFrameName, PostData, Headers, Cancel) -> Tuple_[object, object, object, object, object, bool]:
        """ Invoke(self: DispWebBrowserControlEvents_BeforeNavigate2EventHandler, pDisp: object, URL: object, flags: object, TargetFrameName: object, PostData: object, Headers: object) -> (object, object, object, object, object, bool) """
        ...


class DispWebBrowserControlEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class DispWebBrowserControlEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_ChangeEventHandler) """
        ...


class DispWebBrowserControlEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_ClickEventHandler) """
        ...


class DispWebBrowserControlEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_DblClickEventHandler) -> Int16 """
        ...


class DispWebBrowserControlEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_DirtyEventHandler) -> Int16 """
        ...


class DispWebBrowserControlEvents_DocumentCompleteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_DocumentCompleteEventHandler(: object, : UIntPtr) """
    def Invoke(self, pDisp:object, URL:object) -> object:
        """ Invoke(self: DispWebBrowserControlEvents_DocumentCompleteEventHandler, pDisp: object, URL: object) -> object """
        ...


class DispWebBrowserControlEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_EnterEventHandler) """
        ...


class DispWebBrowserControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeNavigate2(self): # -> 
        """ add_BeforeNavigate2(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_BeforeNavigate2EventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DirtyEventHandler) """
        ...

    def add_DocumentComplete(self): # -> 
        """ add_DocumentComplete(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DocumentCompleteEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseUpEventHandler) """
        ...

    def add_NavigateError(self): # -> 
        """ add_NavigateError(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_NavigateErrorEventHandler) """
        ...

    def add_ProgressChange(self): # -> 
        """ add_ProgressChange(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ProgressChangeEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_UpdatedEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeNavigate2(self): # -> 
        """ remove_BeforeNavigate2(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_BeforeNavigate2EventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DirtyEventHandler) """
        ...

    def remove_DocumentComplete(self): # -> 
        """ remove_DocumentComplete(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_DocumentCompleteEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_MouseUpEventHandler) """
        ...

    def remove_NavigateError(self): # -> 
        """ remove_NavigateError(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_NavigateErrorEventHandler) """
        ...

    def remove_ProgressChange(self): # -> 
        """ remove_ProgressChange(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_ProgressChangeEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: DispWebBrowserControlEvents_Event, : DispWebBrowserControlEvents_UpdatedEventHandler) """
        ...

    AfterUpdate = ...
    BeforeNavigate2 = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DocumentComplete = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NavigateError = ...
    ProgressChange = ...
    Updated = ...


class DispWebBrowserControlEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_ExitEventHandler) -> Int16 """
        ...


class DispWebBrowserControlEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_GotFocusEventHandler) """
        ...


class DispWebBrowserControlEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispWebBrowserControlEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class DispWebBrowserControlEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_KeyPressEventHandler) -> Int16 """
        ...


class DispWebBrowserControlEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: DispWebBrowserControlEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class DispWebBrowserControlEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_LostFocusEventHandler) """
        ...


class DispWebBrowserControlEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispWebBrowserControlEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispWebBrowserControlEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispWebBrowserControlEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispWebBrowserControlEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: DispWebBrowserControlEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class DispWebBrowserControlEvents_NavigateErrorEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_NavigateErrorEventHandler(: object, : UIntPtr) """
    def Invoke(self, pDisp, URL, TargetFrameName, StatusCode, Cancel) -> Tuple_[object, object, object, bool]:
        """ Invoke(self: DispWebBrowserControlEvents_NavigateErrorEventHandler, pDisp: object, URL: object, TargetFrameName: object, StatusCode: object) -> (object, object, object, bool) """
        ...


class DispWebBrowserControlEvents_ProgressChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_ProgressChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Progress:int, ProgressMax:int): # -> 
        """ Invoke(self: DispWebBrowserControlEvents_ProgressChangeEventHandler, Progress: int, ProgressMax: int) """
        ...


class DispWebBrowserControlEvents_SinkHelper(DispWebBrowserControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeNavigate2Delegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_DocumentCompleteDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_NavigateErrorDelegate = ...
    m_ProgressChangeDelegate = ...
    m_UpdatedDelegate = ...


class DispWebBrowserControlEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ DispWebBrowserControlEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: DispWebBrowserControlEvents_UpdatedEventHandler) -> Int16 """
        ...


class DoCmd: # skipped bases: <type 'object'>
    """ no doc """
    def AddMenu(self, MenuName:object, MenuMacroName:object, StatusBarText:object): # -> 
        """ AddMenu(self: DoCmd, MenuName: object, MenuMacroName: object, StatusBarText: object) """
        ...

    def ApplyFilter(self, FilterName:object, WhereCondition:object, ControlName:object = ...): # -> 
        """ ApplyFilter(self: DoCmd, FilterName: object, WhereCondition: object)ApplyFilter(self: DoCmd, FilterName: object, WhereCondition: object, ControlName: object) """
        ...

    def Beep(self): # -> 
        """ Beep(self: DoCmd) """
        ...

    def BrowseTo(self, ObjectType:AcBrowseToObjectType, ObjectName:object, PathtoSubformControl:object, WhereCondition:object, Page:object, DataMode:AcFormOpenDataMode): # -> 
        """ BrowseTo(self: DoCmd, ObjectType: AcBrowseToObjectType, ObjectName: object, PathtoSubformControl: object, WhereCondition: object, Page: object, DataMode: AcFormOpenDataMode) """
        ...

    def CancelEvent(self): # -> 
        """ CancelEvent(self: DoCmd) """
        ...

    def ClearMacroError(self): # -> 
        """ ClearMacroError(self: DoCmd) """
        ...

    def Close(self, ObjectType:AcObjectType, ObjectName:object, Save:AcCloseSave): # -> 
        """ Close(self: DoCmd, ObjectType: AcObjectType, ObjectName: object, Save: AcCloseSave) """
        ...

    def CloseDatabase(self): # -> 
        """ CloseDatabase(self: DoCmd) """
        ...

    def CopyDatabaseFile(self, DatabaseFileName:object, OverwriteExistingFile:object, DisconnectAllUsers:object): # -> 
        """ CopyDatabaseFile(self: DoCmd, DatabaseFileName: object, OverwriteExistingFile: object, DisconnectAllUsers: object) """
        ...

    def CopyObject(self, DestinationDatabase:object, NewName:object, SourceObjectType:AcObjectType, SourceObjectName:object): # -> 
        """ CopyObject(self: DoCmd, DestinationDatabase: object, NewName: object, SourceObjectType: AcObjectType, SourceObjectName: object) """
        ...

    def DeleteObject(self, ObjectType:AcObjectType, ObjectName:object): # -> 
        """ DeleteObject(self: DoCmd, ObjectType: AcObjectType, ObjectName: object) """
        ...

    def DoMenuItem(self, MenuBar:object, MenuName:object, Command:object, Subcommand:object, Version:object): # -> 
        """ DoMenuItem(self: DoCmd, MenuBar: object, MenuName: object, Command: object, Subcommand: object, Version: object) """
        ...

    def Echo(self, EchoOn:object, StatusBarText:object): # -> 
        """ Echo(self: DoCmd, EchoOn: object, StatusBarText: object) """
        ...

    def FindNext(self): # -> 
        """ FindNext(self: DoCmd) """
        ...

    def FindRecord(self, FindWhat:object, Match:AcFindMatch, MatchCase:object, Search:AcSearchDirection, SearchAsFormatted:object, OnlyCurrentField:AcFindField, FindFirst:object): # -> 
        """ FindRecord(self: DoCmd, FindWhat: object, Match: AcFindMatch, MatchCase: object, Search: AcSearchDirection, SearchAsFormatted: object, OnlyCurrentField: AcFindField, FindFirst: object) """
        ...

    def GoToControl(self, ControlName:object): # -> 
        """ GoToControl(self: DoCmd, ControlName: object) """
        ...

    def GoToPage(self, PageNumber:object, Right:object, Down:object): # -> 
        """ GoToPage(self: DoCmd, PageNumber: object, Right: object, Down: object) """
        ...

    def GoToRecord(self, ObjectType:AcDataObjectType, ObjectName:object, Record:AcRecord, Offset:object): # -> 
        """ GoToRecord(self: DoCmd, ObjectType: AcDataObjectType, ObjectName: object, Record: AcRecord, Offset: object) """
        ...

    def Hourglass(self, HourglassOn:object): # -> 
        """ Hourglass(self: DoCmd, HourglassOn: object) """
        ...

    def LockNavigationPane(self, Lock:object): # -> 
        """ LockNavigationPane(self: DoCmd, Lock: object) """
        ...

    def Maximize(self): # -> 
        """ Maximize(self: DoCmd) """
        ...

    def Minimize(self): # -> 
        """ Minimize(self: DoCmd) """
        ...

    def MoveSize(self, Right:object, Down:object, Width:object, Height:object): # -> 
        """ MoveSize(self: DoCmd, Right: object, Down: object, Width: object, Height: object) """
        ...

    def NavigateTo(self, Category:object, Group:object): # -> 
        """ NavigateTo(self: DoCmd, Category: object, Group: object) """
        ...

    def OpenDataAccessPage(self, DataAccessPageName:object, View:AcDataAccessPageView): # -> 
        """ OpenDataAccessPage(self: DoCmd, DataAccessPageName: object, View: AcDataAccessPageView) """
        ...

    def OpenDiagram(self, DiagramName:object): # -> 
        """ OpenDiagram(self: DoCmd, DiagramName: object) """
        ...

    def OpenForm(self, FormName:object, View:AcFormView, FilterName:object, WhereCondition:object, DataMode:AcFormOpenDataMode, WindowMode:AcWindowMode, OpenArgs:object): # -> 
        """ OpenForm(self: DoCmd, FormName: object, View: AcFormView, FilterName: object, WhereCondition: object, DataMode: AcFormOpenDataMode, WindowMode: AcWindowMode, OpenArgs: object) """
        ...

    def OpenFunction(self, FunctionName:object, View:AcView, DataMode:AcOpenDataMode): # -> 
        """ OpenFunction(self: DoCmd, FunctionName: object, View: AcView, DataMode: AcOpenDataMode) """
        ...

    def OpenModule(self, ModuleName:object, ProcedureName:object): # -> 
        """ OpenModule(self: DoCmd, ModuleName: object, ProcedureName: object) """
        ...

    def OpenQuery(self, QueryName:object, View:AcView, DataMode:AcOpenDataMode): # -> 
        """ OpenQuery(self: DoCmd, QueryName: object, View: AcView, DataMode: AcOpenDataMode) """
        ...

    def OpenReport(self, ReportName:object, View:AcView, FilterName:object, WhereCondition:object, WindowMode:AcWindowMode, OpenArgs:object): # -> 
        """ OpenReport(self: DoCmd, ReportName: object, View: AcView, FilterName: object, WhereCondition: object, WindowMode: AcWindowMode, OpenArgs: object) """
        ...

    def OpenReportOld0(self, ReportName:object, View:AcView, FilterName:object, WhereCondition:object): # -> 
        """ OpenReportOld0(self: DoCmd, ReportName: object, View: AcView, FilterName: object, WhereCondition: object) """
        ...

    def OpenStoredProcedure(self, ProcedureName:object, View:AcView, DataMode:AcOpenDataMode): # -> 
        """ OpenStoredProcedure(self: DoCmd, ProcedureName: object, View: AcView, DataMode: AcOpenDataMode) """
        ...

    def OpenTable(self, TableName:object, View:AcView, DataMode:AcOpenDataMode): # -> 
        """ OpenTable(self: DoCmd, TableName: object, View: AcView, DataMode: AcOpenDataMode) """
        ...

    def OpenView(self, ViewName:object, View:AcView, DataMode:AcOpenDataMode): # -> 
        """ OpenView(self: DoCmd, ViewName: object, View: AcView, DataMode: AcOpenDataMode) """
        ...

    def OutputTo(self, ObjectType:AcOutputObjectType, ObjectName:object, OutputFormat:object, OutputFile:object, AutoStart:object, TemplateFile:object, Encoding:object, OutputQuality:AcExportQuality = ...): # -> 
        """ OutputTo(self: DoCmd, ObjectType: AcOutputObjectType, ObjectName: object, OutputFormat: object, OutputFile: object, AutoStart: object, TemplateFile: object, Encoding: object)OutputTo(self: DoCmd, ObjectType: AcOutputObjectType, ObjectName: object, OutputFormat: object, OutputFile: object, AutoStart: object, TemplateFile: object, Encoding: object, OutputQuality: AcExportQuality) """
        ...

    def OutputToOld0(self, ObjectType:AcOutputObjectType, ObjectName:object, OutputFormat:object, OutputFile:object, AutoStart:object, TemplateFile:object): # -> 
        """ OutputToOld0(self: DoCmd, ObjectType: AcOutputObjectType, ObjectName: object, OutputFormat: object, OutputFile: object, AutoStart: object, TemplateFile: object) """
        ...

    def PrintOut(self, PrintRange:AcPrintRange, PageFrom:object, PageTo:object, PrintQuality:AcPrintQuality, Copies:object, CollateCopies:object): # -> 
        """ PrintOut(self: DoCmd, PrintRange: AcPrintRange, PageFrom: object, PageTo: object, PrintQuality: AcPrintQuality, Copies: object, CollateCopies: object) """
        ...

    def Quit(self, Options:AcQuitOption): # -> 
        """ Quit(self: DoCmd, Options: AcQuitOption) """
        ...

    def RefreshRecord(self): # -> 
        """ RefreshRecord(self: DoCmd) """
        ...

    def Rename(self, NewName:object, ObjectType:AcObjectType, OldName:object): # -> 
        """ Rename(self: DoCmd, NewName: object, ObjectType: AcObjectType, OldName: object) """
        ...

    def RepaintObject(self, ObjectType:AcObjectType, ObjectName:object): # -> 
        """ RepaintObject(self: DoCmd, ObjectType: AcObjectType, ObjectName: object) """
        ...

    def Requery(self, ControlName:object): # -> 
        """ Requery(self: DoCmd, ControlName: object) """
        ...

    def Restore(self): # -> 
        """ Restore(self: DoCmd) """
        ...

    def RunCommand(self, Command:AcCommand): # -> 
        """ RunCommand(self: DoCmd, Command: AcCommand) """
        ...

    def RunDataMacro(self, MacroName:object): # -> 
        """ RunDataMacro(self: DoCmd, MacroName: object) """
        ...

    def RunMacro(self, MacroName:object, RepeatCount:object, RepeatExpression:object): # -> 
        """ RunMacro(self: DoCmd, MacroName: object, RepeatCount: object, RepeatExpression: object) """
        ...

    def RunSavedImportExport(self, SavedImportExportName:object): # -> 
        """ RunSavedImportExport(self: DoCmd, SavedImportExportName: object) """
        ...

    def RunSQL(self, SQLStatement:object, UseTransaction:object): # -> 
        """ RunSQL(self: DoCmd, SQLStatement: object, UseTransaction: object) """
        ...

    def Save(self, ObjectType:AcObjectType, ObjectName:object): # -> 
        """ Save(self: DoCmd, ObjectType: AcObjectType, ObjectName: object) """
        ...

    def SearchForRecord(self, ObjectType:AcDataObjectType, ObjectName:object, Record:AcRecord, WhereCondition:object): # -> 
        """ SearchForRecord(self: DoCmd, ObjectType: AcDataObjectType, ObjectName: object, Record: AcRecord, WhereCondition: object) """
        ...

    def SelectObject(self, ObjectType:AcObjectType, ObjectName:object, InDatabaseWindow:object): # -> 
        """ SelectObject(self: DoCmd, ObjectType: AcObjectType, ObjectName: object, InDatabaseWindow: object) """
        ...

    def SendObject(self, ObjectType:AcSendObjectType, ObjectName:object, OutputFormat:object, To:object, Cc:object, Bcc:object, Subject:object, MessageText:object, EditMessage:object, TemplateFile:object): # -> 
        """ SendObject(self: DoCmd, ObjectType: AcSendObjectType, ObjectName: object, OutputFormat: object, To: object, Cc: object, Bcc: object, Subject: object, MessageText: object, EditMessage: object, TemplateFile: object) """
        ...

    def SetDisplayedCategories(self, Show:object, Category:object): # -> 
        """ SetDisplayedCategories(self: DoCmd, Show: object, Category: object) """
        ...

    def SetFilter(self, FilterName:object, WhereCondition:object, ControlName:object): # -> 
        """ SetFilter(self: DoCmd, FilterName: object, WhereCondition: object, ControlName: object) """
        ...

    def SetMenuItem(self, MenuIndex:object, CommandIndex:object, SubcommandIndex:object, Flag:object): # -> 
        """ SetMenuItem(self: DoCmd, MenuIndex: object, CommandIndex: object, SubcommandIndex: object, Flag: object) """
        ...

    def SetOrderBy(self, OrderBy:object, ControlName:object): # -> 
        """ SetOrderBy(self: DoCmd, OrderBy: object, ControlName: object) """
        ...

    def SetParameter(self, Name:object, Expression:object): # -> 
        """ SetParameter(self: DoCmd, Name: object, Expression: object) """
        ...

    def SetProperty(self, ControlName:object, Property:AcProperty, Value:object): # -> 
        """ SetProperty(self: DoCmd, ControlName: object, Property: AcProperty, Value: object) """
        ...

    def SetWarnings(self, WarningsOn:object): # -> 
        """ SetWarnings(self: DoCmd, WarningsOn: object) """
        ...

    def ShowAllRecords(self): # -> 
        """ ShowAllRecords(self: DoCmd) """
        ...

    def ShowToolbar(self, ToolbarName:object, Show:AcShowToolbar): # -> 
        """ ShowToolbar(self: DoCmd, ToolbarName: object, Show: AcShowToolbar) """
        ...

    def SingleStep(self): # -> 
        """ SingleStep(self: DoCmd) """
        ...

    def TransferDatabase(self, TransferType:AcDataTransferType, DatabaseType:object, DatabaseName:object, ObjectType:AcObjectType, Source:object, Destination:object, StructureOnly:object, StoreLogin:object): # -> 
        """ TransferDatabase(self: DoCmd, TransferType: AcDataTransferType, DatabaseType: object, DatabaseName: object, ObjectType: AcObjectType, Source: object, Destination: object, StructureOnly: object, StoreLogin: object) """
        ...

    def TransferSharePointList(self, TransferType:AcSharePointListTransferType, SiteAddress:object, ListID:object, ViewID:object, TableName:object, GetLookupDisplayValues:object): # -> 
        """ TransferSharePointList(self: DoCmd, TransferType: AcSharePointListTransferType, SiteAddress: object, ListID: object, ViewID: object, TableName: object, GetLookupDisplayValues: object) """
        ...

    def TransferSpreadsheet(self, TransferType:AcDataTransferType, SpreadsheetType:AcSpreadSheetType, TableName:object, FileName:object, HasFieldNames:object, Range:object, UseOA:object): # -> 
        """ TransferSpreadsheet(self: DoCmd, TransferType: AcDataTransferType, SpreadsheetType: AcSpreadSheetType, TableName: object, FileName: object, HasFieldNames: object, Range: object, UseOA: object) """
        ...

    def TransferSQLDatabase(self, Server:object, Database:object, UseTrustedConnection:object, Login:object, Password:object, TransferCopyData:object): # -> 
        """ TransferSQLDatabase(self: DoCmd, Server: object, Database: object, UseTrustedConnection: object, Login: object, Password: object, TransferCopyData: object) """
        ...

    def TransferText(self, TransferType:AcTextTransferType, SpecificationName:object, TableName:object, FileName:object, HasFieldNames:object, HTMLTableName:object, CodePage:object): # -> 
        """ TransferText(self: DoCmd, TransferType: AcTextTransferType, SpecificationName: object, TableName: object, FileName: object, HasFieldNames: object, HTMLTableName: object, CodePage: object) """
        ...


class _EmptyCell(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _EmptyCell) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _EmptyCell) -> int
        Set: BackColor(self: _EmptyCell) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _EmptyCell) -> Single
        Set: BackShade(self: _EmptyCell) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _EmptyCell) -> Byte
        Set: BackStyle(self: _EmptyCell) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _EmptyCell) -> int
        Set: BackThemeColorIndex(self: _EmptyCell) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _EmptyCell) -> Single
        Set: BackTint(self: _EmptyCell) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _EmptyCell) -> Int16
        Set: BottomPadding(self: _EmptyCell) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _EmptyCell) -> str
        Set: ControlName(self: _EmptyCell) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _EmptyCell) -> Byte
        Set: ControlType(self: _EmptyCell) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _EmptyCell) -> Byte
        Set: DisplayWhen(self: _EmptyCell) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _EmptyCell) -> str
        Set: EventProcPrefix(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _EmptyCell) -> int
        Set: GridlineColor(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _EmptyCell) -> Single
        Set: GridlineShade(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _EmptyCell) -> Byte
        Set: GridlineStyleBottom(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _EmptyCell) -> Byte
        Set: GridlineStyleLeft(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _EmptyCell) -> Byte
        Set: GridlineStyleRight(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _EmptyCell) -> Byte
        Set: GridlineStyleTop(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _EmptyCell) -> int
        Set: GridlineThemeColorIndex(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _EmptyCell) -> Single
        Set: GridlineTint(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _EmptyCell) -> Byte
        Set: GridlineWidthBottom(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _EmptyCell) -> Byte
        Set: GridlineWidthLeft(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _EmptyCell) -> Byte
        Set: GridlineWidthRight(self: _EmptyCell) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _EmptyCell) -> Byte
        Set: GridlineWidthTop(self: _EmptyCell) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _EmptyCell) -> Int16
        Set: Height(self: _EmptyCell) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _EmptyCell) -> int
        Set: HelpContextId(self: _EmptyCell) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _EmptyCell) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _EmptyCell) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _EmptyCell) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _EmptyCell) -> bool
        Set: InSelection(self: _EmptyCell) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _EmptyCell) -> bool
        Set: IsVisible(self: _EmptyCell) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _EmptyCell) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _EmptyCell) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _EmptyCell) -> Int16
        Set: Left(self: _EmptyCell) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _EmptyCell) -> Int16
        Set: LeftPadding(self: _EmptyCell) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _EmptyCell) -> str
        Set: Name(self: _EmptyCell) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _EmptyCell) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _EmptyCell) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _EmptyCell) -> Int16
        Set: RightPadding(self: _EmptyCell) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _EmptyCell) -> Int16
        Set: Section(self: _EmptyCell) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _EmptyCell) -> str
        Set: ShortcutMenuBar(self: _EmptyCell) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _EmptyCell) -> Byte
        Set: SpecialEffect(self: _EmptyCell) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _EmptyCell) -> str
        Set: StatusBarText(self: _EmptyCell) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _EmptyCell) -> str
        Set: Tag(self: _EmptyCell) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _EmptyCell) -> Int16
        Set: Top(self: _EmptyCell) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _EmptyCell) -> Int16
        Set: TopPadding(self: _EmptyCell) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _EmptyCell) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _EmptyCell) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _EmptyCell) -> bool
        Set: Visible(self: _EmptyCell) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _EmptyCell) -> Int16
        Set: Width(self: _EmptyCell) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _EmptyCell) -> str
        Set: _Name(self: _EmptyCell) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _EmptyCell, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _EmptyCell, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _EmptyCell) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _EmptyCell, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class EmptyCell(_EmptyCell, DispEmptyCellEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class EmptyCellClass(__ComObject, EmptyCell): # skipped bases: <type '_EmptyCell'>, <type 'IAccessible'>, <type 'DispEmptyCellEvents_Event'>, <type 'object'>
    """ EmptyCellClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: EmptyCellClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: EmptyCellClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: EmptyCellClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: EmptyCellClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: EmptyCellClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: EmptyCellClass) -> int
        Set: BackColor(self: EmptyCellClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: EmptyCellClass) -> Single
        Set: BackShade(self: EmptyCellClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: EmptyCellClass) -> Byte
        Set: BackStyle(self: EmptyCellClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: EmptyCellClass) -> int
        Set: BackThemeColorIndex(self: EmptyCellClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: EmptyCellClass) -> Single
        Set: BackTint(self: EmptyCellClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: EmptyCellClass) -> Int16
        Set: BottomPadding(self: EmptyCellClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: EmptyCellClass) -> str
        Set: ControlName(self: EmptyCellClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: EmptyCellClass) -> Byte
        Set: ControlType(self: EmptyCellClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: EmptyCellClass) -> Byte
        Set: DisplayWhen(self: EmptyCellClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: EmptyCellClass) -> str
        Set: EventProcPrefix(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: EmptyCellClass) -> int
        Set: GridlineColor(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: EmptyCellClass) -> Single
        Set: GridlineShade(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: EmptyCellClass) -> Byte
        Set: GridlineStyleBottom(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: EmptyCellClass) -> Byte
        Set: GridlineStyleLeft(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: EmptyCellClass) -> Byte
        Set: GridlineStyleRight(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: EmptyCellClass) -> Byte
        Set: GridlineStyleTop(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: EmptyCellClass) -> int
        Set: GridlineThemeColorIndex(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: EmptyCellClass) -> Single
        Set: GridlineTint(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: EmptyCellClass) -> Byte
        Set: GridlineWidthBottom(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: EmptyCellClass) -> Byte
        Set: GridlineWidthLeft(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: EmptyCellClass) -> Byte
        Set: GridlineWidthRight(self: EmptyCellClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: EmptyCellClass) -> Byte
        Set: GridlineWidthTop(self: EmptyCellClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: EmptyCellClass) -> Int16
        Set: Height(self: EmptyCellClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: EmptyCellClass) -> int
        Set: HelpContextId(self: EmptyCellClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: EmptyCellClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: EmptyCellClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: EmptyCellClass) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: EmptyCellClass) -> bool
        Set: InSelection(self: EmptyCellClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: EmptyCellClass) -> bool
        Set: IsVisible(self: EmptyCellClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: EmptyCellClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: EmptyCellClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: EmptyCellClass) -> Int16
        Set: Left(self: EmptyCellClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: EmptyCellClass) -> Int16
        Set: LeftPadding(self: EmptyCellClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: EmptyCellClass) -> str
        Set: Name(self: EmptyCellClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: EmptyCellClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: EmptyCellClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: EmptyCellClass) -> Int16
        Set: RightPadding(self: EmptyCellClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: EmptyCellClass) -> Int16
        Set: Section(self: EmptyCellClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: EmptyCellClass) -> str
        Set: ShortcutMenuBar(self: EmptyCellClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: EmptyCellClass) -> Byte
        Set: SpecialEffect(self: EmptyCellClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: EmptyCellClass) -> str
        Set: StatusBarText(self: EmptyCellClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: EmptyCellClass) -> str
        Set: Tag(self: EmptyCellClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: EmptyCellClass) -> Int16
        Set: Top(self: EmptyCellClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: EmptyCellClass) -> Int16
        Set: TopPadding(self: EmptyCellClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: EmptyCellClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: EmptyCellClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: EmptyCellClass) -> bool
        Set: Visible(self: EmptyCellClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: EmptyCellClass) -> Int16
        Set: Width(self: EmptyCellClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: EmptyCellClass) -> str
        Set: _Name(self: EmptyCellClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: EmptyCellClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: EmptyCellClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: EmptyCellClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: EmptyCellClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: EmptyCellClass, flagsSelect: int, varChild: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: EmptyCellClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: EmptyCellClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: EmptyCellClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: EmptyCellClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Entities(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: Entities) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Entities) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Entities, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class Entity: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: Entity) -> str """
        ...

    @property
    def Operations(self) -> Operations:
        """ Get: Operations(self: Entity) -> Operations """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Entity) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Entity, dispid: int) -> bool """
        ...


class _Form3(IAccessible, IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Form3) -> int
        Set: acHiddenCurrentPage(self: _Form3) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Form3) -> _Control """
        ...

    @property
    def AfterBeginTransaction(self) -> str:
        """
        Get: AfterBeginTransaction(self: _Form3) -> str
        Set: AfterBeginTransaction(self: _Form3) = value
        """
        ...

    @property
    def AfterBeginTransactionMacro(self) -> str:
        """
        Get: AfterBeginTransactionMacro(self: _Form3) -> str
        Set: AfterBeginTransactionMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterCommitTransaction(self) -> str:
        """
        Get: AfterCommitTransaction(self: _Form3) -> str
        Set: AfterCommitTransaction(self: _Form3) = value
        """
        ...

    @property
    def AfterCommitTransactionMacro(self) -> str:
        """
        Get: AfterCommitTransactionMacro(self: _Form3) -> str
        Set: AfterCommitTransactionMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: _Form3) -> str
        Set: AfterDelConfirm(self: _Form3) = value
        """
        ...

    @property
    def AfterDelConfirmMacro(self) -> str:
        """
        Get: AfterDelConfirmMacro(self: _Form3) -> str
        Set: AfterDelConfirmMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterFinalRender(self) -> str:
        """
        Get: AfterFinalRender(self: _Form3) -> str
        Set: AfterFinalRender(self: _Form3) = value
        """
        ...

    @property
    def AfterFinalRenderMacro(self) -> str:
        """
        Get: AfterFinalRenderMacro(self: _Form3) -> str
        Set: AfterFinalRenderMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: _Form3) -> str
        Set: AfterInsert(self: _Form3) = value
        """
        ...

    @property
    def AfterInsertMacro(self) -> str:
        """
        Get: AfterInsertMacro(self: _Form3) -> str
        Set: AfterInsertMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterLayout(self) -> str:
        """
        Get: AfterLayout(self: _Form3) -> str
        Set: AfterLayout(self: _Form3) = value
        """
        ...

    @property
    def AfterLayoutMacro(self) -> str:
        """
        Get: AfterLayoutMacro(self: _Form3) -> str
        Set: AfterLayoutMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterRender(self) -> str:
        """
        Get: AfterRender(self: _Form3) -> str
        Set: AfterRender(self: _Form3) = value
        """
        ...

    @property
    def AfterRenderMacro(self) -> str:
        """
        Get: AfterRenderMacro(self: _Form3) -> str
        Set: AfterRenderMacro(self: _Form3) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Form3) -> str
        Set: AfterUpdate(self: _Form3) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _Form3) -> str
        Set: AfterUpdateMacro(self: _Form3) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: _Form3) -> bool
        Set: AllowAdditions(self: _Form3) = value
        """
        ...

    @property
    def AllowDatasheetView(self) -> bool:
        """
        Get: AllowDatasheetView(self: _Form3) -> bool
        Set: AllowDatasheetView(self: _Form3) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: _Form3) -> bool
        Set: AllowDeletions(self: _Form3) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: _Form3) -> bool
        Set: AllowDesignChanges(self: _Form3) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: _Form3) -> bool
        Set: AllowEditing(self: _Form3) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: _Form3) -> bool
        Set: AllowEdits(self: _Form3) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: _Form3) -> bool
        Set: AllowFilters(self: _Form3) = value
        """
        ...

    @property
    def AllowFormView(self) -> bool:
        """
        Get: AllowFormView(self: _Form3) -> bool
        Set: AllowFormView(self: _Form3) = value
        """
        ...

    @property
    def AllowLayoutView(self) -> bool:
        """
        Get: AllowLayoutView(self: _Form3) -> bool
        Set: AllowLayoutView(self: _Form3) = value
        """
        ...

    @property
    def AllowPivotChartView(self) -> bool:
        """
        Get: AllowPivotChartView(self: _Form3) -> bool
        Set: AllowPivotChartView(self: _Form3) = value
        """
        ...

    @property
    def AllowPivotTableView(self) -> bool:
        """
        Get: AllowPivotTableView(self: _Form3) -> bool
        Set: AllowPivotTableView(self: _Form3) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: _Form3) -> Byte
        Set: AllowUpdating(self: _Form3) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Form3) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: _Form3) -> bool
        Set: AutoCenter(self: _Form3) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: _Form3) -> bool
        Set: AutoResize(self: _Form3) = value
        """
        ...

    @property
    def BatchUpdates(self) -> bool:
        """
        Get: BatchUpdates(self: _Form3) -> bool
        Set: BatchUpdates(self: _Form3) = value
        """
        ...

    @property
    def BeforeBeginTransaction(self) -> str:
        """
        Get: BeforeBeginTransaction(self: _Form3) -> str
        Set: BeforeBeginTransaction(self: _Form3) = value
        """
        ...

    @property
    def BeforeBeginTransactionMacro(self) -> str:
        """
        Get: BeforeBeginTransactionMacro(self: _Form3) -> str
        Set: BeforeBeginTransactionMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeCommitTransaction(self) -> str:
        """
        Get: BeforeCommitTransaction(self: _Form3) -> str
        Set: BeforeCommitTransaction(self: _Form3) = value
        """
        ...

    @property
    def BeforeCommitTransactionMacro(self) -> str:
        """
        Get: BeforeCommitTransactionMacro(self: _Form3) -> str
        Set: BeforeCommitTransactionMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: _Form3) -> str
        Set: BeforeDelConfirm(self: _Form3) = value
        """
        ...

    @property
    def BeforeDelConfirmMacro(self) -> str:
        """
        Get: BeforeDelConfirmMacro(self: _Form3) -> str
        Set: BeforeDelConfirmMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: _Form3) -> str
        Set: BeforeInsert(self: _Form3) = value
        """
        ...

    @property
    def BeforeInsertMacro(self) -> str:
        """
        Get: BeforeInsertMacro(self: _Form3) -> str
        Set: BeforeInsertMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeQuery(self) -> str:
        """
        Get: BeforeQuery(self: _Form3) -> str
        Set: BeforeQuery(self: _Form3) = value
        """
        ...

    @property
    def BeforeQueryMacro(self) -> str:
        """
        Get: BeforeQueryMacro(self: _Form3) -> str
        Set: BeforeQueryMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeRender(self) -> str:
        """
        Get: BeforeRender(self: _Form3) -> str
        Set: BeforeRender(self: _Form3) = value
        """
        ...

    @property
    def BeforeRenderMacro(self) -> str:
        """
        Get: BeforeRenderMacro(self: _Form3) -> str
        Set: BeforeRenderMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeScreenTip(self) -> str:
        """
        Get: BeforeScreenTip(self: _Form3) -> str
        Set: BeforeScreenTip(self: _Form3) = value
        """
        ...

    @property
    def BeforeScreenTipMacro(self) -> str:
        """
        Get: BeforeScreenTipMacro(self: _Form3) -> str
        Set: BeforeScreenTipMacro(self: _Form3) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Form3) -> str
        Set: BeforeUpdate(self: _Form3) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _Form3) -> str
        Set: BeforeUpdateMacro(self: _Form3) = value
        """
        ...

    @property
    def BeginBatchEdit(self) -> str:
        """
        Get: BeginBatchEdit(self: _Form3) -> str
        Set: BeginBatchEdit(self: _Form3) = value
        """
        ...

    @property
    def BeginBatchEditMacro(self) -> str:
        """
        Get: BeginBatchEditMacro(self: _Form3) -> str
        Set: BeginBatchEditMacro(self: _Form3) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: _Form3) -> object
        Set: Bookmark(self: _Form3) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Form3) -> Byte
        Set: BorderStyle(self: _Form3) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Form3) -> str
        Set: Caption(self: _Form3) = value
        """
        ...

    @property
    def ChartSpace(self) -> object:
        """ Get: ChartSpace(self: _Form3) -> object """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: _Form3) -> bool
        Set: CloseButton(self: _Form3) = value
        """
        ...

    @property
    def CommandBeforeExecute(self) -> str:
        """
        Get: CommandBeforeExecute(self: _Form3) -> str
        Set: CommandBeforeExecute(self: _Form3) = value
        """
        ...

    @property
    def CommandBeforeExecuteMacro(self) -> str:
        """
        Get: CommandBeforeExecuteMacro(self: _Form3) -> str
        Set: CommandBeforeExecuteMacro(self: _Form3) = value
        """
        ...

    @property
    def CommandChecked(self) -> str:
        """
        Get: CommandChecked(self: _Form3) -> str
        Set: CommandChecked(self: _Form3) = value
        """
        ...

    @property
    def CommandCheckedMacro(self) -> str:
        """
        Get: CommandCheckedMacro(self: _Form3) -> str
        Set: CommandCheckedMacro(self: _Form3) = value
        """
        ...

    @property
    def CommandEnabled(self) -> str:
        """
        Get: CommandEnabled(self: _Form3) -> str
        Set: CommandEnabled(self: _Form3) = value
        """
        ...

    @property
    def CommandEnabledMacro(self) -> str:
        """
        Get: CommandEnabledMacro(self: _Form3) -> str
        Set: CommandEnabledMacro(self: _Form3) = value
        """
        ...

    @property
    def CommandExecute(self) -> str:
        """
        Get: CommandExecute(self: _Form3) -> str
        Set: CommandExecute(self: _Form3) = value
        """
        ...

    @property
    def CommandExecuteMacro(self) -> str:
        """
        Get: CommandExecuteMacro(self: _Form3) -> str
        Set: CommandExecuteMacro(self: _Form3) = value
        """
        ...

    @property
    def CommitOnClose(self) -> Byte:
        """
        Get: CommitOnClose(self: _Form3) -> Byte
        Set: CommitOnClose(self: _Form3) = value
        """
        ...

    @property
    def CommitOnNavigation(self) -> bool:
        """
        Get: CommitOnNavigation(self: _Form3) -> bool
        Set: CommitOnNavigation(self: _Form3) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: _Form3) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: _Form3) -> Int16
        Set: ConnectSynch(self: _Form3) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: _Form3) -> bool
        Set: ControlBox(self: _Form3) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Form3) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Form3) -> Int16
        Set: Count(self: _Form3) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Form3) -> int
        Set: CurrentRecord(self: _Form3) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: _Form3) -> Int16
        Set: CurrentSectionLeft(self: _Form3) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: _Form3) -> Int16
        Set: CurrentSectionTop(self: _Form3) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: _Form3) -> Int16
        Set: CurrentView(self: _Form3) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: _Form3) -> Byte
        Set: Cycle(self: _Form3) = value
        """
        ...

    @property
    def DataChange(self) -> str:
        """
        Get: DataChange(self: _Form3) -> str
        Set: DataChange(self: _Form3) = value
        """
        ...

    @property
    def DataChangeMacro(self) -> str:
        """
        Get: DataChangeMacro(self: _Form3) -> str
        Set: DataChangeMacro(self: _Form3) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: _Form3) -> bool
        Set: DataEntry(self: _Form3) = value
        """
        ...

    @property
    def DataSetChange(self) -> str:
        """
        Get: DataSetChange(self: _Form3) -> str
        Set: DataSetChange(self: _Form3) = value
        """
        ...

    @property
    def DataSetChangeMacro(self) -> str:
        """
        Get: DataSetChangeMacro(self: _Form3) -> str
        Set: DataSetChangeMacro(self: _Form3) = value
        """
        ...

    @property
    def DatasheetAlternateBackColor(self) -> int:
        """
        Get: DatasheetAlternateBackColor(self: _Form3) -> int
        Set: DatasheetAlternateBackColor(self: _Form3) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: _Form3) -> int
        Set: DatasheetBackColor(self: _Form3) = value
        """
        ...

    @property
    def DatasheetBorderLineStyle(self) -> Byte:
        """
        Get: DatasheetBorderLineStyle(self: _Form3) -> Byte
        Set: DatasheetBorderLineStyle(self: _Form3) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: _Form3) -> Byte
        Set: DatasheetCellsEffect(self: _Form3) = value
        """
        ...

    @property
    def DatasheetColumnHeaderUnderlineStyle(self) -> Byte:
        """
        Get: DatasheetColumnHeaderUnderlineStyle(self: _Form3) -> Byte
        Set: DatasheetColumnHeaderUnderlineStyle(self: _Form3) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: _Form3) -> Int16
        Set: DatasheetFontHeight(self: _Form3) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: _Form3) -> bool
        Set: DatasheetFontItalic(self: _Form3) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: _Form3) -> str
        Set: DatasheetFontName(self: _Form3) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: _Form3) -> bool
        Set: DatasheetFontUnderline(self: _Form3) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: _Form3) -> Int16
        Set: DatasheetFontWeight(self: _Form3) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: _Form3) -> int
        Set: DatasheetForeColor(self: _Form3) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: _Form3) -> Byte
        Set: DatasheetGridlinesBehavior(self: _Form3) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: _Form3) -> int
        Set: DatasheetGridlinesColor(self: _Form3) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: _Form3) -> Int16
        Set: DefaultEditing(self: _Form3) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: _Form3) -> Byte
        Set: DefaultView(self: _Form3) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Form3) -> bool
        Set: Dirty(self: _Form3) = value
        """
        ...

    @property
    def DisplayOnSharePointSite(self) -> Byte:
        """
        Get: DisplayOnSharePointSite(self: _Form3) -> Byte
        Set: DisplayOnSharePointSite(self: _Form3) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: _Form3) -> bool
        Set: DividingLines(self: _Form3) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: _Form3) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Form3) -> bool
        Set: FastLaserPrinting(self: _Form3) = value
        """
        ...

    @property
    def FetchDefaults(self) -> bool:
        """
        Get: FetchDefaults(self: _Form3) -> bool
        Set: FetchDefaults(self: _Form3) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Form3) -> str
        Set: Filter(self: _Form3) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Form3) -> bool
        Set: FilterOn(self: _Form3) = value
        """
        ...

    @property
    def FilterOnLoad(self) -> bool:
        """
        Get: FilterOnLoad(self: _Form3) -> bool
        Set: FilterOnLoad(self: _Form3) = value
        """
        ...

    @property
    def FitToScreen(self) -> bool:
        """
        Get: FitToScreen(self: _Form3) -> bool
        Set: FitToScreen(self: _Form3) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _Form3) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Form3) -> str
        Set: FormName(self: _Form3) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: _Form3) -> Int16
        Set: FrozenColumns(self: _Form3) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Form3) -> Int16
        Set: GridX(self: _Form3) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Form3) -> Int16
        Set: GridY(self: _Form3) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Form3) -> bool
        Set: HasModule(self: _Form3) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Form3) -> int
        Set: HelpContextId(self: _Form3) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Form3) -> str
        Set: HelpFile(self: _Form3) = value
        """
        ...

    @property
    def HorizontalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: HorizontalDatasheetGridlineStyle(self: _Form3) -> Byte
        Set: HorizontalDatasheetGridlineStyle(self: _Form3) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Form3) -> int
        Set: Hwnd(self: _Form3) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Form3) -> str
        Set: InputParameters(self: _Form3) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: _Form3) -> int
        Set: InsideHeight(self: _Form3) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: _Form3) -> int
        Set: InsideWidth(self: _Form3) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: _Form3) -> bool
        Set: KeyPreview(self: _Form3) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Form3) -> bool
        Set: LayoutForPrint(self: _Form3) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Form3) -> int
        Set: LogicalPageHeight(self: _Form3) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Form3) -> int
        Set: LogicalPageWidth(self: _Form3) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Form3) -> bool
        Set: MaxButton(self: _Form3) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: _Form3) -> bool
        Set: MaxRecButton(self: _Form3) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: _Form3) -> int
        Set: MaxRecords(self: _Form3) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Form3) -> str
        Set: MenuBar(self: _Form3) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Form3) -> bool
        Set: MinButton(self: _Form3) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: _Form3) -> Byte
        Set: MinMaxButtons(self: _Form3) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: _Form3) -> bool
        Set: Modal(self: _Form3) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Form3) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: _Form3) -> str
        Set: MouseWheel(self: _Form3) = value
        """
        ...

    @property
    def MouseWheelMacro(self) -> str:
        """
        Get: MouseWheelMacro(self: _Form3) -> str
        Set: MouseWheelMacro(self: _Form3) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: _Form3) -> bool
        Set: Moveable(self: _Form3) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Form3) -> str
        Set: Name(self: _Form3) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: _Form3) -> bool
        Set: NavigationButtons(self: _Form3) = value
        """
        ...

    @property
    def NavigationCaption(self) -> str:
        """
        Get: NavigationCaption(self: _Form3) -> str
        Set: NavigationCaption(self: _Form3) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: _Form3) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Form3) -> str
        Set: OnActivate(self: _Form3) = value
        """
        ...

    @property
    def OnActivateMacro(self) -> str:
        """
        Get: OnActivateMacro(self: _Form3) -> str
        Set: OnActivateMacro(self: _Form3) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: _Form3) -> str
        Set: OnApplyFilter(self: _Form3) = value
        """
        ...

    @property
    def OnApplyFilterMacro(self) -> str:
        """
        Get: OnApplyFilterMacro(self: _Form3) -> str
        Set: OnApplyFilterMacro(self: _Form3) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Form3) -> str
        Set: OnClick(self: _Form3) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Form3) -> str
        Set: OnClickMacro(self: _Form3) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Form3) -> str
        Set: OnClose(self: _Form3) = value
        """
        ...

    @property
    def OnCloseMacro(self) -> str:
        """
        Get: OnCloseMacro(self: _Form3) -> str
        Set: OnCloseMacro(self: _Form3) = value
        """
        ...

    @property
    def OnConnect(self) -> str:
        """
        Get: OnConnect(self: _Form3) -> str
        Set: OnConnect(self: _Form3) = value
        """
        ...

    @property
    def OnConnectMacro(self) -> str:
        """
        Get: OnConnectMacro(self: _Form3) -> str
        Set: OnConnectMacro(self: _Form3) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: _Form3) -> str
        Set: OnCurrent(self: _Form3) = value
        """
        ...

    @property
    def OnCurrentMacro(self) -> str:
        """
        Get: OnCurrentMacro(self: _Form3) -> str
        Set: OnCurrentMacro(self: _Form3) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Form3) -> str
        Set: OnDblClick(self: _Form3) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Form3) -> str
        Set: OnDblClickMacro(self: _Form3) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Form3) -> str
        Set: OnDeactivate(self: _Form3) = value
        """
        ...

    @property
    def OnDeactivateMacro(self) -> str:
        """
        Get: OnDeactivateMacro(self: _Form3) -> str
        Set: OnDeactivateMacro(self: _Form3) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: _Form3) -> str
        Set: OnDelete(self: _Form3) = value
        """
        ...

    @property
    def OnDeleteMacro(self) -> str:
        """
        Get: OnDeleteMacro(self: _Form3) -> str
        Set: OnDeleteMacro(self: _Form3) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Form3) -> str
        Set: OnDirty(self: _Form3) = value
        """
        ...

    @property
    def OnDirtyMacro(self) -> str:
        """
        Get: OnDirtyMacro(self: _Form3) -> str
        Set: OnDirtyMacro(self: _Form3) = value
        """
        ...

    @property
    def OnDisconnect(self) -> str:
        """
        Get: OnDisconnect(self: _Form3) -> str
        Set: OnDisconnect(self: _Form3) = value
        """
        ...

    @property
    def OnDisconnectMacro(self) -> str:
        """
        Get: OnDisconnectMacro(self: _Form3) -> str
        Set: OnDisconnectMacro(self: _Form3) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Form3) -> str
        Set: OnError(self: _Form3) = value
        """
        ...

    @property
    def OnErrorMacro(self) -> str:
        """
        Get: OnErrorMacro(self: _Form3) -> str
        Set: OnErrorMacro(self: _Form3) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: _Form3) -> str
        Set: OnFilter(self: _Form3) = value
        """
        ...

    @property
    def OnFilterMacro(self) -> str:
        """
        Get: OnFilterMacro(self: _Form3) -> str
        Set: OnFilterMacro(self: _Form3) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Form3) -> str
        Set: OnGotFocus(self: _Form3) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Form3) -> str
        Set: OnGotFocusMacro(self: _Form3) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: _Form3) -> str
        Set: OnInsert(self: _Form3) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Form3) -> str
        Set: OnKeyDown(self: _Form3) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Form3) -> str
        Set: OnKeyDownMacro(self: _Form3) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Form3) -> str
        Set: OnKeyPress(self: _Form3) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Form3) -> str
        Set: OnKeyPressMacro(self: _Form3) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Form3) -> str
        Set: OnKeyUp(self: _Form3) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Form3) -> str
        Set: OnKeyUpMacro(self: _Form3) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: _Form3) -> str
        Set: OnLoad(self: _Form3) = value
        """
        ...

    @property
    def OnLoadMacro(self) -> str:
        """
        Get: OnLoadMacro(self: _Form3) -> str
        Set: OnLoadMacro(self: _Form3) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Form3) -> str
        Set: OnLostFocus(self: _Form3) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Form3) -> str
        Set: OnLostFocusMacro(self: _Form3) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Form3) -> str
        Set: OnMenu(self: _Form3) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Form3) -> str
        Set: OnMouseDown(self: _Form3) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Form3) -> str
        Set: OnMouseDownMacro(self: _Form3) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Form3) -> str
        Set: OnMouseMove(self: _Form3) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Form3) -> str
        Set: OnMouseMoveMacro(self: _Form3) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Form3) -> str
        Set: OnMouseUp(self: _Form3) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Form3) -> str
        Set: OnMouseUpMacro(self: _Form3) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Form3) -> str
        Set: OnOpen(self: _Form3) = value
        """
        ...

    @property
    def OnOpenMacro(self) -> str:
        """
        Get: OnOpenMacro(self: _Form3) -> str
        Set: OnOpenMacro(self: _Form3) = value
        """
        ...

    @property
    def OnRecordExit(self) -> str:
        """
        Get: OnRecordExit(self: _Form3) -> str
        Set: OnRecordExit(self: _Form3) = value
        """
        ...

    @property
    def OnRecordExitMacro(self) -> str:
        """
        Get: OnRecordExitMacro(self: _Form3) -> str
        Set: OnRecordExitMacro(self: _Form3) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: _Form3) -> str
        Set: OnResize(self: _Form3) = value
        """
        ...

    @property
    def OnResizeMacro(self) -> str:
        """
        Get: OnResizeMacro(self: _Form3) -> str
        Set: OnResizeMacro(self: _Form3) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: _Form3) -> str
        Set: OnTimer(self: _Form3) = value
        """
        ...

    @property
    def OnTimerMacro(self) -> str:
        """
        Get: OnTimerMacro(self: _Form3) -> str
        Set: OnTimerMacro(self: _Form3) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: _Form3) -> str
        Set: OnUndo(self: _Form3) = value
        """
        ...

    @property
    def OnUndoMacro(self) -> str:
        """
        Get: OnUndoMacro(self: _Form3) -> str
        Set: OnUndoMacro(self: _Form3) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: _Form3) -> str
        Set: OnUnload(self: _Form3) = value
        """
        ...

    @property
    def OnUnloadMacro(self) -> str:
        """
        Get: OnUnloadMacro(self: _Form3) -> str
        Set: OnUnloadMacro(self: _Form3) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: _Form3) -> object
        Set: OpenArgs(self: _Form3) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Form3) -> str
        Set: OrderBy(self: _Form3) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Form3) -> bool
        Set: OrderByOn(self: _Form3) = value
        """
        ...

    @property
    def OrderByOnLoad(self) -> bool:
        """
        Get: OrderByOnLoad(self: _Form3) -> bool
        Set: OrderByOnLoad(self: _Form3) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Form3) -> Byte
        Set: Orientation(self: _Form3) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Form3) -> int
        Set: Page(self: _Form3) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Form3) -> Int16
        Set: Pages(self: _Form3) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Form3) -> bool
        Set: Painting(self: _Form3) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Form3) -> object
        Set: PaintPalette(self: _Form3) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Form3) -> str
        Set: PaletteSource(self: _Form3) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Form3) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Form3) -> str
        Set: Picture(self: _Form3) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Form3) -> Byte
        Set: PictureAlignment(self: _Form3) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Form3) -> object
        Set: PictureData(self: _Form3) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Form3) -> object
        Set: PicturePalette(self: _Form3) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Form3) -> Byte
        Set: PictureSizeMode(self: _Form3) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Form3) -> bool
        Set: PictureTiling(self: _Form3) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Form3) -> Byte
        Set: PictureType(self: _Form3) = value
        """
        ...

    @property
    def PivotTable(self) -> object:
        """ Get: PivotTable(self: _Form3) -> object """
        ...

    @property
    def PivotTableChange(self) -> str:
        """
        Get: PivotTableChange(self: _Form3) -> str
        Set: PivotTableChange(self: _Form3) = value
        """
        ...

    @property
    def PivotTableChangeMacro(self) -> str:
        """
        Get: PivotTableChangeMacro(self: _Form3) -> str
        Set: PivotTableChangeMacro(self: _Form3) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: _Form3) -> bool
        Set: PopUp(self: _Form3) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: _Form3) -> Printer
        Set: Printer(self: _Form3) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Form3) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Form3) -> object
        Set: PrtDevMode(self: _Form3) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Form3) -> object
        Set: PrtDevNames(self: _Form3) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Form3) -> object
        Set: PrtMip(self: _Form3) = value
        """
        ...

    @property
    def Query(self) -> str:
        """
        Get: Query(self: _Form3) -> str
        Set: Query(self: _Form3) = value
        """
        ...

    @property
    def QueryMacro(self) -> str:
        """
        Get: QueryMacro(self: _Form3) -> str
        Set: QueryMacro(self: _Form3) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Form3) -> Byte
        Set: RecordLocks(self: _Form3) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: _Form3) -> bool
        Set: RecordSelectors(self: _Form3) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Form3) -> object
        Set: Recordset(self: _Form3) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: _Form3) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: _Form3) -> Byte
        Set: RecordsetType(self: _Form3) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Form3) -> str
        Set: RecordSource(self: _Form3) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: _Form3) -> str
        Set: RecordSourceQualifier(self: _Form3) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: _Form3) -> str
        Set: ResyncCommand(self: _Form3) = value
        """
        ...

    @property
    def RibbonName(self) -> str:
        """
        Get: RibbonName(self: _Form3) -> str
        Set: RibbonName(self: _Form3) = value
        """
        ...

    @property
    def RollbackTransaction(self) -> str:
        """
        Get: RollbackTransaction(self: _Form3) -> str
        Set: RollbackTransaction(self: _Form3) = value
        """
        ...

    @property
    def RollbackTransactionMacro(self) -> str:
        """
        Get: RollbackTransactionMacro(self: _Form3) -> str
        Set: RollbackTransactionMacro(self: _Form3) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: _Form3) -> Int16
        Set: RowHeight(self: _Form3) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: _Form3) -> Byte
        Set: ScrollBars(self: _Form3) = value
        """
        ...

    @property
    def SelectionChange(self) -> str:
        """
        Get: SelectionChange(self: _Form3) -> str
        Set: SelectionChange(self: _Form3) = value
        """
        ...

    @property
    def SelectionChangeMacro(self) -> str:
        """
        Get: SelectionChangeMacro(self: _Form3) -> str
        Set: SelectionChangeMacro(self: _Form3) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: _Form3) -> int
        Set: SelHeight(self: _Form3) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: _Form3) -> int
        Set: SelLeft(self: _Form3) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: _Form3) -> int
        Set: SelTop(self: _Form3) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: _Form3) -> int
        Set: SelWidth(self: _Form3) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Form3) -> str
        Set: ServerFilter(self: _Form3) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: _Form3) -> bool
        Set: ServerFilterByForm(self: _Form3) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: _Form3) -> bool
        Set: ShortcutMenu(self: _Form3) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Form3) -> str
        Set: ShortcutMenuBar(self: _Form3) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: _Form3) -> bool
        Set: ShowGrid(self: _Form3) = value
        """
        ...

    @property
    def SplitFormDatasheet(self) -> AcSplitFormDatasheet:
        """
        Get: SplitFormDatasheet(self: _Form3) -> AcSplitFormDatasheet
        Set: SplitFormDatasheet(self: _Form3) = value
        """
        ...

    @property
    def SplitFormOrientation(self) -> AcSplitFormOrientation:
        """
        Get: SplitFormOrientation(self: _Form3) -> AcSplitFormOrientation
        Set: SplitFormOrientation(self: _Form3) = value
        """
        ...

    @property
    def SplitFormPrinting(self) -> AcSplitFormPrinting:
        """
        Get: SplitFormPrinting(self: _Form3) -> AcSplitFormPrinting
        Set: SplitFormPrinting(self: _Form3) = value
        """
        ...

    @property
    def SplitFormSize(self) -> int:
        """
        Get: SplitFormSize(self: _Form3) -> int
        Set: SplitFormSize(self: _Form3) = value
        """
        ...

    @property
    def SplitFormSplitterBar(self) -> bool:
        """
        Get: SplitFormSplitterBar(self: _Form3) -> bool
        Set: SplitFormSplitterBar(self: _Form3) = value
        """
        ...

    @property
    def SplitFormSplitterBarSave(self) -> bool:
        """
        Get: SplitFormSplitterBarSave(self: _Form3) -> bool
        Set: SplitFormSplitterBarSave(self: _Form3) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: _Form3) -> bool
        Set: SubdatasheetExpanded(self: _Form3) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: _Form3) -> Int16
        Set: SubdatasheetHeight(self: _Form3) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: _Form3) -> Byte
        Set: TabularCharSet(self: _Form3) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: _Form3) -> Byte
        Set: TabularFamily(self: _Form3) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Form3) -> str
        Set: Tag(self: _Form3) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: _Form3) -> int
        Set: TimerInterval(self: _Form3) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Form3) -> str
        Set: Toolbar(self: _Form3) = value
        """
        ...

    @property
    def UndoBatchEdit(self) -> str:
        """
        Get: UndoBatchEdit(self: _Form3) -> str
        Set: UndoBatchEdit(self: _Form3) = value
        """
        ...

    @property
    def UndoBatchEditMacro(self) -> str:
        """
        Get: UndoBatchEditMacro(self: _Form3) -> str
        Set: UndoBatchEditMacro(self: _Form3) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: _Form3) -> str
        Set: UniqueTable(self: _Form3) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: _Form3) -> bool
        Set: UseDefaultPrinter(self: _Form3) = value
        """
        ...

    @property
    def VerticalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: VerticalDatasheetGridlineStyle(self: _Form3) -> Byte
        Set: VerticalDatasheetGridlineStyle(self: _Form3) = value
        """
        ...

    @property
    def ViewChange(self) -> str:
        """
        Get: ViewChange(self: _Form3) -> str
        Set: ViewChange(self: _Form3) = value
        """
        ...

    @property
    def ViewChangeMacro(self) -> str:
        """
        Get: ViewChangeMacro(self: _Form3) -> str
        Set: ViewChangeMacro(self: _Form3) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: _Form3) -> Byte
        Set: ViewsAllowed(self: _Form3) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Form3) -> bool
        Set: Visible(self: _Form3) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: _Form3) -> bool
        Set: WhatsThisButton(self: _Form3) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Form3) -> Int16
        Set: Width(self: _Form3) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: _Form3) -> Int16
        Set: WindowHeight(self: _Form3) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: _Form3) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: _Form3) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: _Form3) -> Int16
        Set: WindowWidth(self: _Form3) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Form3) -> int
        Set: ZoomControl(self: _Form3) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Form3) -> str
        Set: _Name(self: _Form3) = value
        """
        ...


    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: _Form3, PageNumber: int, Right: int, Down: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Form3, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: _Form3) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: _Form3) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: _Form3) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Form3) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Form3) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Form3) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Form3, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _FormEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Activate(self): # -> 
        """ add_Activate(self: _FormEvents_Event, : _FormEvents_ActivateEventHandler) """
        ...

    def add_AfterDelConfirm(self): # -> 
        """ add_AfterDelConfirm(self: _FormEvents_Event, : _FormEvents_AfterDelConfirmEventHandler) """
        ...

    def add_AfterFinalRender(self): # -> 
        """ add_AfterFinalRender(self: _FormEvents_Event, : _FormEvents_AfterFinalRenderEventHandler) """
        ...

    def add_AfterInsert(self): # -> 
        """ add_AfterInsert(self: _FormEvents_Event, : _FormEvents_AfterInsertEventHandler) """
        ...

    def add_AfterLayout(self): # -> 
        """ add_AfterLayout(self: _FormEvents_Event, : _FormEvents_AfterLayoutEventHandler) """
        ...

    def add_AfterRender(self): # -> 
        """ add_AfterRender(self: _FormEvents_Event, : _FormEvents_AfterRenderEventHandler) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _FormEvents_Event, : _FormEvents_AfterUpdateEventHandler) """
        ...

    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: _FormEvents_Event, : _FormEvents_ApplyFilterEventHandler) """
        ...

    def add_BeforeDelConfirm(self): # -> 
        """ add_BeforeDelConfirm(self: _FormEvents_Event, : _FormEvents_BeforeDelConfirmEventHandler) """
        ...

    def add_BeforeInsert(self): # -> 
        """ add_BeforeInsert(self: _FormEvents_Event, : _FormEvents_BeforeInsertEventHandler) """
        ...

    def add_BeforeQuery(self): # -> 
        """ add_BeforeQuery(self: _FormEvents_Event, : _FormEvents_BeforeQueryEventHandler) """
        ...

    def add_BeforeRender(self): # -> 
        """ add_BeforeRender(self: _FormEvents_Event, : _FormEvents_BeforeRenderEventHandler) """
        ...

    def add_BeforeScreenTip(self): # -> 
        """ add_BeforeScreenTip(self: _FormEvents_Event, : _FormEvents_BeforeScreenTipEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _FormEvents_Event, : _FormEvents_BeforeUpdateEventHandler) """
        ...

    def add_BeginBatchEdit(self): # -> 
        """ add_BeginBatchEdit(self: _FormEvents_Event, : _FormEvents_BeginBatchEditEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _FormEvents_Event, : _FormEvents_ClickEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: _FormEvents_Event, : _FormEvents_CloseEventHandler) """
        ...

    def add_CommandBeforeExecute(self): # -> 
        """ add_CommandBeforeExecute(self: _FormEvents_Event, : _FormEvents_CommandBeforeExecuteEventHandler) """
        ...

    def add_CommandChecked(self): # -> 
        """ add_CommandChecked(self: _FormEvents_Event, : _FormEvents_CommandCheckedEventHandler) """
        ...

    def add_CommandEnabled(self): # -> 
        """ add_CommandEnabled(self: _FormEvents_Event, : _FormEvents_CommandEnabledEventHandler) """
        ...

    def add_CommandExecute(self): # -> 
        """ add_CommandExecute(self: _FormEvents_Event, : _FormEvents_CommandExecuteEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: _FormEvents_Event, : _FormEvents_CurrentEventHandler) """
        ...

    def add_DataChange(self): # -> 
        """ add_DataChange(self: _FormEvents_Event, : _FormEvents_DataChangeEventHandler) """
        ...

    def add_DataSetChange(self): # -> 
        """ add_DataSetChange(self: _FormEvents_Event, : _FormEvents_DataSetChangeEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _FormEvents_Event, : _FormEvents_DblClickEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: _FormEvents_Event, : _FormEvents_DeactivateEventHandler) """
        ...

    def add_Delete(self): # -> 
        """ add_Delete(self: _FormEvents_Event, : _FormEvents_DeleteEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: _FormEvents_Event, : _FormEvents_DirtyEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: _FormEvents_Event, : _FormEvents_ErrorEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: _FormEvents_Event, : _FormEvents_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _FormEvents_Event, : _FormEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _FormEvents_Event, : _FormEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _FormEvents_Event, : _FormEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _FormEvents_Event, : _FormEvents_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: _FormEvents_Event, : _FormEvents_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _FormEvents_Event, : _FormEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _FormEvents_Event, : _FormEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _FormEvents_Event, : _FormEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _FormEvents_Event, : _FormEvents_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: _FormEvents_Event, : _FormEvents_MouseWheelEventHandler) """
        ...

    def add_OnConnect(self): # -> 
        """ add_OnConnect(self: _FormEvents_Event, : _FormEvents_OnConnectEventHandler) """
        ...

    def add_OnDisconnect(self): # -> 
        """ add_OnDisconnect(self: _FormEvents_Event, : _FormEvents_OnDisconnectEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: _FormEvents_Event, : _FormEvents_OpenEventHandler) """
        ...

    def add_PivotTableChange(self): # -> 
        """ add_PivotTableChange(self: _FormEvents_Event, : _FormEvents_PivotTableChangeEventHandler) """
        ...

    def add_Query(self): # -> 
        """ add_Query(self: _FormEvents_Event, : _FormEvents_QueryEventHandler) """
        ...

    def add_RecordExit(self): # -> 
        """ add_RecordExit(self: _FormEvents_Event, : _FormEvents_RecordExitEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: _FormEvents_Event, : _FormEvents_ResizeEventHandler) """
        ...

    def add_SelectionChange(self): # -> 
        """ add_SelectionChange(self: _FormEvents_Event, : _FormEvents_SelectionChangeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: _FormEvents_Event, : _FormEvents_TimerEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: _FormEvents_Event, : _FormEvents_UndoEventHandler) """
        ...

    def add_UndoBatchEdit(self): # -> 
        """ add_UndoBatchEdit(self: _FormEvents_Event, : _FormEvents_UndoBatchEditEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: _FormEvents_Event, : _FormEvents_UnloadEventHandler) """
        ...

    def add_ViewChange(self): # -> 
        """ add_ViewChange(self: _FormEvents_Event, : _FormEvents_ViewChangeEventHandler) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: _FormEvents_Event, : _FormEvents_ActivateEventHandler) """
        ...

    def remove_AfterDelConfirm(self): # -> 
        """ remove_AfterDelConfirm(self: _FormEvents_Event, : _FormEvents_AfterDelConfirmEventHandler) """
        ...

    def remove_AfterFinalRender(self): # -> 
        """ remove_AfterFinalRender(self: _FormEvents_Event, : _FormEvents_AfterFinalRenderEventHandler) """
        ...

    def remove_AfterInsert(self): # -> 
        """ remove_AfterInsert(self: _FormEvents_Event, : _FormEvents_AfterInsertEventHandler) """
        ...

    def remove_AfterLayout(self): # -> 
        """ remove_AfterLayout(self: _FormEvents_Event, : _FormEvents_AfterLayoutEventHandler) """
        ...

    def remove_AfterRender(self): # -> 
        """ remove_AfterRender(self: _FormEvents_Event, : _FormEvents_AfterRenderEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _FormEvents_Event, : _FormEvents_AfterUpdateEventHandler) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: _FormEvents_Event, : _FormEvents_ApplyFilterEventHandler) """
        ...

    def remove_BeforeDelConfirm(self): # -> 
        """ remove_BeforeDelConfirm(self: _FormEvents_Event, : _FormEvents_BeforeDelConfirmEventHandler) """
        ...

    def remove_BeforeInsert(self): # -> 
        """ remove_BeforeInsert(self: _FormEvents_Event, : _FormEvents_BeforeInsertEventHandler) """
        ...

    def remove_BeforeQuery(self): # -> 
        """ remove_BeforeQuery(self: _FormEvents_Event, : _FormEvents_BeforeQueryEventHandler) """
        ...

    def remove_BeforeRender(self): # -> 
        """ remove_BeforeRender(self: _FormEvents_Event, : _FormEvents_BeforeRenderEventHandler) """
        ...

    def remove_BeforeScreenTip(self): # -> 
        """ remove_BeforeScreenTip(self: _FormEvents_Event, : _FormEvents_BeforeScreenTipEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _FormEvents_Event, : _FormEvents_BeforeUpdateEventHandler) """
        ...

    def remove_BeginBatchEdit(self): # -> 
        """ remove_BeginBatchEdit(self: _FormEvents_Event, : _FormEvents_BeginBatchEditEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _FormEvents_Event, : _FormEvents_ClickEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: _FormEvents_Event, : _FormEvents_CloseEventHandler) """
        ...

    def remove_CommandBeforeExecute(self): # -> 
        """ remove_CommandBeforeExecute(self: _FormEvents_Event, : _FormEvents_CommandBeforeExecuteEventHandler) """
        ...

    def remove_CommandChecked(self): # -> 
        """ remove_CommandChecked(self: _FormEvents_Event, : _FormEvents_CommandCheckedEventHandler) """
        ...

    def remove_CommandEnabled(self): # -> 
        """ remove_CommandEnabled(self: _FormEvents_Event, : _FormEvents_CommandEnabledEventHandler) """
        ...

    def remove_CommandExecute(self): # -> 
        """ remove_CommandExecute(self: _FormEvents_Event, : _FormEvents_CommandExecuteEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: _FormEvents_Event, : _FormEvents_CurrentEventHandler) """
        ...

    def remove_DataChange(self): # -> 
        """ remove_DataChange(self: _FormEvents_Event, : _FormEvents_DataChangeEventHandler) """
        ...

    def remove_DataSetChange(self): # -> 
        """ remove_DataSetChange(self: _FormEvents_Event, : _FormEvents_DataSetChangeEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _FormEvents_Event, : _FormEvents_DblClickEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: _FormEvents_Event, : _FormEvents_DeactivateEventHandler) """
        ...

    def remove_Delete(self): # -> 
        """ remove_Delete(self: _FormEvents_Event, : _FormEvents_DeleteEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: _FormEvents_Event, : _FormEvents_DirtyEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: _FormEvents_Event, : _FormEvents_ErrorEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: _FormEvents_Event, : _FormEvents_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _FormEvents_Event, : _FormEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _FormEvents_Event, : _FormEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _FormEvents_Event, : _FormEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _FormEvents_Event, : _FormEvents_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: _FormEvents_Event, : _FormEvents_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _FormEvents_Event, : _FormEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _FormEvents_Event, : _FormEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _FormEvents_Event, : _FormEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _FormEvents_Event, : _FormEvents_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: _FormEvents_Event, : _FormEvents_MouseWheelEventHandler) """
        ...

    def remove_OnConnect(self): # -> 
        """ remove_OnConnect(self: _FormEvents_Event, : _FormEvents_OnConnectEventHandler) """
        ...

    def remove_OnDisconnect(self): # -> 
        """ remove_OnDisconnect(self: _FormEvents_Event, : _FormEvents_OnDisconnectEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: _FormEvents_Event, : _FormEvents_OpenEventHandler) """
        ...

    def remove_PivotTableChange(self): # -> 
        """ remove_PivotTableChange(self: _FormEvents_Event, : _FormEvents_PivotTableChangeEventHandler) """
        ...

    def remove_Query(self): # -> 
        """ remove_Query(self: _FormEvents_Event, : _FormEvents_QueryEventHandler) """
        ...

    def remove_RecordExit(self): # -> 
        """ remove_RecordExit(self: _FormEvents_Event, : _FormEvents_RecordExitEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: _FormEvents_Event, : _FormEvents_ResizeEventHandler) """
        ...

    def remove_SelectionChange(self): # -> 
        """ remove_SelectionChange(self: _FormEvents_Event, : _FormEvents_SelectionChangeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: _FormEvents_Event, : _FormEvents_TimerEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: _FormEvents_Event, : _FormEvents_UndoEventHandler) """
        ...

    def remove_UndoBatchEdit(self): # -> 
        """ remove_UndoBatchEdit(self: _FormEvents_Event, : _FormEvents_UndoBatchEditEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: _FormEvents_Event, : _FormEvents_UnloadEventHandler) """
        ...

    def remove_ViewChange(self): # -> 
        """ remove_ViewChange(self: _FormEvents_Event, : _FormEvents_ViewChangeEventHandler) """
        ...

    Activate = ...
    AfterDelConfirm = ...
    AfterFinalRender = ...
    AfterInsert = ...
    AfterLayout = ...
    AfterRender = ...
    AfterUpdate = ...
    ApplyFilter = ...
    BeforeDelConfirm = ...
    BeforeInsert = ...
    BeforeQuery = ...
    BeforeRender = ...
    BeforeScreenTip = ...
    BeforeUpdate = ...
    BeginBatchEdit = ...
    Click = ...
    Close = ...
    CommandBeforeExecute = ...
    CommandChecked = ...
    CommandEnabled = ...
    CommandExecute = ...
    Current = ...
    DataChange = ...
    DataSetChange = ...
    DblClick = ...
    Deactivate = ...
    Delete = ...
    Dirty = ...
    Error = ...
    Filter = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    MouseWheel = ...
    OnConnect = ...
    OnDisconnect = ...
    Open = ...
    PivotTableChange = ...
    Query = ...
    RecordExit = ...
    Resize = ...
    SelectionChange = ...
    Timer = ...
    Undo = ...
    UndoBatchEdit = ...
    Unload = ...
    ViewChange = ...


class Form(_FormEvents_Event, _Form3): # skipped bases: <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _FormatCondition: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _FormatCondition) -> int
        Set: BackColor(self: _FormatCondition) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _FormatCondition) -> bool
        Set: Enabled(self: _FormatCondition) = value
        """
        ...

    @property
    def Expression1(self) -> str:
        """ Get: Expression1(self: _FormatCondition) -> str """
        ...

    @property
    def Expression2(self) -> str:
        """ Get: Expression2(self: _FormatCondition) -> str """
        ...

    @property
    def FontBold(self) -> bool:
        """
        Get: FontBold(self: _FormatCondition) -> bool
        Set: FontBold(self: _FormatCondition) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _FormatCondition) -> bool
        Set: FontItalic(self: _FormatCondition) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _FormatCondition) -> bool
        Set: FontUnderline(self: _FormatCondition) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _FormatCondition) -> int
        Set: ForeColor(self: _FormatCondition) = value
        """
        ...

    @property
    def LongestBarLimit(self) -> AcFormatBarLimits:
        """
        Get: LongestBarLimit(self: _FormatCondition) -> AcFormatBarLimits
        Set: LongestBarLimit(self: _FormatCondition) = value
        """
        ...

    @property
    def LongestBarValue(self) -> str:
        """
        Get: LongestBarValue(self: _FormatCondition) -> str
        Set: LongestBarValue(self: _FormatCondition) = value
        """
        ...

    @property
    def Operator(self) -> AcFormatConditionOperator:
        """ Get: Operator(self: _FormatCondition) -> AcFormatConditionOperator """
        ...

    @property
    def ShortestBarLimit(self) -> AcFormatBarLimits:
        """
        Get: ShortestBarLimit(self: _FormatCondition) -> AcFormatBarLimits
        Set: ShortestBarLimit(self: _FormatCondition) = value
        """
        ...

    @property
    def ShortestBarValue(self) -> str:
        """
        Get: ShortestBarValue(self: _FormatCondition) -> str
        Set: ShortestBarValue(self: _FormatCondition) = value
        """
        ...

    @property
    def ShowBarOnly(self) -> bool:
        """
        Get: ShowBarOnly(self: _FormatCondition) -> bool
        Set: ShowBarOnly(self: _FormatCondition) = value
        """
        ...

    @property
    def Type(self) -> AcFormatConditionType:
        """ Get: Type(self: _FormatCondition) -> AcFormatConditionType """
        ...


    def Delete(self): # -> 
        """ Delete(self: _FormatCondition) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _FormatCondition, dispid: int) -> bool """
        ...

    def Modify(self, Type:AcFormatConditionType, Operator:AcFormatConditionOperator, Expression1:object, Expression2:object): # -> 
        """ Modify(self: _FormatCondition, Type: AcFormatConditionType, Operator: AcFormatConditionOperator, Expression1: object, Expression2: object) """
        ...


class FormatCondition(_FormatCondition): # skipped bases: <type 'object'>
    """ no doc """
    pass

class FormatConditionClass(FormatCondition, __ComObject): # skipped bases: <type '_FormatCondition'>, <type 'object'>
    """ FormatConditionClass() """
    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: FormatConditionClass) -> int
        Set: BackColor(self: FormatConditionClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: FormatConditionClass) -> bool
        Set: Enabled(self: FormatConditionClass) = value
        """
        ...

    @property
    def Expression1(self) -> str:
        """ Get: Expression1(self: FormatConditionClass) -> str """
        ...

    @property
    def Expression2(self) -> str:
        """ Get: Expression2(self: FormatConditionClass) -> str """
        ...

    @property
    def FontBold(self) -> bool:
        """
        Get: FontBold(self: FormatConditionClass) -> bool
        Set: FontBold(self: FormatConditionClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: FormatConditionClass) -> bool
        Set: FontItalic(self: FormatConditionClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: FormatConditionClass) -> bool
        Set: FontUnderline(self: FormatConditionClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: FormatConditionClass) -> int
        Set: ForeColor(self: FormatConditionClass) = value
        """
        ...

    @property
    def LongestBarLimit(self) -> AcFormatBarLimits:
        """
        Get: LongestBarLimit(self: FormatConditionClass) -> AcFormatBarLimits
        Set: LongestBarLimit(self: FormatConditionClass) = value
        """
        ...

    @property
    def LongestBarValue(self) -> str:
        """
        Get: LongestBarValue(self: FormatConditionClass) -> str
        Set: LongestBarValue(self: FormatConditionClass) = value
        """
        ...

    @property
    def Operator(self) -> AcFormatConditionOperator:
        """ Get: Operator(self: FormatConditionClass) -> AcFormatConditionOperator """
        ...

    @property
    def ShortestBarLimit(self) -> AcFormatBarLimits:
        """
        Get: ShortestBarLimit(self: FormatConditionClass) -> AcFormatBarLimits
        Set: ShortestBarLimit(self: FormatConditionClass) = value
        """
        ...

    @property
    def ShortestBarValue(self) -> str:
        """
        Get: ShortestBarValue(self: FormatConditionClass) -> str
        Set: ShortestBarValue(self: FormatConditionClass) = value
        """
        ...

    @property
    def ShowBarOnly(self) -> bool:
        """
        Get: ShowBarOnly(self: FormatConditionClass) -> bool
        Set: ShowBarOnly(self: FormatConditionClass) = value
        """
        ...

    @property
    def Type(self) -> AcFormatConditionType:
        """ Get: Type(self: FormatConditionClass) -> AcFormatConditionType """
        ...


    def Delete(self): # -> 
        """ Delete(self: FormatConditionClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: FormatConditionClass, dispid: int) -> bool """
        ...

    def Modify(self, Type:AcFormatConditionType, Operator:AcFormatConditionOperator, Expression1:object, Expression2:object): # -> 
        """ Modify(self: FormatConditionClass, Type: AcFormatConditionType, Operator: AcFormatConditionOperator, Expression1: object, Expression2: object) """
        ...


class FormatConditions(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: FormatConditions) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: FormatConditions) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: FormatConditions) -> object """
        ...


    def Add(self, Type:AcFormatConditionType, Operator:AcFormatConditionOperator, Expression1:object, Expression2:object) -> FormatCondition:
        """ Add(self: FormatConditions, Type: AcFormatConditionType, Operator: AcFormatConditionOperator, Expression1: object, Expression2: object) -> FormatCondition """
        ...

    def Delete(self): # -> 
        """ Delete(self: FormatConditions) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: FormatConditions, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class FormClass(_FormEventsOld_Event, Form, __ComObject): # skipped bases: <type '_Form3'>, <type 'IEnumerable'>, <type 'IAccessible'>, <type '_FormEvents_Event'>, <type 'object'>
    """ FormClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: FormClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: FormClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: FormClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: FormClass) -> object """
        ...

    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: FormClass) -> int
        Set: acHiddenCurrentPage(self: FormClass) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: FormClass) -> _Control """
        ...

    @property
    def AfterBeginTransaction(self) -> str:
        """
        Get: AfterBeginTransaction(self: FormClass) -> str
        Set: AfterBeginTransaction(self: FormClass) = value
        """
        ...

    @property
    def AfterBeginTransactionMacro(self) -> str:
        """
        Get: AfterBeginTransactionMacro(self: FormClass) -> str
        Set: AfterBeginTransactionMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterCommitTransaction(self) -> str:
        """
        Get: AfterCommitTransaction(self: FormClass) -> str
        Set: AfterCommitTransaction(self: FormClass) = value
        """
        ...

    @property
    def AfterCommitTransactionMacro(self) -> str:
        """
        Get: AfterCommitTransactionMacro(self: FormClass) -> str
        Set: AfterCommitTransactionMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: FormClass) -> str
        Set: AfterDelConfirm(self: FormClass) = value
        """
        ...

    @property
    def AfterDelConfirmMacro(self) -> str:
        """
        Get: AfterDelConfirmMacro(self: FormClass) -> str
        Set: AfterDelConfirmMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterFinalRender(self) -> str:
        """
        Get: AfterFinalRender(self: FormClass) -> str
        Set: AfterFinalRender(self: FormClass) = value
        """
        ...

    @property
    def AfterFinalRenderMacro(self) -> str:
        """
        Get: AfterFinalRenderMacro(self: FormClass) -> str
        Set: AfterFinalRenderMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: FormClass) -> str
        Set: AfterInsert(self: FormClass) = value
        """
        ...

    @property
    def AfterInsertMacro(self) -> str:
        """
        Get: AfterInsertMacro(self: FormClass) -> str
        Set: AfterInsertMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterLayout(self) -> str:
        """
        Get: AfterLayout(self: FormClass) -> str
        Set: AfterLayout(self: FormClass) = value
        """
        ...

    @property
    def AfterLayoutMacro(self) -> str:
        """
        Get: AfterLayoutMacro(self: FormClass) -> str
        Set: AfterLayoutMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterRender(self) -> str:
        """
        Get: AfterRender(self: FormClass) -> str
        Set: AfterRender(self: FormClass) = value
        """
        ...

    @property
    def AfterRenderMacro(self) -> str:
        """
        Get: AfterRenderMacro(self: FormClass) -> str
        Set: AfterRenderMacro(self: FormClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: FormClass) -> str
        Set: AfterUpdate(self: FormClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: FormClass) -> str
        Set: AfterUpdateMacro(self: FormClass) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: FormClass) -> bool
        Set: AllowAdditions(self: FormClass) = value
        """
        ...

    @property
    def AllowDatasheetView(self) -> bool:
        """
        Get: AllowDatasheetView(self: FormClass) -> bool
        Set: AllowDatasheetView(self: FormClass) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: FormClass) -> bool
        Set: AllowDeletions(self: FormClass) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: FormClass) -> bool
        Set: AllowDesignChanges(self: FormClass) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: FormClass) -> bool
        Set: AllowEditing(self: FormClass) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: FormClass) -> bool
        Set: AllowEdits(self: FormClass) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: FormClass) -> bool
        Set: AllowFilters(self: FormClass) = value
        """
        ...

    @property
    def AllowFormView(self) -> bool:
        """
        Get: AllowFormView(self: FormClass) -> bool
        Set: AllowFormView(self: FormClass) = value
        """
        ...

    @property
    def AllowLayoutView(self) -> bool:
        """
        Get: AllowLayoutView(self: FormClass) -> bool
        Set: AllowLayoutView(self: FormClass) = value
        """
        ...

    @property
    def AllowPivotChartView(self) -> bool:
        """
        Get: AllowPivotChartView(self: FormClass) -> bool
        Set: AllowPivotChartView(self: FormClass) = value
        """
        ...

    @property
    def AllowPivotTableView(self) -> bool:
        """
        Get: AllowPivotTableView(self: FormClass) -> bool
        Set: AllowPivotTableView(self: FormClass) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: FormClass) -> Byte
        Set: AllowUpdating(self: FormClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: FormClass) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: FormClass) -> bool
        Set: AutoCenter(self: FormClass) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: FormClass) -> bool
        Set: AutoResize(self: FormClass) = value
        """
        ...

    @property
    def BatchUpdates(self) -> bool:
        """
        Get: BatchUpdates(self: FormClass) -> bool
        Set: BatchUpdates(self: FormClass) = value
        """
        ...

    @property
    def BeforeBeginTransaction(self) -> str:
        """
        Get: BeforeBeginTransaction(self: FormClass) -> str
        Set: BeforeBeginTransaction(self: FormClass) = value
        """
        ...

    @property
    def BeforeBeginTransactionMacro(self) -> str:
        """
        Get: BeforeBeginTransactionMacro(self: FormClass) -> str
        Set: BeforeBeginTransactionMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeCommitTransaction(self) -> str:
        """
        Get: BeforeCommitTransaction(self: FormClass) -> str
        Set: BeforeCommitTransaction(self: FormClass) = value
        """
        ...

    @property
    def BeforeCommitTransactionMacro(self) -> str:
        """
        Get: BeforeCommitTransactionMacro(self: FormClass) -> str
        Set: BeforeCommitTransactionMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: FormClass) -> str
        Set: BeforeDelConfirm(self: FormClass) = value
        """
        ...

    @property
    def BeforeDelConfirmMacro(self) -> str:
        """
        Get: BeforeDelConfirmMacro(self: FormClass) -> str
        Set: BeforeDelConfirmMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: FormClass) -> str
        Set: BeforeInsert(self: FormClass) = value
        """
        ...

    @property
    def BeforeInsertMacro(self) -> str:
        """
        Get: BeforeInsertMacro(self: FormClass) -> str
        Set: BeforeInsertMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeQuery(self) -> str:
        """
        Get: BeforeQuery(self: FormClass) -> str
        Set: BeforeQuery(self: FormClass) = value
        """
        ...

    @property
    def BeforeQueryMacro(self) -> str:
        """
        Get: BeforeQueryMacro(self: FormClass) -> str
        Set: BeforeQueryMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeRender(self) -> str:
        """
        Get: BeforeRender(self: FormClass) -> str
        Set: BeforeRender(self: FormClass) = value
        """
        ...

    @property
    def BeforeRenderMacro(self) -> str:
        """
        Get: BeforeRenderMacro(self: FormClass) -> str
        Set: BeforeRenderMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeScreenTip(self) -> str:
        """
        Get: BeforeScreenTip(self: FormClass) -> str
        Set: BeforeScreenTip(self: FormClass) = value
        """
        ...

    @property
    def BeforeScreenTipMacro(self) -> str:
        """
        Get: BeforeScreenTipMacro(self: FormClass) -> str
        Set: BeforeScreenTipMacro(self: FormClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: FormClass) -> str
        Set: BeforeUpdate(self: FormClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: FormClass) -> str
        Set: BeforeUpdateMacro(self: FormClass) = value
        """
        ...

    @property
    def BeginBatchEdit(self) -> str:
        """
        Get: BeginBatchEdit(self: FormClass) -> str
        Set: BeginBatchEdit(self: FormClass) = value
        """
        ...

    @property
    def BeginBatchEditMacro(self) -> str:
        """
        Get: BeginBatchEditMacro(self: FormClass) -> str
        Set: BeginBatchEditMacro(self: FormClass) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: FormClass) -> object
        Set: Bookmark(self: FormClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: FormClass) -> Byte
        Set: BorderStyle(self: FormClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: FormClass) -> str
        Set: Caption(self: FormClass) = value
        """
        ...

    @property
    def ChartSpace(self) -> object:
        """ Get: ChartSpace(self: FormClass) -> object """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: FormClass) -> bool
        Set: CloseButton(self: FormClass) = value
        """
        ...

    @property
    def CommandBeforeExecute(self) -> str:
        """
        Get: CommandBeforeExecute(self: FormClass) -> str
        Set: CommandBeforeExecute(self: FormClass) = value
        """
        ...

    @property
    def CommandBeforeExecuteMacro(self) -> str:
        """
        Get: CommandBeforeExecuteMacro(self: FormClass) -> str
        Set: CommandBeforeExecuteMacro(self: FormClass) = value
        """
        ...

    @property
    def CommandChecked(self) -> str:
        """
        Get: CommandChecked(self: FormClass) -> str
        Set: CommandChecked(self: FormClass) = value
        """
        ...

    @property
    def CommandCheckedMacro(self) -> str:
        """
        Get: CommandCheckedMacro(self: FormClass) -> str
        Set: CommandCheckedMacro(self: FormClass) = value
        """
        ...

    @property
    def CommandEnabled(self) -> str:
        """
        Get: CommandEnabled(self: FormClass) -> str
        Set: CommandEnabled(self: FormClass) = value
        """
        ...

    @property
    def CommandEnabledMacro(self) -> str:
        """
        Get: CommandEnabledMacro(self: FormClass) -> str
        Set: CommandEnabledMacro(self: FormClass) = value
        """
        ...

    @property
    def CommandExecute(self) -> str:
        """
        Get: CommandExecute(self: FormClass) -> str
        Set: CommandExecute(self: FormClass) = value
        """
        ...

    @property
    def CommandExecuteMacro(self) -> str:
        """
        Get: CommandExecuteMacro(self: FormClass) -> str
        Set: CommandExecuteMacro(self: FormClass) = value
        """
        ...

    @property
    def CommitOnClose(self) -> Byte:
        """
        Get: CommitOnClose(self: FormClass) -> Byte
        Set: CommitOnClose(self: FormClass) = value
        """
        ...

    @property
    def CommitOnNavigation(self) -> bool:
        """
        Get: CommitOnNavigation(self: FormClass) -> bool
        Set: CommitOnNavigation(self: FormClass) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: FormClass) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: FormClass) -> Int16
        Set: ConnectSynch(self: FormClass) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: FormClass) -> bool
        Set: ControlBox(self: FormClass) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: FormClass) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: FormClass) -> Int16
        Set: Count(self: FormClass) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: FormClass) -> int
        Set: CurrentRecord(self: FormClass) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: FormClass) -> Int16
        Set: CurrentSectionLeft(self: FormClass) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: FormClass) -> Int16
        Set: CurrentSectionTop(self: FormClass) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: FormClass) -> Int16
        Set: CurrentView(self: FormClass) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: FormClass) -> Byte
        Set: Cycle(self: FormClass) = value
        """
        ...

    @property
    def DataChange(self) -> str:
        """
        Get: DataChange(self: FormClass) -> str
        Set: DataChange(self: FormClass) = value
        """
        ...

    @property
    def DataChangeMacro(self) -> str:
        """
        Get: DataChangeMacro(self: FormClass) -> str
        Set: DataChangeMacro(self: FormClass) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: FormClass) -> bool
        Set: DataEntry(self: FormClass) = value
        """
        ...

    @property
    def DataSetChange(self) -> str:
        """
        Get: DataSetChange(self: FormClass) -> str
        Set: DataSetChange(self: FormClass) = value
        """
        ...

    @property
    def DataSetChangeMacro(self) -> str:
        """
        Get: DataSetChangeMacro(self: FormClass) -> str
        Set: DataSetChangeMacro(self: FormClass) = value
        """
        ...

    @property
    def DatasheetAlternateBackColor(self) -> int:
        """
        Get: DatasheetAlternateBackColor(self: FormClass) -> int
        Set: DatasheetAlternateBackColor(self: FormClass) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: FormClass) -> int
        Set: DatasheetBackColor(self: FormClass) = value
        """
        ...

    @property
    def DatasheetBorderLineStyle(self) -> Byte:
        """
        Get: DatasheetBorderLineStyle(self: FormClass) -> Byte
        Set: DatasheetBorderLineStyle(self: FormClass) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: FormClass) -> Byte
        Set: DatasheetCellsEffect(self: FormClass) = value
        """
        ...

    @property
    def DatasheetColumnHeaderUnderlineStyle(self) -> Byte:
        """
        Get: DatasheetColumnHeaderUnderlineStyle(self: FormClass) -> Byte
        Set: DatasheetColumnHeaderUnderlineStyle(self: FormClass) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: FormClass) -> Int16
        Set: DatasheetFontHeight(self: FormClass) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: FormClass) -> bool
        Set: DatasheetFontItalic(self: FormClass) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: FormClass) -> str
        Set: DatasheetFontName(self: FormClass) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: FormClass) -> bool
        Set: DatasheetFontUnderline(self: FormClass) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: FormClass) -> Int16
        Set: DatasheetFontWeight(self: FormClass) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: FormClass) -> int
        Set: DatasheetForeColor(self: FormClass) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: FormClass) -> Byte
        Set: DatasheetGridlinesBehavior(self: FormClass) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: FormClass) -> int
        Set: DatasheetGridlinesColor(self: FormClass) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: FormClass) -> Int16
        Set: DefaultEditing(self: FormClass) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: FormClass) -> Byte
        Set: DefaultView(self: FormClass) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: FormClass) -> bool
        Set: Dirty(self: FormClass) = value
        """
        ...

    @property
    def DisplayOnSharePointSite(self) -> Byte:
        """
        Get: DisplayOnSharePointSite(self: FormClass) -> Byte
        Set: DisplayOnSharePointSite(self: FormClass) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: FormClass) -> bool
        Set: DividingLines(self: FormClass) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: FormClass) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: FormClass) -> bool
        Set: FastLaserPrinting(self: FormClass) = value
        """
        ...

    @property
    def FetchDefaults(self) -> bool:
        """
        Get: FetchDefaults(self: FormClass) -> bool
        Set: FetchDefaults(self: FormClass) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: FormClass) -> str
        Set: Filter(self: FormClass) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: FormClass) -> bool
        Set: FilterOn(self: FormClass) = value
        """
        ...

    @property
    def FilterOnLoad(self) -> bool:
        """
        Get: FilterOnLoad(self: FormClass) -> bool
        Set: FilterOnLoad(self: FormClass) = value
        """
        ...

    @property
    def FitToScreen(self) -> bool:
        """
        Get: FitToScreen(self: FormClass) -> bool
        Set: FitToScreen(self: FormClass) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: FormClass) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: FormClass) -> str
        Set: FormName(self: FormClass) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: FormClass) -> Int16
        Set: FrozenColumns(self: FormClass) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: FormClass) -> Int16
        Set: GridX(self: FormClass) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: FormClass) -> Int16
        Set: GridY(self: FormClass) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: FormClass) -> bool
        Set: HasModule(self: FormClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: FormClass) -> int
        Set: HelpContextId(self: FormClass) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: FormClass) -> str
        Set: HelpFile(self: FormClass) = value
        """
        ...

    @property
    def HorizontalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: HorizontalDatasheetGridlineStyle(self: FormClass) -> Byte
        Set: HorizontalDatasheetGridlineStyle(self: FormClass) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: FormClass) -> int
        Set: Hwnd(self: FormClass) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: FormClass) -> str
        Set: InputParameters(self: FormClass) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: FormClass) -> int
        Set: InsideHeight(self: FormClass) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: FormClass) -> int
        Set: InsideWidth(self: FormClass) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: FormClass) -> bool
        Set: KeyPreview(self: FormClass) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: FormClass) -> bool
        Set: LayoutForPrint(self: FormClass) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: FormClass) -> int
        Set: LogicalPageHeight(self: FormClass) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: FormClass) -> int
        Set: LogicalPageWidth(self: FormClass) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: FormClass) -> bool
        Set: MaxButton(self: FormClass) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: FormClass) -> bool
        Set: MaxRecButton(self: FormClass) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: FormClass) -> int
        Set: MaxRecords(self: FormClass) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: FormClass) -> str
        Set: MenuBar(self: FormClass) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: FormClass) -> bool
        Set: MinButton(self: FormClass) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: FormClass) -> Byte
        Set: MinMaxButtons(self: FormClass) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: FormClass) -> bool
        Set: Modal(self: FormClass) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: FormClass) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: FormClass) -> str
        Set: MouseWheel(self: FormClass) = value
        """
        ...

    @property
    def MouseWheelMacro(self) -> str:
        """
        Get: MouseWheelMacro(self: FormClass) -> str
        Set: MouseWheelMacro(self: FormClass) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: FormClass) -> bool
        Set: Moveable(self: FormClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: FormClass) -> str
        Set: Name(self: FormClass) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: FormClass) -> bool
        Set: NavigationButtons(self: FormClass) = value
        """
        ...

    @property
    def NavigationCaption(self) -> str:
        """
        Get: NavigationCaption(self: FormClass) -> str
        Set: NavigationCaption(self: FormClass) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: FormClass) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: FormClass) -> str
        Set: OnActivate(self: FormClass) = value
        """
        ...

    @property
    def OnActivateMacro(self) -> str:
        """
        Get: OnActivateMacro(self: FormClass) -> str
        Set: OnActivateMacro(self: FormClass) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: FormClass) -> str
        Set: OnApplyFilter(self: FormClass) = value
        """
        ...

    @property
    def OnApplyFilterMacro(self) -> str:
        """
        Get: OnApplyFilterMacro(self: FormClass) -> str
        Set: OnApplyFilterMacro(self: FormClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: FormClass) -> str
        Set: OnClick(self: FormClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: FormClass) -> str
        Set: OnClickMacro(self: FormClass) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: FormClass) -> str
        Set: OnClose(self: FormClass) = value
        """
        ...

    @property
    def OnCloseMacro(self) -> str:
        """
        Get: OnCloseMacro(self: FormClass) -> str
        Set: OnCloseMacro(self: FormClass) = value
        """
        ...

    @property
    def OnConnect(self) -> str:
        """
        Get: OnConnect(self: FormClass) -> str
        Set: OnConnect(self: FormClass) = value
        """
        ...

    @property
    def OnConnectMacro(self) -> str:
        """
        Get: OnConnectMacro(self: FormClass) -> str
        Set: OnConnectMacro(self: FormClass) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: FormClass) -> str
        Set: OnCurrent(self: FormClass) = value
        """
        ...

    @property
    def OnCurrentMacro(self) -> str:
        """
        Get: OnCurrentMacro(self: FormClass) -> str
        Set: OnCurrentMacro(self: FormClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: FormClass) -> str
        Set: OnDblClick(self: FormClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: FormClass) -> str
        Set: OnDblClickMacro(self: FormClass) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: FormClass) -> str
        Set: OnDeactivate(self: FormClass) = value
        """
        ...

    @property
    def OnDeactivateMacro(self) -> str:
        """
        Get: OnDeactivateMacro(self: FormClass) -> str
        Set: OnDeactivateMacro(self: FormClass) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: FormClass) -> str
        Set: OnDelete(self: FormClass) = value
        """
        ...

    @property
    def OnDeleteMacro(self) -> str:
        """
        Get: OnDeleteMacro(self: FormClass) -> str
        Set: OnDeleteMacro(self: FormClass) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: FormClass) -> str
        Set: OnDirty(self: FormClass) = value
        """
        ...

    @property
    def OnDirtyMacro(self) -> str:
        """
        Get: OnDirtyMacro(self: FormClass) -> str
        Set: OnDirtyMacro(self: FormClass) = value
        """
        ...

    @property
    def OnDisconnect(self) -> str:
        """
        Get: OnDisconnect(self: FormClass) -> str
        Set: OnDisconnect(self: FormClass) = value
        """
        ...

    @property
    def OnDisconnectMacro(self) -> str:
        """
        Get: OnDisconnectMacro(self: FormClass) -> str
        Set: OnDisconnectMacro(self: FormClass) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: FormClass) -> str
        Set: OnError(self: FormClass) = value
        """
        ...

    @property
    def OnErrorMacro(self) -> str:
        """
        Get: OnErrorMacro(self: FormClass) -> str
        Set: OnErrorMacro(self: FormClass) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: FormClass) -> str
        Set: OnFilter(self: FormClass) = value
        """
        ...

    @property
    def OnFilterMacro(self) -> str:
        """
        Get: OnFilterMacro(self: FormClass) -> str
        Set: OnFilterMacro(self: FormClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: FormClass) -> str
        Set: OnGotFocus(self: FormClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: FormClass) -> str
        Set: OnGotFocusMacro(self: FormClass) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: FormClass) -> str
        Set: OnInsert(self: FormClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: FormClass) -> str
        Set: OnKeyDown(self: FormClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: FormClass) -> str
        Set: OnKeyDownMacro(self: FormClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: FormClass) -> str
        Set: OnKeyPress(self: FormClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: FormClass) -> str
        Set: OnKeyPressMacro(self: FormClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: FormClass) -> str
        Set: OnKeyUp(self: FormClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: FormClass) -> str
        Set: OnKeyUpMacro(self: FormClass) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: FormClass) -> str
        Set: OnLoad(self: FormClass) = value
        """
        ...

    @property
    def OnLoadMacro(self) -> str:
        """
        Get: OnLoadMacro(self: FormClass) -> str
        Set: OnLoadMacro(self: FormClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: FormClass) -> str
        Set: OnLostFocus(self: FormClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: FormClass) -> str
        Set: OnLostFocusMacro(self: FormClass) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: FormClass) -> str
        Set: OnMenu(self: FormClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: FormClass) -> str
        Set: OnMouseDown(self: FormClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: FormClass) -> str
        Set: OnMouseDownMacro(self: FormClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: FormClass) -> str
        Set: OnMouseMove(self: FormClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: FormClass) -> str
        Set: OnMouseMoveMacro(self: FormClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: FormClass) -> str
        Set: OnMouseUp(self: FormClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: FormClass) -> str
        Set: OnMouseUpMacro(self: FormClass) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: FormClass) -> str
        Set: OnOpen(self: FormClass) = value
        """
        ...

    @property
    def OnOpenMacro(self) -> str:
        """
        Get: OnOpenMacro(self: FormClass) -> str
        Set: OnOpenMacro(self: FormClass) = value
        """
        ...

    @property
    def OnRecordExit(self) -> str:
        """
        Get: OnRecordExit(self: FormClass) -> str
        Set: OnRecordExit(self: FormClass) = value
        """
        ...

    @property
    def OnRecordExitMacro(self) -> str:
        """
        Get: OnRecordExitMacro(self: FormClass) -> str
        Set: OnRecordExitMacro(self: FormClass) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: FormClass) -> str
        Set: OnResize(self: FormClass) = value
        """
        ...

    @property
    def OnResizeMacro(self) -> str:
        """
        Get: OnResizeMacro(self: FormClass) -> str
        Set: OnResizeMacro(self: FormClass) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: FormClass) -> str
        Set: OnTimer(self: FormClass) = value
        """
        ...

    @property
    def OnTimerMacro(self) -> str:
        """
        Get: OnTimerMacro(self: FormClass) -> str
        Set: OnTimerMacro(self: FormClass) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: FormClass) -> str
        Set: OnUndo(self: FormClass) = value
        """
        ...

    @property
    def OnUndoMacro(self) -> str:
        """
        Get: OnUndoMacro(self: FormClass) -> str
        Set: OnUndoMacro(self: FormClass) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: FormClass) -> str
        Set: OnUnload(self: FormClass) = value
        """
        ...

    @property
    def OnUnloadMacro(self) -> str:
        """
        Get: OnUnloadMacro(self: FormClass) -> str
        Set: OnUnloadMacro(self: FormClass) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: FormClass) -> object
        Set: OpenArgs(self: FormClass) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: FormClass) -> str
        Set: OrderBy(self: FormClass) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: FormClass) -> bool
        Set: OrderByOn(self: FormClass) = value
        """
        ...

    @property
    def OrderByOnLoad(self) -> bool:
        """
        Get: OrderByOnLoad(self: FormClass) -> bool
        Set: OrderByOnLoad(self: FormClass) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: FormClass) -> Byte
        Set: Orientation(self: FormClass) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: FormClass) -> int
        Set: Page(self: FormClass) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: FormClass) -> Int16
        Set: Pages(self: FormClass) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: FormClass) -> bool
        Set: Painting(self: FormClass) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: FormClass) -> object
        Set: PaintPalette(self: FormClass) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: FormClass) -> str
        Set: PaletteSource(self: FormClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: FormClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: FormClass) -> str
        Set: Picture(self: FormClass) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: FormClass) -> Byte
        Set: PictureAlignment(self: FormClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: FormClass) -> object
        Set: PictureData(self: FormClass) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: FormClass) -> object
        Set: PicturePalette(self: FormClass) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: FormClass) -> Byte
        Set: PictureSizeMode(self: FormClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: FormClass) -> bool
        Set: PictureTiling(self: FormClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: FormClass) -> Byte
        Set: PictureType(self: FormClass) = value
        """
        ...

    @property
    def PivotTable(self) -> object:
        """ Get: PivotTable(self: FormClass) -> object """
        ...

    @property
    def PivotTableChange(self) -> str:
        """
        Get: PivotTableChange(self: FormClass) -> str
        Set: PivotTableChange(self: FormClass) = value
        """
        ...

    @property
    def PivotTableChangeMacro(self) -> str:
        """
        Get: PivotTableChangeMacro(self: FormClass) -> str
        Set: PivotTableChangeMacro(self: FormClass) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: FormClass) -> bool
        Set: PopUp(self: FormClass) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: FormClass) -> Printer
        Set: Printer(self: FormClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: FormClass) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: FormClass) -> object
        Set: PrtDevMode(self: FormClass) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: FormClass) -> object
        Set: PrtDevNames(self: FormClass) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: FormClass) -> object
        Set: PrtMip(self: FormClass) = value
        """
        ...

    @property
    def Query(self) -> str:
        """
        Get: Query(self: FormClass) -> str
        Set: Query(self: FormClass) = value
        """
        ...

    @property
    def QueryMacro(self) -> str:
        """
        Get: QueryMacro(self: FormClass) -> str
        Set: QueryMacro(self: FormClass) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: FormClass) -> Byte
        Set: RecordLocks(self: FormClass) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: FormClass) -> bool
        Set: RecordSelectors(self: FormClass) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: FormClass) -> object
        Set: Recordset(self: FormClass) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: FormClass) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: FormClass) -> Byte
        Set: RecordsetType(self: FormClass) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: FormClass) -> str
        Set: RecordSource(self: FormClass) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: FormClass) -> str
        Set: RecordSourceQualifier(self: FormClass) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: FormClass) -> str
        Set: ResyncCommand(self: FormClass) = value
        """
        ...

    @property
    def RibbonName(self) -> str:
        """
        Get: RibbonName(self: FormClass) -> str
        Set: RibbonName(self: FormClass) = value
        """
        ...

    @property
    def RollbackTransaction(self) -> str:
        """
        Get: RollbackTransaction(self: FormClass) -> str
        Set: RollbackTransaction(self: FormClass) = value
        """
        ...

    @property
    def RollbackTransactionMacro(self) -> str:
        """
        Get: RollbackTransactionMacro(self: FormClass) -> str
        Set: RollbackTransactionMacro(self: FormClass) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: FormClass) -> Int16
        Set: RowHeight(self: FormClass) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: FormClass) -> Byte
        Set: ScrollBars(self: FormClass) = value
        """
        ...

    @property
    def SelectionChange(self) -> str:
        """
        Get: SelectionChange(self: FormClass) -> str
        Set: SelectionChange(self: FormClass) = value
        """
        ...

    @property
    def SelectionChangeMacro(self) -> str:
        """
        Get: SelectionChangeMacro(self: FormClass) -> str
        Set: SelectionChangeMacro(self: FormClass) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: FormClass) -> int
        Set: SelHeight(self: FormClass) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: FormClass) -> int
        Set: SelLeft(self: FormClass) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: FormClass) -> int
        Set: SelTop(self: FormClass) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: FormClass) -> int
        Set: SelWidth(self: FormClass) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: FormClass) -> str
        Set: ServerFilter(self: FormClass) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: FormClass) -> bool
        Set: ServerFilterByForm(self: FormClass) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: FormClass) -> bool
        Set: ShortcutMenu(self: FormClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: FormClass) -> str
        Set: ShortcutMenuBar(self: FormClass) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: FormClass) -> bool
        Set: ShowGrid(self: FormClass) = value
        """
        ...

    @property
    def SplitFormDatasheet(self) -> AcSplitFormDatasheet:
        """
        Get: SplitFormDatasheet(self: FormClass) -> AcSplitFormDatasheet
        Set: SplitFormDatasheet(self: FormClass) = value
        """
        ...

    @property
    def SplitFormOrientation(self) -> AcSplitFormOrientation:
        """
        Get: SplitFormOrientation(self: FormClass) -> AcSplitFormOrientation
        Set: SplitFormOrientation(self: FormClass) = value
        """
        ...

    @property
    def SplitFormPrinting(self) -> AcSplitFormPrinting:
        """
        Get: SplitFormPrinting(self: FormClass) -> AcSplitFormPrinting
        Set: SplitFormPrinting(self: FormClass) = value
        """
        ...

    @property
    def SplitFormSize(self) -> int:
        """
        Get: SplitFormSize(self: FormClass) -> int
        Set: SplitFormSize(self: FormClass) = value
        """
        ...

    @property
    def SplitFormSplitterBar(self) -> bool:
        """
        Get: SplitFormSplitterBar(self: FormClass) -> bool
        Set: SplitFormSplitterBar(self: FormClass) = value
        """
        ...

    @property
    def SplitFormSplitterBarSave(self) -> bool:
        """
        Get: SplitFormSplitterBarSave(self: FormClass) -> bool
        Set: SplitFormSplitterBarSave(self: FormClass) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: FormClass) -> bool
        Set: SubdatasheetExpanded(self: FormClass) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: FormClass) -> Int16
        Set: SubdatasheetHeight(self: FormClass) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: FormClass) -> Byte
        Set: TabularCharSet(self: FormClass) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: FormClass) -> Byte
        Set: TabularFamily(self: FormClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: FormClass) -> str
        Set: Tag(self: FormClass) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: FormClass) -> int
        Set: TimerInterval(self: FormClass) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: FormClass) -> str
        Set: Toolbar(self: FormClass) = value
        """
        ...

    @property
    def UndoBatchEdit(self) -> str:
        """
        Get: UndoBatchEdit(self: FormClass) -> str
        Set: UndoBatchEdit(self: FormClass) = value
        """
        ...

    @property
    def UndoBatchEditMacro(self) -> str:
        """
        Get: UndoBatchEditMacro(self: FormClass) -> str
        Set: UndoBatchEditMacro(self: FormClass) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: FormClass) -> str
        Set: UniqueTable(self: FormClass) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: FormClass) -> bool
        Set: UseDefaultPrinter(self: FormClass) = value
        """
        ...

    @property
    def VerticalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: VerticalDatasheetGridlineStyle(self: FormClass) -> Byte
        Set: VerticalDatasheetGridlineStyle(self: FormClass) = value
        """
        ...

    @property
    def ViewChange(self) -> str:
        """
        Get: ViewChange(self: FormClass) -> str
        Set: ViewChange(self: FormClass) = value
        """
        ...

    @property
    def ViewChangeMacro(self) -> str:
        """
        Get: ViewChangeMacro(self: FormClass) -> str
        Set: ViewChangeMacro(self: FormClass) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: FormClass) -> Byte
        Set: ViewsAllowed(self: FormClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: FormClass) -> bool
        Set: Visible(self: FormClass) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: FormClass) -> bool
        Set: WhatsThisButton(self: FormClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: FormClass) -> Int16
        Set: Width(self: FormClass) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: FormClass) -> Int16
        Set: WindowHeight(self: FormClass) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: FormClass) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: FormClass) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: FormClass) -> Int16
        Set: WindowWidth(self: FormClass) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: FormClass) -> int
        Set: ZoomControl(self: FormClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: FormClass) -> str
        Set: _Name(self: FormClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: FormClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: FormClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: FormClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: FormClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: FormClass, flagsSelect: int, varChild: object) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: FormClass) -> IEnumerator """
        ...

    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: FormClass, PageNumber: int, Right: int, Down: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: FormClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: FormClass) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: FormClass) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: FormClass) """
        ...

    def Requery(self): # -> 
        """ Requery(self: FormClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: FormClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: FormClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: FormClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _FormEventsOld_Event_add_Activate(self): # -> 
        """ _FormEventsOld_Event_add_Activate(self: FormClass, : _FormEventsOld_ActivateEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterDelConfirm(self): # -> 
        """ _FormEventsOld_Event_add_AfterDelConfirm(self: FormClass, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterFinalRender(self): # -> 
        """ _FormEventsOld_Event_add_AfterFinalRender(self: FormClass, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterInsert(self): # -> 
        """ _FormEventsOld_Event_add_AfterInsert(self: FormClass, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterLayout(self): # -> 
        """ _FormEventsOld_Event_add_AfterLayout(self: FormClass, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterRender(self): # -> 
        """ _FormEventsOld_Event_add_AfterRender(self: FormClass, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def _FormEventsOld_Event_add_AfterUpdate(self): # -> 
        """ _FormEventsOld_Event_add_AfterUpdate(self: FormClass, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def _FormEventsOld_Event_add_ApplyFilter(self): # -> 
        """ _FormEventsOld_Event_add_ApplyFilter(self: FormClass, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeDelConfirm(self): # -> 
        """ _FormEventsOld_Event_add_BeforeDelConfirm(self: FormClass, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeInsert(self): # -> 
        """ _FormEventsOld_Event_add_BeforeInsert(self: FormClass, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeQuery(self): # -> 
        """ _FormEventsOld_Event_add_BeforeQuery(self: FormClass, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeRender(self): # -> 
        """ _FormEventsOld_Event_add_BeforeRender(self: FormClass, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeScreenTip(self): # -> 
        """ _FormEventsOld_Event_add_BeforeScreenTip(self: FormClass, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeforeUpdate(self): # -> 
        """ _FormEventsOld_Event_add_BeforeUpdate(self: FormClass, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def _FormEventsOld_Event_add_BeginBatchEdit(self): # -> 
        """ _FormEventsOld_Event_add_BeginBatchEdit(self: FormClass, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def _FormEventsOld_Event_add_Click(self): # -> 
        """ _FormEventsOld_Event_add_Click(self: FormClass, : _FormEventsOld_ClickEventHandler) """
        ...

    def _FormEventsOld_Event_add_Close(self): # -> 
        """ _FormEventsOld_Event_add_Close(self: FormClass, : _FormEventsOld_CloseEventHandler) """
        ...

    def _FormEventsOld_Event_add_CommandBeforeExecute(self): # -> 
        """ _FormEventsOld_Event_add_CommandBeforeExecute(self: FormClass, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def _FormEventsOld_Event_add_CommandChecked(self): # -> 
        """ _FormEventsOld_Event_add_CommandChecked(self: FormClass, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def _FormEventsOld_Event_add_CommandEnabled(self): # -> 
        """ _FormEventsOld_Event_add_CommandEnabled(self: FormClass, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def _FormEventsOld_Event_add_CommandExecute(self): # -> 
        """ _FormEventsOld_Event_add_CommandExecute(self: FormClass, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def _FormEventsOld_Event_add_Current(self): # -> 
        """ _FormEventsOld_Event_add_Current(self: FormClass, : _FormEventsOld_CurrentEventHandler) """
        ...

    def _FormEventsOld_Event_add_DataChange(self): # -> 
        """ _FormEventsOld_Event_add_DataChange(self: FormClass, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def _FormEventsOld_Event_add_DataSetChange(self): # -> 
        """ _FormEventsOld_Event_add_DataSetChange(self: FormClass, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def _FormEventsOld_Event_add_DblClick(self): # -> 
        """ _FormEventsOld_Event_add_DblClick(self: FormClass, : _FormEventsOld_DblClickEventHandler) """
        ...

    def _FormEventsOld_Event_add_Deactivate(self): # -> 
        """ _FormEventsOld_Event_add_Deactivate(self: FormClass, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def _FormEventsOld_Event_add_Delete(self): # -> 
        """ _FormEventsOld_Event_add_Delete(self: FormClass, : _FormEventsOld_DeleteEventHandler) """
        ...

    def _FormEventsOld_Event_add_Dirty(self): # -> 
        """ _FormEventsOld_Event_add_Dirty(self: FormClass, : _FormEventsOld_DirtyEventHandler) """
        ...

    def _FormEventsOld_Event_add_Error(self): # -> 
        """ _FormEventsOld_Event_add_Error(self: FormClass, : _FormEventsOld_ErrorEventHandler) """
        ...

    def _FormEventsOld_Event_add_Filter(self): # -> 
        """ _FormEventsOld_Event_add_Filter(self: FormClass, : _FormEventsOld_FilterEventHandler) """
        ...

    def _FormEventsOld_Event_add_GotFocus(self): # -> 
        """ _FormEventsOld_Event_add_GotFocus(self: FormClass, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def _FormEventsOld_Event_add_KeyDown(self): # -> 
        """ _FormEventsOld_Event_add_KeyDown(self: FormClass, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def _FormEventsOld_Event_add_KeyPress(self): # -> 
        """ _FormEventsOld_Event_add_KeyPress(self: FormClass, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def _FormEventsOld_Event_add_KeyUp(self): # -> 
        """ _FormEventsOld_Event_add_KeyUp(self: FormClass, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def _FormEventsOld_Event_add_Load(self): # -> 
        """ _FormEventsOld_Event_add_Load(self: FormClass, : _FormEventsOld_LoadEventHandler) """
        ...

    def _FormEventsOld_Event_add_LostFocus(self): # -> 
        """ _FormEventsOld_Event_add_LostFocus(self: FormClass, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def _FormEventsOld_Event_add_MouseDown(self): # -> 
        """ _FormEventsOld_Event_add_MouseDown(self: FormClass, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def _FormEventsOld_Event_add_MouseMove(self): # -> 
        """ _FormEventsOld_Event_add_MouseMove(self: FormClass, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def _FormEventsOld_Event_add_MouseUp(self): # -> 
        """ _FormEventsOld_Event_add_MouseUp(self: FormClass, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def _FormEventsOld_Event_add_MouseWheel(self): # -> 
        """ _FormEventsOld_Event_add_MouseWheel(self: FormClass, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def _FormEventsOld_Event_add_OnConnect(self): # -> 
        """ _FormEventsOld_Event_add_OnConnect(self: FormClass, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def _FormEventsOld_Event_add_OnDisconnect(self): # -> 
        """ _FormEventsOld_Event_add_OnDisconnect(self: FormClass, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def _FormEventsOld_Event_add_Open(self): # -> 
        """ _FormEventsOld_Event_add_Open(self: FormClass, : _FormEventsOld_OpenEventHandler) """
        ...

    def _FormEventsOld_Event_add_PivotTableChange(self): # -> 
        """ _FormEventsOld_Event_add_PivotTableChange(self: FormClass, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def _FormEventsOld_Event_add_Query(self): # -> 
        """ _FormEventsOld_Event_add_Query(self: FormClass, : _FormEventsOld_QueryEventHandler) """
        ...

    def _FormEventsOld_Event_add_RecordExit(self): # -> 
        """ _FormEventsOld_Event_add_RecordExit(self: FormClass, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def _FormEventsOld_Event_add_Resize(self): # -> 
        """ _FormEventsOld_Event_add_Resize(self: FormClass, : _FormEventsOld_ResizeEventHandler) """
        ...

    def _FormEventsOld_Event_add_SelectionChange(self): # -> 
        """ _FormEventsOld_Event_add_SelectionChange(self: FormClass, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def _FormEventsOld_Event_add_Timer(self): # -> 
        """ _FormEventsOld_Event_add_Timer(self: FormClass, : _FormEventsOld_TimerEventHandler) """
        ...

    def _FormEventsOld_Event_add_Undo(self): # -> 
        """ _FormEventsOld_Event_add_Undo(self: FormClass, : _FormEventsOld_UndoEventHandler) """
        ...

    def _FormEventsOld_Event_add_UndoBatchEdit(self): # -> 
        """ _FormEventsOld_Event_add_UndoBatchEdit(self: FormClass, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def _FormEventsOld_Event_add_Unload(self): # -> 
        """ _FormEventsOld_Event_add_Unload(self: FormClass, : _FormEventsOld_UnloadEventHandler) """
        ...

    def _FormEventsOld_Event_add_ViewChange(self): # -> 
        """ _FormEventsOld_Event_add_ViewChange(self: FormClass, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Activate(self): # -> 
        """ _FormEventsOld_Event_remove_Activate(self: FormClass, : _FormEventsOld_ActivateEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterDelConfirm(self): # -> 
        """ _FormEventsOld_Event_remove_AfterDelConfirm(self: FormClass, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterFinalRender(self): # -> 
        """ _FormEventsOld_Event_remove_AfterFinalRender(self: FormClass, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterInsert(self): # -> 
        """ _FormEventsOld_Event_remove_AfterInsert(self: FormClass, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterLayout(self): # -> 
        """ _FormEventsOld_Event_remove_AfterLayout(self: FormClass, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterRender(self): # -> 
        """ _FormEventsOld_Event_remove_AfterRender(self: FormClass, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def _FormEventsOld_Event_remove_AfterUpdate(self): # -> 
        """ _FormEventsOld_Event_remove_AfterUpdate(self: FormClass, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def _FormEventsOld_Event_remove_ApplyFilter(self): # -> 
        """ _FormEventsOld_Event_remove_ApplyFilter(self: FormClass, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeDelConfirm(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeDelConfirm(self: FormClass, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeInsert(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeInsert(self: FormClass, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeQuery(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeQuery(self: FormClass, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeRender(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeRender(self: FormClass, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeScreenTip(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeScreenTip(self: FormClass, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeforeUpdate(self): # -> 
        """ _FormEventsOld_Event_remove_BeforeUpdate(self: FormClass, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def _FormEventsOld_Event_remove_BeginBatchEdit(self): # -> 
        """ _FormEventsOld_Event_remove_BeginBatchEdit(self: FormClass, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Click(self): # -> 
        """ _FormEventsOld_Event_remove_Click(self: FormClass, : _FormEventsOld_ClickEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Close(self): # -> 
        """ _FormEventsOld_Event_remove_Close(self: FormClass, : _FormEventsOld_CloseEventHandler) """
        ...

    def _FormEventsOld_Event_remove_CommandBeforeExecute(self): # -> 
        """ _FormEventsOld_Event_remove_CommandBeforeExecute(self: FormClass, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def _FormEventsOld_Event_remove_CommandChecked(self): # -> 
        """ _FormEventsOld_Event_remove_CommandChecked(self: FormClass, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def _FormEventsOld_Event_remove_CommandEnabled(self): # -> 
        """ _FormEventsOld_Event_remove_CommandEnabled(self: FormClass, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def _FormEventsOld_Event_remove_CommandExecute(self): # -> 
        """ _FormEventsOld_Event_remove_CommandExecute(self: FormClass, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Current(self): # -> 
        """ _FormEventsOld_Event_remove_Current(self: FormClass, : _FormEventsOld_CurrentEventHandler) """
        ...

    def _FormEventsOld_Event_remove_DataChange(self): # -> 
        """ _FormEventsOld_Event_remove_DataChange(self: FormClass, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_DataSetChange(self): # -> 
        """ _FormEventsOld_Event_remove_DataSetChange(self: FormClass, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_DblClick(self): # -> 
        """ _FormEventsOld_Event_remove_DblClick(self: FormClass, : _FormEventsOld_DblClickEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Deactivate(self): # -> 
        """ _FormEventsOld_Event_remove_Deactivate(self: FormClass, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Delete(self): # -> 
        """ _FormEventsOld_Event_remove_Delete(self: FormClass, : _FormEventsOld_DeleteEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Dirty(self): # -> 
        """ _FormEventsOld_Event_remove_Dirty(self: FormClass, : _FormEventsOld_DirtyEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Error(self): # -> 
        """ _FormEventsOld_Event_remove_Error(self: FormClass, : _FormEventsOld_ErrorEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Filter(self): # -> 
        """ _FormEventsOld_Event_remove_Filter(self: FormClass, : _FormEventsOld_FilterEventHandler) """
        ...

    def _FormEventsOld_Event_remove_GotFocus(self): # -> 
        """ _FormEventsOld_Event_remove_GotFocus(self: FormClass, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def _FormEventsOld_Event_remove_KeyDown(self): # -> 
        """ _FormEventsOld_Event_remove_KeyDown(self: FormClass, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def _FormEventsOld_Event_remove_KeyPress(self): # -> 
        """ _FormEventsOld_Event_remove_KeyPress(self: FormClass, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def _FormEventsOld_Event_remove_KeyUp(self): # -> 
        """ _FormEventsOld_Event_remove_KeyUp(self: FormClass, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Load(self): # -> 
        """ _FormEventsOld_Event_remove_Load(self: FormClass, : _FormEventsOld_LoadEventHandler) """
        ...

    def _FormEventsOld_Event_remove_LostFocus(self): # -> 
        """ _FormEventsOld_Event_remove_LostFocus(self: FormClass, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def _FormEventsOld_Event_remove_MouseDown(self): # -> 
        """ _FormEventsOld_Event_remove_MouseDown(self: FormClass, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def _FormEventsOld_Event_remove_MouseMove(self): # -> 
        """ _FormEventsOld_Event_remove_MouseMove(self: FormClass, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def _FormEventsOld_Event_remove_MouseUp(self): # -> 
        """ _FormEventsOld_Event_remove_MouseUp(self: FormClass, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def _FormEventsOld_Event_remove_MouseWheel(self): # -> 
        """ _FormEventsOld_Event_remove_MouseWheel(self: FormClass, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def _FormEventsOld_Event_remove_OnConnect(self): # -> 
        """ _FormEventsOld_Event_remove_OnConnect(self: FormClass, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def _FormEventsOld_Event_remove_OnDisconnect(self): # -> 
        """ _FormEventsOld_Event_remove_OnDisconnect(self: FormClass, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Open(self): # -> 
        """ _FormEventsOld_Event_remove_Open(self: FormClass, : _FormEventsOld_OpenEventHandler) """
        ...

    def _FormEventsOld_Event_remove_PivotTableChange(self): # -> 
        """ _FormEventsOld_Event_remove_PivotTableChange(self: FormClass, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Query(self): # -> 
        """ _FormEventsOld_Event_remove_Query(self: FormClass, : _FormEventsOld_QueryEventHandler) """
        ...

    def _FormEventsOld_Event_remove_RecordExit(self): # -> 
        """ _FormEventsOld_Event_remove_RecordExit(self: FormClass, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Resize(self): # -> 
        """ _FormEventsOld_Event_remove_Resize(self: FormClass, : _FormEventsOld_ResizeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_SelectionChange(self): # -> 
        """ _FormEventsOld_Event_remove_SelectionChange(self: FormClass, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Timer(self): # -> 
        """ _FormEventsOld_Event_remove_Timer(self: FormClass, : _FormEventsOld_TimerEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Undo(self): # -> 
        """ _FormEventsOld_Event_remove_Undo(self: FormClass, : _FormEventsOld_UndoEventHandler) """
        ...

    def _FormEventsOld_Event_remove_UndoBatchEdit(self): # -> 
        """ _FormEventsOld_Event_remove_UndoBatchEdit(self: FormClass, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def _FormEventsOld_Event_remove_Unload(self): # -> 
        """ _FormEventsOld_Event_remove_Unload(self: FormClass, : _FormEventsOld_UnloadEventHandler) """
        ...

    def _FormEventsOld_Event_remove_ViewChange(self): # -> 
        """ _FormEventsOld_Event_remove_ViewChange(self: FormClass, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    ApplyFilter = ...
    Click = ...
    Close = ...
    Current = ...
    DblClick = ...
    Deactivate = ...
    Delete = ...
    Error = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Open = ...
    RecordExit = ...
    Resize = ...
    Timer = ...
    Unload = ...
    _FormEventsOld_Event_Activate = ...
    _FormEventsOld_Event_AfterBeginTransaction = ...
    _FormEventsOld_Event_AfterCommitTransaction = ...
    _FormEventsOld_Event_AfterDelConfirm = ...
    _FormEventsOld_Event_AfterFinalRender = ...
    _FormEventsOld_Event_AfterInsert = ...
    _FormEventsOld_Event_AfterLayout = ...
    _FormEventsOld_Event_AfterRender = ...
    _FormEventsOld_Event_AfterUpdate = ...
    _FormEventsOld_Event_ApplyFilter = ...
    _FormEventsOld_Event_BeforeBeginTransaction = ...
    _FormEventsOld_Event_BeforeCommitTransaction = ...
    _FormEventsOld_Event_BeforeDelConfirm = ...
    _FormEventsOld_Event_BeforeInsert = ...
    _FormEventsOld_Event_BeforeQuery = ...
    _FormEventsOld_Event_BeforeRender = ...
    _FormEventsOld_Event_BeforeScreenTip = ...
    _FormEventsOld_Event_BeforeUpdate = ...
    _FormEventsOld_Event_BeginBatchEdit = ...
    _FormEventsOld_Event_Click = ...
    _FormEventsOld_Event_Close = ...
    _FormEventsOld_Event_CommandBeforeExecute = ...
    _FormEventsOld_Event_CommandChecked = ...
    _FormEventsOld_Event_CommandEnabled = ...
    _FormEventsOld_Event_CommandExecute = ...
    _FormEventsOld_Event_Current = ...
    _FormEventsOld_Event_DataChange = ...
    _FormEventsOld_Event_DataSetChange = ...
    _FormEventsOld_Event_DblClick = ...
    _FormEventsOld_Event_Deactivate = ...
    _FormEventsOld_Event_Delete = ...
    _FormEventsOld_Event_Dirty = ...
    _FormEventsOld_Event_Error = ...
    _FormEventsOld_Event_Filter = ...
    _FormEventsOld_Event_GotFocus = ...
    _FormEventsOld_Event_KeyDown = ...
    _FormEventsOld_Event_KeyPress = ...
    _FormEventsOld_Event_KeyUp = ...
    _FormEventsOld_Event_Load = ...
    _FormEventsOld_Event_LostFocus = ...
    _FormEventsOld_Event_MouseDown = ...
    _FormEventsOld_Event_MouseMove = ...
    _FormEventsOld_Event_MouseUp = ...
    _FormEventsOld_Event_MouseWheel = ...
    _FormEventsOld_Event_OnConnect = ...
    _FormEventsOld_Event_OnDisconnect = ...
    _FormEventsOld_Event_Open = ...
    _FormEventsOld_Event_PivotTableChange = ...
    _FormEventsOld_Event_Query = ...
    _FormEventsOld_Event_RecordExit = ...
    _FormEventsOld_Event_Resize = ...
    _FormEventsOld_Event_RollbackTransaction = ...
    _FormEventsOld_Event_SelectionChange = ...
    _FormEventsOld_Event_Timer = ...
    _FormEventsOld_Event_Undo = ...
    _FormEventsOld_Event_UndoBatchEdit = ...
    _FormEventsOld_Event_Unload = ...
    _FormEventsOld_Event_ViewChange = ...
    _FormEvents_Event_AfterDelConfirm = ...
    _FormEvents_Event_AfterFinalRender = ...
    _FormEvents_Event_AfterInsert = ...
    _FormEvents_Event_AfterLayout = ...
    _FormEvents_Event_AfterRender = ...
    _FormEvents_Event_AfterUpdate = ...
    _FormEvents_Event_BeforeDelConfirm = ...
    _FormEvents_Event_BeforeInsert = ...
    _FormEvents_Event_BeforeQuery = ...
    _FormEvents_Event_BeforeRender = ...
    _FormEvents_Event_BeforeScreenTip = ...
    _FormEvents_Event_BeforeUpdate = ...
    _FormEvents_Event_BeginBatchEdit = ...
    _FormEvents_Event_CommandBeforeExecute = ...
    _FormEvents_Event_CommandChecked = ...
    _FormEvents_Event_CommandEnabled = ...
    _FormEvents_Event_CommandExecute = ...
    _FormEvents_Event_DataChange = ...
    _FormEvents_Event_DataSetChange = ...
    _FormEvents_Event_Dirty = ...
    _FormEvents_Event_Filter = ...
    _FormEvents_Event_MouseWheel = ...
    _FormEvents_Event_OnConnect = ...
    _FormEvents_Event_OnDisconnect = ...
    _FormEvents_Event_PivotTableChange = ...
    _FormEvents_Event_Query = ...
    _FormEvents_Event_SelectionChange = ...
    _FormEvents_Event_Undo = ...
    _FormEvents_Event_UndoBatchEdit = ...
    _FormEvents_Event_ViewChange = ...


class _Form(IAccessible, IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Form) -> int
        Set: acHiddenCurrentPage(self: _Form) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Form) -> _Control """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: _Form) -> str
        Set: AfterDelConfirm(self: _Form) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: _Form) -> str
        Set: AfterInsert(self: _Form) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Form) -> str
        Set: AfterUpdate(self: _Form) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: _Form) -> bool
        Set: AllowAdditions(self: _Form) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: _Form) -> bool
        Set: AllowDeletions(self: _Form) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: _Form) -> bool
        Set: AllowDesignChanges(self: _Form) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: _Form) -> bool
        Set: AllowEditing(self: _Form) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: _Form) -> bool
        Set: AllowEdits(self: _Form) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: _Form) -> bool
        Set: AllowFilters(self: _Form) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: _Form) -> Byte
        Set: AllowUpdating(self: _Form) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Form) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: _Form) -> bool
        Set: AutoCenter(self: _Form) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: _Form) -> bool
        Set: AutoResize(self: _Form) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: _Form) -> str
        Set: BeforeDelConfirm(self: _Form) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: _Form) -> str
        Set: BeforeInsert(self: _Form) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Form) -> str
        Set: BeforeUpdate(self: _Form) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: _Form) -> object
        Set: Bookmark(self: _Form) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Form) -> Byte
        Set: BorderStyle(self: _Form) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Form) -> str
        Set: Caption(self: _Form) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: _Form) -> bool
        Set: CloseButton(self: _Form) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: _Form) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: _Form) -> Int16
        Set: ConnectSynch(self: _Form) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: _Form) -> bool
        Set: ControlBox(self: _Form) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Form) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Form) -> Int16
        Set: Count(self: _Form) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Form) -> int
        Set: CurrentRecord(self: _Form) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: _Form) -> Int16
        Set: CurrentSectionLeft(self: _Form) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: _Form) -> Int16
        Set: CurrentSectionTop(self: _Form) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: _Form) -> Int16
        Set: CurrentView(self: _Form) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: _Form) -> Byte
        Set: Cycle(self: _Form) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: _Form) -> bool
        Set: DataEntry(self: _Form) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: _Form) -> int
        Set: DatasheetBackColor(self: _Form) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: _Form) -> Byte
        Set: DatasheetCellsEffect(self: _Form) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: _Form) -> Int16
        Set: DatasheetFontHeight(self: _Form) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: _Form) -> bool
        Set: DatasheetFontItalic(self: _Form) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: _Form) -> str
        Set: DatasheetFontName(self: _Form) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: _Form) -> bool
        Set: DatasheetFontUnderline(self: _Form) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: _Form) -> Int16
        Set: DatasheetFontWeight(self: _Form) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: _Form) -> int
        Set: DatasheetForeColor(self: _Form) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: _Form) -> Byte
        Set: DatasheetGridlinesBehavior(self: _Form) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: _Form) -> int
        Set: DatasheetGridlinesColor(self: _Form) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: _Form) -> Int16
        Set: DefaultEditing(self: _Form) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: _Form) -> Byte
        Set: DefaultView(self: _Form) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Form) -> bool
        Set: Dirty(self: _Form) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: _Form) -> bool
        Set: DividingLines(self: _Form) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: _Form) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Form) -> bool
        Set: FastLaserPrinting(self: _Form) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Form) -> str
        Set: Filter(self: _Form) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Form) -> bool
        Set: FilterOn(self: _Form) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _Form) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Form) -> str
        Set: FormName(self: _Form) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: _Form) -> Int16
        Set: FrozenColumns(self: _Form) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Form) -> Int16
        Set: GridX(self: _Form) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Form) -> Int16
        Set: GridY(self: _Form) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Form) -> bool
        Set: HasModule(self: _Form) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Form) -> int
        Set: HelpContextId(self: _Form) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Form) -> str
        Set: HelpFile(self: _Form) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Form) -> int
        Set: Hwnd(self: _Form) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Form) -> str
        Set: InputParameters(self: _Form) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: _Form) -> int
        Set: InsideHeight(self: _Form) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: _Form) -> int
        Set: InsideWidth(self: _Form) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: _Form) -> bool
        Set: KeyPreview(self: _Form) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Form) -> bool
        Set: LayoutForPrint(self: _Form) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Form) -> int
        Set: LogicalPageHeight(self: _Form) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Form) -> int
        Set: LogicalPageWidth(self: _Form) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Form) -> bool
        Set: MaxButton(self: _Form) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: _Form) -> bool
        Set: MaxRecButton(self: _Form) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: _Form) -> int
        Set: MaxRecords(self: _Form) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Form) -> str
        Set: MenuBar(self: _Form) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Form) -> bool
        Set: MinButton(self: _Form) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: _Form) -> Byte
        Set: MinMaxButtons(self: _Form) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: _Form) -> bool
        Set: Modal(self: _Form) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Form) -> Module """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Form) -> str
        Set: Name(self: _Form) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: _Form) -> bool
        Set: NavigationButtons(self: _Form) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: _Form) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Form) -> str
        Set: OnActivate(self: _Form) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: _Form) -> str
        Set: OnApplyFilter(self: _Form) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Form) -> str
        Set: OnClick(self: _Form) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Form) -> str
        Set: OnClose(self: _Form) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: _Form) -> str
        Set: OnCurrent(self: _Form) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Form) -> str
        Set: OnDblClick(self: _Form) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Form) -> str
        Set: OnDeactivate(self: _Form) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: _Form) -> str
        Set: OnDelete(self: _Form) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Form) -> str
        Set: OnDirty(self: _Form) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Form) -> str
        Set: OnError(self: _Form) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: _Form) -> str
        Set: OnFilter(self: _Form) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Form) -> str
        Set: OnGotFocus(self: _Form) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: _Form) -> str
        Set: OnInsert(self: _Form) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Form) -> str
        Set: OnKeyDown(self: _Form) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Form) -> str
        Set: OnKeyPress(self: _Form) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Form) -> str
        Set: OnKeyUp(self: _Form) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: _Form) -> str
        Set: OnLoad(self: _Form) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Form) -> str
        Set: OnLostFocus(self: _Form) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Form) -> str
        Set: OnMenu(self: _Form) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Form) -> str
        Set: OnMouseDown(self: _Form) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Form) -> str
        Set: OnMouseMove(self: _Form) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Form) -> str
        Set: OnMouseUp(self: _Form) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Form) -> str
        Set: OnOpen(self: _Form) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: _Form) -> str
        Set: OnResize(self: _Form) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: _Form) -> str
        Set: OnTimer(self: _Form) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: _Form) -> str
        Set: OnUnload(self: _Form) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: _Form) -> object
        Set: OpenArgs(self: _Form) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Form) -> str
        Set: OrderBy(self: _Form) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Form) -> bool
        Set: OrderByOn(self: _Form) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Form) -> Byte
        Set: Orientation(self: _Form) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Form) -> int
        Set: Page(self: _Form) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Form) -> Int16
        Set: Pages(self: _Form) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Form) -> bool
        Set: Painting(self: _Form) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Form) -> object
        Set: PaintPalette(self: _Form) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Form) -> str
        Set: PaletteSource(self: _Form) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Form) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Form) -> str
        Set: Picture(self: _Form) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Form) -> Byte
        Set: PictureAlignment(self: _Form) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Form) -> object
        Set: PictureData(self: _Form) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Form) -> object
        Set: PicturePalette(self: _Form) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Form) -> Byte
        Set: PictureSizeMode(self: _Form) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Form) -> bool
        Set: PictureTiling(self: _Form) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Form) -> Byte
        Set: PictureType(self: _Form) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: _Form) -> bool
        Set: PopUp(self: _Form) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Form) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Form) -> object
        Set: PrtDevMode(self: _Form) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Form) -> object
        Set: PrtDevNames(self: _Form) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Form) -> object
        Set: PrtMip(self: _Form) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Form) -> Byte
        Set: RecordLocks(self: _Form) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: _Form) -> bool
        Set: RecordSelectors(self: _Form) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Form) -> object
        Set: Recordset(self: _Form) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: _Form) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: _Form) -> Byte
        Set: RecordsetType(self: _Form) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Form) -> str
        Set: RecordSource(self: _Form) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: _Form) -> str
        Set: ResyncCommand(self: _Form) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: _Form) -> Int16
        Set: RowHeight(self: _Form) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: _Form) -> Byte
        Set: ScrollBars(self: _Form) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: _Form) -> int
        Set: SelHeight(self: _Form) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: _Form) -> int
        Set: SelLeft(self: _Form) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: _Form) -> int
        Set: SelTop(self: _Form) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: _Form) -> int
        Set: SelWidth(self: _Form) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Form) -> str
        Set: ServerFilter(self: _Form) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: _Form) -> bool
        Set: ServerFilterByForm(self: _Form) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: _Form) -> bool
        Set: ShortcutMenu(self: _Form) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Form) -> str
        Set: ShortcutMenuBar(self: _Form) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: _Form) -> bool
        Set: ShowGrid(self: _Form) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: _Form) -> bool
        Set: SubdatasheetExpanded(self: _Form) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: _Form) -> Int16
        Set: SubdatasheetHeight(self: _Form) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: _Form) -> Byte
        Set: TabularCharSet(self: _Form) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: _Form) -> Byte
        Set: TabularFamily(self: _Form) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Form) -> str
        Set: Tag(self: _Form) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: _Form) -> int
        Set: TimerInterval(self: _Form) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Form) -> str
        Set: Toolbar(self: _Form) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: _Form) -> str
        Set: UniqueTable(self: _Form) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: _Form) -> Byte
        Set: ViewsAllowed(self: _Form) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Form) -> bool
        Set: Visible(self: _Form) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: _Form) -> bool
        Set: WhatsThisButton(self: _Form) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Form) -> Int16
        Set: Width(self: _Form) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: _Form) -> Int16
        Set: WindowHeight(self: _Form) = value
        """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: _Form) -> Int16
        Set: WindowWidth(self: _Form) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Form) -> int
        Set: ZoomControl(self: _Form) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Form) -> str
        Set: _Name(self: _Form) = value
        """
        ...


    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: _Form, PageNumber: int, Right: int, Down: int) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: _Form) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: _Form) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: _Form) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Form) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Form) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Form) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Form, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _FormEventsOld_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Activate(self): # -> 
        """ add_Activate(self: _FormEventsOld_Event, : _FormEventsOld_ActivateEventHandler) """
        ...

    def add_AfterBeginTransaction(self): # -> 
        """ add_AfterBeginTransaction(self: _FormEventsOld_Event, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def add_AfterCommitTransaction(self): # -> 
        """ add_AfterCommitTransaction(self: _FormEventsOld_Event, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def add_AfterDelConfirm(self): # -> 
        """ add_AfterDelConfirm(self: _FormEventsOld_Event, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def add_AfterFinalRender(self): # -> 
        """ add_AfterFinalRender(self: _FormEventsOld_Event, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def add_AfterInsert(self): # -> 
        """ add_AfterInsert(self: _FormEventsOld_Event, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def add_AfterLayout(self): # -> 
        """ add_AfterLayout(self: _FormEventsOld_Event, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def add_AfterRender(self): # -> 
        """ add_AfterRender(self: _FormEventsOld_Event, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _FormEventsOld_Event, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: _FormEventsOld_Event, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def add_BeforeBeginTransaction(self): # -> 
        """ add_BeforeBeginTransaction(self: _FormEventsOld_Event, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def add_BeforeCommitTransaction(self): # -> 
        """ add_BeforeCommitTransaction(self: _FormEventsOld_Event, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def add_BeforeDelConfirm(self): # -> 
        """ add_BeforeDelConfirm(self: _FormEventsOld_Event, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def add_BeforeInsert(self): # -> 
        """ add_BeforeInsert(self: _FormEventsOld_Event, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def add_BeforeQuery(self): # -> 
        """ add_BeforeQuery(self: _FormEventsOld_Event, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def add_BeforeRender(self): # -> 
        """ add_BeforeRender(self: _FormEventsOld_Event, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def add_BeforeScreenTip(self): # -> 
        """ add_BeforeScreenTip(self: _FormEventsOld_Event, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _FormEventsOld_Event, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def add_BeginBatchEdit(self): # -> 
        """ add_BeginBatchEdit(self: _FormEventsOld_Event, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _FormEventsOld_Event, : _FormEventsOld_ClickEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: _FormEventsOld_Event, : _FormEventsOld_CloseEventHandler) """
        ...

    def add_CommandBeforeExecute(self): # -> 
        """ add_CommandBeforeExecute(self: _FormEventsOld_Event, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def add_CommandChecked(self): # -> 
        """ add_CommandChecked(self: _FormEventsOld_Event, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def add_CommandEnabled(self): # -> 
        """ add_CommandEnabled(self: _FormEventsOld_Event, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def add_CommandExecute(self): # -> 
        """ add_CommandExecute(self: _FormEventsOld_Event, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: _FormEventsOld_Event, : _FormEventsOld_CurrentEventHandler) """
        ...

    def add_DataChange(self): # -> 
        """ add_DataChange(self: _FormEventsOld_Event, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def add_DataSetChange(self): # -> 
        """ add_DataSetChange(self: _FormEventsOld_Event, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _FormEventsOld_Event, : _FormEventsOld_DblClickEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: _FormEventsOld_Event, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def add_Delete(self): # -> 
        """ add_Delete(self: _FormEventsOld_Event, : _FormEventsOld_DeleteEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: _FormEventsOld_Event, : _FormEventsOld_DirtyEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: _FormEventsOld_Event, : _FormEventsOld_ErrorEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: _FormEventsOld_Event, : _FormEventsOld_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _FormEventsOld_Event, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _FormEventsOld_Event, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _FormEventsOld_Event, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _FormEventsOld_Event, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: _FormEventsOld_Event, : _FormEventsOld_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _FormEventsOld_Event, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _FormEventsOld_Event, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _FormEventsOld_Event, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _FormEventsOld_Event, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: _FormEventsOld_Event, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def add_OnConnect(self): # -> 
        """ add_OnConnect(self: _FormEventsOld_Event, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def add_OnDisconnect(self): # -> 
        """ add_OnDisconnect(self: _FormEventsOld_Event, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: _FormEventsOld_Event, : _FormEventsOld_OpenEventHandler) """
        ...

    def add_PivotTableChange(self): # -> 
        """ add_PivotTableChange(self: _FormEventsOld_Event, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def add_Query(self): # -> 
        """ add_Query(self: _FormEventsOld_Event, : _FormEventsOld_QueryEventHandler) """
        ...

    def add_RecordExit(self): # -> 
        """ add_RecordExit(self: _FormEventsOld_Event, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: _FormEventsOld_Event, : _FormEventsOld_ResizeEventHandler) """
        ...

    def add_RollbackTransaction(self): # -> 
        """ add_RollbackTransaction(self: _FormEventsOld_Event, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def add_SelectionChange(self): # -> 
        """ add_SelectionChange(self: _FormEventsOld_Event, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: _FormEventsOld_Event, : _FormEventsOld_TimerEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: _FormEventsOld_Event, : _FormEventsOld_UndoEventHandler) """
        ...

    def add_UndoBatchEdit(self): # -> 
        """ add_UndoBatchEdit(self: _FormEventsOld_Event, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: _FormEventsOld_Event, : _FormEventsOld_UnloadEventHandler) """
        ...

    def add_ViewChange(self): # -> 
        """ add_ViewChange(self: _FormEventsOld_Event, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: _FormEventsOld_Event, : _FormEventsOld_ActivateEventHandler) """
        ...

    def remove_AfterBeginTransaction(self): # -> 
        """ remove_AfterBeginTransaction(self: _FormEventsOld_Event, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def remove_AfterCommitTransaction(self): # -> 
        """ remove_AfterCommitTransaction(self: _FormEventsOld_Event, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def remove_AfterDelConfirm(self): # -> 
        """ remove_AfterDelConfirm(self: _FormEventsOld_Event, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def remove_AfterFinalRender(self): # -> 
        """ remove_AfterFinalRender(self: _FormEventsOld_Event, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def remove_AfterInsert(self): # -> 
        """ remove_AfterInsert(self: _FormEventsOld_Event, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def remove_AfterLayout(self): # -> 
        """ remove_AfterLayout(self: _FormEventsOld_Event, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def remove_AfterRender(self): # -> 
        """ remove_AfterRender(self: _FormEventsOld_Event, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _FormEventsOld_Event, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: _FormEventsOld_Event, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def remove_BeforeBeginTransaction(self): # -> 
        """ remove_BeforeBeginTransaction(self: _FormEventsOld_Event, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def remove_BeforeCommitTransaction(self): # -> 
        """ remove_BeforeCommitTransaction(self: _FormEventsOld_Event, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def remove_BeforeDelConfirm(self): # -> 
        """ remove_BeforeDelConfirm(self: _FormEventsOld_Event, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def remove_BeforeInsert(self): # -> 
        """ remove_BeforeInsert(self: _FormEventsOld_Event, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def remove_BeforeQuery(self): # -> 
        """ remove_BeforeQuery(self: _FormEventsOld_Event, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def remove_BeforeRender(self): # -> 
        """ remove_BeforeRender(self: _FormEventsOld_Event, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def remove_BeforeScreenTip(self): # -> 
        """ remove_BeforeScreenTip(self: _FormEventsOld_Event, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _FormEventsOld_Event, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def remove_BeginBatchEdit(self): # -> 
        """ remove_BeginBatchEdit(self: _FormEventsOld_Event, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _FormEventsOld_Event, : _FormEventsOld_ClickEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: _FormEventsOld_Event, : _FormEventsOld_CloseEventHandler) """
        ...

    def remove_CommandBeforeExecute(self): # -> 
        """ remove_CommandBeforeExecute(self: _FormEventsOld_Event, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def remove_CommandChecked(self): # -> 
        """ remove_CommandChecked(self: _FormEventsOld_Event, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def remove_CommandEnabled(self): # -> 
        """ remove_CommandEnabled(self: _FormEventsOld_Event, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def remove_CommandExecute(self): # -> 
        """ remove_CommandExecute(self: _FormEventsOld_Event, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: _FormEventsOld_Event, : _FormEventsOld_CurrentEventHandler) """
        ...

    def remove_DataChange(self): # -> 
        """ remove_DataChange(self: _FormEventsOld_Event, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def remove_DataSetChange(self): # -> 
        """ remove_DataSetChange(self: _FormEventsOld_Event, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _FormEventsOld_Event, : _FormEventsOld_DblClickEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: _FormEventsOld_Event, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def remove_Delete(self): # -> 
        """ remove_Delete(self: _FormEventsOld_Event, : _FormEventsOld_DeleteEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: _FormEventsOld_Event, : _FormEventsOld_DirtyEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: _FormEventsOld_Event, : _FormEventsOld_ErrorEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: _FormEventsOld_Event, : _FormEventsOld_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _FormEventsOld_Event, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _FormEventsOld_Event, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _FormEventsOld_Event, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _FormEventsOld_Event, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: _FormEventsOld_Event, : _FormEventsOld_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _FormEventsOld_Event, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _FormEventsOld_Event, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _FormEventsOld_Event, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _FormEventsOld_Event, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: _FormEventsOld_Event, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def remove_OnConnect(self): # -> 
        """ remove_OnConnect(self: _FormEventsOld_Event, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def remove_OnDisconnect(self): # -> 
        """ remove_OnDisconnect(self: _FormEventsOld_Event, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: _FormEventsOld_Event, : _FormEventsOld_OpenEventHandler) """
        ...

    def remove_PivotTableChange(self): # -> 
        """ remove_PivotTableChange(self: _FormEventsOld_Event, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def remove_Query(self): # -> 
        """ remove_Query(self: _FormEventsOld_Event, : _FormEventsOld_QueryEventHandler) """
        ...

    def remove_RecordExit(self): # -> 
        """ remove_RecordExit(self: _FormEventsOld_Event, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: _FormEventsOld_Event, : _FormEventsOld_ResizeEventHandler) """
        ...

    def remove_RollbackTransaction(self): # -> 
        """ remove_RollbackTransaction(self: _FormEventsOld_Event, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def remove_SelectionChange(self): # -> 
        """ remove_SelectionChange(self: _FormEventsOld_Event, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: _FormEventsOld_Event, : _FormEventsOld_TimerEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: _FormEventsOld_Event, : _FormEventsOld_UndoEventHandler) """
        ...

    def remove_UndoBatchEdit(self): # -> 
        """ remove_UndoBatchEdit(self: _FormEventsOld_Event, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: _FormEventsOld_Event, : _FormEventsOld_UnloadEventHandler) """
        ...

    def remove_ViewChange(self): # -> 
        """ remove_ViewChange(self: _FormEventsOld_Event, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    Activate = ...
    AfterBeginTransaction = ...
    AfterCommitTransaction = ...
    AfterDelConfirm = ...
    AfterFinalRender = ...
    AfterInsert = ...
    AfterLayout = ...
    AfterRender = ...
    AfterUpdate = ...
    ApplyFilter = ...
    BeforeBeginTransaction = ...
    BeforeCommitTransaction = ...
    BeforeDelConfirm = ...
    BeforeInsert = ...
    BeforeQuery = ...
    BeforeRender = ...
    BeforeScreenTip = ...
    BeforeUpdate = ...
    BeginBatchEdit = ...
    Click = ...
    Close = ...
    CommandBeforeExecute = ...
    CommandChecked = ...
    CommandEnabled = ...
    CommandExecute = ...
    Current = ...
    DataChange = ...
    DataSetChange = ...
    DblClick = ...
    Deactivate = ...
    Delete = ...
    Dirty = ...
    Error = ...
    Filter = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    MouseWheel = ...
    OnConnect = ...
    OnDisconnect = ...
    Open = ...
    PivotTableChange = ...
    Query = ...
    RecordExit = ...
    Resize = ...
    RollbackTransaction = ...
    SelectionChange = ...
    Timer = ...
    Undo = ...
    UndoBatchEdit = ...
    Unload = ...
    ViewChange = ...


class FormOld(_FormEventsOld_Event, _Form): # skipped bases: <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class FormOldClass(FormOld, __ComObject): # skipped bases: <type '_FormEventsOld_Event'>, <type '_Form'>, <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ FormOldClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: FormOldClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: FormOldClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: FormOldClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: FormOldClass) -> object """
        ...

    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: FormOldClass) -> int
        Set: acHiddenCurrentPage(self: FormOldClass) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: FormOldClass) -> _Control """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: FormOldClass) -> str
        Set: AfterDelConfirm(self: FormOldClass) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: FormOldClass) -> str
        Set: AfterInsert(self: FormOldClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: FormOldClass) -> str
        Set: AfterUpdate(self: FormOldClass) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: FormOldClass) -> bool
        Set: AllowAdditions(self: FormOldClass) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: FormOldClass) -> bool
        Set: AllowDeletions(self: FormOldClass) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: FormOldClass) -> bool
        Set: AllowDesignChanges(self: FormOldClass) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: FormOldClass) -> bool
        Set: AllowEditing(self: FormOldClass) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: FormOldClass) -> bool
        Set: AllowEdits(self: FormOldClass) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: FormOldClass) -> bool
        Set: AllowFilters(self: FormOldClass) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: FormOldClass) -> Byte
        Set: AllowUpdating(self: FormOldClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: FormOldClass) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: FormOldClass) -> bool
        Set: AutoCenter(self: FormOldClass) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: FormOldClass) -> bool
        Set: AutoResize(self: FormOldClass) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: FormOldClass) -> str
        Set: BeforeDelConfirm(self: FormOldClass) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: FormOldClass) -> str
        Set: BeforeInsert(self: FormOldClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: FormOldClass) -> str
        Set: BeforeUpdate(self: FormOldClass) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: FormOldClass) -> object
        Set: Bookmark(self: FormOldClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: FormOldClass) -> Byte
        Set: BorderStyle(self: FormOldClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: FormOldClass) -> str
        Set: Caption(self: FormOldClass) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: FormOldClass) -> bool
        Set: CloseButton(self: FormOldClass) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: FormOldClass) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: FormOldClass) -> Int16
        Set: ConnectSynch(self: FormOldClass) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: FormOldClass) -> bool
        Set: ControlBox(self: FormOldClass) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: FormOldClass) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: FormOldClass) -> Int16
        Set: Count(self: FormOldClass) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: FormOldClass) -> int
        Set: CurrentRecord(self: FormOldClass) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: FormOldClass) -> Int16
        Set: CurrentSectionLeft(self: FormOldClass) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: FormOldClass) -> Int16
        Set: CurrentSectionTop(self: FormOldClass) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: FormOldClass) -> Int16
        Set: CurrentView(self: FormOldClass) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: FormOldClass) -> Byte
        Set: Cycle(self: FormOldClass) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: FormOldClass) -> bool
        Set: DataEntry(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: FormOldClass) -> int
        Set: DatasheetBackColor(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: FormOldClass) -> Byte
        Set: DatasheetCellsEffect(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: FormOldClass) -> Int16
        Set: DatasheetFontHeight(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: FormOldClass) -> bool
        Set: DatasheetFontItalic(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: FormOldClass) -> str
        Set: DatasheetFontName(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: FormOldClass) -> bool
        Set: DatasheetFontUnderline(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: FormOldClass) -> Int16
        Set: DatasheetFontWeight(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: FormOldClass) -> int
        Set: DatasheetForeColor(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: FormOldClass) -> Byte
        Set: DatasheetGridlinesBehavior(self: FormOldClass) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: FormOldClass) -> int
        Set: DatasheetGridlinesColor(self: FormOldClass) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: FormOldClass) -> Int16
        Set: DefaultEditing(self: FormOldClass) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: FormOldClass) -> Byte
        Set: DefaultView(self: FormOldClass) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: FormOldClass) -> bool
        Set: Dirty(self: FormOldClass) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: FormOldClass) -> bool
        Set: DividingLines(self: FormOldClass) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: FormOldClass) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: FormOldClass) -> bool
        Set: FastLaserPrinting(self: FormOldClass) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: FormOldClass) -> str
        Set: Filter(self: FormOldClass) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: FormOldClass) -> bool
        Set: FilterOn(self: FormOldClass) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: FormOldClass) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: FormOldClass) -> str
        Set: FormName(self: FormOldClass) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: FormOldClass) -> Int16
        Set: FrozenColumns(self: FormOldClass) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: FormOldClass) -> Int16
        Set: GridX(self: FormOldClass) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: FormOldClass) -> Int16
        Set: GridY(self: FormOldClass) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: FormOldClass) -> bool
        Set: HasModule(self: FormOldClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: FormOldClass) -> int
        Set: HelpContextId(self: FormOldClass) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: FormOldClass) -> str
        Set: HelpFile(self: FormOldClass) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: FormOldClass) -> int
        Set: Hwnd(self: FormOldClass) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: FormOldClass) -> str
        Set: InputParameters(self: FormOldClass) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: FormOldClass) -> int
        Set: InsideHeight(self: FormOldClass) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: FormOldClass) -> int
        Set: InsideWidth(self: FormOldClass) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: FormOldClass) -> bool
        Set: KeyPreview(self: FormOldClass) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: FormOldClass) -> bool
        Set: LayoutForPrint(self: FormOldClass) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: FormOldClass) -> int
        Set: LogicalPageHeight(self: FormOldClass) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: FormOldClass) -> int
        Set: LogicalPageWidth(self: FormOldClass) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: FormOldClass) -> bool
        Set: MaxButton(self: FormOldClass) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: FormOldClass) -> bool
        Set: MaxRecButton(self: FormOldClass) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: FormOldClass) -> int
        Set: MaxRecords(self: FormOldClass) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: FormOldClass) -> str
        Set: MenuBar(self: FormOldClass) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: FormOldClass) -> bool
        Set: MinButton(self: FormOldClass) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: FormOldClass) -> Byte
        Set: MinMaxButtons(self: FormOldClass) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: FormOldClass) -> bool
        Set: Modal(self: FormOldClass) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: FormOldClass) -> Module """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: FormOldClass) -> str
        Set: Name(self: FormOldClass) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: FormOldClass) -> bool
        Set: NavigationButtons(self: FormOldClass) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: FormOldClass) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: FormOldClass) -> str
        Set: OnActivate(self: FormOldClass) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: FormOldClass) -> str
        Set: OnApplyFilter(self: FormOldClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: FormOldClass) -> str
        Set: OnClick(self: FormOldClass) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: FormOldClass) -> str
        Set: OnClose(self: FormOldClass) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: FormOldClass) -> str
        Set: OnCurrent(self: FormOldClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: FormOldClass) -> str
        Set: OnDblClick(self: FormOldClass) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: FormOldClass) -> str
        Set: OnDeactivate(self: FormOldClass) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: FormOldClass) -> str
        Set: OnDelete(self: FormOldClass) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: FormOldClass) -> str
        Set: OnDirty(self: FormOldClass) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: FormOldClass) -> str
        Set: OnError(self: FormOldClass) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: FormOldClass) -> str
        Set: OnFilter(self: FormOldClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: FormOldClass) -> str
        Set: OnGotFocus(self: FormOldClass) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: FormOldClass) -> str
        Set: OnInsert(self: FormOldClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: FormOldClass) -> str
        Set: OnKeyDown(self: FormOldClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: FormOldClass) -> str
        Set: OnKeyPress(self: FormOldClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: FormOldClass) -> str
        Set: OnKeyUp(self: FormOldClass) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: FormOldClass) -> str
        Set: OnLoad(self: FormOldClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: FormOldClass) -> str
        Set: OnLostFocus(self: FormOldClass) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: FormOldClass) -> str
        Set: OnMenu(self: FormOldClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: FormOldClass) -> str
        Set: OnMouseDown(self: FormOldClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: FormOldClass) -> str
        Set: OnMouseMove(self: FormOldClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: FormOldClass) -> str
        Set: OnMouseUp(self: FormOldClass) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: FormOldClass) -> str
        Set: OnOpen(self: FormOldClass) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: FormOldClass) -> str
        Set: OnResize(self: FormOldClass) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: FormOldClass) -> str
        Set: OnTimer(self: FormOldClass) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: FormOldClass) -> str
        Set: OnUnload(self: FormOldClass) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: FormOldClass) -> object
        Set: OpenArgs(self: FormOldClass) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: FormOldClass) -> str
        Set: OrderBy(self: FormOldClass) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: FormOldClass) -> bool
        Set: OrderByOn(self: FormOldClass) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: FormOldClass) -> Byte
        Set: Orientation(self: FormOldClass) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: FormOldClass) -> int
        Set: Page(self: FormOldClass) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: FormOldClass) -> Int16
        Set: Pages(self: FormOldClass) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: FormOldClass) -> bool
        Set: Painting(self: FormOldClass) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: FormOldClass) -> object
        Set: PaintPalette(self: FormOldClass) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: FormOldClass) -> str
        Set: PaletteSource(self: FormOldClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: FormOldClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: FormOldClass) -> str
        Set: Picture(self: FormOldClass) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: FormOldClass) -> Byte
        Set: PictureAlignment(self: FormOldClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: FormOldClass) -> object
        Set: PictureData(self: FormOldClass) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: FormOldClass) -> object
        Set: PicturePalette(self: FormOldClass) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: FormOldClass) -> Byte
        Set: PictureSizeMode(self: FormOldClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: FormOldClass) -> bool
        Set: PictureTiling(self: FormOldClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: FormOldClass) -> Byte
        Set: PictureType(self: FormOldClass) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: FormOldClass) -> bool
        Set: PopUp(self: FormOldClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: FormOldClass) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: FormOldClass) -> object
        Set: PrtDevMode(self: FormOldClass) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: FormOldClass) -> object
        Set: PrtDevNames(self: FormOldClass) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: FormOldClass) -> object
        Set: PrtMip(self: FormOldClass) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: FormOldClass) -> Byte
        Set: RecordLocks(self: FormOldClass) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: FormOldClass) -> bool
        Set: RecordSelectors(self: FormOldClass) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: FormOldClass) -> object
        Set: Recordset(self: FormOldClass) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: FormOldClass) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: FormOldClass) -> Byte
        Set: RecordsetType(self: FormOldClass) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: FormOldClass) -> str
        Set: RecordSource(self: FormOldClass) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: FormOldClass) -> str
        Set: ResyncCommand(self: FormOldClass) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: FormOldClass) -> Int16
        Set: RowHeight(self: FormOldClass) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: FormOldClass) -> Byte
        Set: ScrollBars(self: FormOldClass) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: FormOldClass) -> int
        Set: SelHeight(self: FormOldClass) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: FormOldClass) -> int
        Set: SelLeft(self: FormOldClass) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: FormOldClass) -> int
        Set: SelTop(self: FormOldClass) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: FormOldClass) -> int
        Set: SelWidth(self: FormOldClass) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: FormOldClass) -> str
        Set: ServerFilter(self: FormOldClass) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: FormOldClass) -> bool
        Set: ServerFilterByForm(self: FormOldClass) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: FormOldClass) -> bool
        Set: ShortcutMenu(self: FormOldClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: FormOldClass) -> str
        Set: ShortcutMenuBar(self: FormOldClass) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: FormOldClass) -> bool
        Set: ShowGrid(self: FormOldClass) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: FormOldClass) -> bool
        Set: SubdatasheetExpanded(self: FormOldClass) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: FormOldClass) -> Int16
        Set: SubdatasheetHeight(self: FormOldClass) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: FormOldClass) -> Byte
        Set: TabularCharSet(self: FormOldClass) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: FormOldClass) -> Byte
        Set: TabularFamily(self: FormOldClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: FormOldClass) -> str
        Set: Tag(self: FormOldClass) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: FormOldClass) -> int
        Set: TimerInterval(self: FormOldClass) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: FormOldClass) -> str
        Set: Toolbar(self: FormOldClass) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: FormOldClass) -> str
        Set: UniqueTable(self: FormOldClass) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: FormOldClass) -> Byte
        Set: ViewsAllowed(self: FormOldClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: FormOldClass) -> bool
        Set: Visible(self: FormOldClass) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: FormOldClass) -> bool
        Set: WhatsThisButton(self: FormOldClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: FormOldClass) -> Int16
        Set: Width(self: FormOldClass) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: FormOldClass) -> Int16
        Set: WindowHeight(self: FormOldClass) = value
        """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: FormOldClass) -> Int16
        Set: WindowWidth(self: FormOldClass) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: FormOldClass) -> int
        Set: ZoomControl(self: FormOldClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: FormOldClass) -> str
        Set: _Name(self: FormOldClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: FormOldClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: FormOldClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: FormOldClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: FormOldClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: FormOldClass, flagsSelect: int, varChild: object) """
        ...

    def add_Activate(self): # -> 
        """ add_Activate(self: FormOldClass, : _FormEventsOld_ActivateEventHandler) """
        ...

    def add_AfterBeginTransaction(self): # -> 
        """ add_AfterBeginTransaction(self: FormOldClass, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def add_AfterCommitTransaction(self): # -> 
        """ add_AfterCommitTransaction(self: FormOldClass, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def add_AfterDelConfirm(self): # -> 
        """ add_AfterDelConfirm(self: FormOldClass, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def add_AfterFinalRender(self): # -> 
        """ add_AfterFinalRender(self: FormOldClass, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def add_AfterInsert(self): # -> 
        """ add_AfterInsert(self: FormOldClass, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def add_AfterLayout(self): # -> 
        """ add_AfterLayout(self: FormOldClass, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def add_AfterRender(self): # -> 
        """ add_AfterRender(self: FormOldClass, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: FormOldClass, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: FormOldClass, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def add_BeforeBeginTransaction(self): # -> 
        """ add_BeforeBeginTransaction(self: FormOldClass, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def add_BeforeCommitTransaction(self): # -> 
        """ add_BeforeCommitTransaction(self: FormOldClass, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def add_BeforeDelConfirm(self): # -> 
        """ add_BeforeDelConfirm(self: FormOldClass, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def add_BeforeInsert(self): # -> 
        """ add_BeforeInsert(self: FormOldClass, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def add_BeforeQuery(self): # -> 
        """ add_BeforeQuery(self: FormOldClass, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def add_BeforeRender(self): # -> 
        """ add_BeforeRender(self: FormOldClass, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def add_BeforeScreenTip(self): # -> 
        """ add_BeforeScreenTip(self: FormOldClass, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: FormOldClass, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def add_BeginBatchEdit(self): # -> 
        """ add_BeginBatchEdit(self: FormOldClass, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: FormOldClass, : _FormEventsOld_ClickEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: FormOldClass, : _FormEventsOld_CloseEventHandler) """
        ...

    def add_CommandBeforeExecute(self): # -> 
        """ add_CommandBeforeExecute(self: FormOldClass, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def add_CommandChecked(self): # -> 
        """ add_CommandChecked(self: FormOldClass, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def add_CommandEnabled(self): # -> 
        """ add_CommandEnabled(self: FormOldClass, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def add_CommandExecute(self): # -> 
        """ add_CommandExecute(self: FormOldClass, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: FormOldClass, : _FormEventsOld_CurrentEventHandler) """
        ...

    def add_DataChange(self): # -> 
        """ add_DataChange(self: FormOldClass, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def add_DataSetChange(self): # -> 
        """ add_DataSetChange(self: FormOldClass, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: FormOldClass, : _FormEventsOld_DblClickEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: FormOldClass, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def add_Delete(self): # -> 
        """ add_Delete(self: FormOldClass, : _FormEventsOld_DeleteEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: FormOldClass, : _FormEventsOld_DirtyEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: FormOldClass, : _FormEventsOld_ErrorEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: FormOldClass, : _FormEventsOld_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: FormOldClass, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: FormOldClass, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: FormOldClass, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: FormOldClass, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: FormOldClass, : _FormEventsOld_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: FormOldClass, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: FormOldClass, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: FormOldClass, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: FormOldClass, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: FormOldClass, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def add_OnConnect(self): # -> 
        """ add_OnConnect(self: FormOldClass, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def add_OnDisconnect(self): # -> 
        """ add_OnDisconnect(self: FormOldClass, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: FormOldClass, : _FormEventsOld_OpenEventHandler) """
        ...

    def add_PivotTableChange(self): # -> 
        """ add_PivotTableChange(self: FormOldClass, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def add_Query(self): # -> 
        """ add_Query(self: FormOldClass, : _FormEventsOld_QueryEventHandler) """
        ...

    def add_RecordExit(self): # -> 
        """ add_RecordExit(self: FormOldClass, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: FormOldClass, : _FormEventsOld_ResizeEventHandler) """
        ...

    def add_RollbackTransaction(self): # -> 
        """ add_RollbackTransaction(self: FormOldClass, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def add_SelectionChange(self): # -> 
        """ add_SelectionChange(self: FormOldClass, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: FormOldClass, : _FormEventsOld_TimerEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: FormOldClass, : _FormEventsOld_UndoEventHandler) """
        ...

    def add_UndoBatchEdit(self): # -> 
        """ add_UndoBatchEdit(self: FormOldClass, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: FormOldClass, : _FormEventsOld_UnloadEventHandler) """
        ...

    def add_ViewChange(self): # -> 
        """ add_ViewChange(self: FormOldClass, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: FormOldClass) -> IEnumerator """
        ...

    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: FormOldClass, PageNumber: int, Right: int, Down: int) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: FormOldClass) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: FormOldClass) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: FormOldClass, : _FormEventsOld_ActivateEventHandler) """
        ...

    def remove_AfterBeginTransaction(self): # -> 
        """ remove_AfterBeginTransaction(self: FormOldClass, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def remove_AfterCommitTransaction(self): # -> 
        """ remove_AfterCommitTransaction(self: FormOldClass, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def remove_AfterDelConfirm(self): # -> 
        """ remove_AfterDelConfirm(self: FormOldClass, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def remove_AfterFinalRender(self): # -> 
        """ remove_AfterFinalRender(self: FormOldClass, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def remove_AfterInsert(self): # -> 
        """ remove_AfterInsert(self: FormOldClass, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def remove_AfterLayout(self): # -> 
        """ remove_AfterLayout(self: FormOldClass, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def remove_AfterRender(self): # -> 
        """ remove_AfterRender(self: FormOldClass, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: FormOldClass, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: FormOldClass, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def remove_BeforeBeginTransaction(self): # -> 
        """ remove_BeforeBeginTransaction(self: FormOldClass, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def remove_BeforeCommitTransaction(self): # -> 
        """ remove_BeforeCommitTransaction(self: FormOldClass, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def remove_BeforeDelConfirm(self): # -> 
        """ remove_BeforeDelConfirm(self: FormOldClass, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def remove_BeforeInsert(self): # -> 
        """ remove_BeforeInsert(self: FormOldClass, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def remove_BeforeQuery(self): # -> 
        """ remove_BeforeQuery(self: FormOldClass, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def remove_BeforeRender(self): # -> 
        """ remove_BeforeRender(self: FormOldClass, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def remove_BeforeScreenTip(self): # -> 
        """ remove_BeforeScreenTip(self: FormOldClass, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: FormOldClass, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def remove_BeginBatchEdit(self): # -> 
        """ remove_BeginBatchEdit(self: FormOldClass, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: FormOldClass, : _FormEventsOld_ClickEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: FormOldClass, : _FormEventsOld_CloseEventHandler) """
        ...

    def remove_CommandBeforeExecute(self): # -> 
        """ remove_CommandBeforeExecute(self: FormOldClass, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def remove_CommandChecked(self): # -> 
        """ remove_CommandChecked(self: FormOldClass, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def remove_CommandEnabled(self): # -> 
        """ remove_CommandEnabled(self: FormOldClass, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def remove_CommandExecute(self): # -> 
        """ remove_CommandExecute(self: FormOldClass, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: FormOldClass, : _FormEventsOld_CurrentEventHandler) """
        ...

    def remove_DataChange(self): # -> 
        """ remove_DataChange(self: FormOldClass, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def remove_DataSetChange(self): # -> 
        """ remove_DataSetChange(self: FormOldClass, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: FormOldClass, : _FormEventsOld_DblClickEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: FormOldClass, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def remove_Delete(self): # -> 
        """ remove_Delete(self: FormOldClass, : _FormEventsOld_DeleteEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: FormOldClass, : _FormEventsOld_DirtyEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: FormOldClass, : _FormEventsOld_ErrorEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: FormOldClass, : _FormEventsOld_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: FormOldClass, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: FormOldClass, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: FormOldClass, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: FormOldClass, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: FormOldClass, : _FormEventsOld_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: FormOldClass, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: FormOldClass, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: FormOldClass, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: FormOldClass, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: FormOldClass, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def remove_OnConnect(self): # -> 
        """ remove_OnConnect(self: FormOldClass, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def remove_OnDisconnect(self): # -> 
        """ remove_OnDisconnect(self: FormOldClass, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: FormOldClass, : _FormEventsOld_OpenEventHandler) """
        ...

    def remove_PivotTableChange(self): # -> 
        """ remove_PivotTableChange(self: FormOldClass, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def remove_Query(self): # -> 
        """ remove_Query(self: FormOldClass, : _FormEventsOld_QueryEventHandler) """
        ...

    def remove_RecordExit(self): # -> 
        """ remove_RecordExit(self: FormOldClass, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: FormOldClass, : _FormEventsOld_ResizeEventHandler) """
        ...

    def remove_RollbackTransaction(self): # -> 
        """ remove_RollbackTransaction(self: FormOldClass, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def remove_SelectionChange(self): # -> 
        """ remove_SelectionChange(self: FormOldClass, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: FormOldClass, : _FormEventsOld_TimerEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: FormOldClass, : _FormEventsOld_UndoEventHandler) """
        ...

    def remove_UndoBatchEdit(self): # -> 
        """ remove_UndoBatchEdit(self: FormOldClass, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: FormOldClass, : _FormEventsOld_UnloadEventHandler) """
        ...

    def remove_ViewChange(self): # -> 
        """ remove_ViewChange(self: FormOldClass, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: FormOldClass) """
        ...

    def Requery(self): # -> 
        """ Requery(self: FormOldClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: FormOldClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: FormOldClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: FormOldClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    AfterBeginTransaction = ...
    AfterCommitTransaction = ...
    AfterFinalRender = ...
    AfterLayout = ...
    AfterRender = ...
    ApplyFilter = ...
    BeforeBeginTransaction = ...
    BeforeCommitTransaction = ...
    BeforeQuery = ...
    BeforeRender = ...
    BeforeScreenTip = ...
    BeginBatchEdit = ...
    Click = ...
    Close = ...
    CommandBeforeExecute = ...
    CommandChecked = ...
    CommandEnabled = ...
    CommandExecute = ...
    Current = ...
    DataChange = ...
    DataSetChange = ...
    DblClick = ...
    Deactivate = ...
    Delete = ...
    Error = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    MouseWheel = ...
    OnConnect = ...
    OnDisconnect = ...
    Open = ...
    PivotTableChange = ...
    Query = ...
    RecordExit = ...
    Resize = ...
    RollbackTransaction = ...
    SelectionChange = ...
    Timer = ...
    UndoBatchEdit = ...
    Unload = ...
    ViewChange = ...
    _FormEventsOld_Event_AfterDelConfirm = ...
    _FormEventsOld_Event_AfterInsert = ...
    _FormEventsOld_Event_AfterUpdate = ...
    _FormEventsOld_Event_BeforeDelConfirm = ...
    _FormEventsOld_Event_BeforeInsert = ...
    _FormEventsOld_Event_BeforeUpdate = ...
    _FormEventsOld_Event_Dirty = ...
    _FormEventsOld_Event_Filter = ...
    _FormEventsOld_Event_Undo = ...


class _Form2(IAccessible, IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Form2) -> int
        Set: acHiddenCurrentPage(self: _Form2) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Form2) -> _Control """
        ...

    @property
    def AfterBeginTransaction(self) -> str:
        """
        Get: AfterBeginTransaction(self: _Form2) -> str
        Set: AfterBeginTransaction(self: _Form2) = value
        """
        ...

    @property
    def AfterCommitTransaction(self) -> str:
        """
        Get: AfterCommitTransaction(self: _Form2) -> str
        Set: AfterCommitTransaction(self: _Form2) = value
        """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: _Form2) -> str
        Set: AfterDelConfirm(self: _Form2) = value
        """
        ...

    @property
    def AfterFinalRender(self) -> str:
        """
        Get: AfterFinalRender(self: _Form2) -> str
        Set: AfterFinalRender(self: _Form2) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: _Form2) -> str
        Set: AfterInsert(self: _Form2) = value
        """
        ...

    @property
    def AfterLayout(self) -> str:
        """
        Get: AfterLayout(self: _Form2) -> str
        Set: AfterLayout(self: _Form2) = value
        """
        ...

    @property
    def AfterRender(self) -> str:
        """
        Get: AfterRender(self: _Form2) -> str
        Set: AfterRender(self: _Form2) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Form2) -> str
        Set: AfterUpdate(self: _Form2) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: _Form2) -> bool
        Set: AllowAdditions(self: _Form2) = value
        """
        ...

    @property
    def AllowDatasheetView(self) -> bool:
        """
        Get: AllowDatasheetView(self: _Form2) -> bool
        Set: AllowDatasheetView(self: _Form2) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: _Form2) -> bool
        Set: AllowDeletions(self: _Form2) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: _Form2) -> bool
        Set: AllowDesignChanges(self: _Form2) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: _Form2) -> bool
        Set: AllowEditing(self: _Form2) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: _Form2) -> bool
        Set: AllowEdits(self: _Form2) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: _Form2) -> bool
        Set: AllowFilters(self: _Form2) = value
        """
        ...

    @property
    def AllowFormView(self) -> bool:
        """
        Get: AllowFormView(self: _Form2) -> bool
        Set: AllowFormView(self: _Form2) = value
        """
        ...

    @property
    def AllowPivotChartView(self) -> bool:
        """
        Get: AllowPivotChartView(self: _Form2) -> bool
        Set: AllowPivotChartView(self: _Form2) = value
        """
        ...

    @property
    def AllowPivotTableView(self) -> bool:
        """
        Get: AllowPivotTableView(self: _Form2) -> bool
        Set: AllowPivotTableView(self: _Form2) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: _Form2) -> Byte
        Set: AllowUpdating(self: _Form2) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Form2) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: _Form2) -> bool
        Set: AutoCenter(self: _Form2) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: _Form2) -> bool
        Set: AutoResize(self: _Form2) = value
        """
        ...

    @property
    def BatchUpdates(self) -> bool:
        """
        Get: BatchUpdates(self: _Form2) -> bool
        Set: BatchUpdates(self: _Form2) = value
        """
        ...

    @property
    def BeforeBeginTransaction(self) -> str:
        """
        Get: BeforeBeginTransaction(self: _Form2) -> str
        Set: BeforeBeginTransaction(self: _Form2) = value
        """
        ...

    @property
    def BeforeCommitTransaction(self) -> str:
        """
        Get: BeforeCommitTransaction(self: _Form2) -> str
        Set: BeforeCommitTransaction(self: _Form2) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: _Form2) -> str
        Set: BeforeDelConfirm(self: _Form2) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: _Form2) -> str
        Set: BeforeInsert(self: _Form2) = value
        """
        ...

    @property
    def BeforeQuery(self) -> str:
        """
        Get: BeforeQuery(self: _Form2) -> str
        Set: BeforeQuery(self: _Form2) = value
        """
        ...

    @property
    def BeforeRender(self) -> str:
        """
        Get: BeforeRender(self: _Form2) -> str
        Set: BeforeRender(self: _Form2) = value
        """
        ...

    @property
    def BeforeScreenTip(self) -> str:
        """
        Get: BeforeScreenTip(self: _Form2) -> str
        Set: BeforeScreenTip(self: _Form2) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Form2) -> str
        Set: BeforeUpdate(self: _Form2) = value
        """
        ...

    @property
    def BeginBatchEdit(self) -> str:
        """
        Get: BeginBatchEdit(self: _Form2) -> str
        Set: BeginBatchEdit(self: _Form2) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: _Form2) -> object
        Set: Bookmark(self: _Form2) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Form2) -> Byte
        Set: BorderStyle(self: _Form2) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Form2) -> str
        Set: Caption(self: _Form2) = value
        """
        ...

    @property
    def ChartSpace(self) -> object:
        """ Get: ChartSpace(self: _Form2) -> object """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: _Form2) -> bool
        Set: CloseButton(self: _Form2) = value
        """
        ...

    @property
    def CommandBeforeExecute(self) -> str:
        """
        Get: CommandBeforeExecute(self: _Form2) -> str
        Set: CommandBeforeExecute(self: _Form2) = value
        """
        ...

    @property
    def CommandChecked(self) -> str:
        """
        Get: CommandChecked(self: _Form2) -> str
        Set: CommandChecked(self: _Form2) = value
        """
        ...

    @property
    def CommandEnabled(self) -> str:
        """
        Get: CommandEnabled(self: _Form2) -> str
        Set: CommandEnabled(self: _Form2) = value
        """
        ...

    @property
    def CommandExecute(self) -> str:
        """
        Get: CommandExecute(self: _Form2) -> str
        Set: CommandExecute(self: _Form2) = value
        """
        ...

    @property
    def CommitOnClose(self) -> Byte:
        """
        Get: CommitOnClose(self: _Form2) -> Byte
        Set: CommitOnClose(self: _Form2) = value
        """
        ...

    @property
    def CommitOnNavigation(self) -> bool:
        """
        Get: CommitOnNavigation(self: _Form2) -> bool
        Set: CommitOnNavigation(self: _Form2) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: _Form2) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: _Form2) -> Int16
        Set: ConnectSynch(self: _Form2) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: _Form2) -> bool
        Set: ControlBox(self: _Form2) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Form2) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Form2) -> Int16
        Set: Count(self: _Form2) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Form2) -> int
        Set: CurrentRecord(self: _Form2) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: _Form2) -> Int16
        Set: CurrentSectionLeft(self: _Form2) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: _Form2) -> Int16
        Set: CurrentSectionTop(self: _Form2) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: _Form2) -> Int16
        Set: CurrentView(self: _Form2) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: _Form2) -> Byte
        Set: Cycle(self: _Form2) = value
        """
        ...

    @property
    def DataChange(self) -> str:
        """
        Get: DataChange(self: _Form2) -> str
        Set: DataChange(self: _Form2) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: _Form2) -> bool
        Set: DataEntry(self: _Form2) = value
        """
        ...

    @property
    def DataSetChange(self) -> str:
        """
        Get: DataSetChange(self: _Form2) -> str
        Set: DataSetChange(self: _Form2) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: _Form2) -> int
        Set: DatasheetBackColor(self: _Form2) = value
        """
        ...

    @property
    def DatasheetBorderLineStyle(self) -> Byte:
        """
        Get: DatasheetBorderLineStyle(self: _Form2) -> Byte
        Set: DatasheetBorderLineStyle(self: _Form2) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: _Form2) -> Byte
        Set: DatasheetCellsEffect(self: _Form2) = value
        """
        ...

    @property
    def DatasheetColumnHeaderUnderlineStyle(self) -> Byte:
        """
        Get: DatasheetColumnHeaderUnderlineStyle(self: _Form2) -> Byte
        Set: DatasheetColumnHeaderUnderlineStyle(self: _Form2) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: _Form2) -> Int16
        Set: DatasheetFontHeight(self: _Form2) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: _Form2) -> bool
        Set: DatasheetFontItalic(self: _Form2) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: _Form2) -> str
        Set: DatasheetFontName(self: _Form2) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: _Form2) -> bool
        Set: DatasheetFontUnderline(self: _Form2) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: _Form2) -> Int16
        Set: DatasheetFontWeight(self: _Form2) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: _Form2) -> int
        Set: DatasheetForeColor(self: _Form2) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: _Form2) -> Byte
        Set: DatasheetGridlinesBehavior(self: _Form2) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: _Form2) -> int
        Set: DatasheetGridlinesColor(self: _Form2) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: _Form2) -> Int16
        Set: DefaultEditing(self: _Form2) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: _Form2) -> Byte
        Set: DefaultView(self: _Form2) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Form2) -> bool
        Set: Dirty(self: _Form2) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: _Form2) -> bool
        Set: DividingLines(self: _Form2) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: _Form2) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Form2) -> bool
        Set: FastLaserPrinting(self: _Form2) = value
        """
        ...

    @property
    def FetchDefaults(self) -> bool:
        """
        Get: FetchDefaults(self: _Form2) -> bool
        Set: FetchDefaults(self: _Form2) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Form2) -> str
        Set: Filter(self: _Form2) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Form2) -> bool
        Set: FilterOn(self: _Form2) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _Form2) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Form2) -> str
        Set: FormName(self: _Form2) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: _Form2) -> Int16
        Set: FrozenColumns(self: _Form2) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Form2) -> Int16
        Set: GridX(self: _Form2) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Form2) -> Int16
        Set: GridY(self: _Form2) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Form2) -> bool
        Set: HasModule(self: _Form2) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Form2) -> int
        Set: HelpContextId(self: _Form2) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Form2) -> str
        Set: HelpFile(self: _Form2) = value
        """
        ...

    @property
    def HorizontalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: HorizontalDatasheetGridlineStyle(self: _Form2) -> Byte
        Set: HorizontalDatasheetGridlineStyle(self: _Form2) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Form2) -> int
        Set: Hwnd(self: _Form2) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Form2) -> str
        Set: InputParameters(self: _Form2) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: _Form2) -> int
        Set: InsideHeight(self: _Form2) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: _Form2) -> int
        Set: InsideWidth(self: _Form2) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: _Form2) -> bool
        Set: KeyPreview(self: _Form2) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Form2) -> bool
        Set: LayoutForPrint(self: _Form2) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Form2) -> int
        Set: LogicalPageHeight(self: _Form2) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Form2) -> int
        Set: LogicalPageWidth(self: _Form2) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Form2) -> bool
        Set: MaxButton(self: _Form2) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: _Form2) -> bool
        Set: MaxRecButton(self: _Form2) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: _Form2) -> int
        Set: MaxRecords(self: _Form2) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Form2) -> str
        Set: MenuBar(self: _Form2) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Form2) -> bool
        Set: MinButton(self: _Form2) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: _Form2) -> Byte
        Set: MinMaxButtons(self: _Form2) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: _Form2) -> bool
        Set: Modal(self: _Form2) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Form2) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: _Form2) -> str
        Set: MouseWheel(self: _Form2) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: _Form2) -> bool
        Set: Moveable(self: _Form2) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Form2) -> str
        Set: Name(self: _Form2) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: _Form2) -> bool
        Set: NavigationButtons(self: _Form2) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: _Form2) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Form2) -> str
        Set: OnActivate(self: _Form2) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: _Form2) -> str
        Set: OnApplyFilter(self: _Form2) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Form2) -> str
        Set: OnClick(self: _Form2) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Form2) -> str
        Set: OnClose(self: _Form2) = value
        """
        ...

    @property
    def OnConnect(self) -> str:
        """
        Get: OnConnect(self: _Form2) -> str
        Set: OnConnect(self: _Form2) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: _Form2) -> str
        Set: OnCurrent(self: _Form2) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Form2) -> str
        Set: OnDblClick(self: _Form2) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Form2) -> str
        Set: OnDeactivate(self: _Form2) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: _Form2) -> str
        Set: OnDelete(self: _Form2) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Form2) -> str
        Set: OnDirty(self: _Form2) = value
        """
        ...

    @property
    def OnDisconnect(self) -> str:
        """
        Get: OnDisconnect(self: _Form2) -> str
        Set: OnDisconnect(self: _Form2) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Form2) -> str
        Set: OnError(self: _Form2) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: _Form2) -> str
        Set: OnFilter(self: _Form2) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Form2) -> str
        Set: OnGotFocus(self: _Form2) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: _Form2) -> str
        Set: OnInsert(self: _Form2) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Form2) -> str
        Set: OnKeyDown(self: _Form2) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Form2) -> str
        Set: OnKeyPress(self: _Form2) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Form2) -> str
        Set: OnKeyUp(self: _Form2) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: _Form2) -> str
        Set: OnLoad(self: _Form2) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Form2) -> str
        Set: OnLostFocus(self: _Form2) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Form2) -> str
        Set: OnMenu(self: _Form2) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Form2) -> str
        Set: OnMouseDown(self: _Form2) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Form2) -> str
        Set: OnMouseMove(self: _Form2) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Form2) -> str
        Set: OnMouseUp(self: _Form2) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Form2) -> str
        Set: OnOpen(self: _Form2) = value
        """
        ...

    @property
    def OnRecordExit(self) -> str:
        """
        Get: OnRecordExit(self: _Form2) -> str
        Set: OnRecordExit(self: _Form2) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: _Form2) -> str
        Set: OnResize(self: _Form2) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: _Form2) -> str
        Set: OnTimer(self: _Form2) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: _Form2) -> str
        Set: OnUndo(self: _Form2) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: _Form2) -> str
        Set: OnUnload(self: _Form2) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: _Form2) -> object
        Set: OpenArgs(self: _Form2) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Form2) -> str
        Set: OrderBy(self: _Form2) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Form2) -> bool
        Set: OrderByOn(self: _Form2) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Form2) -> Byte
        Set: Orientation(self: _Form2) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Form2) -> int
        Set: Page(self: _Form2) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Form2) -> Int16
        Set: Pages(self: _Form2) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Form2) -> bool
        Set: Painting(self: _Form2) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Form2) -> object
        Set: PaintPalette(self: _Form2) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Form2) -> str
        Set: PaletteSource(self: _Form2) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Form2) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Form2) -> str
        Set: Picture(self: _Form2) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Form2) -> Byte
        Set: PictureAlignment(self: _Form2) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Form2) -> object
        Set: PictureData(self: _Form2) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Form2) -> object
        Set: PicturePalette(self: _Form2) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Form2) -> Byte
        Set: PictureSizeMode(self: _Form2) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Form2) -> bool
        Set: PictureTiling(self: _Form2) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Form2) -> Byte
        Set: PictureType(self: _Form2) = value
        """
        ...

    @property
    def PivotTable(self) -> object:
        """ Get: PivotTable(self: _Form2) -> object """
        ...

    @property
    def PivotTableChange(self) -> str:
        """
        Get: PivotTableChange(self: _Form2) -> str
        Set: PivotTableChange(self: _Form2) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: _Form2) -> bool
        Set: PopUp(self: _Form2) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: _Form2) -> Printer
        Set: Printer(self: _Form2) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Form2) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Form2) -> object
        Set: PrtDevMode(self: _Form2) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Form2) -> object
        Set: PrtDevNames(self: _Form2) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Form2) -> object
        Set: PrtMip(self: _Form2) = value
        """
        ...

    @property
    def Query(self) -> str:
        """
        Get: Query(self: _Form2) -> str
        Set: Query(self: _Form2) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Form2) -> Byte
        Set: RecordLocks(self: _Form2) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: _Form2) -> bool
        Set: RecordSelectors(self: _Form2) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Form2) -> object
        Set: Recordset(self: _Form2) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: _Form2) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: _Form2) -> Byte
        Set: RecordsetType(self: _Form2) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Form2) -> str
        Set: RecordSource(self: _Form2) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: _Form2) -> str
        Set: RecordSourceQualifier(self: _Form2) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: _Form2) -> str
        Set: ResyncCommand(self: _Form2) = value
        """
        ...

    @property
    def RollbackTransaction(self) -> str:
        """
        Get: RollbackTransaction(self: _Form2) -> str
        Set: RollbackTransaction(self: _Form2) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: _Form2) -> Int16
        Set: RowHeight(self: _Form2) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: _Form2) -> Byte
        Set: ScrollBars(self: _Form2) = value
        """
        ...

    @property
    def SelectionChange(self) -> str:
        """
        Get: SelectionChange(self: _Form2) -> str
        Set: SelectionChange(self: _Form2) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: _Form2) -> int
        Set: SelHeight(self: _Form2) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: _Form2) -> int
        Set: SelLeft(self: _Form2) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: _Form2) -> int
        Set: SelTop(self: _Form2) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: _Form2) -> int
        Set: SelWidth(self: _Form2) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Form2) -> str
        Set: ServerFilter(self: _Form2) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: _Form2) -> bool
        Set: ServerFilterByForm(self: _Form2) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: _Form2) -> bool
        Set: ShortcutMenu(self: _Form2) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Form2) -> str
        Set: ShortcutMenuBar(self: _Form2) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: _Form2) -> bool
        Set: ShowGrid(self: _Form2) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: _Form2) -> bool
        Set: SubdatasheetExpanded(self: _Form2) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: _Form2) -> Int16
        Set: SubdatasheetHeight(self: _Form2) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: _Form2) -> Byte
        Set: TabularCharSet(self: _Form2) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: _Form2) -> Byte
        Set: TabularFamily(self: _Form2) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Form2) -> str
        Set: Tag(self: _Form2) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: _Form2) -> int
        Set: TimerInterval(self: _Form2) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Form2) -> str
        Set: Toolbar(self: _Form2) = value
        """
        ...

    @property
    def UndoBatchEdit(self) -> str:
        """
        Get: UndoBatchEdit(self: _Form2) -> str
        Set: UndoBatchEdit(self: _Form2) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: _Form2) -> str
        Set: UniqueTable(self: _Form2) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: _Form2) -> bool
        Set: UseDefaultPrinter(self: _Form2) = value
        """
        ...

    @property
    def VerticalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: VerticalDatasheetGridlineStyle(self: _Form2) -> Byte
        Set: VerticalDatasheetGridlineStyle(self: _Form2) = value
        """
        ...

    @property
    def ViewChange(self) -> str:
        """
        Get: ViewChange(self: _Form2) -> str
        Set: ViewChange(self: _Form2) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: _Form2) -> Byte
        Set: ViewsAllowed(self: _Form2) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Form2) -> bool
        Set: Visible(self: _Form2) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: _Form2) -> bool
        Set: WhatsThisButton(self: _Form2) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Form2) -> Int16
        Set: Width(self: _Form2) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: _Form2) -> Int16
        Set: WindowHeight(self: _Form2) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: _Form2) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: _Form2) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: _Form2) -> Int16
        Set: WindowWidth(self: _Form2) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Form2) -> int
        Set: ZoomControl(self: _Form2) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Form2) -> str
        Set: _Name(self: _Form2) = value
        """
        ...


    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: _Form2, PageNumber: int, Right: int, Down: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Form2, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: _Form2) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: _Form2) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: _Form2) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Form2) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Form2) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Form2) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Form2, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class FormOldV10(_FormEventsOld_Event, _Form2): # skipped bases: <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class FormOldV10Class(FormOldV10, __ComObject): # skipped bases: <type '_FormEventsOld_Event'>, <type '_Form2'>, <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ FormOldV10Class() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: FormOldV10Class) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: FormOldV10Class) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: FormOldV10Class) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: FormOldV10Class) -> object """
        ...

    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: FormOldV10Class) -> int
        Set: acHiddenCurrentPage(self: FormOldV10Class) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: FormOldV10Class) -> _Control """
        ...

    @property
    def AfterBeginTransaction(self) -> str:
        """
        Get: AfterBeginTransaction(self: FormOldV10Class) -> str
        Set: AfterBeginTransaction(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterCommitTransaction(self) -> str:
        """
        Get: AfterCommitTransaction(self: FormOldV10Class) -> str
        Set: AfterCommitTransaction(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterDelConfirm(self) -> str:
        """
        Get: AfterDelConfirm(self: FormOldV10Class) -> str
        Set: AfterDelConfirm(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterFinalRender(self) -> str:
        """
        Get: AfterFinalRender(self: FormOldV10Class) -> str
        Set: AfterFinalRender(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterInsert(self) -> str:
        """
        Get: AfterInsert(self: FormOldV10Class) -> str
        Set: AfterInsert(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterLayout(self) -> str:
        """
        Get: AfterLayout(self: FormOldV10Class) -> str
        Set: AfterLayout(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterRender(self) -> str:
        """
        Get: AfterRender(self: FormOldV10Class) -> str
        Set: AfterRender(self: FormOldV10Class) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: FormOldV10Class) -> str
        Set: AfterUpdate(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowAdditions(self) -> bool:
        """
        Get: AllowAdditions(self: FormOldV10Class) -> bool
        Set: AllowAdditions(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowDatasheetView(self) -> bool:
        """
        Get: AllowDatasheetView(self: FormOldV10Class) -> bool
        Set: AllowDatasheetView(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowDeletions(self) -> bool:
        """
        Get: AllowDeletions(self: FormOldV10Class) -> bool
        Set: AllowDeletions(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: FormOldV10Class) -> bool
        Set: AllowDesignChanges(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowEditing(self) -> bool:
        """
        Get: AllowEditing(self: FormOldV10Class) -> bool
        Set: AllowEditing(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowEdits(self) -> bool:
        """
        Get: AllowEdits(self: FormOldV10Class) -> bool
        Set: AllowEdits(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowFilters(self) -> bool:
        """
        Get: AllowFilters(self: FormOldV10Class) -> bool
        Set: AllowFilters(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowFormView(self) -> bool:
        """
        Get: AllowFormView(self: FormOldV10Class) -> bool
        Set: AllowFormView(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowPivotChartView(self) -> bool:
        """
        Get: AllowPivotChartView(self: FormOldV10Class) -> bool
        Set: AllowPivotChartView(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowPivotTableView(self) -> bool:
        """
        Get: AllowPivotTableView(self: FormOldV10Class) -> bool
        Set: AllowPivotTableView(self: FormOldV10Class) = value
        """
        ...

    @property
    def AllowUpdating(self) -> Byte:
        """
        Get: AllowUpdating(self: FormOldV10Class) -> Byte
        Set: AllowUpdating(self: FormOldV10Class) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: FormOldV10Class) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: FormOldV10Class) -> bool
        Set: AutoCenter(self: FormOldV10Class) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: FormOldV10Class) -> bool
        Set: AutoResize(self: FormOldV10Class) = value
        """
        ...

    @property
    def BatchUpdates(self) -> bool:
        """
        Get: BatchUpdates(self: FormOldV10Class) -> bool
        Set: BatchUpdates(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeBeginTransaction(self) -> str:
        """
        Get: BeforeBeginTransaction(self: FormOldV10Class) -> str
        Set: BeforeBeginTransaction(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeCommitTransaction(self) -> str:
        """
        Get: BeforeCommitTransaction(self: FormOldV10Class) -> str
        Set: BeforeCommitTransaction(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeDelConfirm(self) -> str:
        """
        Get: BeforeDelConfirm(self: FormOldV10Class) -> str
        Set: BeforeDelConfirm(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeInsert(self) -> str:
        """
        Get: BeforeInsert(self: FormOldV10Class) -> str
        Set: BeforeInsert(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeQuery(self) -> str:
        """
        Get: BeforeQuery(self: FormOldV10Class) -> str
        Set: BeforeQuery(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeRender(self) -> str:
        """
        Get: BeforeRender(self: FormOldV10Class) -> str
        Set: BeforeRender(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeScreenTip(self) -> str:
        """
        Get: BeforeScreenTip(self: FormOldV10Class) -> str
        Set: BeforeScreenTip(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: FormOldV10Class) -> str
        Set: BeforeUpdate(self: FormOldV10Class) = value
        """
        ...

    @property
    def BeginBatchEdit(self) -> str:
        """
        Get: BeginBatchEdit(self: FormOldV10Class) -> str
        Set: BeginBatchEdit(self: FormOldV10Class) = value
        """
        ...

    @property
    def Bookmark(self) -> object:
        """
        Get: Bookmark(self: FormOldV10Class) -> object
        Set: Bookmark(self: FormOldV10Class) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: FormOldV10Class) -> Byte
        Set: BorderStyle(self: FormOldV10Class) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: FormOldV10Class) -> str
        Set: Caption(self: FormOldV10Class) = value
        """
        ...

    @property
    def ChartSpace(self) -> object:
        """ Get: ChartSpace(self: FormOldV10Class) -> object """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: FormOldV10Class) -> bool
        Set: CloseButton(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommandBeforeExecute(self) -> str:
        """
        Get: CommandBeforeExecute(self: FormOldV10Class) -> str
        Set: CommandBeforeExecute(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommandChecked(self) -> str:
        """
        Get: CommandChecked(self: FormOldV10Class) -> str
        Set: CommandChecked(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommandEnabled(self) -> str:
        """
        Get: CommandEnabled(self: FormOldV10Class) -> str
        Set: CommandEnabled(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommandExecute(self) -> str:
        """
        Get: CommandExecute(self: FormOldV10Class) -> str
        Set: CommandExecute(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommitOnClose(self) -> Byte:
        """
        Get: CommitOnClose(self: FormOldV10Class) -> Byte
        Set: CommitOnClose(self: FormOldV10Class) = value
        """
        ...

    @property
    def CommitOnNavigation(self) -> bool:
        """
        Get: CommitOnNavigation(self: FormOldV10Class) -> bool
        Set: CommitOnNavigation(self: FormOldV10Class) = value
        """
        ...

    @property
    def ConnectControl(self) -> _Control:
        """ Get: ConnectControl(self: FormOldV10Class) -> _Control """
        ...

    @property
    def ConnectSynch(self) -> Int16:
        """
        Get: ConnectSynch(self: FormOldV10Class) -> Int16
        Set: ConnectSynch(self: FormOldV10Class) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: FormOldV10Class) -> bool
        Set: ControlBox(self: FormOldV10Class) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: FormOldV10Class) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: FormOldV10Class) -> Int16
        Set: Count(self: FormOldV10Class) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: FormOldV10Class) -> int
        Set: CurrentRecord(self: FormOldV10Class) = value
        """
        ...

    @property
    def CurrentSectionLeft(self) -> Int16:
        """
        Get: CurrentSectionLeft(self: FormOldV10Class) -> Int16
        Set: CurrentSectionLeft(self: FormOldV10Class) = value
        """
        ...

    @property
    def CurrentSectionTop(self) -> Int16:
        """
        Get: CurrentSectionTop(self: FormOldV10Class) -> Int16
        Set: CurrentSectionTop(self: FormOldV10Class) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: FormOldV10Class) -> Int16
        Set: CurrentView(self: FormOldV10Class) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: FormOldV10Class) -> Byte
        Set: Cycle(self: FormOldV10Class) = value
        """
        ...

    @property
    def DataChange(self) -> str:
        """
        Get: DataChange(self: FormOldV10Class) -> str
        Set: DataChange(self: FormOldV10Class) = value
        """
        ...

    @property
    def DataEntry(self) -> bool:
        """
        Get: DataEntry(self: FormOldV10Class) -> bool
        Set: DataEntry(self: FormOldV10Class) = value
        """
        ...

    @property
    def DataSetChange(self) -> str:
        """
        Get: DataSetChange(self: FormOldV10Class) -> str
        Set: DataSetChange(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetBackColor(self) -> int:
        """
        Get: DatasheetBackColor(self: FormOldV10Class) -> int
        Set: DatasheetBackColor(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetBorderLineStyle(self) -> Byte:
        """
        Get: DatasheetBorderLineStyle(self: FormOldV10Class) -> Byte
        Set: DatasheetBorderLineStyle(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetCellsEffect(self) -> Byte:
        """
        Get: DatasheetCellsEffect(self: FormOldV10Class) -> Byte
        Set: DatasheetCellsEffect(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetColumnHeaderUnderlineStyle(self) -> Byte:
        """
        Get: DatasheetColumnHeaderUnderlineStyle(self: FormOldV10Class) -> Byte
        Set: DatasheetColumnHeaderUnderlineStyle(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetFontHeight(self) -> Int16:
        """
        Get: DatasheetFontHeight(self: FormOldV10Class) -> Int16
        Set: DatasheetFontHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetFontItalic(self) -> bool:
        """
        Get: DatasheetFontItalic(self: FormOldV10Class) -> bool
        Set: DatasheetFontItalic(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetFontName(self) -> str:
        """
        Get: DatasheetFontName(self: FormOldV10Class) -> str
        Set: DatasheetFontName(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetFontUnderline(self) -> bool:
        """
        Get: DatasheetFontUnderline(self: FormOldV10Class) -> bool
        Set: DatasheetFontUnderline(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetFontWeight(self) -> Int16:
        """
        Get: DatasheetFontWeight(self: FormOldV10Class) -> Int16
        Set: DatasheetFontWeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetForeColor(self) -> int:
        """
        Get: DatasheetForeColor(self: FormOldV10Class) -> int
        Set: DatasheetForeColor(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetGridlinesBehavior(self) -> Byte:
        """
        Get: DatasheetGridlinesBehavior(self: FormOldV10Class) -> Byte
        Set: DatasheetGridlinesBehavior(self: FormOldV10Class) = value
        """
        ...

    @property
    def DatasheetGridlinesColor(self) -> int:
        """
        Get: DatasheetGridlinesColor(self: FormOldV10Class) -> int
        Set: DatasheetGridlinesColor(self: FormOldV10Class) = value
        """
        ...

    @property
    def DefaultEditing(self) -> Int16:
        """
        Get: DefaultEditing(self: FormOldV10Class) -> Int16
        Set: DefaultEditing(self: FormOldV10Class) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: FormOldV10Class) -> Byte
        Set: DefaultView(self: FormOldV10Class) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: FormOldV10Class) -> bool
        Set: Dirty(self: FormOldV10Class) = value
        """
        ...

    @property
    def DividingLines(self) -> bool:
        """
        Get: DividingLines(self: FormOldV10Class) -> bool
        Set: DividingLines(self: FormOldV10Class) = value
        """
        ...

    @property
    def Dynaset(self) -> object:
        """ Get: Dynaset(self: FormOldV10Class) -> object """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: FormOldV10Class) -> bool
        Set: FastLaserPrinting(self: FormOldV10Class) = value
        """
        ...

    @property
    def FetchDefaults(self) -> bool:
        """
        Get: FetchDefaults(self: FormOldV10Class) -> bool
        Set: FetchDefaults(self: FormOldV10Class) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: FormOldV10Class) -> str
        Set: Filter(self: FormOldV10Class) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: FormOldV10Class) -> bool
        Set: FilterOn(self: FormOldV10Class) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: FormOldV10Class) -> Form """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: FormOldV10Class) -> str
        Set: FormName(self: FormOldV10Class) = value
        """
        ...

    @property
    def FrozenColumns(self) -> Int16:
        """
        Get: FrozenColumns(self: FormOldV10Class) -> Int16
        Set: FrozenColumns(self: FormOldV10Class) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: FormOldV10Class) -> Int16
        Set: GridX(self: FormOldV10Class) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: FormOldV10Class) -> Int16
        Set: GridY(self: FormOldV10Class) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: FormOldV10Class) -> bool
        Set: HasModule(self: FormOldV10Class) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: FormOldV10Class) -> int
        Set: HelpContextId(self: FormOldV10Class) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: FormOldV10Class) -> str
        Set: HelpFile(self: FormOldV10Class) = value
        """
        ...

    @property
    def HorizontalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: HorizontalDatasheetGridlineStyle(self: FormOldV10Class) -> Byte
        Set: HorizontalDatasheetGridlineStyle(self: FormOldV10Class) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: FormOldV10Class) -> int
        Set: Hwnd(self: FormOldV10Class) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: FormOldV10Class) -> str
        Set: InputParameters(self: FormOldV10Class) = value
        """
        ...

    @property
    def InsideHeight(self) -> int:
        """
        Get: InsideHeight(self: FormOldV10Class) -> int
        Set: InsideHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def InsideWidth(self) -> int:
        """
        Get: InsideWidth(self: FormOldV10Class) -> int
        Set: InsideWidth(self: FormOldV10Class) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: FormOldV10Class) -> bool
        Set: KeyPreview(self: FormOldV10Class) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: FormOldV10Class) -> bool
        Set: LayoutForPrint(self: FormOldV10Class) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: FormOldV10Class) -> int
        Set: LogicalPageHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: FormOldV10Class) -> int
        Set: LogicalPageWidth(self: FormOldV10Class) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: FormOldV10Class) -> bool
        Set: MaxButton(self: FormOldV10Class) = value
        """
        ...

    @property
    def MaxRecButton(self) -> bool:
        """
        Get: MaxRecButton(self: FormOldV10Class) -> bool
        Set: MaxRecButton(self: FormOldV10Class) = value
        """
        ...

    @property
    def MaxRecords(self) -> int:
        """
        Get: MaxRecords(self: FormOldV10Class) -> int
        Set: MaxRecords(self: FormOldV10Class) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: FormOldV10Class) -> str
        Set: MenuBar(self: FormOldV10Class) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: FormOldV10Class) -> bool
        Set: MinButton(self: FormOldV10Class) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: FormOldV10Class) -> Byte
        Set: MinMaxButtons(self: FormOldV10Class) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: FormOldV10Class) -> bool
        Set: Modal(self: FormOldV10Class) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: FormOldV10Class) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: FormOldV10Class) -> str
        Set: MouseWheel(self: FormOldV10Class) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: FormOldV10Class) -> bool
        Set: Moveable(self: FormOldV10Class) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: FormOldV10Class) -> str
        Set: Name(self: FormOldV10Class) = value
        """
        ...

    @property
    def NavigationButtons(self) -> bool:
        """
        Get: NavigationButtons(self: FormOldV10Class) -> bool
        Set: NavigationButtons(self: FormOldV10Class) = value
        """
        ...

    @property
    def NewRecord(self) -> Int16:
        """ Get: NewRecord(self: FormOldV10Class) -> Int16 """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: FormOldV10Class) -> str
        Set: OnActivate(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: FormOldV10Class) -> str
        Set: OnApplyFilter(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: FormOldV10Class) -> str
        Set: OnClick(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: FormOldV10Class) -> str
        Set: OnClose(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnConnect(self) -> str:
        """
        Get: OnConnect(self: FormOldV10Class) -> str
        Set: OnConnect(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: FormOldV10Class) -> str
        Set: OnCurrent(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: FormOldV10Class) -> str
        Set: OnDblClick(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: FormOldV10Class) -> str
        Set: OnDeactivate(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnDelete(self) -> str:
        """
        Get: OnDelete(self: FormOldV10Class) -> str
        Set: OnDelete(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: FormOldV10Class) -> str
        Set: OnDirty(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnDisconnect(self) -> str:
        """
        Get: OnDisconnect(self: FormOldV10Class) -> str
        Set: OnDisconnect(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: FormOldV10Class) -> str
        Set: OnError(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: FormOldV10Class) -> str
        Set: OnFilter(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: FormOldV10Class) -> str
        Set: OnGotFocus(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnInsert(self) -> str:
        """
        Get: OnInsert(self: FormOldV10Class) -> str
        Set: OnInsert(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: FormOldV10Class) -> str
        Set: OnKeyDown(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: FormOldV10Class) -> str
        Set: OnKeyPress(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: FormOldV10Class) -> str
        Set: OnKeyUp(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: FormOldV10Class) -> str
        Set: OnLoad(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: FormOldV10Class) -> str
        Set: OnLostFocus(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: FormOldV10Class) -> str
        Set: OnMenu(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: FormOldV10Class) -> str
        Set: OnMouseDown(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: FormOldV10Class) -> str
        Set: OnMouseMove(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: FormOldV10Class) -> str
        Set: OnMouseUp(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: FormOldV10Class) -> str
        Set: OnOpen(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnRecordExit(self) -> str:
        """
        Get: OnRecordExit(self: FormOldV10Class) -> str
        Set: OnRecordExit(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: FormOldV10Class) -> str
        Set: OnResize(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: FormOldV10Class) -> str
        Set: OnTimer(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: FormOldV10Class) -> str
        Set: OnUndo(self: FormOldV10Class) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: FormOldV10Class) -> str
        Set: OnUnload(self: FormOldV10Class) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: FormOldV10Class) -> object
        Set: OpenArgs(self: FormOldV10Class) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: FormOldV10Class) -> str
        Set: OrderBy(self: FormOldV10Class) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: FormOldV10Class) -> bool
        Set: OrderByOn(self: FormOldV10Class) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: FormOldV10Class) -> Byte
        Set: Orientation(self: FormOldV10Class) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: FormOldV10Class) -> int
        Set: Page(self: FormOldV10Class) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: FormOldV10Class) -> Int16
        Set: Pages(self: FormOldV10Class) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: FormOldV10Class) -> bool
        Set: Painting(self: FormOldV10Class) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: FormOldV10Class) -> object
        Set: PaintPalette(self: FormOldV10Class) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: FormOldV10Class) -> str
        Set: PaletteSource(self: FormOldV10Class) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: FormOldV10Class) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: FormOldV10Class) -> str
        Set: Picture(self: FormOldV10Class) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: FormOldV10Class) -> Byte
        Set: PictureAlignment(self: FormOldV10Class) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: FormOldV10Class) -> object
        Set: PictureData(self: FormOldV10Class) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: FormOldV10Class) -> object
        Set: PicturePalette(self: FormOldV10Class) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: FormOldV10Class) -> Byte
        Set: PictureSizeMode(self: FormOldV10Class) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: FormOldV10Class) -> bool
        Set: PictureTiling(self: FormOldV10Class) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: FormOldV10Class) -> Byte
        Set: PictureType(self: FormOldV10Class) = value
        """
        ...

    @property
    def PivotTable(self) -> object:
        """ Get: PivotTable(self: FormOldV10Class) -> object """
        ...

    @property
    def PivotTableChange(self) -> str:
        """
        Get: PivotTableChange(self: FormOldV10Class) -> str
        Set: PivotTableChange(self: FormOldV10Class) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: FormOldV10Class) -> bool
        Set: PopUp(self: FormOldV10Class) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: FormOldV10Class) -> Printer
        Set: Printer(self: FormOldV10Class) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: FormOldV10Class) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: FormOldV10Class) -> object
        Set: PrtDevMode(self: FormOldV10Class) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: FormOldV10Class) -> object
        Set: PrtDevNames(self: FormOldV10Class) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: FormOldV10Class) -> object
        Set: PrtMip(self: FormOldV10Class) = value
        """
        ...

    @property
    def Query(self) -> str:
        """
        Get: Query(self: FormOldV10Class) -> str
        Set: Query(self: FormOldV10Class) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: FormOldV10Class) -> Byte
        Set: RecordLocks(self: FormOldV10Class) = value
        """
        ...

    @property
    def RecordSelectors(self) -> bool:
        """
        Get: RecordSelectors(self: FormOldV10Class) -> bool
        Set: RecordSelectors(self: FormOldV10Class) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: FormOldV10Class) -> object
        Set: Recordset(self: FormOldV10Class) = value
        """
        ...

    @property
    def RecordsetClone(self) -> object:
        """ Get: RecordsetClone(self: FormOldV10Class) -> object """
        ...

    @property
    def RecordsetType(self) -> Byte:
        """
        Get: RecordsetType(self: FormOldV10Class) -> Byte
        Set: RecordsetType(self: FormOldV10Class) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: FormOldV10Class) -> str
        Set: RecordSource(self: FormOldV10Class) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: FormOldV10Class) -> str
        Set: RecordSourceQualifier(self: FormOldV10Class) = value
        """
        ...

    @property
    def ResyncCommand(self) -> str:
        """
        Get: ResyncCommand(self: FormOldV10Class) -> str
        Set: ResyncCommand(self: FormOldV10Class) = value
        """
        ...

    @property
    def RollbackTransaction(self) -> str:
        """
        Get: RollbackTransaction(self: FormOldV10Class) -> str
        Set: RollbackTransaction(self: FormOldV10Class) = value
        """
        ...

    @property
    def RowHeight(self) -> Int16:
        """
        Get: RowHeight(self: FormOldV10Class) -> Int16
        Set: RowHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: FormOldV10Class) -> Byte
        Set: ScrollBars(self: FormOldV10Class) = value
        """
        ...

    @property
    def SelectionChange(self) -> str:
        """
        Get: SelectionChange(self: FormOldV10Class) -> str
        Set: SelectionChange(self: FormOldV10Class) = value
        """
        ...

    @property
    def SelHeight(self) -> int:
        """
        Get: SelHeight(self: FormOldV10Class) -> int
        Set: SelHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def SelLeft(self) -> int:
        """
        Get: SelLeft(self: FormOldV10Class) -> int
        Set: SelLeft(self: FormOldV10Class) = value
        """
        ...

    @property
    def SelTop(self) -> int:
        """
        Get: SelTop(self: FormOldV10Class) -> int
        Set: SelTop(self: FormOldV10Class) = value
        """
        ...

    @property
    def SelWidth(self) -> int:
        """
        Get: SelWidth(self: FormOldV10Class) -> int
        Set: SelWidth(self: FormOldV10Class) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: FormOldV10Class) -> str
        Set: ServerFilter(self: FormOldV10Class) = value
        """
        ...

    @property
    def ServerFilterByForm(self) -> bool:
        """
        Get: ServerFilterByForm(self: FormOldV10Class) -> bool
        Set: ServerFilterByForm(self: FormOldV10Class) = value
        """
        ...

    @property
    def ShortcutMenu(self) -> bool:
        """
        Get: ShortcutMenu(self: FormOldV10Class) -> bool
        Set: ShortcutMenu(self: FormOldV10Class) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: FormOldV10Class) -> str
        Set: ShortcutMenuBar(self: FormOldV10Class) = value
        """
        ...

    @property
    def ShowGrid(self) -> bool:
        """
        Get: ShowGrid(self: FormOldV10Class) -> bool
        Set: ShowGrid(self: FormOldV10Class) = value
        """
        ...

    @property
    def SubdatasheetExpanded(self) -> bool:
        """
        Get: SubdatasheetExpanded(self: FormOldV10Class) -> bool
        Set: SubdatasheetExpanded(self: FormOldV10Class) = value
        """
        ...

    @property
    def SubdatasheetHeight(self) -> Int16:
        """
        Get: SubdatasheetHeight(self: FormOldV10Class) -> Int16
        Set: SubdatasheetHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def TabularCharSet(self) -> Byte:
        """
        Get: TabularCharSet(self: FormOldV10Class) -> Byte
        Set: TabularCharSet(self: FormOldV10Class) = value
        """
        ...

    @property
    def TabularFamily(self) -> Byte:
        """
        Get: TabularFamily(self: FormOldV10Class) -> Byte
        Set: TabularFamily(self: FormOldV10Class) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: FormOldV10Class) -> str
        Set: Tag(self: FormOldV10Class) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: FormOldV10Class) -> int
        Set: TimerInterval(self: FormOldV10Class) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: FormOldV10Class) -> str
        Set: Toolbar(self: FormOldV10Class) = value
        """
        ...

    @property
    def UndoBatchEdit(self) -> str:
        """
        Get: UndoBatchEdit(self: FormOldV10Class) -> str
        Set: UndoBatchEdit(self: FormOldV10Class) = value
        """
        ...

    @property
    def UniqueTable(self) -> str:
        """
        Get: UniqueTable(self: FormOldV10Class) -> str
        Set: UniqueTable(self: FormOldV10Class) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: FormOldV10Class) -> bool
        Set: UseDefaultPrinter(self: FormOldV10Class) = value
        """
        ...

    @property
    def VerticalDatasheetGridlineStyle(self) -> Byte:
        """
        Get: VerticalDatasheetGridlineStyle(self: FormOldV10Class) -> Byte
        Set: VerticalDatasheetGridlineStyle(self: FormOldV10Class) = value
        """
        ...

    @property
    def ViewChange(self) -> str:
        """
        Get: ViewChange(self: FormOldV10Class) -> str
        Set: ViewChange(self: FormOldV10Class) = value
        """
        ...

    @property
    def ViewsAllowed(self) -> Byte:
        """
        Get: ViewsAllowed(self: FormOldV10Class) -> Byte
        Set: ViewsAllowed(self: FormOldV10Class) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: FormOldV10Class) -> bool
        Set: Visible(self: FormOldV10Class) = value
        """
        ...

    @property
    def WhatsThisButton(self) -> bool:
        """
        Get: WhatsThisButton(self: FormOldV10Class) -> bool
        Set: WhatsThisButton(self: FormOldV10Class) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: FormOldV10Class) -> Int16
        Set: Width(self: FormOldV10Class) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: FormOldV10Class) -> Int16
        Set: WindowHeight(self: FormOldV10Class) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: FormOldV10Class) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: FormOldV10Class) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: FormOldV10Class) -> Int16
        Set: WindowWidth(self: FormOldV10Class) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: FormOldV10Class) -> int
        Set: ZoomControl(self: FormOldV10Class) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: FormOldV10Class) -> str
        Set: _Name(self: FormOldV10Class) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: FormOldV10Class, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: FormOldV10Class, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: FormOldV10Class, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: FormOldV10Class, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: FormOldV10Class, flagsSelect: int, varChild: object) """
        ...

    def add_Activate(self): # -> 
        """ add_Activate(self: FormOldV10Class, : _FormEventsOld_ActivateEventHandler) """
        ...

    def add_AfterBeginTransaction(self): # -> 
        """ add_AfterBeginTransaction(self: FormOldV10Class, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def add_AfterCommitTransaction(self): # -> 
        """ add_AfterCommitTransaction(self: FormOldV10Class, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def add_AfterDelConfirm(self): # -> 
        """ add_AfterDelConfirm(self: FormOldV10Class, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def add_AfterFinalRender(self): # -> 
        """ add_AfterFinalRender(self: FormOldV10Class, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def add_AfterInsert(self): # -> 
        """ add_AfterInsert(self: FormOldV10Class, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def add_AfterLayout(self): # -> 
        """ add_AfterLayout(self: FormOldV10Class, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def add_AfterRender(self): # -> 
        """ add_AfterRender(self: FormOldV10Class, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: FormOldV10Class, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: FormOldV10Class, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def add_BeforeBeginTransaction(self): # -> 
        """ add_BeforeBeginTransaction(self: FormOldV10Class, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def add_BeforeCommitTransaction(self): # -> 
        """ add_BeforeCommitTransaction(self: FormOldV10Class, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def add_BeforeDelConfirm(self): # -> 
        """ add_BeforeDelConfirm(self: FormOldV10Class, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def add_BeforeInsert(self): # -> 
        """ add_BeforeInsert(self: FormOldV10Class, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def add_BeforeQuery(self): # -> 
        """ add_BeforeQuery(self: FormOldV10Class, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def add_BeforeRender(self): # -> 
        """ add_BeforeRender(self: FormOldV10Class, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def add_BeforeScreenTip(self): # -> 
        """ add_BeforeScreenTip(self: FormOldV10Class, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: FormOldV10Class, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def add_BeginBatchEdit(self): # -> 
        """ add_BeginBatchEdit(self: FormOldV10Class, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: FormOldV10Class, : _FormEventsOld_ClickEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: FormOldV10Class, : _FormEventsOld_CloseEventHandler) """
        ...

    def add_CommandBeforeExecute(self): # -> 
        """ add_CommandBeforeExecute(self: FormOldV10Class, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def add_CommandChecked(self): # -> 
        """ add_CommandChecked(self: FormOldV10Class, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def add_CommandEnabled(self): # -> 
        """ add_CommandEnabled(self: FormOldV10Class, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def add_CommandExecute(self): # -> 
        """ add_CommandExecute(self: FormOldV10Class, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: FormOldV10Class, : _FormEventsOld_CurrentEventHandler) """
        ...

    def add_DataChange(self): # -> 
        """ add_DataChange(self: FormOldV10Class, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def add_DataSetChange(self): # -> 
        """ add_DataSetChange(self: FormOldV10Class, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: FormOldV10Class, : _FormEventsOld_DblClickEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: FormOldV10Class, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def add_Delete(self): # -> 
        """ add_Delete(self: FormOldV10Class, : _FormEventsOld_DeleteEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: FormOldV10Class, : _FormEventsOld_DirtyEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: FormOldV10Class, : _FormEventsOld_ErrorEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: FormOldV10Class, : _FormEventsOld_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: FormOldV10Class, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: FormOldV10Class, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: FormOldV10Class, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: FormOldV10Class, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: FormOldV10Class, : _FormEventsOld_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: FormOldV10Class, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: FormOldV10Class, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: FormOldV10Class, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: FormOldV10Class, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: FormOldV10Class, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def add_OnConnect(self): # -> 
        """ add_OnConnect(self: FormOldV10Class, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def add_OnDisconnect(self): # -> 
        """ add_OnDisconnect(self: FormOldV10Class, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: FormOldV10Class, : _FormEventsOld_OpenEventHandler) """
        ...

    def add_PivotTableChange(self): # -> 
        """ add_PivotTableChange(self: FormOldV10Class, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def add_Query(self): # -> 
        """ add_Query(self: FormOldV10Class, : _FormEventsOld_QueryEventHandler) """
        ...

    def add_RecordExit(self): # -> 
        """ add_RecordExit(self: FormOldV10Class, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: FormOldV10Class, : _FormEventsOld_ResizeEventHandler) """
        ...

    def add_RollbackTransaction(self): # -> 
        """ add_RollbackTransaction(self: FormOldV10Class, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def add_SelectionChange(self): # -> 
        """ add_SelectionChange(self: FormOldV10Class, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: FormOldV10Class, : _FormEventsOld_TimerEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: FormOldV10Class, : _FormEventsOld_UndoEventHandler) """
        ...

    def add_UndoBatchEdit(self): # -> 
        """ add_UndoBatchEdit(self: FormOldV10Class, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: FormOldV10Class, : _FormEventsOld_UnloadEventHandler) """
        ...

    def add_ViewChange(self): # -> 
        """ add_ViewChange(self: FormOldV10Class, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: FormOldV10Class) -> IEnumerator """
        ...

    def GoToPage(self, PageNumber:int, Right:int, Down:int): # -> 
        """ GoToPage(self: FormOldV10Class, PageNumber: int, Right: int, Down: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: FormOldV10Class, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Recalc(self): # -> 
        """ Recalc(self: FormOldV10Class) """
        ...

    def Refresh(self): # -> 
        """ Refresh(self: FormOldV10Class) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: FormOldV10Class, : _FormEventsOld_ActivateEventHandler) """
        ...

    def remove_AfterBeginTransaction(self): # -> 
        """ remove_AfterBeginTransaction(self: FormOldV10Class, : _FormEventsOld_AfterBeginTransactionEventHandler) """
        ...

    def remove_AfterCommitTransaction(self): # -> 
        """ remove_AfterCommitTransaction(self: FormOldV10Class, : _FormEventsOld_AfterCommitTransactionEventHandler) """
        ...

    def remove_AfterDelConfirm(self): # -> 
        """ remove_AfterDelConfirm(self: FormOldV10Class, : _FormEventsOld_AfterDelConfirmEventHandler) """
        ...

    def remove_AfterFinalRender(self): # -> 
        """ remove_AfterFinalRender(self: FormOldV10Class, : _FormEventsOld_AfterFinalRenderEventHandler) """
        ...

    def remove_AfterInsert(self): # -> 
        """ remove_AfterInsert(self: FormOldV10Class, : _FormEventsOld_AfterInsertEventHandler) """
        ...

    def remove_AfterLayout(self): # -> 
        """ remove_AfterLayout(self: FormOldV10Class, : _FormEventsOld_AfterLayoutEventHandler) """
        ...

    def remove_AfterRender(self): # -> 
        """ remove_AfterRender(self: FormOldV10Class, : _FormEventsOld_AfterRenderEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: FormOldV10Class, : _FormEventsOld_AfterUpdateEventHandler) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: FormOldV10Class, : _FormEventsOld_ApplyFilterEventHandler) """
        ...

    def remove_BeforeBeginTransaction(self): # -> 
        """ remove_BeforeBeginTransaction(self: FormOldV10Class, : _FormEventsOld_BeforeBeginTransactionEventHandler) """
        ...

    def remove_BeforeCommitTransaction(self): # -> 
        """ remove_BeforeCommitTransaction(self: FormOldV10Class, : _FormEventsOld_BeforeCommitTransactionEventHandler) """
        ...

    def remove_BeforeDelConfirm(self): # -> 
        """ remove_BeforeDelConfirm(self: FormOldV10Class, : _FormEventsOld_BeforeDelConfirmEventHandler) """
        ...

    def remove_BeforeInsert(self): # -> 
        """ remove_BeforeInsert(self: FormOldV10Class, : _FormEventsOld_BeforeInsertEventHandler) """
        ...

    def remove_BeforeQuery(self): # -> 
        """ remove_BeforeQuery(self: FormOldV10Class, : _FormEventsOld_BeforeQueryEventHandler) """
        ...

    def remove_BeforeRender(self): # -> 
        """ remove_BeforeRender(self: FormOldV10Class, : _FormEventsOld_BeforeRenderEventHandler) """
        ...

    def remove_BeforeScreenTip(self): # -> 
        """ remove_BeforeScreenTip(self: FormOldV10Class, : _FormEventsOld_BeforeScreenTipEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: FormOldV10Class, : _FormEventsOld_BeforeUpdateEventHandler) """
        ...

    def remove_BeginBatchEdit(self): # -> 
        """ remove_BeginBatchEdit(self: FormOldV10Class, : _FormEventsOld_BeginBatchEditEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: FormOldV10Class, : _FormEventsOld_ClickEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: FormOldV10Class, : _FormEventsOld_CloseEventHandler) """
        ...

    def remove_CommandBeforeExecute(self): # -> 
        """ remove_CommandBeforeExecute(self: FormOldV10Class, : _FormEventsOld_CommandBeforeExecuteEventHandler) """
        ...

    def remove_CommandChecked(self): # -> 
        """ remove_CommandChecked(self: FormOldV10Class, : _FormEventsOld_CommandCheckedEventHandler) """
        ...

    def remove_CommandEnabled(self): # -> 
        """ remove_CommandEnabled(self: FormOldV10Class, : _FormEventsOld_CommandEnabledEventHandler) """
        ...

    def remove_CommandExecute(self): # -> 
        """ remove_CommandExecute(self: FormOldV10Class, : _FormEventsOld_CommandExecuteEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: FormOldV10Class, : _FormEventsOld_CurrentEventHandler) """
        ...

    def remove_DataChange(self): # -> 
        """ remove_DataChange(self: FormOldV10Class, : _FormEventsOld_DataChangeEventHandler) """
        ...

    def remove_DataSetChange(self): # -> 
        """ remove_DataSetChange(self: FormOldV10Class, : _FormEventsOld_DataSetChangeEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: FormOldV10Class, : _FormEventsOld_DblClickEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: FormOldV10Class, : _FormEventsOld_DeactivateEventHandler) """
        ...

    def remove_Delete(self): # -> 
        """ remove_Delete(self: FormOldV10Class, : _FormEventsOld_DeleteEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: FormOldV10Class, : _FormEventsOld_DirtyEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: FormOldV10Class, : _FormEventsOld_ErrorEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: FormOldV10Class, : _FormEventsOld_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: FormOldV10Class, : _FormEventsOld_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: FormOldV10Class, : _FormEventsOld_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: FormOldV10Class, : _FormEventsOld_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: FormOldV10Class, : _FormEventsOld_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: FormOldV10Class, : _FormEventsOld_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: FormOldV10Class, : _FormEventsOld_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: FormOldV10Class, : _FormEventsOld_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: FormOldV10Class, : _FormEventsOld_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: FormOldV10Class, : _FormEventsOld_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: FormOldV10Class, : _FormEventsOld_MouseWheelEventHandler) """
        ...

    def remove_OnConnect(self): # -> 
        """ remove_OnConnect(self: FormOldV10Class, : _FormEventsOld_OnConnectEventHandler) """
        ...

    def remove_OnDisconnect(self): # -> 
        """ remove_OnDisconnect(self: FormOldV10Class, : _FormEventsOld_OnDisconnectEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: FormOldV10Class, : _FormEventsOld_OpenEventHandler) """
        ...

    def remove_PivotTableChange(self): # -> 
        """ remove_PivotTableChange(self: FormOldV10Class, : _FormEventsOld_PivotTableChangeEventHandler) """
        ...

    def remove_Query(self): # -> 
        """ remove_Query(self: FormOldV10Class, : _FormEventsOld_QueryEventHandler) """
        ...

    def remove_RecordExit(self): # -> 
        """ remove_RecordExit(self: FormOldV10Class, : _FormEventsOld_RecordExitEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: FormOldV10Class, : _FormEventsOld_ResizeEventHandler) """
        ...

    def remove_RollbackTransaction(self): # -> 
        """ remove_RollbackTransaction(self: FormOldV10Class, : _FormEventsOld_RollbackTransactionEventHandler) """
        ...

    def remove_SelectionChange(self): # -> 
        """ remove_SelectionChange(self: FormOldV10Class, : _FormEventsOld_SelectionChangeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: FormOldV10Class, : _FormEventsOld_TimerEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: FormOldV10Class, : _FormEventsOld_UndoEventHandler) """
        ...

    def remove_UndoBatchEdit(self): # -> 
        """ remove_UndoBatchEdit(self: FormOldV10Class, : _FormEventsOld_UndoBatchEditEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: FormOldV10Class, : _FormEventsOld_UnloadEventHandler) """
        ...

    def remove_ViewChange(self): # -> 
        """ remove_ViewChange(self: FormOldV10Class, : _FormEventsOld_ViewChangeEventHandler) """
        ...

    def Repaint(self): # -> 
        """ Repaint(self: FormOldV10Class) """
        ...

    def Requery(self): # -> 
        """ Requery(self: FormOldV10Class) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: FormOldV10Class) """
        ...

    def Undo(self): # -> 
        """ Undo(self: FormOldV10Class) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: FormOldV10Class, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    ApplyFilter = ...
    Click = ...
    Close = ...
    Current = ...
    DblClick = ...
    Deactivate = ...
    Delete = ...
    Error = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Open = ...
    RecordExit = ...
    Resize = ...
    Timer = ...
    Unload = ...
    _FormEventsOld_Event_AfterBeginTransaction = ...
    _FormEventsOld_Event_AfterCommitTransaction = ...
    _FormEventsOld_Event_AfterDelConfirm = ...
    _FormEventsOld_Event_AfterFinalRender = ...
    _FormEventsOld_Event_AfterInsert = ...
    _FormEventsOld_Event_AfterLayout = ...
    _FormEventsOld_Event_AfterRender = ...
    _FormEventsOld_Event_AfterUpdate = ...
    _FormEventsOld_Event_BeforeBeginTransaction = ...
    _FormEventsOld_Event_BeforeCommitTransaction = ...
    _FormEventsOld_Event_BeforeDelConfirm = ...
    _FormEventsOld_Event_BeforeInsert = ...
    _FormEventsOld_Event_BeforeQuery = ...
    _FormEventsOld_Event_BeforeRender = ...
    _FormEventsOld_Event_BeforeScreenTip = ...
    _FormEventsOld_Event_BeforeUpdate = ...
    _FormEventsOld_Event_BeginBatchEdit = ...
    _FormEventsOld_Event_CommandBeforeExecute = ...
    _FormEventsOld_Event_CommandChecked = ...
    _FormEventsOld_Event_CommandEnabled = ...
    _FormEventsOld_Event_CommandExecute = ...
    _FormEventsOld_Event_DataChange = ...
    _FormEventsOld_Event_DataSetChange = ...
    _FormEventsOld_Event_Dirty = ...
    _FormEventsOld_Event_Filter = ...
    _FormEventsOld_Event_MouseWheel = ...
    _FormEventsOld_Event_OnConnect = ...
    _FormEventsOld_Event_OnDisconnect = ...
    _FormEventsOld_Event_PivotTableChange = ...
    _FormEventsOld_Event_Query = ...
    _FormEventsOld_Event_RollbackTransaction = ...
    _FormEventsOld_Event_SelectionChange = ...
    _FormEventsOld_Event_Undo = ...
    _FormEventsOld_Event_UndoBatchEdit = ...
    _FormEventsOld_Event_ViewChange = ...


class Forms(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Forms) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Forms) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Forms) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Forms, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _GroupLevel: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _GroupLevel) -> Application """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _GroupLevel) -> str
        Set: ControlSource(self: _GroupLevel) = value
        """
        ...

    @property
    def GroupFooter(self) -> bool:
        """
        Get: GroupFooter(self: _GroupLevel) -> bool
        Set: GroupFooter(self: _GroupLevel) = value
        """
        ...

    @property
    def GroupHeader(self) -> bool:
        """
        Get: GroupHeader(self: _GroupLevel) -> bool
        Set: GroupHeader(self: _GroupLevel) = value
        """
        ...

    @property
    def GroupInterval(self) -> int:
        """
        Get: GroupInterval(self: _GroupLevel) -> int
        Set: GroupInterval(self: _GroupLevel) = value
        """
        ...

    @property
    def GroupOn(self) -> Int16:
        """
        Get: GroupOn(self: _GroupLevel) -> Int16
        Set: GroupOn(self: _GroupLevel) = value
        """
        ...

    @property
    def KeepTogether(self) -> Byte:
        """
        Get: KeepTogether(self: _GroupLevel) -> Byte
        Set: KeepTogether(self: _GroupLevel) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _GroupLevel) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _GroupLevel) -> Properties """
        ...

    @property
    def SortOrder(self) -> bool:
        """
        Get: SortOrder(self: _GroupLevel) -> bool
        Set: SortOrder(self: _GroupLevel) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _GroupLevel, dispid: int) -> bool """
        ...


class GroupLevel(_GroupLevel): # skipped bases: <type 'object'>
    """ no doc """
    pass

class GroupLevelClass(GroupLevel, __ComObject): # skipped bases: <type '_GroupLevel'>, <type 'object'>
    """ GroupLevelClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: GroupLevelClass) -> Application """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: GroupLevelClass) -> str
        Set: ControlSource(self: GroupLevelClass) = value
        """
        ...

    @property
    def GroupFooter(self) -> bool:
        """
        Get: GroupFooter(self: GroupLevelClass) -> bool
        Set: GroupFooter(self: GroupLevelClass) = value
        """
        ...

    @property
    def GroupHeader(self) -> bool:
        """
        Get: GroupHeader(self: GroupLevelClass) -> bool
        Set: GroupHeader(self: GroupLevelClass) = value
        """
        ...

    @property
    def GroupInterval(self) -> int:
        """
        Get: GroupInterval(self: GroupLevelClass) -> int
        Set: GroupInterval(self: GroupLevelClass) = value
        """
        ...

    @property
    def GroupOn(self) -> Int16:
        """
        Get: GroupOn(self: GroupLevelClass) -> Int16
        Set: GroupOn(self: GroupLevelClass) = value
        """
        ...

    @property
    def KeepTogether(self) -> Byte:
        """
        Get: KeepTogether(self: GroupLevelClass) -> Byte
        Set: KeepTogether(self: GroupLevelClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: GroupLevelClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: GroupLevelClass) -> Properties """
        ...

    @property
    def SortOrder(self) -> bool:
        """
        Get: SortOrder(self: GroupLevelClass) -> bool
        Set: SortOrder(self: GroupLevelClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: GroupLevelClass, dispid: int) -> bool """
        ...


class _Hyperlink: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Address(self) -> str:
        """
        Get: Address(self: _Hyperlink) -> str
        Set: Address(self: _Hyperlink) = value
        """
        ...

    @property
    def EmailSubject(self) -> str:
        """
        Get: EmailSubject(self: _Hyperlink) -> str
        Set: EmailSubject(self: _Hyperlink) = value
        """
        ...

    @property
    def ScreenTip(self) -> str:
        """
        Get: ScreenTip(self: _Hyperlink) -> str
        Set: ScreenTip(self: _Hyperlink) = value
        """
        ...

    @property
    def SubAddress(self) -> str:
        """
        Get: SubAddress(self: _Hyperlink) -> str
        Set: SubAddress(self: _Hyperlink) = value
        """
        ...

    @property
    def TextToDisplay(self) -> str:
        """
        Get: TextToDisplay(self: _Hyperlink) -> str
        Set: TextToDisplay(self: _Hyperlink) = value
        """
        ...


    def AddToFavorites(self): # -> 
        """ AddToFavorites(self: _Hyperlink) """
        ...

    def CreateNewDocument(self, FileName:str, EditNow:bool, Overwrite:bool): # -> 
        """ CreateNewDocument(self: _Hyperlink, FileName: str, EditNow: bool, Overwrite: bool) """
        ...

    def Follow(self, NewWindow:bool, AddHistory:bool, ExtraInfo:object, Method, HeaderInfo:str): # ->  # Not found arg types: {'Method': 'MsoExtraInfoMethod'}
        """ Follow(self: _Hyperlink, NewWindow: bool, AddHistory: bool, ExtraInfo: object, Method: MsoExtraInfoMethod, HeaderInfo: str) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Hyperlink, dispid: int) -> bool """
        ...


class Hyperlink(_Hyperlink): # skipped bases: <type 'object'>
    """ no doc """
    pass

class HyperlinkClass(Hyperlink, __ComObject): # skipped bases: <type '_Hyperlink'>, <type 'object'>
    """ HyperlinkClass() """
    @property
    def Address(self) -> str:
        """
        Get: Address(self: HyperlinkClass) -> str
        Set: Address(self: HyperlinkClass) = value
        """
        ...

    @property
    def EmailSubject(self) -> str:
        """
        Get: EmailSubject(self: HyperlinkClass) -> str
        Set: EmailSubject(self: HyperlinkClass) = value
        """
        ...

    @property
    def ScreenTip(self) -> str:
        """
        Get: ScreenTip(self: HyperlinkClass) -> str
        Set: ScreenTip(self: HyperlinkClass) = value
        """
        ...

    @property
    def SubAddress(self) -> str:
        """
        Get: SubAddress(self: HyperlinkClass) -> str
        Set: SubAddress(self: HyperlinkClass) = value
        """
        ...

    @property
    def TextToDisplay(self) -> str:
        """
        Get: TextToDisplay(self: HyperlinkClass) -> str
        Set: TextToDisplay(self: HyperlinkClass) = value
        """
        ...


    def AddToFavorites(self): # -> 
        """ AddToFavorites(self: HyperlinkClass) """
        ...

    def CreateNewDocument(self, FileName:str, EditNow:bool, Overwrite:bool): # -> 
        """ CreateNewDocument(self: HyperlinkClass, FileName: str, EditNow: bool, Overwrite: bool) """
        ...

    def Follow(self, NewWindow:bool, AddHistory:bool, ExtraInfo:object, Method, HeaderInfo:str): # ->  # Not found arg types: {'Method': 'MsoExtraInfoMethod'}
        """ Follow(self: HyperlinkClass, NewWindow: bool, AddHistory: bool, ExtraInfo: object, Method: MsoExtraInfoMethod, HeaderInfo: str) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: HyperlinkClass, dispid: int) -> bool """
        ...


class _Image: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Image) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Image) -> int
        Set: BackColor(self: _Image) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Image) -> Single
        Set: BackShade(self: _Image) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Image) -> Byte
        Set: BackStyle(self: _Image) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Image) -> int
        Set: BackThemeColorIndex(self: _Image) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Image) -> Single
        Set: BackTint(self: _Image) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Image) -> int
        Set: BorderColor(self: _Image) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Image) -> Byte
        Set: BorderLineStyle(self: _Image) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Image) -> Single
        Set: BorderShade(self: _Image) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Image) -> Byte
        Set: BorderStyle(self: _Image) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Image) -> int
        Set: BorderThemeColorIndex(self: _Image) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Image) -> Single
        Set: BorderTint(self: _Image) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Image) -> Byte
        Set: BorderWidth(self: _Image) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Image) -> Int16
        Set: BottomPadding(self: _Image) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Image) -> str
        Set: ControlName(self: _Image) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Image) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Image) -> str
        Set: ControlTipText(self: _Image) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Image) -> Byte
        Set: ControlType(self: _Image) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Image) -> Byte
        Set: DisplayWhen(self: _Image) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Image) -> str
        Set: EventProcPrefix(self: _Image) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Image) -> int
        Set: GridlineColor(self: _Image) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Image) -> Single
        Set: GridlineShade(self: _Image) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Image) -> Byte
        Set: GridlineStyleBottom(self: _Image) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Image) -> Byte
        Set: GridlineStyleLeft(self: _Image) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Image) -> Byte
        Set: GridlineStyleRight(self: _Image) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Image) -> Byte
        Set: GridlineStyleTop(self: _Image) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Image) -> int
        Set: GridlineThemeColorIndex(self: _Image) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Image) -> Single
        Set: GridlineTint(self: _Image) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Image) -> Byte
        Set: GridlineWidthBottom(self: _Image) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Image) -> Byte
        Set: GridlineWidthLeft(self: _Image) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Image) -> Byte
        Set: GridlineWidthRight(self: _Image) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Image) -> Byte
        Set: GridlineWidthTop(self: _Image) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Image) -> Int16
        Set: Height(self: _Image) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Image) -> int
        Set: HelpContextId(self: _Image) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Image) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Image) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Image) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: _Image) -> str
        Set: HyperlinkAddress(self: _Image) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: _Image) -> str
        Set: HyperlinkSubAddress(self: _Image) = value
        """
        ...

    @property
    def ImageHeight(self) -> int:
        """
        Get: ImageHeight(self: _Image) -> int
        Set: ImageHeight(self: _Image) = value
        """
        ...

    @property
    def ImageWidth(self) -> int:
        """
        Get: ImageWidth(self: _Image) -> int
        Set: ImageWidth(self: _Image) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Image) -> bool
        Set: InSelection(self: _Image) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Image) -> bool
        Set: IsVisible(self: _Image) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Image) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Image) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Image) -> Int16
        Set: Left(self: _Image) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Image) -> Int16
        Set: LeftPadding(self: _Image) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Image) -> str
        Set: Name(self: _Image) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _Image) -> object
        Set: ObjectPalette(self: _Image) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Image) -> Byte
        Set: OldBorderStyle(self: _Image) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Image) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Image) -> str
        Set: OnClick(self: _Image) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Image) -> str
        Set: OnClickMacro(self: _Image) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Image) -> str
        Set: OnDblClick(self: _Image) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Image) -> str
        Set: OnDblClickMacro(self: _Image) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Image) -> str
        Set: OnMouseDown(self: _Image) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Image) -> str
        Set: OnMouseDownMacro(self: _Image) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Image) -> str
        Set: OnMouseMove(self: _Image) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Image) -> str
        Set: OnMouseMoveMacro(self: _Image) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Image) -> str
        Set: OnMouseUp(self: _Image) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Image) -> str
        Set: OnMouseUpMacro(self: _Image) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Image) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Image) -> str
        Set: Picture(self: _Image) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Image) -> Byte
        Set: PictureAlignment(self: _Image) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Image) -> object
        Set: PictureData(self: _Image) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Image) -> bool
        Set: PictureTiling(self: _Image) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Image) -> Byte
        Set: PictureType(self: _Image) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Image) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Image) -> Int16
        Set: RightPadding(self: _Image) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Image) -> Int16
        Set: Section(self: _Image) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Image) -> str
        Set: ShortcutMenuBar(self: _Image) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: _Image) -> Byte
        Set: SizeMode(self: _Image) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Image) -> Byte
        Set: SpecialEffect(self: _Image) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Image) -> str
        Set: Tag(self: _Image) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _Image) -> str
        Set: Target(self: _Image) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Image) -> Int16
        Set: Top(self: _Image) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Image) -> Int16
        Set: TopPadding(self: _Image) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Image) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Image) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Image) -> bool
        Set: Visible(self: _Image) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Image) -> Int16
        Set: Width(self: _Image) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Image) -> str
        Set: _Name(self: _Image) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _Image) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Image, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Image, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Image) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Image) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Image) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Image, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Image(_Image, DispImageEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class ImageClass(Image, __ComObject, _ImageEvents_Event): # skipped bases: <type '_Image'>, <type 'DispImageEvents_Event'>, <type 'object'>
    """ ImageClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: ImageClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: ImageClass) -> int
        Set: BackColor(self: ImageClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: ImageClass) -> Single
        Set: BackShade(self: ImageClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: ImageClass) -> Byte
        Set: BackStyle(self: ImageClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: ImageClass) -> int
        Set: BackThemeColorIndex(self: ImageClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: ImageClass) -> Single
        Set: BackTint(self: ImageClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: ImageClass) -> int
        Set: BorderColor(self: ImageClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: ImageClass) -> Byte
        Set: BorderLineStyle(self: ImageClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: ImageClass) -> Single
        Set: BorderShade(self: ImageClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ImageClass) -> Byte
        Set: BorderStyle(self: ImageClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: ImageClass) -> int
        Set: BorderThemeColorIndex(self: ImageClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: ImageClass) -> Single
        Set: BorderTint(self: ImageClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: ImageClass) -> Byte
        Set: BorderWidth(self: ImageClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ImageClass) -> Int16
        Set: BottomPadding(self: ImageClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: ImageClass) -> str
        Set: ControlName(self: ImageClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ImageClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: ImageClass) -> str
        Set: ControlTipText(self: ImageClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: ImageClass) -> Byte
        Set: ControlType(self: ImageClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: ImageClass) -> Byte
        Set: DisplayWhen(self: ImageClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: ImageClass) -> str
        Set: EventProcPrefix(self: ImageClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ImageClass) -> int
        Set: GridlineColor(self: ImageClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: ImageClass) -> Single
        Set: GridlineShade(self: ImageClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ImageClass) -> Byte
        Set: GridlineStyleBottom(self: ImageClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ImageClass) -> Byte
        Set: GridlineStyleLeft(self: ImageClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ImageClass) -> Byte
        Set: GridlineStyleRight(self: ImageClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ImageClass) -> Byte
        Set: GridlineStyleTop(self: ImageClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: ImageClass) -> int
        Set: GridlineThemeColorIndex(self: ImageClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: ImageClass) -> Single
        Set: GridlineTint(self: ImageClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ImageClass) -> Byte
        Set: GridlineWidthBottom(self: ImageClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ImageClass) -> Byte
        Set: GridlineWidthLeft(self: ImageClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ImageClass) -> Byte
        Set: GridlineWidthRight(self: ImageClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ImageClass) -> Byte
        Set: GridlineWidthTop(self: ImageClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: ImageClass) -> Int16
        Set: Height(self: ImageClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ImageClass) -> int
        Set: HelpContextId(self: ImageClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ImageClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ImageClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: ImageClass) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: ImageClass) -> str
        Set: HyperlinkAddress(self: ImageClass) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: ImageClass) -> str
        Set: HyperlinkSubAddress(self: ImageClass) = value
        """
        ...

    @property
    def ImageHeight(self) -> int:
        """
        Get: ImageHeight(self: ImageClass) -> int
        Set: ImageHeight(self: ImageClass) = value
        """
        ...

    @property
    def ImageWidth(self) -> int:
        """
        Get: ImageWidth(self: ImageClass) -> int
        Set: ImageWidth(self: ImageClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: ImageClass) -> bool
        Set: InSelection(self: ImageClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: ImageClass) -> bool
        Set: IsVisible(self: ImageClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ImageClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ImageClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: ImageClass) -> Int16
        Set: Left(self: ImageClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ImageClass) -> Int16
        Set: LeftPadding(self: ImageClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ImageClass) -> str
        Set: Name(self: ImageClass) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: ImageClass) -> object
        Set: ObjectPalette(self: ImageClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: ImageClass) -> Byte
        Set: OldBorderStyle(self: ImageClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ImageClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ImageClass) -> str
        Set: OnClick(self: ImageClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ImageClass) -> str
        Set: OnClickMacro(self: ImageClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ImageClass) -> str
        Set: OnDblClick(self: ImageClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ImageClass) -> str
        Set: OnDblClickMacro(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ImageClass) -> str
        Set: OnMouseDown(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ImageClass) -> str
        Set: OnMouseDownMacro(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ImageClass) -> str
        Set: OnMouseMove(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ImageClass) -> str
        Set: OnMouseMoveMacro(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ImageClass) -> str
        Set: OnMouseUp(self: ImageClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ImageClass) -> str
        Set: OnMouseUpMacro(self: ImageClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ImageClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: ImageClass) -> str
        Set: Picture(self: ImageClass) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: ImageClass) -> Byte
        Set: PictureAlignment(self: ImageClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: ImageClass) -> object
        Set: PictureData(self: ImageClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: ImageClass) -> bool
        Set: PictureTiling(self: ImageClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: ImageClass) -> Byte
        Set: PictureType(self: ImageClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ImageClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ImageClass) -> Int16
        Set: RightPadding(self: ImageClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: ImageClass) -> Int16
        Set: Section(self: ImageClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ImageClass) -> str
        Set: ShortcutMenuBar(self: ImageClass) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: ImageClass) -> Byte
        Set: SizeMode(self: ImageClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: ImageClass) -> Byte
        Set: SpecialEffect(self: ImageClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ImageClass) -> str
        Set: Tag(self: ImageClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: ImageClass) -> str
        Set: Target(self: ImageClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: ImageClass) -> Int16
        Set: Top(self: ImageClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ImageClass) -> Int16
        Set: TopPadding(self: ImageClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ImageClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ImageClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ImageClass) -> bool
        Set: Visible(self: ImageClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ImageClass) -> Int16
        Set: Width(self: ImageClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ImageClass) -> str
        Set: _Name(self: ImageClass) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: ImageClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ImageClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ImageClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ImageClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ImageClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ImageClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ImageClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ImageEvents_Event_add_Click(self): # -> 
        """ _ImageEvents_Event_add_Click(self: ImageClass, : _ImageEvents_ClickEventHandler) """
        ...

    def _ImageEvents_Event_add_DblClick(self): # -> 
        """ _ImageEvents_Event_add_DblClick(self: ImageClass, : _ImageEvents_DblClickEventHandler) """
        ...

    def _ImageEvents_Event_add_MouseDown(self): # -> 
        """ _ImageEvents_Event_add_MouseDown(self: ImageClass, : _ImageEvents_MouseDownEventHandler) """
        ...

    def _ImageEvents_Event_add_MouseMove(self): # -> 
        """ _ImageEvents_Event_add_MouseMove(self: ImageClass, : _ImageEvents_MouseMoveEventHandler) """
        ...

    def _ImageEvents_Event_add_MouseUp(self): # -> 
        """ _ImageEvents_Event_add_MouseUp(self: ImageClass, : _ImageEvents_MouseUpEventHandler) """
        ...

    def _ImageEvents_Event_remove_Click(self): # -> 
        """ _ImageEvents_Event_remove_Click(self: ImageClass, : _ImageEvents_ClickEventHandler) """
        ...

    def _ImageEvents_Event_remove_DblClick(self): # -> 
        """ _ImageEvents_Event_remove_DblClick(self: ImageClass, : _ImageEvents_DblClickEventHandler) """
        ...

    def _ImageEvents_Event_remove_MouseDown(self): # -> 
        """ _ImageEvents_Event_remove_MouseDown(self: ImageClass, : _ImageEvents_MouseDownEventHandler) """
        ...

    def _ImageEvents_Event_remove_MouseMove(self): # -> 
        """ _ImageEvents_Event_remove_MouseMove(self: ImageClass, : _ImageEvents_MouseMoveEventHandler) """
        ...

    def _ImageEvents_Event_remove_MouseUp(self): # -> 
        """ _ImageEvents_Event_remove_MouseUp(self: ImageClass, : _ImageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _ImageEvents_Event_Click = ...
    _ImageEvents_Event_DblClick = ...
    _ImageEvents_Event_MouseDown = ...
    _ImageEvents_Event_MouseMove = ...
    _ImageEvents_Event_MouseUp = ...


class ImportExportSpecification: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: ImportExportSpecification) -> Application """
        ...

    @property
    def Description(self) -> str:
        """
        Get: Description(self: ImportExportSpecification) -> str
        Set: Description(self: ImportExportSpecification) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ImportExportSpecification) -> str
        Set: Name(self: ImportExportSpecification) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ImportExportSpecification) -> object """
        ...

    @property
    def XML(self) -> str:
        """
        Get: XML(self: ImportExportSpecification) -> str
        Set: XML(self: ImportExportSpecification) = value
        """
        ...


    def Delete(self): # -> 
        """ Delete(self: ImportExportSpecification) """
        ...

    def Execute(self, Prompt:object): # -> 
        """ Execute(self: ImportExportSpecification, Prompt: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ImportExportSpecification, dispid: int) -> bool """
        ...


class ImportExportSpecifications(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: ImportExportSpecifications) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: ImportExportSpecifications) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ImportExportSpecifications) -> object """
        ...


    def Add(self, Name:str, SpecificationDefinition:str) -> ImportExportSpecification:
        """ Add(self: ImportExportSpecifications, Name: str, SpecificationDefinition: str) -> ImportExportSpecification """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ImportExportSpecifications, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _Label(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Label) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Label) -> int
        Set: BackColor(self: _Label) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Label) -> Single
        Set: BackShade(self: _Label) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Label) -> Byte
        Set: BackStyle(self: _Label) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Label) -> int
        Set: BackThemeColorIndex(self: _Label) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Label) -> Single
        Set: BackTint(self: _Label) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Label) -> int
        Set: BorderColor(self: _Label) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Label) -> Byte
        Set: BorderLineStyle(self: _Label) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Label) -> Single
        Set: BorderShade(self: _Label) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Label) -> Byte
        Set: BorderStyle(self: _Label) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Label) -> int
        Set: BorderThemeColorIndex(self: _Label) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Label) -> Single
        Set: BorderTint(self: _Label) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Label) -> Byte
        Set: BorderWidth(self: _Label) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: _Label) -> Int16
        Set: BottomMargin(self: _Label) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Label) -> Int16
        Set: BottomPadding(self: _Label) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Label) -> str
        Set: Caption(self: _Label) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Label) -> str
        Set: ControlName(self: _Label) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Label) -> str
        Set: ControlTipText(self: _Label) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Label) -> Byte
        Set: ControlType(self: _Label) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Label) -> Byte
        Set: DisplayWhen(self: _Label) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Label) -> str
        Set: EventProcPrefix(self: _Label) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Label) -> Int16
        Set: FontBold(self: _Label) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _Label) -> bool
        Set: FontItalic(self: _Label) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Label) -> str
        Set: FontName(self: _Label) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Label) -> Int16
        Set: FontSize(self: _Label) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _Label) -> bool
        Set: FontUnderline(self: _Label) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _Label) -> Int16
        Set: FontWeight(self: _Label) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Label) -> int
        Set: ForeColor(self: _Label) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _Label) -> Single
        Set: ForeShade(self: _Label) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _Label) -> int
        Set: ForeThemeColorIndex(self: _Label) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _Label) -> Single
        Set: ForeTint(self: _Label) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Label) -> int
        Set: GridlineColor(self: _Label) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Label) -> Single
        Set: GridlineShade(self: _Label) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Label) -> Byte
        Set: GridlineStyleBottom(self: _Label) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Label) -> Byte
        Set: GridlineStyleLeft(self: _Label) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Label) -> Byte
        Set: GridlineStyleRight(self: _Label) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Label) -> Byte
        Set: GridlineStyleTop(self: _Label) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Label) -> int
        Set: GridlineThemeColorIndex(self: _Label) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Label) -> Single
        Set: GridlineTint(self: _Label) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Label) -> Byte
        Set: GridlineWidthBottom(self: _Label) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Label) -> Byte
        Set: GridlineWidthLeft(self: _Label) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Label) -> Byte
        Set: GridlineWidthRight(self: _Label) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Label) -> Byte
        Set: GridlineWidthTop(self: _Label) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Label) -> Int16
        Set: Height(self: _Label) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Label) -> int
        Set: HelpContextId(self: _Label) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Label) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Label) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Label) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: _Label) -> str
        Set: HyperlinkAddress(self: _Label) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: _Label) -> str
        Set: HyperlinkSubAddress(self: _Label) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Label) -> bool
        Set: InSelection(self: _Label) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Label) -> bool
        Set: IsVisible(self: _Label) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Label) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Label) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Label) -> Int16
        Set: Left(self: _Label) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: _Label) -> Int16
        Set: LeftMargin(self: _Label) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Label) -> Int16
        Set: LeftPadding(self: _Label) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: _Label) -> Int16
        Set: LineSpacing(self: _Label) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Label) -> str
        Set: Name(self: _Label) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _Label) -> Byte
        Set: NumeralShapes(self: _Label) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Label) -> Byte
        Set: OldBorderStyle(self: _Label) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Label) -> str
        Set: OnClick(self: _Label) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Label) -> str
        Set: OnClickMacro(self: _Label) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Label) -> str
        Set: OnDblClick(self: _Label) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Label) -> str
        Set: OnDblClickMacro(self: _Label) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Label) -> str
        Set: OnMouseDown(self: _Label) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Label) -> str
        Set: OnMouseDownMacro(self: _Label) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Label) -> str
        Set: OnMouseMove(self: _Label) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Label) -> str
        Set: OnMouseMoveMacro(self: _Label) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Label) -> str
        Set: OnMouseUp(self: _Label) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Label) -> str
        Set: OnMouseUpMacro(self: _Label) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Label) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Label) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _Label) -> Byte
        Set: ReadingOrder(self: _Label) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: _Label) -> Int16
        Set: RightMargin(self: _Label) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Label) -> Int16
        Set: RightPadding(self: _Label) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Label) -> Int16
        Set: Section(self: _Label) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Label) -> str
        Set: ShortcutMenuBar(self: _Label) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _Label) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Label) -> Byte
        Set: SpecialEffect(self: _Label) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Label) -> str
        Set: Tag(self: _Label) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _Label) -> str
        Set: Target(self: _Label) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: _Label) -> Byte
        Set: TextAlign(self: _Label) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _Label) -> Byte
        Set: TextFontCharSet(self: _Label) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _Label) -> int
        Set: ThemeFontIndex(self: _Label) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Label) -> Int16
        Set: Top(self: _Label) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: _Label) -> Int16
        Set: TopMargin(self: _Label) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Label) -> Int16
        Set: TopPadding(self: _Label) = value
        """
        ...

    @property
    def Vertical(self) -> bool:
        """
        Get: Vertical(self: _Label) -> bool
        Set: Vertical(self: _Label) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Label) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Label) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Label) -> bool
        Set: Visible(self: _Label) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Label) -> Int16
        Set: Width(self: _Label) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Label) -> str
        Set: _Name(self: _Label) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Label, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Label, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Label) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Label, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Label(_Label, DispLabelEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class LabelClass(Label, _LabelEvents_Event, __ComObject): # skipped bases: <type 'DispLabelEvents_Event'>, <type '_Label'>, <type 'IAccessible'>, <type 'object'>
    """ LabelClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: LabelClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: LabelClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: LabelClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: LabelClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: LabelClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: LabelClass) -> int
        Set: BackColor(self: LabelClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: LabelClass) -> Single
        Set: BackShade(self: LabelClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: LabelClass) -> Byte
        Set: BackStyle(self: LabelClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: LabelClass) -> int
        Set: BackThemeColorIndex(self: LabelClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: LabelClass) -> Single
        Set: BackTint(self: LabelClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: LabelClass) -> int
        Set: BorderColor(self: LabelClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: LabelClass) -> Byte
        Set: BorderLineStyle(self: LabelClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: LabelClass) -> Single
        Set: BorderShade(self: LabelClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: LabelClass) -> Byte
        Set: BorderStyle(self: LabelClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: LabelClass) -> int
        Set: BorderThemeColorIndex(self: LabelClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: LabelClass) -> Single
        Set: BorderTint(self: LabelClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: LabelClass) -> Byte
        Set: BorderWidth(self: LabelClass) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: LabelClass) -> Int16
        Set: BottomMargin(self: LabelClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: LabelClass) -> Int16
        Set: BottomPadding(self: LabelClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: LabelClass) -> str
        Set: Caption(self: LabelClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: LabelClass) -> str
        Set: ControlName(self: LabelClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: LabelClass) -> str
        Set: ControlTipText(self: LabelClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: LabelClass) -> Byte
        Set: ControlType(self: LabelClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: LabelClass) -> Byte
        Set: DisplayWhen(self: LabelClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: LabelClass) -> str
        Set: EventProcPrefix(self: LabelClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: LabelClass) -> Int16
        Set: FontBold(self: LabelClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: LabelClass) -> bool
        Set: FontItalic(self: LabelClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: LabelClass) -> str
        Set: FontName(self: LabelClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: LabelClass) -> Int16
        Set: FontSize(self: LabelClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: LabelClass) -> bool
        Set: FontUnderline(self: LabelClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: LabelClass) -> Int16
        Set: FontWeight(self: LabelClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: LabelClass) -> int
        Set: ForeColor(self: LabelClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: LabelClass) -> Single
        Set: ForeShade(self: LabelClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: LabelClass) -> int
        Set: ForeThemeColorIndex(self: LabelClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: LabelClass) -> Single
        Set: ForeTint(self: LabelClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: LabelClass) -> int
        Set: GridlineColor(self: LabelClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: LabelClass) -> Single
        Set: GridlineShade(self: LabelClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: LabelClass) -> Byte
        Set: GridlineStyleBottom(self: LabelClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: LabelClass) -> Byte
        Set: GridlineStyleLeft(self: LabelClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: LabelClass) -> Byte
        Set: GridlineStyleRight(self: LabelClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: LabelClass) -> Byte
        Set: GridlineStyleTop(self: LabelClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: LabelClass) -> int
        Set: GridlineThemeColorIndex(self: LabelClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: LabelClass) -> Single
        Set: GridlineTint(self: LabelClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: LabelClass) -> Byte
        Set: GridlineWidthBottom(self: LabelClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: LabelClass) -> Byte
        Set: GridlineWidthLeft(self: LabelClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: LabelClass) -> Byte
        Set: GridlineWidthRight(self: LabelClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: LabelClass) -> Byte
        Set: GridlineWidthTop(self: LabelClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: LabelClass) -> Int16
        Set: Height(self: LabelClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: LabelClass) -> int
        Set: HelpContextId(self: LabelClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: LabelClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: LabelClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: LabelClass) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: LabelClass) -> str
        Set: HyperlinkAddress(self: LabelClass) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: LabelClass) -> str
        Set: HyperlinkSubAddress(self: LabelClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: LabelClass) -> bool
        Set: InSelection(self: LabelClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: LabelClass) -> bool
        Set: IsVisible(self: LabelClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: LabelClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: LabelClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: LabelClass) -> Int16
        Set: Left(self: LabelClass) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: LabelClass) -> Int16
        Set: LeftMargin(self: LabelClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: LabelClass) -> Int16
        Set: LeftPadding(self: LabelClass) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: LabelClass) -> Int16
        Set: LineSpacing(self: LabelClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: LabelClass) -> str
        Set: Name(self: LabelClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: LabelClass) -> Byte
        Set: NumeralShapes(self: LabelClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: LabelClass) -> Byte
        Set: OldBorderStyle(self: LabelClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: LabelClass) -> str
        Set: OnClick(self: LabelClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: LabelClass) -> str
        Set: OnClickMacro(self: LabelClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: LabelClass) -> str
        Set: OnDblClick(self: LabelClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: LabelClass) -> str
        Set: OnDblClickMacro(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: LabelClass) -> str
        Set: OnMouseDown(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: LabelClass) -> str
        Set: OnMouseDownMacro(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: LabelClass) -> str
        Set: OnMouseMove(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: LabelClass) -> str
        Set: OnMouseMoveMacro(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: LabelClass) -> str
        Set: OnMouseUp(self: LabelClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: LabelClass) -> str
        Set: OnMouseUpMacro(self: LabelClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: LabelClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: LabelClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: LabelClass) -> Byte
        Set: ReadingOrder(self: LabelClass) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: LabelClass) -> Int16
        Set: RightMargin(self: LabelClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: LabelClass) -> Int16
        Set: RightPadding(self: LabelClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: LabelClass) -> Int16
        Set: Section(self: LabelClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: LabelClass) -> str
        Set: ShortcutMenuBar(self: LabelClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: LabelClass) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: LabelClass) -> Byte
        Set: SpecialEffect(self: LabelClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: LabelClass) -> str
        Set: Tag(self: LabelClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: LabelClass) -> str
        Set: Target(self: LabelClass) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: LabelClass) -> Byte
        Set: TextAlign(self: LabelClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: LabelClass) -> Byte
        Set: TextFontCharSet(self: LabelClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: LabelClass) -> int
        Set: ThemeFontIndex(self: LabelClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: LabelClass) -> Int16
        Set: Top(self: LabelClass) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: LabelClass) -> Int16
        Set: TopMargin(self: LabelClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: LabelClass) -> Int16
        Set: TopPadding(self: LabelClass) = value
        """
        ...

    @property
    def Vertical(self) -> bool:
        """
        Get: Vertical(self: LabelClass) -> bool
        Set: Vertical(self: LabelClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: LabelClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: LabelClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: LabelClass) -> bool
        Set: Visible(self: LabelClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: LabelClass) -> Int16
        Set: Width(self: LabelClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: LabelClass) -> str
        Set: _Name(self: LabelClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: LabelClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: LabelClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: LabelClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: LabelClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: LabelClass, flagsSelect: int, varChild: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: LabelClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: LabelClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: LabelClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: LabelClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _LabelEvents_Event_add_Click(self): # -> 
        """ _LabelEvents_Event_add_Click(self: LabelClass, : _LabelEvents_ClickEventHandler) """
        ...

    def _LabelEvents_Event_add_DblClick(self): # -> 
        """ _LabelEvents_Event_add_DblClick(self: LabelClass, : _LabelEvents_DblClickEventHandler) """
        ...

    def _LabelEvents_Event_add_MouseDown(self): # -> 
        """ _LabelEvents_Event_add_MouseDown(self: LabelClass, : _LabelEvents_MouseDownEventHandler) """
        ...

    def _LabelEvents_Event_add_MouseMove(self): # -> 
        """ _LabelEvents_Event_add_MouseMove(self: LabelClass, : _LabelEvents_MouseMoveEventHandler) """
        ...

    def _LabelEvents_Event_add_MouseUp(self): # -> 
        """ _LabelEvents_Event_add_MouseUp(self: LabelClass, : _LabelEvents_MouseUpEventHandler) """
        ...

    def _LabelEvents_Event_remove_Click(self): # -> 
        """ _LabelEvents_Event_remove_Click(self: LabelClass, : _LabelEvents_ClickEventHandler) """
        ...

    def _LabelEvents_Event_remove_DblClick(self): # -> 
        """ _LabelEvents_Event_remove_DblClick(self: LabelClass, : _LabelEvents_DblClickEventHandler) """
        ...

    def _LabelEvents_Event_remove_MouseDown(self): # -> 
        """ _LabelEvents_Event_remove_MouseDown(self: LabelClass, : _LabelEvents_MouseDownEventHandler) """
        ...

    def _LabelEvents_Event_remove_MouseMove(self): # -> 
        """ _LabelEvents_Event_remove_MouseMove(self: LabelClass, : _LabelEvents_MouseMoveEventHandler) """
        ...

    def _LabelEvents_Event_remove_MouseUp(self): # -> 
        """ _LabelEvents_Event_remove_MouseUp(self: LabelClass, : _LabelEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _LabelEvents_Event_Click = ...
    _LabelEvents_Event_DblClick = ...
    _LabelEvents_Event_MouseDown = ...
    _LabelEvents_Event_MouseMove = ...
    _LabelEvents_Event_MouseUp = ...


class _Line: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Line) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Line) -> int
        Set: BorderColor(self: _Line) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Line) -> Byte
        Set: BorderLineStyle(self: _Line) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Line) -> Single
        Set: BorderShade(self: _Line) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Line) -> Byte
        Set: BorderStyle(self: _Line) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Line) -> int
        Set: BorderThemeColorIndex(self: _Line) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Line) -> Single
        Set: BorderTint(self: _Line) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Line) -> Byte
        Set: BorderWidth(self: _Line) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Line) -> str
        Set: ControlName(self: _Line) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Line) -> Byte
        Set: ControlType(self: _Line) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Line) -> Byte
        Set: DisplayWhen(self: _Line) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Line) -> str
        Set: EventProcPrefix(self: _Line) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Line) -> Int16
        Set: Height(self: _Line) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Line) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Line) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Line) -> bool
        Set: InSelection(self: _Line) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Line) -> bool
        Set: IsVisible(self: _Line) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Line) -> Int16
        Set: Left(self: _Line) = value
        """
        ...

    @property
    def LineSlant(self) -> bool:
        """
        Get: LineSlant(self: _Line) -> bool
        Set: LineSlant(self: _Line) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Line) -> str
        Set: Name(self: _Line) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Line) -> Byte
        Set: OldBorderStyle(self: _Line) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Line) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Line) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Line) -> Int16
        Set: Section(self: _Line) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Line) -> Byte
        Set: SpecialEffect(self: _Line) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Line) -> str
        Set: Tag(self: _Line) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Line) -> Int16
        Set: Top(self: _Line) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Line) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Line) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Line) -> bool
        Set: Visible(self: _Line) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Line) -> Int16
        Set: Width(self: _Line) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Line) -> str
        Set: _Name(self: _Line) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Line, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Line, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Line) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Line, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Line(_Line, DispLineEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class LineClass(Line, _LineEvents_Event, __ComObject): # skipped bases: <type '_Line'>, <type 'DispLineEvents_Event'>, <type 'object'>
    """ LineClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: LineClass) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: LineClass) -> int
        Set: BorderColor(self: LineClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: LineClass) -> Byte
        Set: BorderLineStyle(self: LineClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: LineClass) -> Single
        Set: BorderShade(self: LineClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: LineClass) -> Byte
        Set: BorderStyle(self: LineClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: LineClass) -> int
        Set: BorderThemeColorIndex(self: LineClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: LineClass) -> Single
        Set: BorderTint(self: LineClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: LineClass) -> Byte
        Set: BorderWidth(self: LineClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: LineClass) -> str
        Set: ControlName(self: LineClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: LineClass) -> Byte
        Set: ControlType(self: LineClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: LineClass) -> Byte
        Set: DisplayWhen(self: LineClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: LineClass) -> str
        Set: EventProcPrefix(self: LineClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: LineClass) -> Int16
        Set: Height(self: LineClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: LineClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: LineClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: LineClass) -> bool
        Set: InSelection(self: LineClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: LineClass) -> bool
        Set: IsVisible(self: LineClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: LineClass) -> Int16
        Set: Left(self: LineClass) = value
        """
        ...

    @property
    def LineSlant(self) -> bool:
        """
        Get: LineSlant(self: LineClass) -> bool
        Set: LineSlant(self: LineClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: LineClass) -> str
        Set: Name(self: LineClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: LineClass) -> Byte
        Set: OldBorderStyle(self: LineClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: LineClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: LineClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: LineClass) -> Int16
        Set: Section(self: LineClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: LineClass) -> Byte
        Set: SpecialEffect(self: LineClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: LineClass) -> str
        Set: Tag(self: LineClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: LineClass) -> Int16
        Set: Top(self: LineClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: LineClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: LineClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: LineClass) -> bool
        Set: Visible(self: LineClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: LineClass) -> Int16
        Set: Width(self: LineClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: LineClass) -> str
        Set: _Name(self: LineClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: LineClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: LineClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: LineClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: LineClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class _ListBox(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _ListBox) -> bool
        Set: AddColon(self: _ListBox) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _ListBox) -> str
        Set: AfterUpdate(self: _ListBox) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _ListBox) -> str
        Set: AfterUpdateMacro(self: _ListBox) = value
        """
        ...

    @property
    def AllowValueListEdits(self) -> bool:
        """
        Get: AllowValueListEdits(self: _ListBox) -> bool
        Set: AllowValueListEdits(self: _ListBox) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ListBox) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _ListBox) -> bool
        Set: AutoLabel(self: _ListBox) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _ListBox) -> int
        Set: BackColor(self: _ListBox) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _ListBox) -> Single
        Set: BackShade(self: _ListBox) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _ListBox) -> int
        Set: BackThemeColorIndex(self: _ListBox) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _ListBox) -> Single
        Set: BackTint(self: _ListBox) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _ListBox) -> str
        Set: BeforeUpdate(self: _ListBox) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _ListBox) -> str
        Set: BeforeUpdateMacro(self: _ListBox) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _ListBox) -> int
        Set: BorderColor(self: _ListBox) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _ListBox) -> Byte
        Set: BorderLineStyle(self: _ListBox) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _ListBox) -> Single
        Set: BorderShade(self: _ListBox) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _ListBox) -> Byte
        Set: BorderStyle(self: _ListBox) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _ListBox) -> int
        Set: BorderThemeColorIndex(self: _ListBox) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _ListBox) -> Single
        Set: BorderTint(self: _ListBox) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _ListBox) -> Byte
        Set: BorderWidth(self: _ListBox) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ListBox) -> Int16
        Set: BottomPadding(self: _ListBox) = value
        """
        ...

    @property
    def BoundColumn(self) -> int:
        """
        Get: BoundColumn(self: _ListBox) -> int
        Set: BoundColumn(self: _ListBox) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: _ListBox) -> Int16
        Set: ColumnCount(self: _ListBox) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: _ListBox) -> bool
        Set: ColumnHeads(self: _ListBox) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _ListBox) -> bool
        Set: ColumnHidden(self: _ListBox) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _ListBox) -> Int16
        Set: ColumnOrder(self: _ListBox) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _ListBox) -> Int16
        Set: ColumnWidth(self: _ListBox) = value
        """
        ...

    @property
    def ColumnWidths(self) -> str:
        """
        Get: ColumnWidths(self: _ListBox) -> str
        Set: ColumnWidths(self: _ListBox) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _ListBox) -> str
        Set: ControlName(self: _ListBox) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _ListBox) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _ListBox) -> str
        Set: ControlSource(self: _ListBox) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _ListBox) -> str
        Set: ControlTipText(self: _ListBox) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _ListBox) -> Byte
        Set: ControlType(self: _ListBox) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _ListBox) -> str
        Set: DefaultValue(self: _ListBox) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _ListBox) -> Byte
        Set: DisplayWhen(self: _ListBox) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _ListBox) -> bool
        Set: Enabled(self: _ListBox) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _ListBox) -> str
        Set: EventProcPrefix(self: _ListBox) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _ListBox) -> Int16
        Set: FontBold(self: _ListBox) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _ListBox) -> bool
        Set: FontItalic(self: _ListBox) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _ListBox) -> str
        Set: FontName(self: _ListBox) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _ListBox) -> Int16
        Set: FontSize(self: _ListBox) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _ListBox) -> bool
        Set: FontUnderline(self: _ListBox) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _ListBox) -> Int16
        Set: FontWeight(self: _ListBox) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _ListBox) -> int
        Set: ForeColor(self: _ListBox) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _ListBox) -> Single
        Set: ForeShade(self: _ListBox) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _ListBox) -> int
        Set: ForeThemeColorIndex(self: _ListBox) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _ListBox) -> Single
        Set: ForeTint(self: _ListBox) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ListBox) -> int
        Set: GridlineColor(self: _ListBox) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _ListBox) -> Single
        Set: GridlineShade(self: _ListBox) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ListBox) -> Byte
        Set: GridlineStyleBottom(self: _ListBox) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ListBox) -> Byte
        Set: GridlineStyleLeft(self: _ListBox) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ListBox) -> Byte
        Set: GridlineStyleRight(self: _ListBox) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ListBox) -> Byte
        Set: GridlineStyleTop(self: _ListBox) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _ListBox) -> int
        Set: GridlineThemeColorIndex(self: _ListBox) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _ListBox) -> Single
        Set: GridlineTint(self: _ListBox) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ListBox) -> Byte
        Set: GridlineWidthBottom(self: _ListBox) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ListBox) -> Byte
        Set: GridlineWidthLeft(self: _ListBox) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ListBox) -> Byte
        Set: GridlineWidthRight(self: _ListBox) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ListBox) -> Byte
        Set: GridlineWidthTop(self: _ListBox) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _ListBox) -> Int16
        Set: Height(self: _ListBox) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _ListBox) -> int
        Set: HelpContextId(self: _ListBox) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _ListBox) -> bool
        Set: HideDuplicates(self: _ListBox) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ListBox) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ListBox) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _ListBox) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: _ListBox) -> bool
        Set: IMEHold(self: _ListBox) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: _ListBox) -> AcImeMode
        Set: IMEMode(self: _ListBox) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: _ListBox) -> AcImeSentenceMode
        Set: IMESentenceMode(self: _ListBox) = value
        """
        ...

    @property
    def InheritValueList(self) -> bool:
        """
        Get: InheritValueList(self: _ListBox) -> bool
        Set: InheritValueList(self: _ListBox) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _ListBox) -> bool
        Set: InSelection(self: _ListBox) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _ListBox) -> bool
        Set: IsVisible(self: _ListBox) = value
        """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: _ListBox) -> _ItemsSelected """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _ListBox) -> Byte
        Set: LabelAlign(self: _ListBox) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _ListBox) -> Int16
        Set: LabelX(self: _ListBox) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _ListBox) -> Int16
        Set: LabelY(self: _ListBox) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ListBox) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ListBox) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _ListBox) -> Int16
        Set: Left(self: _ListBox) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ListBox) -> Int16
        Set: LeftPadding(self: _ListBox) = value
        """
        ...

    @property
    def ListCount(self) -> int:
        """
        Get: ListCount(self: _ListBox) -> int
        Set: ListCount(self: _ListBox) = value
        """
        ...

    @property
    def ListIndex(self) -> int:
        """
        Get: ListIndex(self: _ListBox) -> int
        Set: ListIndex(self: _ListBox) = value
        """
        ...

    @property
    def ListItemsEditForm(self) -> str:
        """
        Get: ListItemsEditForm(self: _ListBox) -> str
        Set: ListItemsEditForm(self: _ListBox) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _ListBox) -> bool
        Set: Locked(self: _ListBox) = value
        """
        ...

    @property
    def MultiSelect(self) -> Byte:
        """
        Get: MultiSelect(self: _ListBox) -> Byte
        Set: MultiSelect(self: _ListBox) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ListBox) -> str
        Set: Name(self: _ListBox) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _ListBox) -> Byte
        Set: NumeralShapes(self: _ListBox) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _ListBox) -> Byte
        Set: OldBorderStyle(self: _ListBox) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _ListBox) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _ListBox) -> str
        Set: OnClick(self: _ListBox) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _ListBox) -> str
        Set: OnClickMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _ListBox) -> str
        Set: OnDblClick(self: _ListBox) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _ListBox) -> str
        Set: OnDblClickMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _ListBox) -> str
        Set: OnEnter(self: _ListBox) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _ListBox) -> str
        Set: OnEnterMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _ListBox) -> str
        Set: OnExit(self: _ListBox) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _ListBox) -> str
        Set: OnExitMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _ListBox) -> str
        Set: OnGotFocus(self: _ListBox) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _ListBox) -> str
        Set: OnGotFocusMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _ListBox) -> str
        Set: OnKeyDown(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _ListBox) -> str
        Set: OnKeyDownMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _ListBox) -> str
        Set: OnKeyPress(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _ListBox) -> str
        Set: OnKeyPressMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _ListBox) -> str
        Set: OnKeyUp(self: _ListBox) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _ListBox) -> str
        Set: OnKeyUpMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _ListBox) -> str
        Set: OnLostFocus(self: _ListBox) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _ListBox) -> str
        Set: OnLostFocusMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _ListBox) -> str
        Set: OnMouseDown(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _ListBox) -> str
        Set: OnMouseDownMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _ListBox) -> str
        Set: OnMouseMove(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _ListBox) -> str
        Set: OnMouseMoveMacro(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _ListBox) -> str
        Set: OnMouseUp(self: _ListBox) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _ListBox) -> str
        Set: OnMouseUpMacro(self: _ListBox) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ListBox) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ListBox) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _ListBox) -> Byte
        Set: ReadingOrder(self: _ListBox) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _ListBox) -> object
        Set: Recordset(self: _ListBox) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ListBox) -> Int16
        Set: RightPadding(self: _ListBox) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: _ListBox) -> str
        Set: RowSource(self: _ListBox) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: _ListBox) -> str
        Set: RowSourceType(self: _ListBox) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: _ListBox) -> Byte
        Set: ScrollBarAlign(self: _ListBox) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _ListBox) -> Int16
        Set: Section(self: _ListBox) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _ListBox) -> str
        Set: ShortcutMenuBar(self: _ListBox) = value
        """
        ...

    @property
    def ShowOnlyRowSourceValues(self) -> bool:
        """
        Get: ShowOnlyRowSourceValues(self: _ListBox) -> bool
        Set: ShowOnlyRowSourceValues(self: _ListBox) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _ListBox) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _ListBox) -> Byte
        Set: SpecialEffect(self: _ListBox) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _ListBox) -> str
        Set: StatusBarText(self: _ListBox) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _ListBox) -> Int16
        Set: TabIndex(self: _ListBox) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _ListBox) -> bool
        Set: TabStop(self: _ListBox) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _ListBox) -> str
        Set: Tag(self: _ListBox) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: _ListBox) -> Byte
        Set: TextAlign(self: _ListBox) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _ListBox) -> Byte
        Set: TextFontCharSet(self: _ListBox) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _ListBox) -> int
        Set: ThemeFontIndex(self: _ListBox) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _ListBox) -> Int16
        Set: Top(self: _ListBox) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ListBox) -> Int16
        Set: TopPadding(self: _ListBox) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _ListBox) -> str
        Set: ValidationRule(self: _ListBox) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _ListBox) -> str
        Set: ValidationText(self: _ListBox) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _ListBox) -> object
        Set: Value(self: _ListBox) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ListBox) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ListBox) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _ListBox) -> bool
        Set: Visible(self: _ListBox) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _ListBox) -> Int16
        Set: Width(self: _ListBox) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ListBox) -> str
        Set: _Name(self: _ListBox) = value
        """
        ...


    def AddItem(self, Item:str, Index:object): # -> 
        """ AddItem(self: _ListBox, Item: str, Index: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _ListBox) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ListBox, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ListBox, Left: object, Top: object, Width: object, Height: object) """
        ...

    def RemoveItem(self, Index:object): # -> 
        """ RemoveItem(self: _ListBox, Index: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _ListBox) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _ListBox) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ListBox) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _ListBox) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ListBox, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class ListBox(_ListBox, DispListBoxEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class ListBoxClass(ListBox, __ComObject, _ListBoxEvents_Event): # skipped bases: <type 'DispListBoxEvents_Event'>, <type '_ListBox'>, <type 'IAccessible'>, <type 'object'>
    """ ListBoxClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: ListBoxClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: ListBoxClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: ListBoxClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: ListBoxClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: ListBoxClass) -> bool
        Set: AddColon(self: ListBoxClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: ListBoxClass) -> str
        Set: AfterUpdate(self: ListBoxClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: ListBoxClass) -> str
        Set: AfterUpdateMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def AllowValueListEdits(self) -> bool:
        """
        Get: AllowValueListEdits(self: ListBoxClass) -> bool
        Set: AllowValueListEdits(self: ListBoxClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ListBoxClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: ListBoxClass) -> bool
        Set: AutoLabel(self: ListBoxClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: ListBoxClass) -> int
        Set: BackColor(self: ListBoxClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: ListBoxClass) -> Single
        Set: BackShade(self: ListBoxClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: ListBoxClass) -> int
        Set: BackThemeColorIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: ListBoxClass) -> Single
        Set: BackTint(self: ListBoxClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: ListBoxClass) -> str
        Set: BeforeUpdate(self: ListBoxClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: ListBoxClass) -> str
        Set: BeforeUpdateMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: ListBoxClass) -> int
        Set: BorderColor(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: ListBoxClass) -> Byte
        Set: BorderLineStyle(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: ListBoxClass) -> Single
        Set: BorderShade(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ListBoxClass) -> Byte
        Set: BorderStyle(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: ListBoxClass) -> int
        Set: BorderThemeColorIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: ListBoxClass) -> Single
        Set: BorderTint(self: ListBoxClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: ListBoxClass) -> Byte
        Set: BorderWidth(self: ListBoxClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ListBoxClass) -> Int16
        Set: BottomPadding(self: ListBoxClass) = value
        """
        ...

    @property
    def BoundColumn(self) -> int:
        """
        Get: BoundColumn(self: ListBoxClass) -> int
        Set: BoundColumn(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: ListBoxClass) -> Int16
        Set: ColumnCount(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: ListBoxClass) -> bool
        Set: ColumnHeads(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: ListBoxClass) -> bool
        Set: ColumnHidden(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: ListBoxClass) -> Int16
        Set: ColumnOrder(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: ListBoxClass) -> Int16
        Set: ColumnWidth(self: ListBoxClass) = value
        """
        ...

    @property
    def ColumnWidths(self) -> str:
        """
        Get: ColumnWidths(self: ListBoxClass) -> str
        Set: ColumnWidths(self: ListBoxClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: ListBoxClass) -> str
        Set: ControlName(self: ListBoxClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ListBoxClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: ListBoxClass) -> str
        Set: ControlSource(self: ListBoxClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: ListBoxClass) -> str
        Set: ControlTipText(self: ListBoxClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: ListBoxClass) -> Byte
        Set: ControlType(self: ListBoxClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: ListBoxClass) -> str
        Set: DefaultValue(self: ListBoxClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: ListBoxClass) -> Byte
        Set: DisplayWhen(self: ListBoxClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: ListBoxClass) -> bool
        Set: Enabled(self: ListBoxClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: ListBoxClass) -> str
        Set: EventProcPrefix(self: ListBoxClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ListBoxClass) -> Int16
        Set: FontBold(self: ListBoxClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: ListBoxClass) -> bool
        Set: FontItalic(self: ListBoxClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ListBoxClass) -> str
        Set: FontName(self: ListBoxClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ListBoxClass) -> Int16
        Set: FontSize(self: ListBoxClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: ListBoxClass) -> bool
        Set: FontUnderline(self: ListBoxClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: ListBoxClass) -> Int16
        Set: FontWeight(self: ListBoxClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ListBoxClass) -> int
        Set: ForeColor(self: ListBoxClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: ListBoxClass) -> Single
        Set: ForeShade(self: ListBoxClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: ListBoxClass) -> int
        Set: ForeThemeColorIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: ListBoxClass) -> Single
        Set: ForeTint(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ListBoxClass) -> int
        Set: GridlineColor(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: ListBoxClass) -> Single
        Set: GridlineShade(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ListBoxClass) -> Byte
        Set: GridlineStyleBottom(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ListBoxClass) -> Byte
        Set: GridlineStyleLeft(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ListBoxClass) -> Byte
        Set: GridlineStyleRight(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ListBoxClass) -> Byte
        Set: GridlineStyleTop(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: ListBoxClass) -> int
        Set: GridlineThemeColorIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: ListBoxClass) -> Single
        Set: GridlineTint(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ListBoxClass) -> Byte
        Set: GridlineWidthBottom(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ListBoxClass) -> Byte
        Set: GridlineWidthLeft(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ListBoxClass) -> Byte
        Set: GridlineWidthRight(self: ListBoxClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ListBoxClass) -> Byte
        Set: GridlineWidthTop(self: ListBoxClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: ListBoxClass) -> Int16
        Set: Height(self: ListBoxClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ListBoxClass) -> int
        Set: HelpContextId(self: ListBoxClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: ListBoxClass) -> bool
        Set: HideDuplicates(self: ListBoxClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ListBoxClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ListBoxClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: ListBoxClass) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: ListBoxClass) -> bool
        Set: IMEHold(self: ListBoxClass) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: ListBoxClass) -> AcImeMode
        Set: IMEMode(self: ListBoxClass) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: ListBoxClass) -> AcImeSentenceMode
        Set: IMESentenceMode(self: ListBoxClass) = value
        """
        ...

    @property
    def InheritValueList(self) -> bool:
        """
        Get: InheritValueList(self: ListBoxClass) -> bool
        Set: InheritValueList(self: ListBoxClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: ListBoxClass) -> bool
        Set: InSelection(self: ListBoxClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: ListBoxClass) -> bool
        Set: IsVisible(self: ListBoxClass) = value
        """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: ListBoxClass) -> _ItemsSelected """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: ListBoxClass) -> Byte
        Set: LabelAlign(self: ListBoxClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: ListBoxClass) -> Int16
        Set: LabelX(self: ListBoxClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: ListBoxClass) -> Int16
        Set: LabelY(self: ListBoxClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ListBoxClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ListBoxClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: ListBoxClass) -> Int16
        Set: Left(self: ListBoxClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ListBoxClass) -> Int16
        Set: LeftPadding(self: ListBoxClass) = value
        """
        ...

    @property
    def ListCount(self) -> int:
        """
        Get: ListCount(self: ListBoxClass) -> int
        Set: ListCount(self: ListBoxClass) = value
        """
        ...

    @property
    def ListIndex(self) -> int:
        """
        Get: ListIndex(self: ListBoxClass) -> int
        Set: ListIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def ListItemsEditForm(self) -> str:
        """
        Get: ListItemsEditForm(self: ListBoxClass) -> str
        Set: ListItemsEditForm(self: ListBoxClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: ListBoxClass) -> bool
        Set: Locked(self: ListBoxClass) = value
        """
        ...

    @property
    def MultiSelect(self) -> Byte:
        """
        Get: MultiSelect(self: ListBoxClass) -> Byte
        Set: MultiSelect(self: ListBoxClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ListBoxClass) -> str
        Set: Name(self: ListBoxClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: ListBoxClass) -> Byte
        Set: NumeralShapes(self: ListBoxClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: ListBoxClass) -> Byte
        Set: OldBorderStyle(self: ListBoxClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ListBoxClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ListBoxClass) -> str
        Set: OnClick(self: ListBoxClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ListBoxClass) -> str
        Set: OnClickMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ListBoxClass) -> str
        Set: OnDblClick(self: ListBoxClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ListBoxClass) -> str
        Set: OnDblClickMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: ListBoxClass) -> str
        Set: OnEnter(self: ListBoxClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: ListBoxClass) -> str
        Set: OnEnterMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: ListBoxClass) -> str
        Set: OnExit(self: ListBoxClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: ListBoxClass) -> str
        Set: OnExitMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: ListBoxClass) -> str
        Set: OnGotFocus(self: ListBoxClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: ListBoxClass) -> str
        Set: OnGotFocusMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: ListBoxClass) -> str
        Set: OnKeyDown(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: ListBoxClass) -> str
        Set: OnKeyDownMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: ListBoxClass) -> str
        Set: OnKeyPress(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: ListBoxClass) -> str
        Set: OnKeyPressMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: ListBoxClass) -> str
        Set: OnKeyUp(self: ListBoxClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: ListBoxClass) -> str
        Set: OnKeyUpMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: ListBoxClass) -> str
        Set: OnLostFocus(self: ListBoxClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: ListBoxClass) -> str
        Set: OnLostFocusMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ListBoxClass) -> str
        Set: OnMouseDown(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ListBoxClass) -> str
        Set: OnMouseDownMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ListBoxClass) -> str
        Set: OnMouseMove(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ListBoxClass) -> str
        Set: OnMouseMoveMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ListBoxClass) -> str
        Set: OnMouseUp(self: ListBoxClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ListBoxClass) -> str
        Set: OnMouseUpMacro(self: ListBoxClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ListBoxClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ListBoxClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: ListBoxClass) -> Byte
        Set: ReadingOrder(self: ListBoxClass) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: ListBoxClass) -> object
        Set: Recordset(self: ListBoxClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ListBoxClass) -> Int16
        Set: RightPadding(self: ListBoxClass) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: ListBoxClass) -> str
        Set: RowSource(self: ListBoxClass) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: ListBoxClass) -> str
        Set: RowSourceType(self: ListBoxClass) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: ListBoxClass) -> Byte
        Set: ScrollBarAlign(self: ListBoxClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: ListBoxClass) -> Int16
        Set: Section(self: ListBoxClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ListBoxClass) -> str
        Set: ShortcutMenuBar(self: ListBoxClass) = value
        """
        ...

    @property
    def ShowOnlyRowSourceValues(self) -> bool:
        """
        Get: ShowOnlyRowSourceValues(self: ListBoxClass) -> bool
        Set: ShowOnlyRowSourceValues(self: ListBoxClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: ListBoxClass) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: ListBoxClass) -> Byte
        Set: SpecialEffect(self: ListBoxClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: ListBoxClass) -> str
        Set: StatusBarText(self: ListBoxClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: ListBoxClass) -> Int16
        Set: TabIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: ListBoxClass) -> bool
        Set: TabStop(self: ListBoxClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ListBoxClass) -> str
        Set: Tag(self: ListBoxClass) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: ListBoxClass) -> Byte
        Set: TextAlign(self: ListBoxClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: ListBoxClass) -> Byte
        Set: TextFontCharSet(self: ListBoxClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: ListBoxClass) -> int
        Set: ThemeFontIndex(self: ListBoxClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: ListBoxClass) -> Int16
        Set: Top(self: ListBoxClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ListBoxClass) -> Int16
        Set: TopPadding(self: ListBoxClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: ListBoxClass) -> str
        Set: ValidationRule(self: ListBoxClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: ListBoxClass) -> str
        Set: ValidationText(self: ListBoxClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: ListBoxClass) -> object
        Set: Value(self: ListBoxClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ListBoxClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ListBoxClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ListBoxClass) -> bool
        Set: Visible(self: ListBoxClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ListBoxClass) -> Int16
        Set: Width(self: ListBoxClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ListBoxClass) -> str
        Set: _Name(self: ListBoxClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: ListBoxClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: ListBoxClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: ListBoxClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: ListBoxClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: ListBoxClass, flagsSelect: int, varChild: object) """
        ...

    def AddItem(self, Item:str, Index:object): # -> 
        """ AddItem(self: ListBoxClass, Item: str, Index: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: ListBoxClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ListBoxClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ListBoxClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def RemoveItem(self, Index:object): # -> 
        """ RemoveItem(self: ListBoxClass, Index: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ListBoxClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ListBoxClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ListBoxClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: ListBoxClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ListBoxClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ListBoxEvents_Event_add_AfterUpdate(self): # -> 
        """ _ListBoxEvents_Event_add_AfterUpdate(self: ListBoxClass, : _ListBoxEvents_AfterUpdateEventHandler) """
        ...

    def _ListBoxEvents_Event_add_BeforeUpdate(self): # -> 
        """ _ListBoxEvents_Event_add_BeforeUpdate(self: ListBoxClass, : _ListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _ListBoxEvents_Event_add_Click(self): # -> 
        """ _ListBoxEvents_Event_add_Click(self: ListBoxClass, : _ListBoxEvents_ClickEventHandler) """
        ...

    def _ListBoxEvents_Event_add_DblClick(self): # -> 
        """ _ListBoxEvents_Event_add_DblClick(self: ListBoxClass, : _ListBoxEvents_DblClickEventHandler) """
        ...

    def _ListBoxEvents_Event_add_Enter(self): # -> 
        """ _ListBoxEvents_Event_add_Enter(self: ListBoxClass, : _ListBoxEvents_EnterEventHandler) """
        ...

    def _ListBoxEvents_Event_add_Exit(self): # -> 
        """ _ListBoxEvents_Event_add_Exit(self: ListBoxClass, : _ListBoxEvents_ExitEventHandler) """
        ...

    def _ListBoxEvents_Event_add_GotFocus(self): # -> 
        """ _ListBoxEvents_Event_add_GotFocus(self: ListBoxClass, : _ListBoxEvents_GotFocusEventHandler) """
        ...

    def _ListBoxEvents_Event_add_KeyDown(self): # -> 
        """ _ListBoxEvents_Event_add_KeyDown(self: ListBoxClass, : _ListBoxEvents_KeyDownEventHandler) """
        ...

    def _ListBoxEvents_Event_add_KeyPress(self): # -> 
        """ _ListBoxEvents_Event_add_KeyPress(self: ListBoxClass, : _ListBoxEvents_KeyPressEventHandler) """
        ...

    def _ListBoxEvents_Event_add_KeyUp(self): # -> 
        """ _ListBoxEvents_Event_add_KeyUp(self: ListBoxClass, : _ListBoxEvents_KeyUpEventHandler) """
        ...

    def _ListBoxEvents_Event_add_LostFocus(self): # -> 
        """ _ListBoxEvents_Event_add_LostFocus(self: ListBoxClass, : _ListBoxEvents_LostFocusEventHandler) """
        ...

    def _ListBoxEvents_Event_add_MouseDown(self): # -> 
        """ _ListBoxEvents_Event_add_MouseDown(self: ListBoxClass, : _ListBoxEvents_MouseDownEventHandler) """
        ...

    def _ListBoxEvents_Event_add_MouseMove(self): # -> 
        """ _ListBoxEvents_Event_add_MouseMove(self: ListBoxClass, : _ListBoxEvents_MouseMoveEventHandler) """
        ...

    def _ListBoxEvents_Event_add_MouseUp(self): # -> 
        """ _ListBoxEvents_Event_add_MouseUp(self: ListBoxClass, : _ListBoxEvents_MouseUpEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_AfterUpdate(self): # -> 
        """ _ListBoxEvents_Event_remove_AfterUpdate(self: ListBoxClass, : _ListBoxEvents_AfterUpdateEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _ListBoxEvents_Event_remove_BeforeUpdate(self: ListBoxClass, : _ListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_Click(self): # -> 
        """ _ListBoxEvents_Event_remove_Click(self: ListBoxClass, : _ListBoxEvents_ClickEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_DblClick(self): # -> 
        """ _ListBoxEvents_Event_remove_DblClick(self: ListBoxClass, : _ListBoxEvents_DblClickEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_Enter(self): # -> 
        """ _ListBoxEvents_Event_remove_Enter(self: ListBoxClass, : _ListBoxEvents_EnterEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_Exit(self): # -> 
        """ _ListBoxEvents_Event_remove_Exit(self: ListBoxClass, : _ListBoxEvents_ExitEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_GotFocus(self): # -> 
        """ _ListBoxEvents_Event_remove_GotFocus(self: ListBoxClass, : _ListBoxEvents_GotFocusEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_KeyDown(self): # -> 
        """ _ListBoxEvents_Event_remove_KeyDown(self: ListBoxClass, : _ListBoxEvents_KeyDownEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_KeyPress(self): # -> 
        """ _ListBoxEvents_Event_remove_KeyPress(self: ListBoxClass, : _ListBoxEvents_KeyPressEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_KeyUp(self): # -> 
        """ _ListBoxEvents_Event_remove_KeyUp(self: ListBoxClass, : _ListBoxEvents_KeyUpEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_LostFocus(self): # -> 
        """ _ListBoxEvents_Event_remove_LostFocus(self: ListBoxClass, : _ListBoxEvents_LostFocusEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_MouseDown(self): # -> 
        """ _ListBoxEvents_Event_remove_MouseDown(self: ListBoxClass, : _ListBoxEvents_MouseDownEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_MouseMove(self): # -> 
        """ _ListBoxEvents_Event_remove_MouseMove(self: ListBoxClass, : _ListBoxEvents_MouseMoveEventHandler) """
        ...

    def _ListBoxEvents_Event_remove_MouseUp(self): # -> 
        """ _ListBoxEvents_Event_remove_MouseUp(self: ListBoxClass, : _ListBoxEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispListBoxEvents_Event_AfterUpdate = ...
    DispListBoxEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _ListBoxEvents_Event_AfterUpdate = ...
    _ListBoxEvents_Event_BeforeUpdate = ...
    _ListBoxEvents_Event_Click = ...
    _ListBoxEvents_Event_DblClick = ...
    _ListBoxEvents_Event_Enter = ...
    _ListBoxEvents_Event_Exit = ...
    _ListBoxEvents_Event_GotFocus = ...
    _ListBoxEvents_Event_KeyDown = ...
    _ListBoxEvents_Event_KeyPress = ...
    _ListBoxEvents_Event_KeyUp = ...
    _ListBoxEvents_Event_LostFocus = ...
    _ListBoxEvents_Event_MouseDown = ...
    _ListBoxEvents_Event_MouseMove = ...
    _ListBoxEvents_Event_MouseUp = ...


class _LocalVar: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: _LocalVar) -> str """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _LocalVar) -> object
        Set: Value(self: _LocalVar) = value
        """
        ...

    @property
    def _Value(self) -> object:
        """
        Get: _Value(self: _LocalVar) -> object
        Set: _Value(self: _LocalVar) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _LocalVar, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class LocalVar(_LocalVar): # skipped bases: <type 'object'>
    """ no doc """
    pass

class LocalVarClass(LocalVar, __ComObject): # skipped bases: <type '_LocalVar'>, <type 'object'>
    """ LocalVarClass() """
    @property
    def Name(self) -> str:
        """ Get: Name(self: LocalVarClass) -> str """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: LocalVarClass) -> object
        Set: Value(self: LocalVarClass) = value
        """
        ...

    @property
    def _Value(self) -> object:
        """
        Get: _Value(self: LocalVarClass) -> object
        Set: _Value(self: LocalVarClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: LocalVarClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class _LocalVars(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _LocalVars) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _LocalVars) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _LocalVars) -> object """
        ...


    def Add(self, Name:str, Value:object): # -> 
        """ Add(self: _LocalVars, Name: str, Value: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _LocalVars, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class LocalVars(_LocalVars): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class LocalVarsClass(__ComObject, LocalVars): # skipped bases: <type 'IEnumerable'>, <type '_LocalVars'>, <type 'object'>
    """ LocalVarsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: LocalVarsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: LocalVarsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: LocalVarsClass) -> object """
        ...


    def Add(self, Name:str, Value:object): # -> 
        """ Add(self: LocalVarsClass, Name: str, Value: object) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: LocalVarsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: LocalVarsClass, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _MacroError: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def ActionName(self) -> str:
        """ Get: ActionName(self: _MacroError) -> str """
        ...

    @property
    def Arguments(self) -> str:
        """ Get: Arguments(self: _MacroError) -> str """
        ...

    @property
    def Condition(self) -> str:
        """ Get: Condition(self: _MacroError) -> str """
        ...

    @property
    def Description(self) -> str:
        """ Get: Description(self: _MacroError) -> str """
        ...

    @property
    def MacroName(self) -> str:
        """ Get: MacroName(self: _MacroError) -> str """
        ...

    @property
    def Number(self) -> int:
        """ Get: Number(self: _MacroError) -> int """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _MacroError, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class MacroError(_MacroError): # skipped bases: <type 'object'>
    """ no doc """
    pass

class MacroErrorClass(MacroError, __ComObject): # skipped bases: <type '_MacroError'>, <type 'object'>
    """ MacroErrorClass() """
    @property
    def ActionName(self) -> str:
        """ Get: ActionName(self: MacroErrorClass) -> str """
        ...

    @property
    def Arguments(self) -> str:
        """ Get: Arguments(self: MacroErrorClass) -> str """
        ...

    @property
    def Condition(self) -> str:
        """ Get: Condition(self: MacroErrorClass) -> str """
        ...

    @property
    def Description(self) -> str:
        """ Get: Description(self: MacroErrorClass) -> str """
        ...

    @property
    def MacroName(self) -> str:
        """ Get: MacroName(self: MacroErrorClass) -> str """
        ...

    @property
    def Number(self) -> int:
        """ Get: Number(self: MacroErrorClass) -> int """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: MacroErrorClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class Module: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Module) -> Application """
        ...

    @property
    def CountOfDeclarationLines(self) -> int:
        """ Get: CountOfDeclarationLines(self: Module) -> int """
        ...

    @property
    def CountOfLines(self) -> int:
        """ Get: CountOfLines(self: Module) -> int """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: Module) -> str
        Set: Name(self: Module) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Module) -> object """
        ...

    @property
    def Type(self) -> AcModuleType:
        """ Get: Type(self: Module) -> AcModuleType """
        ...


    def AddFromFile(self, FileName:str): # -> 
        """ AddFromFile(self: Module, FileName: str) """
        ...

    def AddFromString(self, String:str): # -> 
        """ AddFromString(self: Module, String: str) """
        ...

    def CreateEventProc(self, EventName:str, ObjectName:str) -> int:
        """ CreateEventProc(self: Module, EventName: str, ObjectName: str) -> int """
        ...

    def DeleteLines(self, StartLine:int, Count:int): # -> 
        """ DeleteLines(self: Module, StartLine: int, Count: int) """
        ...

    def Find(self, Target, StartLine, StartColumn, EndLine, EndColumn, WholeWord, MatchCase, PatternSearch) -> Tuple_[bool, int, int, int, int]:
        """ Find(self: Module, Target: str, WholeWord: bool, MatchCase: bool, PatternSearch: bool) -> (bool, int, int, int, int) """
        ...

    def InsertLines(self, Line:int, String:str): # -> 
        """ InsertLines(self: Module, Line: int, String: str) """
        ...

    def InsertText(self, Text:str): # -> 
        """ InsertText(self: Module, Text: str) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Module, dispid: int) -> bool """
        ...

    def ReplaceLine(self, Line:int, String:str): # -> 
        """ ReplaceLine(self: Module, Line: int, String: str) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class Modules(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Modules) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Modules) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Modules) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Modules, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _NavigationButton(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _NavigationButton) -> bool
        Set: AddColon(self: _NavigationButton) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _NavigationButton) -> str
        Set: AfterUpdateMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def Alignment(self) -> Byte:
        """
        Get: Alignment(self: _NavigationButton) -> Byte
        Set: Alignment(self: _NavigationButton) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _NavigationButton) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _NavigationButton) -> bool
        Set: AutoLabel(self: _NavigationButton) = value
        """
        ...

    @property
    def AutoRepeat(self) -> bool:
        """
        Get: AutoRepeat(self: _NavigationButton) -> bool
        Set: AutoRepeat(self: _NavigationButton) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _NavigationButton) -> int
        Set: BackColor(self: _NavigationButton) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _NavigationButton) -> Single
        Set: BackShade(self: _NavigationButton) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _NavigationButton) -> Byte
        Set: BackStyle(self: _NavigationButton) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _NavigationButton) -> int
        Set: BackThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _NavigationButton) -> Single
        Set: BackTint(self: _NavigationButton) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _NavigationButton) -> str
        Set: BeforeUpdateMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: _NavigationButton) -> int
        Set: Bevel(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _NavigationButton) -> int
        Set: BorderColor(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _NavigationButton) -> Single
        Set: BorderShade(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _NavigationButton) -> Byte
        Set: BorderStyle(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _NavigationButton) -> int
        Set: BorderThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _NavigationButton) -> Single
        Set: BorderTint(self: _NavigationButton) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _NavigationButton) -> Byte
        Set: BorderWidth(self: _NavigationButton) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _NavigationButton) -> Int16
        Set: BottomPadding(self: _NavigationButton) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _NavigationButton) -> str
        Set: Caption(self: _NavigationButton) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _NavigationButton) -> str
        Set: ControlName(self: _NavigationButton) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _NavigationButton) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _NavigationButton) -> str
        Set: ControlTipText(self: _NavigationButton) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _NavigationButton) -> Byte
        Set: ControlType(self: _NavigationButton) = value
        """
        ...

    @property
    def CursorOnHover(self) -> AcCursorOnHover:
        """
        Get: CursorOnHover(self: _NavigationButton) -> AcCursorOnHover
        Set: CursorOnHover(self: _NavigationButton) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _NavigationButton) -> Byte
        Set: DisplayWhen(self: _NavigationButton) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _NavigationButton) -> bool
        Set: Enabled(self: _NavigationButton) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _NavigationButton) -> str
        Set: EventProcPrefix(self: _NavigationButton) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _NavigationButton) -> Int16
        Set: FontBold(self: _NavigationButton) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _NavigationButton) -> bool
        Set: FontItalic(self: _NavigationButton) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _NavigationButton) -> str
        Set: FontName(self: _NavigationButton) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _NavigationButton) -> Int16
        Set: FontSize(self: _NavigationButton) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _NavigationButton) -> bool
        Set: FontUnderline(self: _NavigationButton) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _NavigationButton) -> Int16
        Set: FontWeight(self: _NavigationButton) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _NavigationButton) -> int
        Set: ForeColor(self: _NavigationButton) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _NavigationButton) -> Single
        Set: ForeShade(self: _NavigationButton) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _NavigationButton) -> int
        Set: ForeThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _NavigationButton) -> Single
        Set: ForeTint(self: _NavigationButton) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: _NavigationButton) -> int
        Set: Glow(self: _NavigationButton) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: _NavigationButton) -> int
        Set: Gradient(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _NavigationButton) -> int
        Set: GridlineColor(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _NavigationButton) -> Single
        Set: GridlineShade(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _NavigationButton) -> Byte
        Set: GridlineStyleBottom(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _NavigationButton) -> Byte
        Set: GridlineStyleLeft(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _NavigationButton) -> Byte
        Set: GridlineStyleRight(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _NavigationButton) -> Byte
        Set: GridlineStyleTop(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _NavigationButton) -> int
        Set: GridlineThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _NavigationButton) -> Single
        Set: GridlineTint(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _NavigationButton) -> Byte
        Set: GridlineWidthBottom(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _NavigationButton) -> Byte
        Set: GridlineWidthLeft(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _NavigationButton) -> Byte
        Set: GridlineWidthRight(self: _NavigationButton) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _NavigationButton) -> Byte
        Set: GridlineWidthTop(self: _NavigationButton) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _NavigationButton) -> Int16
        Set: Height(self: _NavigationButton) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _NavigationButton) -> int
        Set: HelpContextId(self: _NavigationButton) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _NavigationButton) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: _NavigationButton) -> int
        Set: HoverColor(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: _NavigationButton) -> int
        Set: HoverForeColor(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: _NavigationButton) -> Single
        Set: HoverForeShade(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: _NavigationButton) -> int
        Set: HoverForeThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: _NavigationButton) -> Single
        Set: HoverForeTint(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: _NavigationButton) -> Single
        Set: HoverShade(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: _NavigationButton) -> int
        Set: HoverThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: _NavigationButton) -> Single
        Set: HoverTint(self: _NavigationButton) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _NavigationButton) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: _NavigationButton) -> str
        Set: HyperlinkAddress(self: _NavigationButton) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: _NavigationButton) -> str
        Set: HyperlinkSubAddress(self: _NavigationButton) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _NavigationButton) -> bool
        Set: InSelection(self: _NavigationButton) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _NavigationButton) -> bool
        Set: IsVisible(self: _NavigationButton) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _NavigationButton) -> Byte
        Set: LabelAlign(self: _NavigationButton) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _NavigationButton) -> Int16
        Set: LabelX(self: _NavigationButton) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _NavigationButton) -> Int16
        Set: LabelY(self: _NavigationButton) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _NavigationButton) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _NavigationButton) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """ Get: Left(self: _NavigationButton) -> Int16 """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _NavigationButton) -> Int16
        Set: LeftPadding(self: _NavigationButton) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _NavigationButton) -> str
        Set: Name(self: _NavigationButton) = value
        """
        ...

    @property
    def NavigationTargetName(self) -> str:
        """
        Get: NavigationTargetName(self: _NavigationButton) -> str
        Set: NavigationTargetName(self: _NavigationButton) = value
        """
        ...

    @property
    def NavigationWhereClause(self) -> str:
        """
        Get: NavigationWhereClause(self: _NavigationButton) -> str
        Set: NavigationWhereClause(self: _NavigationButton) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _NavigationButton) -> object
        Set: ObjectPalette(self: _NavigationButton) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _NavigationButton) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _NavigationButton) -> str
        Set: OnClick(self: _NavigationButton) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _NavigationButton) -> str
        Set: OnClickMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _NavigationButton) -> str
        Set: OnDblClick(self: _NavigationButton) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _NavigationButton) -> str
        Set: OnDblClickMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _NavigationButton) -> str
        Set: OnEnter(self: _NavigationButton) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _NavigationButton) -> str
        Set: OnEnterMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _NavigationButton) -> str
        Set: OnExit(self: _NavigationButton) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _NavigationButton) -> str
        Set: OnExitMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _NavigationButton) -> str
        Set: OnGotFocus(self: _NavigationButton) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _NavigationButton) -> str
        Set: OnGotFocusMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _NavigationButton) -> str
        Set: OnKeyDown(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _NavigationButton) -> str
        Set: OnKeyDownMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _NavigationButton) -> str
        Set: OnKeyPress(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _NavigationButton) -> str
        Set: OnKeyPressMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _NavigationButton) -> str
        Set: OnKeyUp(self: _NavigationButton) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _NavigationButton) -> str
        Set: OnKeyUpMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _NavigationButton) -> str
        Set: OnLostFocus(self: _NavigationButton) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _NavigationButton) -> str
        Set: OnLostFocusMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _NavigationButton) -> str
        Set: OnMouseDown(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _NavigationButton) -> str
        Set: OnMouseDownMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _NavigationButton) -> str
        Set: OnMouseMove(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _NavigationButton) -> str
        Set: OnMouseMoveMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _NavigationButton) -> str
        Set: OnMouseUp(self: _NavigationButton) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _NavigationButton) -> str
        Set: OnMouseUpMacro(self: _NavigationButton) = value
        """
        ...

    @property
    def OnPush(self) -> str:
        """
        Get: OnPush(self: _NavigationButton) -> str
        Set: OnPush(self: _NavigationButton) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _NavigationButton) -> object """
        ...

    @property
    def ParentTab(self) -> NavigationButton:
        """ Get: ParentTab(self: _NavigationButton) -> NavigationButton """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _NavigationButton) -> str
        Set: Picture(self: _NavigationButton) = value
        """
        ...

    @property
    def PictureCaptionArrangement(self) -> AcPictureCaptionArrangement:
        """
        Get: PictureCaptionArrangement(self: _NavigationButton) -> AcPictureCaptionArrangement
        Set: PictureCaptionArrangement(self: _NavigationButton) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _NavigationButton) -> object
        Set: PictureData(self: _NavigationButton) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _NavigationButton) -> Byte
        Set: PictureType(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: _NavigationButton) -> int
        Set: PressedColor(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: _NavigationButton) -> int
        Set: PressedForeColor(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: _NavigationButton) -> Single
        Set: PressedForeShade(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: _NavigationButton) -> int
        Set: PressedForeThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: _NavigationButton) -> Single
        Set: PressedForeTint(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: _NavigationButton) -> Single
        Set: PressedShade(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: _NavigationButton) -> int
        Set: PressedThemeColorIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: _NavigationButton) -> Single
        Set: PressedTint(self: _NavigationButton) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _NavigationButton) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: _NavigationButton) -> int
        Set: QuickStyle(self: _NavigationButton) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: _NavigationButton) -> int
        Set: QuickStyleMask(self: _NavigationButton) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _NavigationButton) -> Byte
        Set: ReadingOrder(self: _NavigationButton) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _NavigationButton) -> Int16
        Set: RightPadding(self: _NavigationButton) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _NavigationButton) -> Int16
        Set: Section(self: _NavigationButton) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: _NavigationButton) -> int
        Set: Shadow(self: _NavigationButton) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: _NavigationButton) -> int
        Set: Shape(self: _NavigationButton) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _NavigationButton) -> str
        Set: ShortcutMenuBar(self: _NavigationButton) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: _NavigationButton) -> int
        Set: SoftEdges(self: _NavigationButton) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _NavigationButton) -> str
        Set: StatusBarText(self: _NavigationButton) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _NavigationButton) -> Int16
        Set: TabIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _NavigationButton) -> bool
        Set: TabStop(self: _NavigationButton) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _NavigationButton) -> str
        Set: Tag(self: _NavigationButton) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _NavigationButton) -> str
        Set: Target(self: _NavigationButton) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _NavigationButton) -> Byte
        Set: TextFontCharSet(self: _NavigationButton) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _NavigationButton) -> int
        Set: ThemeFontIndex(self: _NavigationButton) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """ Get: Top(self: _NavigationButton) -> Int16 """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _NavigationButton) -> Int16
        Set: TopPadding(self: _NavigationButton) = value
        """
        ...

    @property
    def Transparent(self) -> bool:
        """
        Get: Transparent(self: _NavigationButton) -> bool
        Set: Transparent(self: _NavigationButton) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _NavigationButton) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _NavigationButton) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _NavigationButton) -> bool
        Set: Visible(self: _NavigationButton) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _NavigationButton) -> Int16
        Set: Width(self: _NavigationButton) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _NavigationButton) -> str
        Set: _Name(self: _NavigationButton) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _NavigationButton) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _NavigationButton, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _NavigationButton, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _NavigationButton) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _NavigationButton) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _NavigationButton) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _NavigationButton, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class NavigationButton(_NavigationButton, DispNavigationButtonEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class NavigationButtonClass(NavigationButton, __ComObject): # skipped bases: <type 'DispNavigationButtonEvents_Event'>, <type 'IAccessible'>, <type '_NavigationButton'>, <type 'object'>
    """ NavigationButtonClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: NavigationButtonClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: NavigationButtonClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: NavigationButtonClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: NavigationButtonClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: NavigationButtonClass) -> bool
        Set: AddColon(self: NavigationButtonClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: NavigationButtonClass) -> str
        Set: AfterUpdateMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Alignment(self) -> Byte:
        """
        Get: Alignment(self: NavigationButtonClass) -> Byte
        Set: Alignment(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: NavigationButtonClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: NavigationButtonClass) -> bool
        Set: AutoLabel(self: NavigationButtonClass) = value
        """
        ...

    @property
    def AutoRepeat(self) -> bool:
        """
        Get: AutoRepeat(self: NavigationButtonClass) -> bool
        Set: AutoRepeat(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: NavigationButtonClass) -> int
        Set: BackColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: NavigationButtonClass) -> Single
        Set: BackShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: NavigationButtonClass) -> Byte
        Set: BackStyle(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: NavigationButtonClass) -> int
        Set: BackThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: NavigationButtonClass) -> Single
        Set: BackTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: NavigationButtonClass) -> str
        Set: BeforeUpdateMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: NavigationButtonClass) -> int
        Set: Bevel(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: NavigationButtonClass) -> int
        Set: BorderColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: NavigationButtonClass) -> Single
        Set: BorderShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: NavigationButtonClass) -> Byte
        Set: BorderStyle(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: NavigationButtonClass) -> int
        Set: BorderThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: NavigationButtonClass) -> Single
        Set: BorderTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: NavigationButtonClass) -> Byte
        Set: BorderWidth(self: NavigationButtonClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: NavigationButtonClass) -> Int16
        Set: BottomPadding(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: NavigationButtonClass) -> str
        Set: Caption(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: NavigationButtonClass) -> str
        Set: ControlName(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: NavigationButtonClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: NavigationButtonClass) -> str
        Set: ControlTipText(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: NavigationButtonClass) -> Byte
        Set: ControlType(self: NavigationButtonClass) = value
        """
        ...

    @property
    def CursorOnHover(self) -> AcCursorOnHover:
        """
        Get: CursorOnHover(self: NavigationButtonClass) -> AcCursorOnHover
        Set: CursorOnHover(self: NavigationButtonClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: NavigationButtonClass) -> Byte
        Set: DisplayWhen(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: NavigationButtonClass) -> bool
        Set: Enabled(self: NavigationButtonClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: NavigationButtonClass) -> str
        Set: EventProcPrefix(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: NavigationButtonClass) -> Int16
        Set: FontBold(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: NavigationButtonClass) -> bool
        Set: FontItalic(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: NavigationButtonClass) -> str
        Set: FontName(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: NavigationButtonClass) -> Int16
        Set: FontSize(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: NavigationButtonClass) -> bool
        Set: FontUnderline(self: NavigationButtonClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: NavigationButtonClass) -> Int16
        Set: FontWeight(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: NavigationButtonClass) -> int
        Set: ForeColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: NavigationButtonClass) -> Single
        Set: ForeShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: NavigationButtonClass) -> int
        Set: ForeThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: NavigationButtonClass) -> Single
        Set: ForeTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: NavigationButtonClass) -> int
        Set: Glow(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: NavigationButtonClass) -> int
        Set: Gradient(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: NavigationButtonClass) -> int
        Set: GridlineColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: NavigationButtonClass) -> Single
        Set: GridlineShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: NavigationButtonClass) -> Byte
        Set: GridlineStyleBottom(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: NavigationButtonClass) -> Byte
        Set: GridlineStyleLeft(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: NavigationButtonClass) -> Byte
        Set: GridlineStyleRight(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: NavigationButtonClass) -> Byte
        Set: GridlineStyleTop(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: NavigationButtonClass) -> int
        Set: GridlineThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: NavigationButtonClass) -> Single
        Set: GridlineTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: NavigationButtonClass) -> Byte
        Set: GridlineWidthBottom(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: NavigationButtonClass) -> Byte
        Set: GridlineWidthLeft(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: NavigationButtonClass) -> Byte
        Set: GridlineWidthRight(self: NavigationButtonClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: NavigationButtonClass) -> Byte
        Set: GridlineWidthTop(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: NavigationButtonClass) -> Int16
        Set: Height(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: NavigationButtonClass) -> int
        Set: HelpContextId(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: NavigationButtonClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: NavigationButtonClass) -> int
        Set: HoverColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: NavigationButtonClass) -> int
        Set: HoverForeColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: NavigationButtonClass) -> Single
        Set: HoverForeShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: NavigationButtonClass) -> int
        Set: HoverForeThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: NavigationButtonClass) -> Single
        Set: HoverForeTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: NavigationButtonClass) -> Single
        Set: HoverShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: NavigationButtonClass) -> int
        Set: HoverThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: NavigationButtonClass) -> Single
        Set: HoverTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: NavigationButtonClass) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: NavigationButtonClass) -> str
        Set: HyperlinkAddress(self: NavigationButtonClass) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: NavigationButtonClass) -> str
        Set: HyperlinkSubAddress(self: NavigationButtonClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: NavigationButtonClass) -> bool
        Set: InSelection(self: NavigationButtonClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: NavigationButtonClass) -> bool
        Set: IsVisible(self: NavigationButtonClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: NavigationButtonClass) -> Byte
        Set: LabelAlign(self: NavigationButtonClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: NavigationButtonClass) -> Int16
        Set: LabelX(self: NavigationButtonClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: NavigationButtonClass) -> Int16
        Set: LabelY(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: NavigationButtonClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: NavigationButtonClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """ Get: Left(self: NavigationButtonClass) -> Int16 """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: NavigationButtonClass) -> Int16
        Set: LeftPadding(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: NavigationButtonClass) -> str
        Set: Name(self: NavigationButtonClass) = value
        """
        ...

    @property
    def NavigationTargetName(self) -> str:
        """
        Get: NavigationTargetName(self: NavigationButtonClass) -> str
        Set: NavigationTargetName(self: NavigationButtonClass) = value
        """
        ...

    @property
    def NavigationWhereClause(self) -> str:
        """
        Get: NavigationWhereClause(self: NavigationButtonClass) -> str
        Set: NavigationWhereClause(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: NavigationButtonClass) -> object
        Set: ObjectPalette(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: NavigationButtonClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: NavigationButtonClass) -> str
        Set: OnClick(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: NavigationButtonClass) -> str
        Set: OnClickMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: NavigationButtonClass) -> str
        Set: OnDblClick(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: NavigationButtonClass) -> str
        Set: OnDblClickMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: NavigationButtonClass) -> str
        Set: OnEnter(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: NavigationButtonClass) -> str
        Set: OnEnterMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: NavigationButtonClass) -> str
        Set: OnExit(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: NavigationButtonClass) -> str
        Set: OnExitMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: NavigationButtonClass) -> str
        Set: OnGotFocus(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: NavigationButtonClass) -> str
        Set: OnGotFocusMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: NavigationButtonClass) -> str
        Set: OnKeyDown(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: NavigationButtonClass) -> str
        Set: OnKeyDownMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: NavigationButtonClass) -> str
        Set: OnKeyPress(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: NavigationButtonClass) -> str
        Set: OnKeyPressMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: NavigationButtonClass) -> str
        Set: OnKeyUp(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: NavigationButtonClass) -> str
        Set: OnKeyUpMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: NavigationButtonClass) -> str
        Set: OnLostFocus(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: NavigationButtonClass) -> str
        Set: OnLostFocusMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: NavigationButtonClass) -> str
        Set: OnMouseDown(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: NavigationButtonClass) -> str
        Set: OnMouseDownMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: NavigationButtonClass) -> str
        Set: OnMouseMove(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: NavigationButtonClass) -> str
        Set: OnMouseMoveMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: NavigationButtonClass) -> str
        Set: OnMouseUp(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: NavigationButtonClass) -> str
        Set: OnMouseUpMacro(self: NavigationButtonClass) = value
        """
        ...

    @property
    def OnPush(self) -> str:
        """
        Get: OnPush(self: NavigationButtonClass) -> str
        Set: OnPush(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: NavigationButtonClass) -> object """
        ...

    @property
    def ParentTab(self) -> NavigationButton:
        """ Get: ParentTab(self: NavigationButtonClass) -> NavigationButton """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: NavigationButtonClass) -> str
        Set: Picture(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PictureCaptionArrangement(self) -> AcPictureCaptionArrangement:
        """
        Get: PictureCaptionArrangement(self: NavigationButtonClass) -> AcPictureCaptionArrangement
        Set: PictureCaptionArrangement(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: NavigationButtonClass) -> object
        Set: PictureData(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: NavigationButtonClass) -> Byte
        Set: PictureType(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: NavigationButtonClass) -> int
        Set: PressedColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: NavigationButtonClass) -> int
        Set: PressedForeColor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: NavigationButtonClass) -> Single
        Set: PressedForeShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: NavigationButtonClass) -> int
        Set: PressedForeThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: NavigationButtonClass) -> Single
        Set: PressedForeTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: NavigationButtonClass) -> Single
        Set: PressedShade(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: NavigationButtonClass) -> int
        Set: PressedThemeColorIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: NavigationButtonClass) -> Single
        Set: PressedTint(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: NavigationButtonClass) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: NavigationButtonClass) -> int
        Set: QuickStyle(self: NavigationButtonClass) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: NavigationButtonClass) -> int
        Set: QuickStyleMask(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: NavigationButtonClass) -> Byte
        Set: ReadingOrder(self: NavigationButtonClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: NavigationButtonClass) -> Int16
        Set: RightPadding(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: NavigationButtonClass) -> Int16
        Set: Section(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: NavigationButtonClass) -> int
        Set: Shadow(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: NavigationButtonClass) -> int
        Set: Shape(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: NavigationButtonClass) -> str
        Set: ShortcutMenuBar(self: NavigationButtonClass) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: NavigationButtonClass) -> int
        Set: SoftEdges(self: NavigationButtonClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: NavigationButtonClass) -> str
        Set: StatusBarText(self: NavigationButtonClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: NavigationButtonClass) -> Int16
        Set: TabIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: NavigationButtonClass) -> bool
        Set: TabStop(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: NavigationButtonClass) -> str
        Set: Tag(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: NavigationButtonClass) -> str
        Set: Target(self: NavigationButtonClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: NavigationButtonClass) -> Byte
        Set: TextFontCharSet(self: NavigationButtonClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: NavigationButtonClass) -> int
        Set: ThemeFontIndex(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """ Get: Top(self: NavigationButtonClass) -> Int16 """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: NavigationButtonClass) -> Int16
        Set: TopPadding(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Transparent(self) -> bool:
        """
        Get: Transparent(self: NavigationButtonClass) -> bool
        Set: Transparent(self: NavigationButtonClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: NavigationButtonClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: NavigationButtonClass) -> bool
        Set: Visible(self: NavigationButtonClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: NavigationButtonClass) -> Int16
        Set: Width(self: NavigationButtonClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: NavigationButtonClass) -> str
        Set: _Name(self: NavigationButtonClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: NavigationButtonClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: NavigationButtonClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: NavigationButtonClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: NavigationButtonClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: NavigationButtonClass, flagsSelect: int, varChild: object) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: NavigationButtonClass, : DispNavigationButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: NavigationButtonClass, : DispNavigationButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: NavigationButtonClass, : DispNavigationButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: NavigationButtonClass, : DispNavigationButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: NavigationButtonClass, : DispNavigationButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: NavigationButtonClass, : DispNavigationButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseUpEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: NavigationButtonClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: NavigationButtonClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: NavigationButtonClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: NavigationButtonClass, : DispNavigationButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: NavigationButtonClass, : DispNavigationButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: NavigationButtonClass, : DispNavigationButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: NavigationButtonClass, : DispNavigationButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: NavigationButtonClass, : DispNavigationButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: NavigationButtonClass, : DispNavigationButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: NavigationButtonClass, : DispNavigationButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: NavigationButtonClass, : DispNavigationButtonEvents_MouseUpEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: NavigationButtonClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: NavigationButtonClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: NavigationButtonClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: NavigationButtonClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _NavigationControl(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: _NavigationControl) -> Byte
        Set: AllowedText(self: _NavigationControl) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _NavigationControl) -> Application """
        ...

    @property
    def AutoTab(self) -> bool:
        """
        Get: AutoTab(self: _NavigationControl) -> bool
        Set: AutoTab(self: _NavigationControl) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _NavigationControl) -> int
        Set: BackColor(self: _NavigationControl) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _NavigationControl) -> Single
        Set: BackShade(self: _NavigationControl) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _NavigationControl) -> Byte
        Set: BackStyle(self: _NavigationControl) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _NavigationControl) -> int
        Set: BackThemeColorIndex(self: _NavigationControl) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _NavigationControl) -> Single
        Set: BackTint(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _NavigationControl) -> int
        Set: BorderColor(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _NavigationControl) -> Byte
        Set: BorderLineStyle(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _NavigationControl) -> Single
        Set: BorderShade(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _NavigationControl) -> Byte
        Set: BorderStyle(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _NavigationControl) -> int
        Set: BorderThemeColorIndex(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _NavigationControl) -> Single
        Set: BorderTint(self: _NavigationControl) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _NavigationControl) -> Byte
        Set: BorderWidth(self: _NavigationControl) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _NavigationControl) -> Int16
        Set: BottomPadding(self: _NavigationControl) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _NavigationControl) -> str
        Set: ControlName(self: _NavigationControl) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _NavigationControl) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _NavigationControl) -> str
        Set: ControlTipText(self: _NavigationControl) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _NavigationControl) -> Byte
        Set: ControlType(self: _NavigationControl) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _NavigationControl) -> Byte
        Set: DisplayWhen(self: _NavigationControl) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _NavigationControl) -> bool
        Set: Enabled(self: _NavigationControl) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _NavigationControl) -> str
        Set: EventProcPrefix(self: _NavigationControl) = value
        """
        ...

    @property
    def FilterLookup(self) -> Byte:
        """
        Get: FilterLookup(self: _NavigationControl) -> Byte
        Set: FilterLookup(self: _NavigationControl) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: _NavigationControl) -> FormatConditions """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _NavigationControl) -> int
        Set: GridlineColor(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _NavigationControl) -> Single
        Set: GridlineShade(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _NavigationControl) -> Byte
        Set: GridlineStyleBottom(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _NavigationControl) -> Byte
        Set: GridlineStyleLeft(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _NavigationControl) -> Byte
        Set: GridlineStyleRight(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _NavigationControl) -> Byte
        Set: GridlineStyleTop(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _NavigationControl) -> int
        Set: GridlineThemeColorIndex(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _NavigationControl) -> Single
        Set: GridlineTint(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _NavigationControl) -> Byte
        Set: GridlineWidthBottom(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _NavigationControl) -> Byte
        Set: GridlineWidthLeft(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _NavigationControl) -> Byte
        Set: GridlineWidthRight(self: _NavigationControl) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _NavigationControl) -> Byte
        Set: GridlineWidthTop(self: _NavigationControl) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _NavigationControl) -> Int16
        Set: Height(self: _NavigationControl) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _NavigationControl) -> int
        Set: HelpContextId(self: _NavigationControl) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _NavigationControl) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _NavigationControl) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _NavigationControl) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _NavigationControl) -> bool
        Set: InSelection(self: _NavigationControl) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _NavigationControl) -> bool
        Set: IsVisible(self: _NavigationControl) = value
        """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: _NavigationControl) -> Byte
        Set: KeyboardLanguage(self: _NavigationControl) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _NavigationControl) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _NavigationControl) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _NavigationControl) -> Int16
        Set: Left(self: _NavigationControl) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _NavigationControl) -> Int16
        Set: LeftPadding(self: _NavigationControl) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: _NavigationControl) -> Int16
        Set: LineSpacing(self: _NavigationControl) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _NavigationControl) -> str
        Set: Name(self: _NavigationControl) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _NavigationControl) -> Byte
        Set: NumeralShapes(self: _NavigationControl) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _NavigationControl) -> Byte
        Set: OldBorderStyle(self: _NavigationControl) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _NavigationControl) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _NavigationControl) -> str
        Set: OnClick(self: _NavigationControl) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _NavigationControl) -> str
        Set: OnClickMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _NavigationControl) -> str
        Set: OnDblClick(self: _NavigationControl) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _NavigationControl) -> str
        Set: OnDblClickMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _NavigationControl) -> str
        Set: OnGotFocus(self: _NavigationControl) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _NavigationControl) -> str
        Set: OnGotFocusMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _NavigationControl) -> str
        Set: OnKeyDown(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _NavigationControl) -> str
        Set: OnKeyDownMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _NavigationControl) -> str
        Set: OnKeyPress(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _NavigationControl) -> str
        Set: OnKeyPressMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _NavigationControl) -> str
        Set: OnKeyUp(self: _NavigationControl) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _NavigationControl) -> str
        Set: OnKeyUpMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _NavigationControl) -> str
        Set: OnLostFocus(self: _NavigationControl) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _NavigationControl) -> str
        Set: OnLostFocusMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _NavigationControl) -> str
        Set: OnMouseDown(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _NavigationControl) -> str
        Set: OnMouseDownMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _NavigationControl) -> str
        Set: OnMouseMove(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _NavigationControl) -> str
        Set: OnMouseMoveMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _NavigationControl) -> str
        Set: OnMouseUp(self: _NavigationControl) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _NavigationControl) -> str
        Set: OnMouseUpMacro(self: _NavigationControl) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _NavigationControl) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _NavigationControl) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _NavigationControl) -> Byte
        Set: ReadingOrder(self: _NavigationControl) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _NavigationControl) -> Int16
        Set: RightPadding(self: _NavigationControl) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: _NavigationControl) -> Byte
        Set: ScrollBarAlign(self: _NavigationControl) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _NavigationControl) -> Int16
        Set: Section(self: _NavigationControl) = value
        """
        ...

    @property
    def SelectedTab(self) -> NavigationButton:
        """ Get: SelectedTab(self: _NavigationControl) -> NavigationButton """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _NavigationControl) -> str
        Set: ShortcutMenuBar(self: _NavigationControl) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _NavigationControl) -> SmartTags """
        ...

    @property
    def Span(self) -> AcNavigationSpan:
        """
        Get: Span(self: _NavigationControl) -> AcNavigationSpan
        Set: Span(self: _NavigationControl) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _NavigationControl) -> Byte
        Set: SpecialEffect(self: _NavigationControl) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _NavigationControl) -> str
        Set: StatusBarText(self: _NavigationControl) = value
        """
        ...

    @property
    def SubForm(self) -> str:
        """
        Get: SubForm(self: _NavigationControl) -> str
        Set: SubForm(self: _NavigationControl) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _NavigationControl) -> Int16
        Set: TabIndex(self: _NavigationControl) = value
        """
        ...

    @property
    def Tabs(self) -> Children:
        """ Get: Tabs(self: _NavigationControl) -> Children """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _NavigationControl) -> bool
        Set: TabStop(self: _NavigationControl) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _NavigationControl) -> str
        Set: Tag(self: _NavigationControl) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _NavigationControl) -> str
        Set: Target(self: _NavigationControl) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _NavigationControl) -> Int16
        Set: Top(self: _NavigationControl) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _NavigationControl) -> Int16
        Set: TopPadding(self: _NavigationControl) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _NavigationControl) -> object
        Set: Value(self: _NavigationControl) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _NavigationControl) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _NavigationControl) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _NavigationControl) -> bool
        Set: Visible(self: _NavigationControl) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _NavigationControl) -> Int16
        Set: Width(self: _NavigationControl) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _NavigationControl) -> str
        Set: _Name(self: _NavigationControl) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _NavigationControl) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _NavigationControl, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _NavigationControl, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _NavigationControl) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _NavigationControl) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _NavigationControl) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _NavigationControl) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _NavigationControl, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class NavigationControl(_NavigationControl, DispNavigationControlEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class NavigationControlClass(NavigationControl, __ComObject): # skipped bases: <type 'DispNavigationControlEvents_Event'>, <type 'IAccessible'>, <type '_NavigationControl'>, <type 'object'>
    """ NavigationControlClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: NavigationControlClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: NavigationControlClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: NavigationControlClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: NavigationControlClass) -> object """
        ...

    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: NavigationControlClass) -> Byte
        Set: AllowedText(self: NavigationControlClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: NavigationControlClass) -> Application """
        ...

    @property
    def AutoTab(self) -> bool:
        """
        Get: AutoTab(self: NavigationControlClass) -> bool
        Set: AutoTab(self: NavigationControlClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: NavigationControlClass) -> int
        Set: BackColor(self: NavigationControlClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: NavigationControlClass) -> Single
        Set: BackShade(self: NavigationControlClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: NavigationControlClass) -> Byte
        Set: BackStyle(self: NavigationControlClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: NavigationControlClass) -> int
        Set: BackThemeColorIndex(self: NavigationControlClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: NavigationControlClass) -> Single
        Set: BackTint(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: NavigationControlClass) -> int
        Set: BorderColor(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: NavigationControlClass) -> Byte
        Set: BorderLineStyle(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: NavigationControlClass) -> Single
        Set: BorderShade(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: NavigationControlClass) -> Byte
        Set: BorderStyle(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: NavigationControlClass) -> int
        Set: BorderThemeColorIndex(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: NavigationControlClass) -> Single
        Set: BorderTint(self: NavigationControlClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: NavigationControlClass) -> Byte
        Set: BorderWidth(self: NavigationControlClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: NavigationControlClass) -> Int16
        Set: BottomPadding(self: NavigationControlClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: NavigationControlClass) -> str
        Set: ControlName(self: NavigationControlClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: NavigationControlClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: NavigationControlClass) -> str
        Set: ControlTipText(self: NavigationControlClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: NavigationControlClass) -> Byte
        Set: ControlType(self: NavigationControlClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: NavigationControlClass) -> Byte
        Set: DisplayWhen(self: NavigationControlClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: NavigationControlClass) -> bool
        Set: Enabled(self: NavigationControlClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: NavigationControlClass) -> str
        Set: EventProcPrefix(self: NavigationControlClass) = value
        """
        ...

    @property
    def FilterLookup(self) -> Byte:
        """
        Get: FilterLookup(self: NavigationControlClass) -> Byte
        Set: FilterLookup(self: NavigationControlClass) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: NavigationControlClass) -> FormatConditions """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: NavigationControlClass) -> int
        Set: GridlineColor(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: NavigationControlClass) -> Single
        Set: GridlineShade(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: NavigationControlClass) -> Byte
        Set: GridlineStyleBottom(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: NavigationControlClass) -> Byte
        Set: GridlineStyleLeft(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: NavigationControlClass) -> Byte
        Set: GridlineStyleRight(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: NavigationControlClass) -> Byte
        Set: GridlineStyleTop(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: NavigationControlClass) -> int
        Set: GridlineThemeColorIndex(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: NavigationControlClass) -> Single
        Set: GridlineTint(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: NavigationControlClass) -> Byte
        Set: GridlineWidthBottom(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: NavigationControlClass) -> Byte
        Set: GridlineWidthLeft(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: NavigationControlClass) -> Byte
        Set: GridlineWidthRight(self: NavigationControlClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: NavigationControlClass) -> Byte
        Set: GridlineWidthTop(self: NavigationControlClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: NavigationControlClass) -> Int16
        Set: Height(self: NavigationControlClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: NavigationControlClass) -> int
        Set: HelpContextId(self: NavigationControlClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: NavigationControlClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: NavigationControlClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: NavigationControlClass) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: NavigationControlClass) -> bool
        Set: InSelection(self: NavigationControlClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: NavigationControlClass) -> bool
        Set: IsVisible(self: NavigationControlClass) = value
        """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: NavigationControlClass) -> Byte
        Set: KeyboardLanguage(self: NavigationControlClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: NavigationControlClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: NavigationControlClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: NavigationControlClass) -> Int16
        Set: Left(self: NavigationControlClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: NavigationControlClass) -> Int16
        Set: LeftPadding(self: NavigationControlClass) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: NavigationControlClass) -> Int16
        Set: LineSpacing(self: NavigationControlClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: NavigationControlClass) -> str
        Set: Name(self: NavigationControlClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: NavigationControlClass) -> Byte
        Set: NumeralShapes(self: NavigationControlClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: NavigationControlClass) -> Byte
        Set: OldBorderStyle(self: NavigationControlClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: NavigationControlClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: NavigationControlClass) -> str
        Set: OnClick(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: NavigationControlClass) -> str
        Set: OnClickMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: NavigationControlClass) -> str
        Set: OnDblClick(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: NavigationControlClass) -> str
        Set: OnDblClickMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: NavigationControlClass) -> str
        Set: OnGotFocus(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: NavigationControlClass) -> str
        Set: OnGotFocusMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: NavigationControlClass) -> str
        Set: OnKeyDown(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: NavigationControlClass) -> str
        Set: OnKeyDownMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: NavigationControlClass) -> str
        Set: OnKeyPress(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: NavigationControlClass) -> str
        Set: OnKeyPressMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: NavigationControlClass) -> str
        Set: OnKeyUp(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: NavigationControlClass) -> str
        Set: OnKeyUpMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: NavigationControlClass) -> str
        Set: OnLostFocus(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: NavigationControlClass) -> str
        Set: OnLostFocusMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: NavigationControlClass) -> str
        Set: OnMouseDown(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: NavigationControlClass) -> str
        Set: OnMouseDownMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: NavigationControlClass) -> str
        Set: OnMouseMove(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: NavigationControlClass) -> str
        Set: OnMouseMoveMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: NavigationControlClass) -> str
        Set: OnMouseUp(self: NavigationControlClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: NavigationControlClass) -> str
        Set: OnMouseUpMacro(self: NavigationControlClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: NavigationControlClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: NavigationControlClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: NavigationControlClass) -> Byte
        Set: ReadingOrder(self: NavigationControlClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: NavigationControlClass) -> Int16
        Set: RightPadding(self: NavigationControlClass) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: NavigationControlClass) -> Byte
        Set: ScrollBarAlign(self: NavigationControlClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: NavigationControlClass) -> Int16
        Set: Section(self: NavigationControlClass) = value
        """
        ...

    @property
    def SelectedTab(self) -> NavigationButton:
        """ Get: SelectedTab(self: NavigationControlClass) -> NavigationButton """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: NavigationControlClass) -> str
        Set: ShortcutMenuBar(self: NavigationControlClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: NavigationControlClass) -> SmartTags """
        ...

    @property
    def Span(self) -> AcNavigationSpan:
        """
        Get: Span(self: NavigationControlClass) -> AcNavigationSpan
        Set: Span(self: NavigationControlClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: NavigationControlClass) -> Byte
        Set: SpecialEffect(self: NavigationControlClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: NavigationControlClass) -> str
        Set: StatusBarText(self: NavigationControlClass) = value
        """
        ...

    @property
    def SubForm(self) -> str:
        """
        Get: SubForm(self: NavigationControlClass) -> str
        Set: SubForm(self: NavigationControlClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: NavigationControlClass) -> Int16
        Set: TabIndex(self: NavigationControlClass) = value
        """
        ...

    @property
    def Tabs(self) -> Children:
        """ Get: Tabs(self: NavigationControlClass) -> Children """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: NavigationControlClass) -> bool
        Set: TabStop(self: NavigationControlClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: NavigationControlClass) -> str
        Set: Tag(self: NavigationControlClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: NavigationControlClass) -> str
        Set: Target(self: NavigationControlClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: NavigationControlClass) -> Int16
        Set: Top(self: NavigationControlClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: NavigationControlClass) -> Int16
        Set: TopPadding(self: NavigationControlClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: NavigationControlClass) -> object
        Set: Value(self: NavigationControlClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: NavigationControlClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: NavigationControlClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: NavigationControlClass) -> bool
        Set: Visible(self: NavigationControlClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: NavigationControlClass) -> Int16
        Set: Width(self: NavigationControlClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: NavigationControlClass) -> str
        Set: _Name(self: NavigationControlClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: NavigationControlClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: NavigationControlClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: NavigationControlClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: NavigationControlClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: NavigationControlClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: NavigationControlClass, : DispNavigationControlEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: NavigationControlClass, : DispNavigationControlEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: NavigationControlClass, : DispNavigationControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: NavigationControlClass, : DispNavigationControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: NavigationControlClass, : DispNavigationControlEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: NavigationControlClass, : DispNavigationControlEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: NavigationControlClass, : DispNavigationControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: NavigationControlClass, : DispNavigationControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: NavigationControlClass, : DispNavigationControlEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: NavigationControlClass, : DispNavigationControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: NavigationControlClass, : DispNavigationControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: NavigationControlClass, : DispNavigationControlEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: NavigationControlClass, : DispNavigationControlEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: NavigationControlClass, : DispNavigationControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: NavigationControlClass, : DispNavigationControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: NavigationControlClass, : DispNavigationControlEvents_MouseUpEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: NavigationControlClass, : DispNavigationControlEvents_UndoEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: NavigationControlClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: NavigationControlClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: NavigationControlClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: NavigationControlClass, : DispNavigationControlEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: NavigationControlClass, : DispNavigationControlEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: NavigationControlClass, : DispNavigationControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: NavigationControlClass, : DispNavigationControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: NavigationControlClass, : DispNavigationControlEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: NavigationControlClass, : DispNavigationControlEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: NavigationControlClass, : DispNavigationControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: NavigationControlClass, : DispNavigationControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: NavigationControlClass, : DispNavigationControlEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: NavigationControlClass, : DispNavigationControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: NavigationControlClass, : DispNavigationControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: NavigationControlClass, : DispNavigationControlEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: NavigationControlClass, : DispNavigationControlEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: NavigationControlClass, : DispNavigationControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: NavigationControlClass, : DispNavigationControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: NavigationControlClass, : DispNavigationControlEvents_MouseUpEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: NavigationControlClass, : DispNavigationControlEvents_UndoEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: NavigationControlClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: NavigationControlClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: NavigationControlClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: NavigationControlClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: NavigationControlClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DispNavigationControlEvents_Event_Undo = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _ObjectFrame(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Action(self) -> Int16:
        """
        Get: Action(self: _ObjectFrame) -> Int16
        Set: Action(self: _ObjectFrame) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _ObjectFrame) -> str
        Set: AfterUpdateMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ObjectFrame) -> Application """
        ...

    @property
    def AutoActivate(self) -> Int16:
        """
        Get: AutoActivate(self: _ObjectFrame) -> Int16
        Set: AutoActivate(self: _ObjectFrame) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _ObjectFrame) -> int
        Set: BackColor(self: _ObjectFrame) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _ObjectFrame) -> Single
        Set: BackShade(self: _ObjectFrame) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _ObjectFrame) -> Byte
        Set: BackStyle(self: _ObjectFrame) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _ObjectFrame) -> int
        Set: BackThemeColorIndex(self: _ObjectFrame) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _ObjectFrame) -> Single
        Set: BackTint(self: _ObjectFrame) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _ObjectFrame) -> str
        Set: BeforeUpdateMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _ObjectFrame) -> int
        Set: BorderColor(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _ObjectFrame) -> Byte
        Set: BorderLineStyle(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _ObjectFrame) -> Single
        Set: BorderShade(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _ObjectFrame) -> Byte
        Set: BorderStyle(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _ObjectFrame) -> int
        Set: BorderThemeColorIndex(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _ObjectFrame) -> Single
        Set: BorderTint(self: _ObjectFrame) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _ObjectFrame) -> Byte
        Set: BorderWidth(self: _ObjectFrame) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ObjectFrame) -> Int16
        Set: BottomPadding(self: _ObjectFrame) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: _ObjectFrame) -> str
        Set: Class(self: _ObjectFrame) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: _ObjectFrame) -> Int16
        Set: ColumnCount(self: _ObjectFrame) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: _ObjectFrame) -> bool
        Set: ColumnHeads(self: _ObjectFrame) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _ObjectFrame) -> str
        Set: ControlName(self: _ObjectFrame) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _ObjectFrame) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _ObjectFrame) -> str
        Set: ControlTipText(self: _ObjectFrame) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _ObjectFrame) -> Byte
        Set: ControlType(self: _ObjectFrame) = value
        """
        ...

    @property
    def Data(self) -> Int16:
        """
        Get: Data(self: _ObjectFrame) -> Int16
        Set: Data(self: _ObjectFrame) = value
        """
        ...

    @property
    def DisplayType(self) -> bool:
        """
        Get: DisplayType(self: _ObjectFrame) -> bool
        Set: DisplayType(self: _ObjectFrame) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _ObjectFrame) -> Byte
        Set: DisplayWhen(self: _ObjectFrame) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _ObjectFrame) -> bool
        Set: Enabled(self: _ObjectFrame) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _ObjectFrame) -> str
        Set: EventProcPrefix(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ObjectFrame) -> int
        Set: GridlineColor(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _ObjectFrame) -> Single
        Set: GridlineShade(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ObjectFrame) -> Byte
        Set: GridlineStyleBottom(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ObjectFrame) -> Byte
        Set: GridlineStyleLeft(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ObjectFrame) -> Byte
        Set: GridlineStyleRight(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ObjectFrame) -> Byte
        Set: GridlineStyleTop(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _ObjectFrame) -> int
        Set: GridlineThemeColorIndex(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _ObjectFrame) -> Single
        Set: GridlineTint(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ObjectFrame) -> Byte
        Set: GridlineWidthBottom(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ObjectFrame) -> Byte
        Set: GridlineWidthLeft(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ObjectFrame) -> Byte
        Set: GridlineWidthRight(self: _ObjectFrame) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ObjectFrame) -> Byte
        Set: GridlineWidthTop(self: _ObjectFrame) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _ObjectFrame) -> Int16
        Set: Height(self: _ObjectFrame) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _ObjectFrame) -> int
        Set: HelpContextId(self: _ObjectFrame) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ObjectFrame) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ObjectFrame) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _ObjectFrame) -> bool
        Set: InSelection(self: _ObjectFrame) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _ObjectFrame) -> bool
        Set: IsVisible(self: _ObjectFrame) = value
        """
        ...

    @property
    def Item(self) -> str:
        """
        Get: Item(self: _ObjectFrame) -> str
        Set: Item(self: _ObjectFrame) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ObjectFrame) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ObjectFrame) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _ObjectFrame) -> Int16
        Set: Left(self: _ObjectFrame) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ObjectFrame) -> Int16
        Set: LeftPadding(self: _ObjectFrame) = value
        """
        ...

    @property
    def LinkChildFields(self) -> str:
        """
        Get: LinkChildFields(self: _ObjectFrame) -> str
        Set: LinkChildFields(self: _ObjectFrame) = value
        """
        ...

    @property
    def LinkMasterFields(self) -> str:
        """
        Get: LinkMasterFields(self: _ObjectFrame) -> str
        Set: LinkMasterFields(self: _ObjectFrame) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _ObjectFrame) -> bool
        Set: Locked(self: _ObjectFrame) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: _ObjectFrame) -> int
        Set: LpOleObject(self: _ObjectFrame) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ObjectFrame) -> str
        Set: Name(self: _ObjectFrame) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _ObjectFrame) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _ObjectFrame) -> object
        Set: ObjectPalette(self: _ObjectFrame) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: _ObjectFrame) -> int
        Set: ObjectVerbsCount(self: _ObjectFrame) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _ObjectFrame) -> Byte
        Set: OldBorderStyle(self: _ObjectFrame) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _ObjectFrame) -> object """
        ...

    @property
    def OLEClass(self) -> str:
        """
        Get: OLEClass(self: _ObjectFrame) -> str
        Set: OLEClass(self: _ObjectFrame) = value
        """
        ...

    @property
    def OleData(self) -> object:
        """
        Get: OleData(self: _ObjectFrame) -> object
        Set: OleData(self: _ObjectFrame) = value
        """
        ...

    @property
    def OLEType(self) -> Byte:
        """
        Get: OLEType(self: _ObjectFrame) -> Byte
        Set: OLEType(self: _ObjectFrame) = value
        """
        ...

    @property
    def OLETypeAllowed(self) -> Byte:
        """
        Get: OLETypeAllowed(self: _ObjectFrame) -> Byte
        Set: OLETypeAllowed(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _ObjectFrame) -> str
        Set: OnClick(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _ObjectFrame) -> str
        Set: OnClickMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _ObjectFrame) -> str
        Set: OnDblClick(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _ObjectFrame) -> str
        Set: OnDblClickMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _ObjectFrame) -> str
        Set: OnEnter(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _ObjectFrame) -> str
        Set: OnEnterMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _ObjectFrame) -> str
        Set: OnExit(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _ObjectFrame) -> str
        Set: OnExitMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _ObjectFrame) -> str
        Set: OnGotFocus(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _ObjectFrame) -> str
        Set: OnGotFocusMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _ObjectFrame) -> str
        Set: OnLostFocus(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _ObjectFrame) -> str
        Set: OnLostFocusMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _ObjectFrame) -> str
        Set: OnMouseDown(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _ObjectFrame) -> str
        Set: OnMouseDownMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _ObjectFrame) -> str
        Set: OnMouseMove(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _ObjectFrame) -> str
        Set: OnMouseMoveMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _ObjectFrame) -> str
        Set: OnMouseUp(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _ObjectFrame) -> str
        Set: OnMouseUpMacro(self: _ObjectFrame) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: _ObjectFrame) -> str
        Set: OnUpdated(self: _ObjectFrame) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ObjectFrame) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ObjectFrame) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ObjectFrame) -> Int16
        Set: RightPadding(self: _ObjectFrame) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: _ObjectFrame) -> str
        Set: RowSource(self: _ObjectFrame) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: _ObjectFrame) -> str
        Set: RowSourceType(self: _ObjectFrame) = value
        """
        ...

    @property
    def Scaling(self) -> Byte:
        """
        Get: Scaling(self: _ObjectFrame) -> Byte
        Set: Scaling(self: _ObjectFrame) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _ObjectFrame) -> Int16
        Set: Section(self: _ObjectFrame) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _ObjectFrame) -> str
        Set: ShortcutMenuBar(self: _ObjectFrame) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: _ObjectFrame) -> Byte
        Set: SizeMode(self: _ObjectFrame) = value
        """
        ...

    @property
    def SourceDoc(self) -> str:
        """
        Get: SourceDoc(self: _ObjectFrame) -> str
        Set: SourceDoc(self: _ObjectFrame) = value
        """
        ...

    @property
    def SourceItem(self) -> str:
        """
        Get: SourceItem(self: _ObjectFrame) -> str
        Set: SourceItem(self: _ObjectFrame) = value
        """
        ...

    @property
    def SourceObject(self) -> str:
        """
        Get: SourceObject(self: _ObjectFrame) -> str
        Set: SourceObject(self: _ObjectFrame) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _ObjectFrame) -> Byte
        Set: SpecialEffect(self: _ObjectFrame) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _ObjectFrame) -> str
        Set: StatusBarText(self: _ObjectFrame) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _ObjectFrame) -> Int16
        Set: TabIndex(self: _ObjectFrame) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _ObjectFrame) -> bool
        Set: TabStop(self: _ObjectFrame) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _ObjectFrame) -> str
        Set: Tag(self: _ObjectFrame) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _ObjectFrame) -> Int16
        Set: Top(self: _ObjectFrame) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ObjectFrame) -> Int16
        Set: TopPadding(self: _ObjectFrame) = value
        """
        ...

    @property
    def UpdateMethod(self) -> Int16:
        """
        Get: UpdateMethod(self: _ObjectFrame) -> Int16
        Set: UpdateMethod(self: _ObjectFrame) = value
        """
        ...

    @property
    def UpdateOptions(self) -> Int16:
        """
        Get: UpdateOptions(self: _ObjectFrame) -> Int16
        Set: UpdateOptions(self: _ObjectFrame) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: _ObjectFrame) -> object
        Set: VarOleObject(self: _ObjectFrame) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: _ObjectFrame) -> int
        Set: Verb(self: _ObjectFrame) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ObjectFrame) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ObjectFrame) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _ObjectFrame) -> bool
        Set: Visible(self: _ObjectFrame) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _ObjectFrame) -> Int16
        Set: Width(self: _ObjectFrame) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ObjectFrame) -> str
        Set: _Name(self: _ObjectFrame) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _ObjectFrame) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ObjectFrame, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ObjectFrame, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _ObjectFrame) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _ObjectFrame) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ObjectFrame) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ObjectFrame, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class ObjectFrame(DispObjectFrameEvents_Event, _ObjectFrame): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class ObjectFrameClass(_ObjectFrameEvents_Event, __ComObject, ObjectFrame): # skipped bases: <type 'DispObjectFrameEvents_Event'>, <type '_ObjectFrame'>, <type 'IAccessible'>, <type 'object'>
    """ ObjectFrameClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: ObjectFrameClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: ObjectFrameClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: ObjectFrameClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: ObjectFrameClass) -> object """
        ...

    @property
    def Action(self) -> Int16:
        """
        Get: Action(self: ObjectFrameClass) -> Int16
        Set: Action(self: ObjectFrameClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: ObjectFrameClass) -> str
        Set: AfterUpdateMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ObjectFrameClass) -> Application """
        ...

    @property
    def AutoActivate(self) -> Int16:
        """
        Get: AutoActivate(self: ObjectFrameClass) -> Int16
        Set: AutoActivate(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: ObjectFrameClass) -> int
        Set: BackColor(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: ObjectFrameClass) -> Single
        Set: BackShade(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: ObjectFrameClass) -> Byte
        Set: BackStyle(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: ObjectFrameClass) -> int
        Set: BackThemeColorIndex(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: ObjectFrameClass) -> Single
        Set: BackTint(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: ObjectFrameClass) -> str
        Set: BeforeUpdateMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: ObjectFrameClass) -> int
        Set: BorderColor(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: ObjectFrameClass) -> Byte
        Set: BorderLineStyle(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: ObjectFrameClass) -> Single
        Set: BorderShade(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ObjectFrameClass) -> Byte
        Set: BorderStyle(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: ObjectFrameClass) -> int
        Set: BorderThemeColorIndex(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: ObjectFrameClass) -> Single
        Set: BorderTint(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: ObjectFrameClass) -> Byte
        Set: BorderWidth(self: ObjectFrameClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ObjectFrameClass) -> Int16
        Set: BottomPadding(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: ObjectFrameClass) -> str
        Set: Class(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ColumnCount(self) -> Int16:
        """
        Get: ColumnCount(self: ObjectFrameClass) -> Int16
        Set: ColumnCount(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ColumnHeads(self) -> bool:
        """
        Get: ColumnHeads(self: ObjectFrameClass) -> bool
        Set: ColumnHeads(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: ObjectFrameClass) -> str
        Set: ControlName(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ObjectFrameClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: ObjectFrameClass) -> str
        Set: ControlTipText(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: ObjectFrameClass) -> Byte
        Set: ControlType(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Data(self) -> Int16:
        """
        Get: Data(self: ObjectFrameClass) -> Int16
        Set: Data(self: ObjectFrameClass) = value
        """
        ...

    @property
    def DisplayType(self) -> bool:
        """
        Get: DisplayType(self: ObjectFrameClass) -> bool
        Set: DisplayType(self: ObjectFrameClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: ObjectFrameClass) -> Byte
        Set: DisplayWhen(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: ObjectFrameClass) -> bool
        Set: Enabled(self: ObjectFrameClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: ObjectFrameClass) -> str
        Set: EventProcPrefix(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ObjectFrameClass) -> int
        Set: GridlineColor(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: ObjectFrameClass) -> Single
        Set: GridlineShade(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ObjectFrameClass) -> Byte
        Set: GridlineStyleBottom(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ObjectFrameClass) -> Byte
        Set: GridlineStyleLeft(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ObjectFrameClass) -> Byte
        Set: GridlineStyleRight(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ObjectFrameClass) -> Byte
        Set: GridlineStyleTop(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: ObjectFrameClass) -> int
        Set: GridlineThemeColorIndex(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: ObjectFrameClass) -> Single
        Set: GridlineTint(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ObjectFrameClass) -> Byte
        Set: GridlineWidthBottom(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ObjectFrameClass) -> Byte
        Set: GridlineWidthLeft(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ObjectFrameClass) -> Byte
        Set: GridlineWidthRight(self: ObjectFrameClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ObjectFrameClass) -> Byte
        Set: GridlineWidthTop(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: ObjectFrameClass) -> Int16
        Set: Height(self: ObjectFrameClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ObjectFrameClass) -> int
        Set: HelpContextId(self: ObjectFrameClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ObjectFrameClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ObjectFrameClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: ObjectFrameClass) -> bool
        Set: InSelection(self: ObjectFrameClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: ObjectFrameClass) -> bool
        Set: IsVisible(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Item(self) -> str:
        """
        Get: Item(self: ObjectFrameClass) -> str
        Set: Item(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ObjectFrameClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ObjectFrameClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: ObjectFrameClass) -> Int16
        Set: Left(self: ObjectFrameClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ObjectFrameClass) -> Int16
        Set: LeftPadding(self: ObjectFrameClass) = value
        """
        ...

    @property
    def LinkChildFields(self) -> str:
        """
        Get: LinkChildFields(self: ObjectFrameClass) -> str
        Set: LinkChildFields(self: ObjectFrameClass) = value
        """
        ...

    @property
    def LinkMasterFields(self) -> str:
        """
        Get: LinkMasterFields(self: ObjectFrameClass) -> str
        Set: LinkMasterFields(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: ObjectFrameClass) -> bool
        Set: Locked(self: ObjectFrameClass) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: ObjectFrameClass) -> int
        Set: LpOleObject(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ObjectFrameClass) -> str
        Set: Name(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: ObjectFrameClass) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: ObjectFrameClass) -> object
        Set: ObjectPalette(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: ObjectFrameClass) -> int
        Set: ObjectVerbsCount(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: ObjectFrameClass) -> Byte
        Set: OldBorderStyle(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ObjectFrameClass) -> object """
        ...

    @property
    def OLEClass(self) -> str:
        """
        Get: OLEClass(self: ObjectFrameClass) -> str
        Set: OLEClass(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OleData(self) -> object:
        """
        Get: OleData(self: ObjectFrameClass) -> object
        Set: OleData(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OLEType(self) -> Byte:
        """
        Get: OLEType(self: ObjectFrameClass) -> Byte
        Set: OLEType(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OLETypeAllowed(self) -> Byte:
        """
        Get: OLETypeAllowed(self: ObjectFrameClass) -> Byte
        Set: OLETypeAllowed(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ObjectFrameClass) -> str
        Set: OnClick(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ObjectFrameClass) -> str
        Set: OnClickMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ObjectFrameClass) -> str
        Set: OnDblClick(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ObjectFrameClass) -> str
        Set: OnDblClickMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: ObjectFrameClass) -> str
        Set: OnEnter(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: ObjectFrameClass) -> str
        Set: OnEnterMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: ObjectFrameClass) -> str
        Set: OnExit(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: ObjectFrameClass) -> str
        Set: OnExitMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: ObjectFrameClass) -> str
        Set: OnGotFocus(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: ObjectFrameClass) -> str
        Set: OnGotFocusMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: ObjectFrameClass) -> str
        Set: OnLostFocus(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: ObjectFrameClass) -> str
        Set: OnLostFocusMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ObjectFrameClass) -> str
        Set: OnMouseDown(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ObjectFrameClass) -> str
        Set: OnMouseDownMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ObjectFrameClass) -> str
        Set: OnMouseMove(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ObjectFrameClass) -> str
        Set: OnMouseMoveMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ObjectFrameClass) -> str
        Set: OnMouseUp(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ObjectFrameClass) -> str
        Set: OnMouseUpMacro(self: ObjectFrameClass) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: ObjectFrameClass) -> str
        Set: OnUpdated(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ObjectFrameClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ObjectFrameClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ObjectFrameClass) -> Int16
        Set: RightPadding(self: ObjectFrameClass) = value
        """
        ...

    @property
    def RowSource(self) -> str:
        """
        Get: RowSource(self: ObjectFrameClass) -> str
        Set: RowSource(self: ObjectFrameClass) = value
        """
        ...

    @property
    def RowSourceType(self) -> str:
        """
        Get: RowSourceType(self: ObjectFrameClass) -> str
        Set: RowSourceType(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Scaling(self) -> Byte:
        """
        Get: Scaling(self: ObjectFrameClass) -> Byte
        Set: Scaling(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: ObjectFrameClass) -> Int16
        Set: Section(self: ObjectFrameClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ObjectFrameClass) -> str
        Set: ShortcutMenuBar(self: ObjectFrameClass) = value
        """
        ...

    @property
    def SizeMode(self) -> Byte:
        """
        Get: SizeMode(self: ObjectFrameClass) -> Byte
        Set: SizeMode(self: ObjectFrameClass) = value
        """
        ...

    @property
    def SourceDoc(self) -> str:
        """
        Get: SourceDoc(self: ObjectFrameClass) -> str
        Set: SourceDoc(self: ObjectFrameClass) = value
        """
        ...

    @property
    def SourceItem(self) -> str:
        """
        Get: SourceItem(self: ObjectFrameClass) -> str
        Set: SourceItem(self: ObjectFrameClass) = value
        """
        ...

    @property
    def SourceObject(self) -> str:
        """
        Get: SourceObject(self: ObjectFrameClass) -> str
        Set: SourceObject(self: ObjectFrameClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: ObjectFrameClass) -> Byte
        Set: SpecialEffect(self: ObjectFrameClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: ObjectFrameClass) -> str
        Set: StatusBarText(self: ObjectFrameClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: ObjectFrameClass) -> Int16
        Set: TabIndex(self: ObjectFrameClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: ObjectFrameClass) -> bool
        Set: TabStop(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ObjectFrameClass) -> str
        Set: Tag(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: ObjectFrameClass) -> Int16
        Set: Top(self: ObjectFrameClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ObjectFrameClass) -> Int16
        Set: TopPadding(self: ObjectFrameClass) = value
        """
        ...

    @property
    def UpdateMethod(self) -> Int16:
        """
        Get: UpdateMethod(self: ObjectFrameClass) -> Int16
        Set: UpdateMethod(self: ObjectFrameClass) = value
        """
        ...

    @property
    def UpdateOptions(self) -> Int16:
        """
        Get: UpdateOptions(self: ObjectFrameClass) -> Int16
        Set: UpdateOptions(self: ObjectFrameClass) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: ObjectFrameClass) -> object
        Set: VarOleObject(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: ObjectFrameClass) -> int
        Set: Verb(self: ObjectFrameClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ObjectFrameClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ObjectFrameClass) -> bool
        Set: Visible(self: ObjectFrameClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ObjectFrameClass) -> Int16
        Set: Width(self: ObjectFrameClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ObjectFrameClass) -> str
        Set: _Name(self: ObjectFrameClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: ObjectFrameClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: ObjectFrameClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: ObjectFrameClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: ObjectFrameClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: ObjectFrameClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: ObjectFrameClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ObjectFrameClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ObjectFrameClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ObjectFrameClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ObjectFrameClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ObjectFrameClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ObjectFrameClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ObjectFrameEvents_Event_add_Click(self): # -> 
        """ _ObjectFrameEvents_Event_add_Click(self: ObjectFrameClass, : _ObjectFrameEvents_ClickEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_DblClick(self): # -> 
        """ _ObjectFrameEvents_Event_add_DblClick(self: ObjectFrameClass, : _ObjectFrameEvents_DblClickEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_Enter(self): # -> 
        """ _ObjectFrameEvents_Event_add_Enter(self: ObjectFrameClass, : _ObjectFrameEvents_EnterEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_Exit(self): # -> 
        """ _ObjectFrameEvents_Event_add_Exit(self: ObjectFrameClass, : _ObjectFrameEvents_ExitEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_GotFocus(self): # -> 
        """ _ObjectFrameEvents_Event_add_GotFocus(self: ObjectFrameClass, : _ObjectFrameEvents_GotFocusEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_LostFocus(self): # -> 
        """ _ObjectFrameEvents_Event_add_LostFocus(self: ObjectFrameClass, : _ObjectFrameEvents_LostFocusEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_MouseDown(self): # -> 
        """ _ObjectFrameEvents_Event_add_MouseDown(self: ObjectFrameClass, : _ObjectFrameEvents_MouseDownEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_MouseMove(self): # -> 
        """ _ObjectFrameEvents_Event_add_MouseMove(self: ObjectFrameClass, : _ObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_MouseUp(self): # -> 
        """ _ObjectFrameEvents_Event_add_MouseUp(self: ObjectFrameClass, : _ObjectFrameEvents_MouseUpEventHandler) """
        ...

    def _ObjectFrameEvents_Event_add_Updated(self): # -> 
        """ _ObjectFrameEvents_Event_add_Updated(self: ObjectFrameClass, : _ObjectFrameEvents_UpdatedEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_Click(self): # -> 
        """ _ObjectFrameEvents_Event_remove_Click(self: ObjectFrameClass, : _ObjectFrameEvents_ClickEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_DblClick(self): # -> 
        """ _ObjectFrameEvents_Event_remove_DblClick(self: ObjectFrameClass, : _ObjectFrameEvents_DblClickEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_Enter(self): # -> 
        """ _ObjectFrameEvents_Event_remove_Enter(self: ObjectFrameClass, : _ObjectFrameEvents_EnterEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_Exit(self): # -> 
        """ _ObjectFrameEvents_Event_remove_Exit(self: ObjectFrameClass, : _ObjectFrameEvents_ExitEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_GotFocus(self): # -> 
        """ _ObjectFrameEvents_Event_remove_GotFocus(self: ObjectFrameClass, : _ObjectFrameEvents_GotFocusEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_LostFocus(self): # -> 
        """ _ObjectFrameEvents_Event_remove_LostFocus(self: ObjectFrameClass, : _ObjectFrameEvents_LostFocusEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_MouseDown(self): # -> 
        """ _ObjectFrameEvents_Event_remove_MouseDown(self: ObjectFrameClass, : _ObjectFrameEvents_MouseDownEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_MouseMove(self): # -> 
        """ _ObjectFrameEvents_Event_remove_MouseMove(self: ObjectFrameClass, : _ObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_MouseUp(self): # -> 
        """ _ObjectFrameEvents_Event_remove_MouseUp(self: ObjectFrameClass, : _ObjectFrameEvents_MouseUpEventHandler) """
        ...

    def _ObjectFrameEvents_Event_remove_Updated(self): # -> 
        """ _ObjectFrameEvents_Event_remove_Updated(self: ObjectFrameClass, : _ObjectFrameEvents_UpdatedEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...
    _ObjectFrameEvents_Event_Click = ...
    _ObjectFrameEvents_Event_DblClick = ...
    _ObjectFrameEvents_Event_Enter = ...
    _ObjectFrameEvents_Event_Exit = ...
    _ObjectFrameEvents_Event_GotFocus = ...
    _ObjectFrameEvents_Event_LostFocus = ...
    _ObjectFrameEvents_Event_MouseDown = ...
    _ObjectFrameEvents_Event_MouseMove = ...
    _ObjectFrameEvents_Event_MouseUp = ...
    _ObjectFrameEvents_Event_Updated = ...


class OldConstants: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    ALT_MASK: Int16 = ...
    A_ADD: Int16 = ...
    A_ALL: Int16 = ...
    A_ANYWHERE: Int16 = ...
    A_ATTACH: Int16 = ...
    A_COPY: Int16 = ...
    A_CURRENT: Int16 = ...
    A_CUT: Int16 = ...
    A_DELETE: Int16 = ...
    A_DELETE_V2: Int16 = ...
    A_DESIGN: Int16 = ...
    A_DIALOG: Int16 = ...
    A_DOWN: Int16 = ...
    A_DRAFT: Int16 = ...
    A_EDIT: Int16 = ...
    A_EDITMENU: Int16 = ...
    A_ENTIRE: Int16 = ...
    A_EXIT: Int16 = ...
    A_EXPORT: Int16 = ...
    A_EXPORTDELIM: Int16 = ...
    A_EXPORTFIXED: Int16 = ...
    A_EXPORTMERGE: Int16 = ...
    A_FILE: Int16 = ...
    A_FIRST: Int16 = ...
    A_FORM: Int16 = ...
    A_FORMATRTF: str = ...
    A_FORMATTXT: str = ...
    A_FORMATXLS: str = ...
    A_FORMBAR: Int16 = ...
    A_FORMDS: Int16 = ...
    A_GOTO: Int16 = ...
    A_HIDDEN: Int16 = ...
    A_HIGH: Int16 = ...
    A_ICON: Int16 = ...
    A_IMPORT: Int16 = ...
    A_IMPORTDELIM: Int16 = ...
    A_IMPORTFIXED: Int16 = ...
    A_LAST: Int16 = ...
    A_LOW: Int16 = ...
    A_MACRO: Int16 = ...
    A_MEDIUM: Int16 = ...
    A_MENU_VER1X: Int16 = ...
    A_MENU_VER20: Int16 = ...
    A_MODULE: Int16 = ...
    A_NEW: Int16 = ...
    A_NEWREC: Int16 = ...
    A_NEXT: Int16 = ...
    A_NORMAL: Int16 = ...
    A_OBJECT: Int16 = ...
    A_OBJECTUPDATE: Int16 = ...
    A_OBJECTVERB: Int16 = ...
    A_PAGES: Int16 = ...
    A_PASTE: Int16 = ...
    A_PREVIEW: Int16 = ...
    A_PREVIOUS: Int16 = ...
    A_PRINTALL: Int16 = ...
    A_PROMPT: Int16 = ...
    A_QUERY: Int16 = ...
    A_READONLY: Int16 = ...
    A_RECORDSMENU: Int16 = ...
    A_REFRESH: Int16 = ...
    A_REPORT: Int16 = ...
    A_SAVE: Int16 = ...
    A_SAVEFORM: Int16 = ...
    A_SAVEFORMAS: Int16 = ...
    A_SAVERECORD: Int16 = ...
    A_SELECTALLRECORDS: Int16 = ...
    A_SELECTALLRECORDS_V2: Int16 = ...
    A_SELECTION: Int16 = ...
    A_SELECTRECORD: Int16 = ...
    A_SELECTRECORD_V2: Int16 = ...
    A_START: Int16 = ...
    A_TABLE: Int16 = ...
    A_TOOLBAR_NO: Int16 = ...
    A_TOOLBAR_WHERE_APPROP: Int16 = ...
    A_TOOLBAR_YES: Int16 = ...
    A_UNDO: Int16 = ...
    A_UNDOFIELD: Int16 = ...
    A_UP: Int16 = ...
    CTRL_MASK: Int16 = ...
    DATA_ERRADDED: Int16 = ...
    DATA_ERRCONTINUE: Int16 = ...
    DATA_ERRDISPLAY: Int16 = ...
    DB_APPENDONLY: int = ...
    DB_ATTACHEDODBC: int = ...
    DB_ATTACHEDTABLE: int = ...
    DB_ATTACHEXCLUSIVE: int = ...
    DB_ATTACHSAVEPWD: int = ...
    DB_AUTOINCRFIELD: int = ...
    DB_BINARY: Int16 = ...
    DB_BOOLEAN: int = ...
    DB_BYTE: int = ...
    DB_CONSISTENT: int = ...
    DB_CURRENCY: int = ...
    DB_DATE: int = ...
    DB_DECRYPT: int = ...
    DB_DENYREAD: int = ...
    DB_DENYWRITE: int = ...
    DB_DESCENDING: int = ...
    DB_DOUBLE: int = ...
    DB_ENCRYPT: int = ...
    DB_FAILONERROR: int = ...
    DB_FIXEDFIELD: int = ...
    DB_FORWARDONLY: int = ...
    DB_FREELOCKS: int = ...
    DB_HIDDENOBJECT: int = ...
    DB_IGNORENULL: int = ...
    DB_INCONSISTENT: int = ...
    DB_INTEGER: int = ...
    DB_LANG_ARABIC: str = ...
    DB_LANG_CYRILLIC: str = ...
    DB_LANG_CZECH: str = ...
    DB_LANG_DUTCH: str = ...
    DB_LANG_GENERAL: str = ...
    DB_LANG_GREEK: str = ...
    DB_LANG_HEBREW: str = ...
    DB_LANG_HUNGARIAN: str = ...
    DB_LANG_ICELANDIC: str = ...
    DB_LANG_NORDIC: str = ...
    DB_LANG_NORWDAN: str = ...
    DB_LANG_POLISH: str = ...
    DB_LANG_SPANISH: str = ...
    DB_LANG_SWEDFIN: str = ...
    DB_LANG_TURKISH: str = ...
    DB_LONG: int = ...
    DB_LONGBINARY: int = ...
    DB_MEMO: int = ...
    DB_NONULLS: Int16 = ...
    DB_OLE: Int16 = ...
    DB_OPEN_DYNASET: int = ...
    DB_OPEN_SNAPSHOT: int = ...
    DB_OPEN_TABLE: int = ...
    DB_OPTIONINIPATH: int = ...
    DB_PRIMARY: int = ...
    DB_PROHIBITNULL: int = ...
    DB_QACTION: int = ...
    DB_QAPPEND: int = ...
    DB_QCROSSTAB: int = ...
    DB_QDDL: int = ...
    DB_QDELETE: int = ...
    DB_QMAKETABLE: int = ...
    DB_QSELECT: int = ...
    DB_QSETOPERATION: int = ...
    DB_QSPTBULK: int = ...
    DB_QSQLPASSTHROUGH: int = ...
    DB_QUERYDEF: int = ...
    DB_QUPDATE: int = ...
    DB_READONLY: int = ...
    DB_RELATIONDELETECASCADE: int = ...
    DB_RELATIONDONTENFORCE: int = ...
    DB_RELATIONINHERITED: int = ...
    DB_RELATIONLEFT: int = ...
    DB_RELATIONRIGHT: int = ...
    DB_RELATIONUNIQUE: int = ...
    DB_RELATIONUPDATECASCADE: int = ...
    DB_SEC_CREATE: int = ...
    DB_SEC_DBCREATE: int = ...
    DB_SEC_DBEXCLUSIVE: int = ...
    DB_SEC_DBOPEN: int = ...
    DB_SEC_DELETE: int = ...
    DB_SEC_DELETEDATA: int = ...
    DB_SEC_FRMRPT_EXECUTE: int = ...
    DB_SEC_FRMRPT_READDEF: int = ...
    DB_SEC_FRMRPT_WRITEDEF: int = ...
    DB_SEC_FULLACCESS: int = ...
    DB_SEC_INSERTDATA: int = ...
    DB_SEC_MAC_EXECUTE: int = ...
    DB_SEC_MAC_READDEF: int = ...
    DB_SEC_MAC_WRITEDEF: int = ...
    DB_SEC_MOD_READDEF: int = ...
    DB_SEC_MOD_WRITEDEF: int = ...
    DB_SEC_NOACCESS: int = ...
    DB_SEC_READDEF: int = ...
    DB_SEC_READSEC: int = ...
    DB_SEC_REPLACEDATA: int = ...
    DB_SEC_RETRIEVEDATA: int = ...
    DB_SEC_WRITEDEF: int = ...
    DB_SEC_WRITEOWNER: int = ...
    DB_SEC_WRITESEC: int = ...
    DB_SINGLE: int = ...
    DB_SORTARABIC: int = ...
    DB_SORTCYRILLIC: int = ...
    DB_SORTCZECH: int = ...
    DB_SORTDUTCH: int = ...
    DB_SORTGENERAL: int = ...
    DB_SORTGREEK: int = ...
    DB_SORTHEBREW: int = ...
    DB_SORTHUNGARIAN: int = ...
    DB_SORTICELANDIC: int = ...
    DB_SORTNORWDAN: int = ...
    DB_SORTPDXINTL: int = ...
    DB_SORTPDXNOR: int = ...
    DB_SORTPDXSWE: int = ...
    DB_SORTPOLISH: int = ...
    DB_SORTSPANISH: int = ...
    DB_SORTSWEDFIN: int = ...
    DB_SORTTURKISH: int = ...
    DB_SORTUNDEFINED: int = ...
    DB_SQLPASSTHROUGH: int = ...
    DB_SYSTEMOBJECT: int = ...
    DB_TABLE: int = ...
    DB_TEXT: int = ...
    DB_UNIQUE: int = ...
    DB_UPDATABLEFIELD: int = ...
    DB_VARIABLEFIELD: int = ...
    DB_VERSION10: int = ...
    DB_VERSION11: int = ...
    DB_VERSION20: int = ...
    DELETE_CANCEL: Int16 = ...
    DELETE_OK: Int16 = ...
    DELETE_USER_CANCEL: Int16 = ...
    LB_CLOSE: Int16 = ...
    LB_END: Int16 = ...
    LB_GETCOLUMNCOUNT: Int16 = ...
    LB_GETCOLUMNWIDTH: Int16 = ...
    LB_GETFORMAT: Int16 = ...
    LB_GETROWCOUNT: Int16 = ...
    LB_GETVALUE: Int16 = ...
    LB_INITIALIZE: Int16 = ...
    LB_OPEN: Int16 = ...
    LEFT_BUTTON: Int16 = ...
    MIDDLE_BUTTON: Int16 = ...
    OBJSTATE_DIRTY: Int16 = ...
    OBJSTATE_NEW: Int16 = ...
    OBJSTATE_OPEN: Int16 = ...
    OLE_CHANGED: Int16 = ...
    OLE_CLOSED: Int16 = ...
    OLE_RELEASE: Int16 = ...
    OLE_RENAMED: Int16 = ...
    OLE_SAVED: Int16 = ...
    RIGHT_BUTTON: Int16 = ...
    SHIFT_MASK: Int16 = ...
    SYSCMD_ACCESSDIR: Int16 = ...
    SYSCMD_ACCESSVER: Int16 = ...
    SYSCMD_CLEARHELPTOPIC: Int16 = ...
    SYSCMD_CLEARSTATUS: Int16 = ...
    SYSCMD_GETOBJECTSTATE: Int16 = ...
    SYSCMD_INIFILE: Int16 = ...
    SYSCMD_INITMETER: Int16 = ...
    SYSCMD_REMOVEMETER: Int16 = ...
    SYSCMD_RUNTIME: Int16 = ...
    SYSCMD_SETSTATUS: Int16 = ...
    SYSCMD_UPDATEMETER: Int16 = ...
    V_CURRENCY: Int16 = ...
    V_DATE: Int16 = ...
    V_DOUBLE: Int16 = ...
    V_EMPTY: Int16 = ...
    V_INTEGER: Int16 = ...
    V_LONG: Int16 = ...
    V_NULL: Int16 = ...
    V_SINGLE: Int16 = ...
    V_STRING: Int16 = ...


class Operation: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: Operation) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Operation) -> object """
        ...

    @property
    def WSParameters(self) -> WSParameters:
        """ Get: WSParameters(self: Operation) -> WSParameters """
        ...


    def Execute(self, bstrParameters:str) -> object:
        """ Execute(self: Operation, bstrParameters: str) -> object """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Operation, dispid: int) -> bool """
        ...


class Operations(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: Operations) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Operations) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Operations, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _OptionButton(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _OptionButton) -> bool
        Set: AddColon(self: _OptionButton) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _OptionButton) -> str
        Set: AfterUpdate(self: _OptionButton) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _OptionButton) -> str
        Set: AfterUpdateMacro(self: _OptionButton) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _OptionButton) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _OptionButton) -> bool
        Set: AutoLabel(self: _OptionButton) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _OptionButton) -> str
        Set: BeforeUpdate(self: _OptionButton) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _OptionButton) -> str
        Set: BeforeUpdateMacro(self: _OptionButton) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _OptionButton) -> int
        Set: BorderColor(self: _OptionButton) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _OptionButton) -> Byte
        Set: BorderLineStyle(self: _OptionButton) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _OptionButton) -> Single
        Set: BorderShade(self: _OptionButton) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _OptionButton) -> Byte
        Set: BorderStyle(self: _OptionButton) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _OptionButton) -> int
        Set: BorderThemeColorIndex(self: _OptionButton) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _OptionButton) -> Single
        Set: BorderTint(self: _OptionButton) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _OptionButton) -> Byte
        Set: BorderWidth(self: _OptionButton) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _OptionButton) -> Int16
        Set: BottomPadding(self: _OptionButton) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _OptionButton) -> bool
        Set: ColumnHidden(self: _OptionButton) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _OptionButton) -> Int16
        Set: ColumnOrder(self: _OptionButton) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _OptionButton) -> Int16
        Set: ColumnWidth(self: _OptionButton) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _OptionButton) -> str
        Set: ControlName(self: _OptionButton) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _OptionButton) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _OptionButton) -> str
        Set: ControlSource(self: _OptionButton) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _OptionButton) -> str
        Set: ControlTipText(self: _OptionButton) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _OptionButton) -> Byte
        Set: ControlType(self: _OptionButton) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _OptionButton) -> str
        Set: DefaultValue(self: _OptionButton) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _OptionButton) -> Byte
        Set: DisplayWhen(self: _OptionButton) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _OptionButton) -> bool
        Set: Enabled(self: _OptionButton) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _OptionButton) -> str
        Set: EventProcPrefix(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _OptionButton) -> int
        Set: GridlineColor(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _OptionButton) -> Single
        Set: GridlineShade(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _OptionButton) -> Byte
        Set: GridlineStyleBottom(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _OptionButton) -> Byte
        Set: GridlineStyleLeft(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _OptionButton) -> Byte
        Set: GridlineStyleRight(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _OptionButton) -> Byte
        Set: GridlineStyleTop(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _OptionButton) -> int
        Set: GridlineThemeColorIndex(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _OptionButton) -> Single
        Set: GridlineTint(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _OptionButton) -> Byte
        Set: GridlineWidthBottom(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _OptionButton) -> Byte
        Set: GridlineWidthLeft(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _OptionButton) -> Byte
        Set: GridlineWidthRight(self: _OptionButton) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _OptionButton) -> Byte
        Set: GridlineWidthTop(self: _OptionButton) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _OptionButton) -> Int16
        Set: Height(self: _OptionButton) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _OptionButton) -> int
        Set: HelpContextId(self: _OptionButton) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _OptionButton) -> bool
        Set: HideDuplicates(self: _OptionButton) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _OptionButton) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _OptionButton) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _OptionButton) -> bool
        Set: InSelection(self: _OptionButton) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _OptionButton) -> bool
        Set: IsVisible(self: _OptionButton) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _OptionButton) -> Byte
        Set: LabelAlign(self: _OptionButton) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _OptionButton) -> Int16
        Set: LabelX(self: _OptionButton) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _OptionButton) -> Int16
        Set: LabelY(self: _OptionButton) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _OptionButton) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _OptionButton) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _OptionButton) -> Int16
        Set: Left(self: _OptionButton) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _OptionButton) -> Int16
        Set: LeftPadding(self: _OptionButton) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _OptionButton) -> bool
        Set: Locked(self: _OptionButton) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _OptionButton) -> str
        Set: Name(self: _OptionButton) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _OptionButton) -> Byte
        Set: OldBorderStyle(self: _OptionButton) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _OptionButton) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _OptionButton) -> str
        Set: OnClick(self: _OptionButton) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _OptionButton) -> str
        Set: OnClickMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _OptionButton) -> str
        Set: OnDblClick(self: _OptionButton) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _OptionButton) -> str
        Set: OnDblClickMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _OptionButton) -> str
        Set: OnEnter(self: _OptionButton) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _OptionButton) -> str
        Set: OnEnterMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _OptionButton) -> str
        Set: OnExit(self: _OptionButton) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _OptionButton) -> str
        Set: OnExitMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _OptionButton) -> str
        Set: OnGotFocus(self: _OptionButton) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _OptionButton) -> str
        Set: OnGotFocusMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _OptionButton) -> str
        Set: OnKeyDown(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _OptionButton) -> str
        Set: OnKeyDownMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _OptionButton) -> str
        Set: OnKeyPress(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _OptionButton) -> str
        Set: OnKeyPressMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _OptionButton) -> str
        Set: OnKeyUp(self: _OptionButton) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _OptionButton) -> str
        Set: OnKeyUpMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _OptionButton) -> str
        Set: OnLostFocus(self: _OptionButton) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _OptionButton) -> str
        Set: OnLostFocusMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _OptionButton) -> str
        Set: OnMouseDown(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _OptionButton) -> str
        Set: OnMouseDownMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _OptionButton) -> str
        Set: OnMouseMove(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _OptionButton) -> str
        Set: OnMouseMoveMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _OptionButton) -> str
        Set: OnMouseUp(self: _OptionButton) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _OptionButton) -> str
        Set: OnMouseUpMacro(self: _OptionButton) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _OptionButton) -> int
        Set: OptionValue(self: _OptionButton) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _OptionButton) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _OptionButton) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _OptionButton) -> Byte
        Set: ReadingOrder(self: _OptionButton) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _OptionButton) -> Int16
        Set: RightPadding(self: _OptionButton) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _OptionButton) -> Int16
        Set: Section(self: _OptionButton) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _OptionButton) -> str
        Set: ShortcutMenuBar(self: _OptionButton) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _OptionButton) -> Byte
        Set: SpecialEffect(self: _OptionButton) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _OptionButton) -> str
        Set: StatusBarText(self: _OptionButton) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _OptionButton) -> Int16
        Set: TabIndex(self: _OptionButton) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _OptionButton) -> bool
        Set: TabStop(self: _OptionButton) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _OptionButton) -> str
        Set: Tag(self: _OptionButton) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _OptionButton) -> Int16
        Set: Top(self: _OptionButton) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _OptionButton) -> Int16
        Set: TopPadding(self: _OptionButton) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _OptionButton) -> bool
        Set: TripleState(self: _OptionButton) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _OptionButton) -> str
        Set: ValidationRule(self: _OptionButton) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _OptionButton) -> str
        Set: ValidationText(self: _OptionButton) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _OptionButton) -> object
        Set: Value(self: _OptionButton) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _OptionButton) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _OptionButton) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _OptionButton) -> bool
        Set: Visible(self: _OptionButton) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _OptionButton) -> Int16
        Set: Width(self: _OptionButton) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _OptionButton) -> str
        Set: _Name(self: _OptionButton) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _OptionButton) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _OptionButton, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _OptionButton, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _OptionButton) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _OptionButton) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _OptionButton) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _OptionButton, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class OptionButton(_OptionButton, DispOptionButtonEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class OptionButtonClass(OptionButton, _OptionButtonEvents_Event, __ComObject): # skipped bases: <type 'DispOptionButtonEvents_Event'>, <type 'IAccessible'>, <type '_OptionButton'>, <type 'object'>
    """ OptionButtonClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: OptionButtonClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: OptionButtonClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: OptionButtonClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: OptionButtonClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: OptionButtonClass) -> bool
        Set: AddColon(self: OptionButtonClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: OptionButtonClass) -> str
        Set: AfterUpdate(self: OptionButtonClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: OptionButtonClass) -> str
        Set: AfterUpdateMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: OptionButtonClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: OptionButtonClass) -> bool
        Set: AutoLabel(self: OptionButtonClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: OptionButtonClass) -> str
        Set: BeforeUpdate(self: OptionButtonClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: OptionButtonClass) -> str
        Set: BeforeUpdateMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: OptionButtonClass) -> int
        Set: BorderColor(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: OptionButtonClass) -> Byte
        Set: BorderLineStyle(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: OptionButtonClass) -> Single
        Set: BorderShade(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: OptionButtonClass) -> Byte
        Set: BorderStyle(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: OptionButtonClass) -> int
        Set: BorderThemeColorIndex(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: OptionButtonClass) -> Single
        Set: BorderTint(self: OptionButtonClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: OptionButtonClass) -> Byte
        Set: BorderWidth(self: OptionButtonClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: OptionButtonClass) -> Int16
        Set: BottomPadding(self: OptionButtonClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: OptionButtonClass) -> bool
        Set: ColumnHidden(self: OptionButtonClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: OptionButtonClass) -> Int16
        Set: ColumnOrder(self: OptionButtonClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: OptionButtonClass) -> Int16
        Set: ColumnWidth(self: OptionButtonClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: OptionButtonClass) -> str
        Set: ControlName(self: OptionButtonClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: OptionButtonClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: OptionButtonClass) -> str
        Set: ControlSource(self: OptionButtonClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: OptionButtonClass) -> str
        Set: ControlTipText(self: OptionButtonClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: OptionButtonClass) -> Byte
        Set: ControlType(self: OptionButtonClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: OptionButtonClass) -> str
        Set: DefaultValue(self: OptionButtonClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: OptionButtonClass) -> Byte
        Set: DisplayWhen(self: OptionButtonClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: OptionButtonClass) -> bool
        Set: Enabled(self: OptionButtonClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: OptionButtonClass) -> str
        Set: EventProcPrefix(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: OptionButtonClass) -> int
        Set: GridlineColor(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: OptionButtonClass) -> Single
        Set: GridlineShade(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: OptionButtonClass) -> Byte
        Set: GridlineStyleBottom(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: OptionButtonClass) -> Byte
        Set: GridlineStyleLeft(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: OptionButtonClass) -> Byte
        Set: GridlineStyleRight(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: OptionButtonClass) -> Byte
        Set: GridlineStyleTop(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: OptionButtonClass) -> int
        Set: GridlineThemeColorIndex(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: OptionButtonClass) -> Single
        Set: GridlineTint(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: OptionButtonClass) -> Byte
        Set: GridlineWidthBottom(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: OptionButtonClass) -> Byte
        Set: GridlineWidthLeft(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: OptionButtonClass) -> Byte
        Set: GridlineWidthRight(self: OptionButtonClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: OptionButtonClass) -> Byte
        Set: GridlineWidthTop(self: OptionButtonClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: OptionButtonClass) -> Int16
        Set: Height(self: OptionButtonClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: OptionButtonClass) -> int
        Set: HelpContextId(self: OptionButtonClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: OptionButtonClass) -> bool
        Set: HideDuplicates(self: OptionButtonClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: OptionButtonClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: OptionButtonClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: OptionButtonClass) -> bool
        Set: InSelection(self: OptionButtonClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: OptionButtonClass) -> bool
        Set: IsVisible(self: OptionButtonClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: OptionButtonClass) -> Byte
        Set: LabelAlign(self: OptionButtonClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: OptionButtonClass) -> Int16
        Set: LabelX(self: OptionButtonClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: OptionButtonClass) -> Int16
        Set: LabelY(self: OptionButtonClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: OptionButtonClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: OptionButtonClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: OptionButtonClass) -> Int16
        Set: Left(self: OptionButtonClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: OptionButtonClass) -> Int16
        Set: LeftPadding(self: OptionButtonClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: OptionButtonClass) -> bool
        Set: Locked(self: OptionButtonClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: OptionButtonClass) -> str
        Set: Name(self: OptionButtonClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: OptionButtonClass) -> Byte
        Set: OldBorderStyle(self: OptionButtonClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: OptionButtonClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: OptionButtonClass) -> str
        Set: OnClick(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: OptionButtonClass) -> str
        Set: OnClickMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: OptionButtonClass) -> str
        Set: OnDblClick(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: OptionButtonClass) -> str
        Set: OnDblClickMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: OptionButtonClass) -> str
        Set: OnEnter(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: OptionButtonClass) -> str
        Set: OnEnterMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: OptionButtonClass) -> str
        Set: OnExit(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: OptionButtonClass) -> str
        Set: OnExitMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: OptionButtonClass) -> str
        Set: OnGotFocus(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: OptionButtonClass) -> str
        Set: OnGotFocusMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: OptionButtonClass) -> str
        Set: OnKeyDown(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: OptionButtonClass) -> str
        Set: OnKeyDownMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: OptionButtonClass) -> str
        Set: OnKeyPress(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: OptionButtonClass) -> str
        Set: OnKeyPressMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: OptionButtonClass) -> str
        Set: OnKeyUp(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: OptionButtonClass) -> str
        Set: OnKeyUpMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: OptionButtonClass) -> str
        Set: OnLostFocus(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: OptionButtonClass) -> str
        Set: OnLostFocusMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: OptionButtonClass) -> str
        Set: OnMouseDown(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: OptionButtonClass) -> str
        Set: OnMouseDownMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: OptionButtonClass) -> str
        Set: OnMouseMove(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: OptionButtonClass) -> str
        Set: OnMouseMoveMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: OptionButtonClass) -> str
        Set: OnMouseUp(self: OptionButtonClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: OptionButtonClass) -> str
        Set: OnMouseUpMacro(self: OptionButtonClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: OptionButtonClass) -> int
        Set: OptionValue(self: OptionButtonClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: OptionButtonClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: OptionButtonClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: OptionButtonClass) -> Byte
        Set: ReadingOrder(self: OptionButtonClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: OptionButtonClass) -> Int16
        Set: RightPadding(self: OptionButtonClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: OptionButtonClass) -> Int16
        Set: Section(self: OptionButtonClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: OptionButtonClass) -> str
        Set: ShortcutMenuBar(self: OptionButtonClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: OptionButtonClass) -> Byte
        Set: SpecialEffect(self: OptionButtonClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: OptionButtonClass) -> str
        Set: StatusBarText(self: OptionButtonClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: OptionButtonClass) -> Int16
        Set: TabIndex(self: OptionButtonClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: OptionButtonClass) -> bool
        Set: TabStop(self: OptionButtonClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: OptionButtonClass) -> str
        Set: Tag(self: OptionButtonClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: OptionButtonClass) -> Int16
        Set: Top(self: OptionButtonClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: OptionButtonClass) -> Int16
        Set: TopPadding(self: OptionButtonClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: OptionButtonClass) -> bool
        Set: TripleState(self: OptionButtonClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: OptionButtonClass) -> str
        Set: ValidationRule(self: OptionButtonClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: OptionButtonClass) -> str
        Set: ValidationText(self: OptionButtonClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: OptionButtonClass) -> object
        Set: Value(self: OptionButtonClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: OptionButtonClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: OptionButtonClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: OptionButtonClass) -> bool
        Set: Visible(self: OptionButtonClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: OptionButtonClass) -> Int16
        Set: Width(self: OptionButtonClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: OptionButtonClass) -> str
        Set: _Name(self: OptionButtonClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: OptionButtonClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: OptionButtonClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: OptionButtonClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: OptionButtonClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: OptionButtonClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: OptionButtonClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: OptionButtonClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: OptionButtonClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: OptionButtonClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: OptionButtonClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: OptionButtonClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: OptionButtonClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _OptionButtonEvents_Event_add_AfterUpdate(self): # -> 
        """ _OptionButtonEvents_Event_add_AfterUpdate(self: OptionButtonClass, : _OptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_BeforeUpdate(self): # -> 
        """ _OptionButtonEvents_Event_add_BeforeUpdate(self: OptionButtonClass, : _OptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_Click(self): # -> 
        """ _OptionButtonEvents_Event_add_Click(self: OptionButtonClass, : _OptionButtonEvents_ClickEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_DblClick(self): # -> 
        """ _OptionButtonEvents_Event_add_DblClick(self: OptionButtonClass, : _OptionButtonEvents_DblClickEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_Enter(self): # -> 
        """ _OptionButtonEvents_Event_add_Enter(self: OptionButtonClass, : _OptionButtonEvents_EnterEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_Exit(self): # -> 
        """ _OptionButtonEvents_Event_add_Exit(self: OptionButtonClass, : _OptionButtonEvents_ExitEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_GotFocus(self): # -> 
        """ _OptionButtonEvents_Event_add_GotFocus(self: OptionButtonClass, : _OptionButtonEvents_GotFocusEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_KeyDown(self): # -> 
        """ _OptionButtonEvents_Event_add_KeyDown(self: OptionButtonClass, : _OptionButtonEvents_KeyDownEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_KeyPress(self): # -> 
        """ _OptionButtonEvents_Event_add_KeyPress(self: OptionButtonClass, : _OptionButtonEvents_KeyPressEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_KeyUp(self): # -> 
        """ _OptionButtonEvents_Event_add_KeyUp(self: OptionButtonClass, : _OptionButtonEvents_KeyUpEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_LostFocus(self): # -> 
        """ _OptionButtonEvents_Event_add_LostFocus(self: OptionButtonClass, : _OptionButtonEvents_LostFocusEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_MouseDown(self): # -> 
        """ _OptionButtonEvents_Event_add_MouseDown(self: OptionButtonClass, : _OptionButtonEvents_MouseDownEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_MouseMove(self): # -> 
        """ _OptionButtonEvents_Event_add_MouseMove(self: OptionButtonClass, : _OptionButtonEvents_MouseMoveEventHandler) """
        ...

    def _OptionButtonEvents_Event_add_MouseUp(self): # -> 
        """ _OptionButtonEvents_Event_add_MouseUp(self: OptionButtonClass, : _OptionButtonEvents_MouseUpEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_AfterUpdate(self): # -> 
        """ _OptionButtonEvents_Event_remove_AfterUpdate(self: OptionButtonClass, : _OptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _OptionButtonEvents_Event_remove_BeforeUpdate(self: OptionButtonClass, : _OptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_Click(self): # -> 
        """ _OptionButtonEvents_Event_remove_Click(self: OptionButtonClass, : _OptionButtonEvents_ClickEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_DblClick(self): # -> 
        """ _OptionButtonEvents_Event_remove_DblClick(self: OptionButtonClass, : _OptionButtonEvents_DblClickEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_Enter(self): # -> 
        """ _OptionButtonEvents_Event_remove_Enter(self: OptionButtonClass, : _OptionButtonEvents_EnterEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_Exit(self): # -> 
        """ _OptionButtonEvents_Event_remove_Exit(self: OptionButtonClass, : _OptionButtonEvents_ExitEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_GotFocus(self): # -> 
        """ _OptionButtonEvents_Event_remove_GotFocus(self: OptionButtonClass, : _OptionButtonEvents_GotFocusEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_KeyDown(self): # -> 
        """ _OptionButtonEvents_Event_remove_KeyDown(self: OptionButtonClass, : _OptionButtonEvents_KeyDownEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_KeyPress(self): # -> 
        """ _OptionButtonEvents_Event_remove_KeyPress(self: OptionButtonClass, : _OptionButtonEvents_KeyPressEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_KeyUp(self): # -> 
        """ _OptionButtonEvents_Event_remove_KeyUp(self: OptionButtonClass, : _OptionButtonEvents_KeyUpEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_LostFocus(self): # -> 
        """ _OptionButtonEvents_Event_remove_LostFocus(self: OptionButtonClass, : _OptionButtonEvents_LostFocusEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_MouseDown(self): # -> 
        """ _OptionButtonEvents_Event_remove_MouseDown(self: OptionButtonClass, : _OptionButtonEvents_MouseDownEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_MouseMove(self): # -> 
        """ _OptionButtonEvents_Event_remove_MouseMove(self: OptionButtonClass, : _OptionButtonEvents_MouseMoveEventHandler) """
        ...

    def _OptionButtonEvents_Event_remove_MouseUp(self): # -> 
        """ _OptionButtonEvents_Event_remove_MouseUp(self: OptionButtonClass, : _OptionButtonEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispOptionButtonEvents_Event_AfterUpdate = ...
    DispOptionButtonEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _OptionButtonEvents_Event_AfterUpdate = ...
    _OptionButtonEvents_Event_BeforeUpdate = ...
    _OptionButtonEvents_Event_Click = ...
    _OptionButtonEvents_Event_DblClick = ...
    _OptionButtonEvents_Event_Enter = ...
    _OptionButtonEvents_Event_Exit = ...
    _OptionButtonEvents_Event_GotFocus = ...
    _OptionButtonEvents_Event_KeyDown = ...
    _OptionButtonEvents_Event_KeyPress = ...
    _OptionButtonEvents_Event_KeyUp = ...
    _OptionButtonEvents_Event_LostFocus = ...
    _OptionButtonEvents_Event_MouseDown = ...
    _OptionButtonEvents_Event_MouseMove = ...
    _OptionButtonEvents_Event_MouseUp = ...


class _OptionGroup(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _OptionGroup) -> bool
        Set: AddColon(self: _OptionGroup) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _OptionGroup) -> str
        Set: AfterUpdate(self: _OptionGroup) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _OptionGroup) -> str
        Set: AfterUpdateMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _OptionGroup) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _OptionGroup) -> bool
        Set: AutoLabel(self: _OptionGroup) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _OptionGroup) -> int
        Set: BackColor(self: _OptionGroup) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _OptionGroup) -> Single
        Set: BackShade(self: _OptionGroup) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _OptionGroup) -> Byte
        Set: BackStyle(self: _OptionGroup) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _OptionGroup) -> int
        Set: BackThemeColorIndex(self: _OptionGroup) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _OptionGroup) -> Single
        Set: BackTint(self: _OptionGroup) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _OptionGroup) -> str
        Set: BeforeUpdate(self: _OptionGroup) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _OptionGroup) -> str
        Set: BeforeUpdateMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _OptionGroup) -> int
        Set: BorderColor(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _OptionGroup) -> Byte
        Set: BorderLineStyle(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _OptionGroup) -> Single
        Set: BorderShade(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _OptionGroup) -> Byte
        Set: BorderStyle(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _OptionGroup) -> int
        Set: BorderThemeColorIndex(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _OptionGroup) -> Single
        Set: BorderTint(self: _OptionGroup) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _OptionGroup) -> Byte
        Set: BorderWidth(self: _OptionGroup) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _OptionGroup) -> bool
        Set: ColumnHidden(self: _OptionGroup) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _OptionGroup) -> Int16
        Set: ColumnOrder(self: _OptionGroup) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _OptionGroup) -> Int16
        Set: ColumnWidth(self: _OptionGroup) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _OptionGroup) -> str
        Set: ControlName(self: _OptionGroup) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _OptionGroup) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _OptionGroup) -> str
        Set: ControlSource(self: _OptionGroup) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _OptionGroup) -> str
        Set: ControlTipText(self: _OptionGroup) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _OptionGroup) -> Byte
        Set: ControlType(self: _OptionGroup) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _OptionGroup) -> str
        Set: DefaultValue(self: _OptionGroup) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _OptionGroup) -> Byte
        Set: DisplayWhen(self: _OptionGroup) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _OptionGroup) -> bool
        Set: Enabled(self: _OptionGroup) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _OptionGroup) -> str
        Set: EventProcPrefix(self: _OptionGroup) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _OptionGroup) -> Int16
        Set: Height(self: _OptionGroup) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _OptionGroup) -> int
        Set: HelpContextId(self: _OptionGroup) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _OptionGroup) -> bool
        Set: HideDuplicates(self: _OptionGroup) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _OptionGroup) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _OptionGroup) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _OptionGroup) -> bool
        Set: InSelection(self: _OptionGroup) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _OptionGroup) -> bool
        Set: IsVisible(self: _OptionGroup) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _OptionGroup) -> Byte
        Set: LabelAlign(self: _OptionGroup) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _OptionGroup) -> Int16
        Set: LabelX(self: _OptionGroup) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _OptionGroup) -> Int16
        Set: LabelY(self: _OptionGroup) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _OptionGroup) -> Int16
        Set: Left(self: _OptionGroup) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _OptionGroup) -> bool
        Set: Locked(self: _OptionGroup) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _OptionGroup) -> str
        Set: Name(self: _OptionGroup) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _OptionGroup) -> Byte
        Set: OldBorderStyle(self: _OptionGroup) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _OptionGroup) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _OptionGroup) -> str
        Set: OnClick(self: _OptionGroup) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _OptionGroup) -> str
        Set: OnClickMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _OptionGroup) -> str
        Set: OnDblClick(self: _OptionGroup) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _OptionGroup) -> str
        Set: OnDblClickMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _OptionGroup) -> str
        Set: OnEnter(self: _OptionGroup) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _OptionGroup) -> str
        Set: OnEnterMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _OptionGroup) -> str
        Set: OnExit(self: _OptionGroup) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _OptionGroup) -> str
        Set: OnExitMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _OptionGroup) -> str
        Set: OnMouseDown(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _OptionGroup) -> str
        Set: OnMouseDownMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _OptionGroup) -> str
        Set: OnMouseMove(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _OptionGroup) -> str
        Set: OnMouseMoveMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _OptionGroup) -> str
        Set: OnMouseUp(self: _OptionGroup) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _OptionGroup) -> str
        Set: OnMouseUpMacro(self: _OptionGroup) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _OptionGroup) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _OptionGroup) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _OptionGroup) -> Int16
        Set: Section(self: _OptionGroup) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _OptionGroup) -> str
        Set: ShortcutMenuBar(self: _OptionGroup) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _OptionGroup) -> Byte
        Set: SpecialEffect(self: _OptionGroup) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _OptionGroup) -> str
        Set: StatusBarText(self: _OptionGroup) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _OptionGroup) -> Int16
        Set: TabIndex(self: _OptionGroup) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _OptionGroup) -> bool
        Set: TabStop(self: _OptionGroup) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _OptionGroup) -> str
        Set: Tag(self: _OptionGroup) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _OptionGroup) -> Int16
        Set: Top(self: _OptionGroup) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _OptionGroup) -> str
        Set: ValidationRule(self: _OptionGroup) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _OptionGroup) -> str
        Set: ValidationText(self: _OptionGroup) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _OptionGroup) -> object
        Set: Value(self: _OptionGroup) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _OptionGroup) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _OptionGroup) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _OptionGroup) -> bool
        Set: Visible(self: _OptionGroup) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _OptionGroup) -> Int16
        Set: Width(self: _OptionGroup) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _OptionGroup) -> str
        Set: _Name(self: _OptionGroup) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _OptionGroup) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _OptionGroup, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _OptionGroup, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _OptionGroup) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _OptionGroup) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _OptionGroup) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _OptionGroup) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _OptionGroup, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class OptionGroup(DispOptionGroupEvents_Event, _OptionGroup): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class OptionGroupClass(OptionGroup, __ComObject, _OptionGroupEvents_Event): # skipped bases: <type '_OptionGroup'>, <type 'DispOptionGroupEvents_Event'>, <type 'IAccessible'>, <type 'object'>
    """ OptionGroupClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: OptionGroupClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: OptionGroupClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: OptionGroupClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: OptionGroupClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: OptionGroupClass) -> bool
        Set: AddColon(self: OptionGroupClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: OptionGroupClass) -> str
        Set: AfterUpdate(self: OptionGroupClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: OptionGroupClass) -> str
        Set: AfterUpdateMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: OptionGroupClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: OptionGroupClass) -> bool
        Set: AutoLabel(self: OptionGroupClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: OptionGroupClass) -> int
        Set: BackColor(self: OptionGroupClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: OptionGroupClass) -> Single
        Set: BackShade(self: OptionGroupClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: OptionGroupClass) -> Byte
        Set: BackStyle(self: OptionGroupClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: OptionGroupClass) -> int
        Set: BackThemeColorIndex(self: OptionGroupClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: OptionGroupClass) -> Single
        Set: BackTint(self: OptionGroupClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: OptionGroupClass) -> str
        Set: BeforeUpdate(self: OptionGroupClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: OptionGroupClass) -> str
        Set: BeforeUpdateMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: OptionGroupClass) -> int
        Set: BorderColor(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: OptionGroupClass) -> Byte
        Set: BorderLineStyle(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: OptionGroupClass) -> Single
        Set: BorderShade(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: OptionGroupClass) -> Byte
        Set: BorderStyle(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: OptionGroupClass) -> int
        Set: BorderThemeColorIndex(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: OptionGroupClass) -> Single
        Set: BorderTint(self: OptionGroupClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: OptionGroupClass) -> Byte
        Set: BorderWidth(self: OptionGroupClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: OptionGroupClass) -> bool
        Set: ColumnHidden(self: OptionGroupClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: OptionGroupClass) -> Int16
        Set: ColumnOrder(self: OptionGroupClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: OptionGroupClass) -> Int16
        Set: ColumnWidth(self: OptionGroupClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: OptionGroupClass) -> str
        Set: ControlName(self: OptionGroupClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: OptionGroupClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: OptionGroupClass) -> str
        Set: ControlSource(self: OptionGroupClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: OptionGroupClass) -> str
        Set: ControlTipText(self: OptionGroupClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: OptionGroupClass) -> Byte
        Set: ControlType(self: OptionGroupClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: OptionGroupClass) -> str
        Set: DefaultValue(self: OptionGroupClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: OptionGroupClass) -> Byte
        Set: DisplayWhen(self: OptionGroupClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: OptionGroupClass) -> bool
        Set: Enabled(self: OptionGroupClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: OptionGroupClass) -> str
        Set: EventProcPrefix(self: OptionGroupClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: OptionGroupClass) -> Int16
        Set: Height(self: OptionGroupClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: OptionGroupClass) -> int
        Set: HelpContextId(self: OptionGroupClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: OptionGroupClass) -> bool
        Set: HideDuplicates(self: OptionGroupClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: OptionGroupClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: OptionGroupClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: OptionGroupClass) -> bool
        Set: InSelection(self: OptionGroupClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: OptionGroupClass) -> bool
        Set: IsVisible(self: OptionGroupClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: OptionGroupClass) -> Byte
        Set: LabelAlign(self: OptionGroupClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: OptionGroupClass) -> Int16
        Set: LabelX(self: OptionGroupClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: OptionGroupClass) -> Int16
        Set: LabelY(self: OptionGroupClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: OptionGroupClass) -> Int16
        Set: Left(self: OptionGroupClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: OptionGroupClass) -> bool
        Set: Locked(self: OptionGroupClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: OptionGroupClass) -> str
        Set: Name(self: OptionGroupClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: OptionGroupClass) -> Byte
        Set: OldBorderStyle(self: OptionGroupClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: OptionGroupClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: OptionGroupClass) -> str
        Set: OnClick(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: OptionGroupClass) -> str
        Set: OnClickMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: OptionGroupClass) -> str
        Set: OnDblClick(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: OptionGroupClass) -> str
        Set: OnDblClickMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: OptionGroupClass) -> str
        Set: OnEnter(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: OptionGroupClass) -> str
        Set: OnEnterMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: OptionGroupClass) -> str
        Set: OnExit(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: OptionGroupClass) -> str
        Set: OnExitMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: OptionGroupClass) -> str
        Set: OnMouseDown(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: OptionGroupClass) -> str
        Set: OnMouseDownMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: OptionGroupClass) -> str
        Set: OnMouseMove(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: OptionGroupClass) -> str
        Set: OnMouseMoveMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: OptionGroupClass) -> str
        Set: OnMouseUp(self: OptionGroupClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: OptionGroupClass) -> str
        Set: OnMouseUpMacro(self: OptionGroupClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: OptionGroupClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: OptionGroupClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: OptionGroupClass) -> Int16
        Set: Section(self: OptionGroupClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: OptionGroupClass) -> str
        Set: ShortcutMenuBar(self: OptionGroupClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: OptionGroupClass) -> Byte
        Set: SpecialEffect(self: OptionGroupClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: OptionGroupClass) -> str
        Set: StatusBarText(self: OptionGroupClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: OptionGroupClass) -> Int16
        Set: TabIndex(self: OptionGroupClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: OptionGroupClass) -> bool
        Set: TabStop(self: OptionGroupClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: OptionGroupClass) -> str
        Set: Tag(self: OptionGroupClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: OptionGroupClass) -> Int16
        Set: Top(self: OptionGroupClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: OptionGroupClass) -> str
        Set: ValidationRule(self: OptionGroupClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: OptionGroupClass) -> str
        Set: ValidationText(self: OptionGroupClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: OptionGroupClass) -> object
        Set: Value(self: OptionGroupClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: OptionGroupClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: OptionGroupClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: OptionGroupClass) -> bool
        Set: Visible(self: OptionGroupClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: OptionGroupClass) -> Int16
        Set: Width(self: OptionGroupClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: OptionGroupClass) -> str
        Set: _Name(self: OptionGroupClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: OptionGroupClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: OptionGroupClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: OptionGroupClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: OptionGroupClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: OptionGroupClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: OptionGroupClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: OptionGroupClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: OptionGroupClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: OptionGroupClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: OptionGroupClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: OptionGroupClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: OptionGroupClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: OptionGroupClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _OptionGroupEvents_Event_add_AfterUpdate(self): # -> 
        """ _OptionGroupEvents_Event_add_AfterUpdate(self: OptionGroupClass, : _OptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_BeforeUpdate(self): # -> 
        """ _OptionGroupEvents_Event_add_BeforeUpdate(self: OptionGroupClass, : _OptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_Click(self): # -> 
        """ _OptionGroupEvents_Event_add_Click(self: OptionGroupClass, : _OptionGroupEvents_ClickEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_DblClick(self): # -> 
        """ _OptionGroupEvents_Event_add_DblClick(self: OptionGroupClass, : _OptionGroupEvents_DblClickEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_Enter(self): # -> 
        """ _OptionGroupEvents_Event_add_Enter(self: OptionGroupClass, : _OptionGroupEvents_EnterEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_Exit(self): # -> 
        """ _OptionGroupEvents_Event_add_Exit(self: OptionGroupClass, : _OptionGroupEvents_ExitEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_MouseDown(self): # -> 
        """ _OptionGroupEvents_Event_add_MouseDown(self: OptionGroupClass, : _OptionGroupEvents_MouseDownEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_MouseMove(self): # -> 
        """ _OptionGroupEvents_Event_add_MouseMove(self: OptionGroupClass, : _OptionGroupEvents_MouseMoveEventHandler) """
        ...

    def _OptionGroupEvents_Event_add_MouseUp(self): # -> 
        """ _OptionGroupEvents_Event_add_MouseUp(self: OptionGroupClass, : _OptionGroupEvents_MouseUpEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_AfterUpdate(self): # -> 
        """ _OptionGroupEvents_Event_remove_AfterUpdate(self: OptionGroupClass, : _OptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _OptionGroupEvents_Event_remove_BeforeUpdate(self: OptionGroupClass, : _OptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_Click(self): # -> 
        """ _OptionGroupEvents_Event_remove_Click(self: OptionGroupClass, : _OptionGroupEvents_ClickEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_DblClick(self): # -> 
        """ _OptionGroupEvents_Event_remove_DblClick(self: OptionGroupClass, : _OptionGroupEvents_DblClickEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_Enter(self): # -> 
        """ _OptionGroupEvents_Event_remove_Enter(self: OptionGroupClass, : _OptionGroupEvents_EnterEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_Exit(self): # -> 
        """ _OptionGroupEvents_Event_remove_Exit(self: OptionGroupClass, : _OptionGroupEvents_ExitEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_MouseDown(self): # -> 
        """ _OptionGroupEvents_Event_remove_MouseDown(self: OptionGroupClass, : _OptionGroupEvents_MouseDownEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_MouseMove(self): # -> 
        """ _OptionGroupEvents_Event_remove_MouseMove(self: OptionGroupClass, : _OptionGroupEvents_MouseMoveEventHandler) """
        ...

    def _OptionGroupEvents_Event_remove_MouseUp(self): # -> 
        """ _OptionGroupEvents_Event_remove_MouseUp(self: OptionGroupClass, : _OptionGroupEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispOptionGroupEvents_Event_AfterUpdate = ...
    DispOptionGroupEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _OptionGroupEvents_Event_AfterUpdate = ...
    _OptionGroupEvents_Event_BeforeUpdate = ...
    _OptionGroupEvents_Event_Click = ...
    _OptionGroupEvents_Event_DblClick = ...
    _OptionGroupEvents_Event_Enter = ...
    _OptionGroupEvents_Event_Exit = ...
    _OptionGroupEvents_Event_MouseDown = ...
    _OptionGroupEvents_Event_MouseMove = ...
    _OptionGroupEvents_Event_MouseUp = ...


class _Page(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Page) -> Application """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Page) -> str
        Set: Caption(self: _Page) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Page) -> str
        Set: ControlName(self: _Page) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Page) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Page) -> str
        Set: ControlTipText(self: _Page) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Page) -> Byte
        Set: ControlType(self: _Page) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _Page) -> bool
        Set: Enabled(self: _Page) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Page) -> str
        Set: EventProcPrefix(self: _Page) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Page) -> Int16
        Set: Height(self: _Page) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Page) -> int
        Set: HelpContextId(self: _Page) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Page) -> bool
        Set: InSelection(self: _Page) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Page) -> bool
        Set: IsVisible(self: _Page) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Page) -> Int16
        Set: Left(self: _Page) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Page) -> str
        Set: Name(self: _Page) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Page) -> str
        Set: OnClick(self: _Page) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Page) -> str
        Set: OnClickMacro(self: _Page) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Page) -> str
        Set: OnDblClick(self: _Page) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Page) -> str
        Set: OnDblClickMacro(self: _Page) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Page) -> str
        Set: OnMouseDown(self: _Page) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Page) -> str
        Set: OnMouseDownMacro(self: _Page) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Page) -> str
        Set: OnMouseMove(self: _Page) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Page) -> str
        Set: OnMouseMoveMacro(self: _Page) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Page) -> str
        Set: OnMouseUp(self: _Page) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Page) -> str
        Set: OnMouseUpMacro(self: _Page) = value
        """
        ...

    @property
    def PageIndex(self) -> Int16:
        """
        Get: PageIndex(self: _Page) -> Int16
        Set: PageIndex(self: _Page) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Page) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Page) -> str
        Set: Picture(self: _Page) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Page) -> object
        Set: PictureData(self: _Page) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Page) -> Byte
        Set: PictureType(self: _Page) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Page) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Page) -> Int16
        Set: Section(self: _Page) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Page) -> str
        Set: ShortcutMenuBar(self: _Page) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _Page) -> str
        Set: StatusBarText(self: _Page) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Page) -> str
        Set: Tag(self: _Page) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Page) -> Int16
        Set: Top(self: _Page) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Page) -> bool
        Set: Visible(self: _Page) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Page) -> Int16
        Set: Width(self: _Page) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Page) -> str
        Set: _Name(self: _Page) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _Page) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Page, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Page, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Page) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Page) """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: _Page) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Page) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Page, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Page(_Page, DispPageEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _PageBreak: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _PageBreak) -> Application """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _PageBreak) -> str
        Set: ControlName(self: _PageBreak) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _PageBreak) -> Byte
        Set: ControlType(self: _PageBreak) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _PageBreak) -> str
        Set: EventProcPrefix(self: _PageBreak) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _PageBreak) -> bool
        Set: InSelection(self: _PageBreak) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _PageBreak) -> bool
        Set: IsVisible(self: _PageBreak) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _PageBreak) -> Int16
        Set: Left(self: _PageBreak) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _PageBreak) -> str
        Set: Name(self: _PageBreak) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _PageBreak) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _PageBreak) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _PageBreak) -> Int16
        Set: Section(self: _PageBreak) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _PageBreak) -> str
        Set: Tag(self: _PageBreak) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _PageBreak) -> Int16
        Set: Top(self: _PageBreak) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _PageBreak) -> bool
        Set: Visible(self: _PageBreak) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _PageBreak) -> str
        Set: _Name(self: _PageBreak) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _PageBreak, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _PageBreak, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _PageBreak) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _PageBreak, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class PageBreak(_PageBreak, DispPageBreakEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class PageBreakClass(PageBreak, _PageBreakEvents_Event, __ComObject): # skipped bases: <type '_PageBreak'>, <type 'DispPageBreakEvents_Event'>, <type 'object'>
    """ PageBreakClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: PageBreakClass) -> Application """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: PageBreakClass) -> str
        Set: ControlName(self: PageBreakClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: PageBreakClass) -> Byte
        Set: ControlType(self: PageBreakClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: PageBreakClass) -> str
        Set: EventProcPrefix(self: PageBreakClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: PageBreakClass) -> bool
        Set: InSelection(self: PageBreakClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: PageBreakClass) -> bool
        Set: IsVisible(self: PageBreakClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: PageBreakClass) -> Int16
        Set: Left(self: PageBreakClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: PageBreakClass) -> str
        Set: Name(self: PageBreakClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: PageBreakClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: PageBreakClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: PageBreakClass) -> Int16
        Set: Section(self: PageBreakClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: PageBreakClass) -> str
        Set: Tag(self: PageBreakClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: PageBreakClass) -> Int16
        Set: Top(self: PageBreakClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: PageBreakClass) -> bool
        Set: Visible(self: PageBreakClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: PageBreakClass) -> str
        Set: _Name(self: PageBreakClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: PageBreakClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: PageBreakClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: PageBreakClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: PageBreakClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class PageClass(_PageEvents_Event, __ComObject, Page): # skipped bases: <type 'DispPageEvents_Event'>, <type '_Page'>, <type 'IAccessible'>, <type 'object'>
    """ PageClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: PageClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: PageClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: PageClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: PageClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: PageClass) -> Application """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: PageClass) -> str
        Set: Caption(self: PageClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: PageClass) -> str
        Set: ControlName(self: PageClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: PageClass) -> Children """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: PageClass) -> str
        Set: ControlTipText(self: PageClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: PageClass) -> Byte
        Set: ControlType(self: PageClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: PageClass) -> bool
        Set: Enabled(self: PageClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: PageClass) -> str
        Set: EventProcPrefix(self: PageClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: PageClass) -> Int16
        Set: Height(self: PageClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: PageClass) -> int
        Set: HelpContextId(self: PageClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: PageClass) -> bool
        Set: InSelection(self: PageClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: PageClass) -> bool
        Set: IsVisible(self: PageClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: PageClass) -> Int16
        Set: Left(self: PageClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: PageClass) -> str
        Set: Name(self: PageClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: PageClass) -> str
        Set: OnClick(self: PageClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: PageClass) -> str
        Set: OnClickMacro(self: PageClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: PageClass) -> str
        Set: OnDblClick(self: PageClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: PageClass) -> str
        Set: OnDblClickMacro(self: PageClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: PageClass) -> str
        Set: OnMouseDown(self: PageClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: PageClass) -> str
        Set: OnMouseDownMacro(self: PageClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: PageClass) -> str
        Set: OnMouseMove(self: PageClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: PageClass) -> str
        Set: OnMouseMoveMacro(self: PageClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: PageClass) -> str
        Set: OnMouseUp(self: PageClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: PageClass) -> str
        Set: OnMouseUpMacro(self: PageClass) = value
        """
        ...

    @property
    def PageIndex(self) -> Int16:
        """
        Get: PageIndex(self: PageClass) -> Int16
        Set: PageIndex(self: PageClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: PageClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: PageClass) -> str
        Set: Picture(self: PageClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: PageClass) -> object
        Set: PictureData(self: PageClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: PageClass) -> Byte
        Set: PictureType(self: PageClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: PageClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: PageClass) -> Int16
        Set: Section(self: PageClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: PageClass) -> str
        Set: ShortcutMenuBar(self: PageClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: PageClass) -> str
        Set: StatusBarText(self: PageClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: PageClass) -> str
        Set: Tag(self: PageClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: PageClass) -> Int16
        Set: Top(self: PageClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: PageClass) -> bool
        Set: Visible(self: PageClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: PageClass) -> Int16
        Set: Width(self: PageClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: PageClass) -> str
        Set: _Name(self: PageClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: PageClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: PageClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: PageClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: PageClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: PageClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: PageClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: PageClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: PageClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: PageClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: PageClass) """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: PageClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: PageClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: PageClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _PageEvents_Event_add_Click(self): # -> 
        """ _PageEvents_Event_add_Click(self: PageClass, : _PageEvents_ClickEventHandler) """
        ...

    def _PageEvents_Event_add_DblClick(self): # -> 
        """ _PageEvents_Event_add_DblClick(self: PageClass, : _PageEvents_DblClickEventHandler) """
        ...

    def _PageEvents_Event_add_MouseDown(self): # -> 
        """ _PageEvents_Event_add_MouseDown(self: PageClass, : _PageEvents_MouseDownEventHandler) """
        ...

    def _PageEvents_Event_add_MouseMove(self): # -> 
        """ _PageEvents_Event_add_MouseMove(self: PageClass, : _PageEvents_MouseMoveEventHandler) """
        ...

    def _PageEvents_Event_add_MouseUp(self): # -> 
        """ _PageEvents_Event_add_MouseUp(self: PageClass, : _PageEvents_MouseUpEventHandler) """
        ...

    def _PageEvents_Event_remove_Click(self): # -> 
        """ _PageEvents_Event_remove_Click(self: PageClass, : _PageEvents_ClickEventHandler) """
        ...

    def _PageEvents_Event_remove_DblClick(self): # -> 
        """ _PageEvents_Event_remove_DblClick(self: PageClass, : _PageEvents_DblClickEventHandler) """
        ...

    def _PageEvents_Event_remove_MouseDown(self): # -> 
        """ _PageEvents_Event_remove_MouseDown(self: PageClass, : _PageEvents_MouseDownEventHandler) """
        ...

    def _PageEvents_Event_remove_MouseMove(self): # -> 
        """ _PageEvents_Event_remove_MouseMove(self: PageClass, : _PageEvents_MouseMoveEventHandler) """
        ...

    def _PageEvents_Event_remove_MouseUp(self): # -> 
        """ _PageEvents_Event_remove_MouseUp(self: PageClass, : _PageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _PageEvents_Event_Click = ...
    _PageEvents_Event_DblClick = ...
    _PageEvents_Event_MouseDown = ...
    _PageEvents_Event_MouseMove = ...
    _PageEvents_Event_MouseUp = ...


class Pages(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: Pages) -> int """
        ...


    def Add(self, Before:object) -> Page:
        """ Add(self: Pages, Before: object) -> Page """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Pages, dispid: int) -> bool """
        ...

    def Remove(self, Item:object): # -> 
        """ Remove(self: Pages, Item: object) """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _PaletteButton: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _PaletteButton) -> bool
        Set: AddColon(self: _PaletteButton) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _PaletteButton) -> str
        Set: AfterUpdate(self: _PaletteButton) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _PaletteButton) -> str
        Set: AfterUpdateMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _PaletteButton) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _PaletteButton) -> bool
        Set: AutoLabel(self: _PaletteButton) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _PaletteButton) -> int
        Set: BackColor(self: _PaletteButton) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _PaletteButton) -> Byte
        Set: BackStyle(self: _PaletteButton) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _PaletteButton) -> str
        Set: BeforeUpdate(self: _PaletteButton) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _PaletteButton) -> str
        Set: BeforeUpdateMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _PaletteButton) -> bool
        Set: ColumnHidden(self: _PaletteButton) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _PaletteButton) -> Int16
        Set: ColumnOrder(self: _PaletteButton) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _PaletteButton) -> Int16
        Set: ColumnWidth(self: _PaletteButton) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _PaletteButton) -> str
        Set: ControlName(self: _PaletteButton) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _PaletteButton) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _PaletteButton) -> str
        Set: ControlSource(self: _PaletteButton) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _PaletteButton) -> str
        Set: ControlTipText(self: _PaletteButton) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _PaletteButton) -> Byte
        Set: ControlType(self: _PaletteButton) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _PaletteButton) -> str
        Set: DefaultValue(self: _PaletteButton) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _PaletteButton) -> Byte
        Set: DisplayWhen(self: _PaletteButton) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _PaletteButton) -> bool
        Set: Enabled(self: _PaletteButton) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _PaletteButton) -> str
        Set: EventProcPrefix(self: _PaletteButton) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _PaletteButton) -> Int16
        Set: Height(self: _PaletteButton) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _PaletteButton) -> int
        Set: HelpContextId(self: _PaletteButton) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _PaletteButton) -> bool
        Set: HideDuplicates(self: _PaletteButton) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _PaletteButton) -> bool
        Set: InSelection(self: _PaletteButton) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _PaletteButton) -> bool
        Set: IsVisible(self: _PaletteButton) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _PaletteButton) -> Byte
        Set: LabelAlign(self: _PaletteButton) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _PaletteButton) -> Int16
        Set: LabelX(self: _PaletteButton) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _PaletteButton) -> Int16
        Set: LabelY(self: _PaletteButton) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _PaletteButton) -> Int16
        Set: Left(self: _PaletteButton) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _PaletteButton) -> bool
        Set: Locked(self: _PaletteButton) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _PaletteButton) -> str
        Set: Name(self: _PaletteButton) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _PaletteButton) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _PaletteButton) -> str
        Set: OnClick(self: _PaletteButton) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _PaletteButton) -> str
        Set: OnClickMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _PaletteButton) -> str
        Set: OnDblClick(self: _PaletteButton) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _PaletteButton) -> str
        Set: OnDblClickMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _PaletteButton) -> str
        Set: OnEnter(self: _PaletteButton) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _PaletteButton) -> str
        Set: OnEnterMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _PaletteButton) -> str
        Set: OnExit(self: _PaletteButton) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _PaletteButton) -> str
        Set: OnExitMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _PaletteButton) -> str
        Set: OnGotFocus(self: _PaletteButton) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _PaletteButton) -> str
        Set: OnGotFocusMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _PaletteButton) -> str
        Set: OnKeyDown(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _PaletteButton) -> str
        Set: OnKeyDownMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _PaletteButton) -> str
        Set: OnKeyPress(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _PaletteButton) -> str
        Set: OnKeyPressMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _PaletteButton) -> str
        Set: OnKeyUp(self: _PaletteButton) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _PaletteButton) -> str
        Set: OnKeyUpMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _PaletteButton) -> str
        Set: OnLostFocus(self: _PaletteButton) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _PaletteButton) -> str
        Set: OnLostFocusMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _PaletteButton) -> str
        Set: OnMouseDown(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _PaletteButton) -> str
        Set: OnMouseDownMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _PaletteButton) -> str
        Set: OnMouseMove(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _PaletteButton) -> str
        Set: OnMouseMoveMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _PaletteButton) -> str
        Set: OnMouseUp(self: _PaletteButton) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _PaletteButton) -> str
        Set: OnMouseUpMacro(self: _PaletteButton) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _PaletteButton) -> int
        Set: OptionValue(self: _PaletteButton) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _PaletteButton) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _PaletteButton) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _PaletteButton) -> Int16
        Set: Section(self: _PaletteButton) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _PaletteButton) -> str
        Set: ShortcutMenuBar(self: _PaletteButton) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _PaletteButton) -> str
        Set: StatusBarText(self: _PaletteButton) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _PaletteButton) -> Int16
        Set: TabIndex(self: _PaletteButton) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _PaletteButton) -> bool
        Set: TabStop(self: _PaletteButton) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _PaletteButton) -> str
        Set: Tag(self: _PaletteButton) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _PaletteButton) -> Int16
        Set: Top(self: _PaletteButton) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _PaletteButton) -> bool
        Set: TripleState(self: _PaletteButton) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _PaletteButton) -> str
        Set: ValidationRule(self: _PaletteButton) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _PaletteButton) -> str
        Set: ValidationText(self: _PaletteButton) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _PaletteButton) -> object
        Set: Value(self: _PaletteButton) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _PaletteButton) -> bool
        Set: Visible(self: _PaletteButton) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _PaletteButton) -> Int16
        Set: Width(self: _PaletteButton) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _PaletteButton) -> str
        Set: _Name(self: _PaletteButton) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _PaletteButton) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _PaletteButton, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _PaletteButton, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _PaletteButton) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _PaletteButton) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _PaletteButton) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _PaletteButton, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class PaletteButton(DispPaletteButtonEvents_Event, _PaletteButton): # skipped bases: <type 'object'>
    """ no doc """
    pass

class PaletteButtonClass(_PaletteButtonEvents_Event, PaletteButton, __ComObject): # skipped bases: <type '_PaletteButton'>, <type 'DispPaletteButtonEvents_Event'>, <type 'object'>
    """ PaletteButtonClass() """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: PaletteButtonClass) -> bool
        Set: AddColon(self: PaletteButtonClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: PaletteButtonClass) -> str
        Set: AfterUpdate(self: PaletteButtonClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: PaletteButtonClass) -> str
        Set: AfterUpdateMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: PaletteButtonClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: PaletteButtonClass) -> bool
        Set: AutoLabel(self: PaletteButtonClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: PaletteButtonClass) -> int
        Set: BackColor(self: PaletteButtonClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: PaletteButtonClass) -> Byte
        Set: BackStyle(self: PaletteButtonClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: PaletteButtonClass) -> str
        Set: BeforeUpdate(self: PaletteButtonClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: PaletteButtonClass) -> str
        Set: BeforeUpdateMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: PaletteButtonClass) -> bool
        Set: ColumnHidden(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: PaletteButtonClass) -> Int16
        Set: ColumnOrder(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: PaletteButtonClass) -> Int16
        Set: ColumnWidth(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: PaletteButtonClass) -> str
        Set: ControlName(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: PaletteButtonClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: PaletteButtonClass) -> str
        Set: ControlSource(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: PaletteButtonClass) -> str
        Set: ControlTipText(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: PaletteButtonClass) -> Byte
        Set: ControlType(self: PaletteButtonClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: PaletteButtonClass) -> str
        Set: DefaultValue(self: PaletteButtonClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: PaletteButtonClass) -> Byte
        Set: DisplayWhen(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: PaletteButtonClass) -> bool
        Set: Enabled(self: PaletteButtonClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: PaletteButtonClass) -> str
        Set: EventProcPrefix(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: PaletteButtonClass) -> Int16
        Set: Height(self: PaletteButtonClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: PaletteButtonClass) -> int
        Set: HelpContextId(self: PaletteButtonClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: PaletteButtonClass) -> bool
        Set: HideDuplicates(self: PaletteButtonClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: PaletteButtonClass) -> bool
        Set: InSelection(self: PaletteButtonClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: PaletteButtonClass) -> bool
        Set: IsVisible(self: PaletteButtonClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: PaletteButtonClass) -> Byte
        Set: LabelAlign(self: PaletteButtonClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: PaletteButtonClass) -> Int16
        Set: LabelX(self: PaletteButtonClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: PaletteButtonClass) -> Int16
        Set: LabelY(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: PaletteButtonClass) -> Int16
        Set: Left(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: PaletteButtonClass) -> bool
        Set: Locked(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: PaletteButtonClass) -> str
        Set: Name(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: PaletteButtonClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: PaletteButtonClass) -> str
        Set: OnClick(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: PaletteButtonClass) -> str
        Set: OnClickMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: PaletteButtonClass) -> str
        Set: OnDblClick(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: PaletteButtonClass) -> str
        Set: OnDblClickMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: PaletteButtonClass) -> str
        Set: OnEnter(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: PaletteButtonClass) -> str
        Set: OnEnterMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: PaletteButtonClass) -> str
        Set: OnExit(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: PaletteButtonClass) -> str
        Set: OnExitMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: PaletteButtonClass) -> str
        Set: OnGotFocus(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: PaletteButtonClass) -> str
        Set: OnGotFocusMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: PaletteButtonClass) -> str
        Set: OnKeyDown(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: PaletteButtonClass) -> str
        Set: OnKeyDownMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: PaletteButtonClass) -> str
        Set: OnKeyPress(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: PaletteButtonClass) -> str
        Set: OnKeyPressMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: PaletteButtonClass) -> str
        Set: OnKeyUp(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: PaletteButtonClass) -> str
        Set: OnKeyUpMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: PaletteButtonClass) -> str
        Set: OnLostFocus(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: PaletteButtonClass) -> str
        Set: OnLostFocusMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: PaletteButtonClass) -> str
        Set: OnMouseDown(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: PaletteButtonClass) -> str
        Set: OnMouseDownMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: PaletteButtonClass) -> str
        Set: OnMouseMove(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: PaletteButtonClass) -> str
        Set: OnMouseMoveMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: PaletteButtonClass) -> str
        Set: OnMouseUp(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: PaletteButtonClass) -> str
        Set: OnMouseUpMacro(self: PaletteButtonClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: PaletteButtonClass) -> int
        Set: OptionValue(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: PaletteButtonClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: PaletteButtonClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: PaletteButtonClass) -> Int16
        Set: Section(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: PaletteButtonClass) -> str
        Set: ShortcutMenuBar(self: PaletteButtonClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: PaletteButtonClass) -> str
        Set: StatusBarText(self: PaletteButtonClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: PaletteButtonClass) -> Int16
        Set: TabIndex(self: PaletteButtonClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: PaletteButtonClass) -> bool
        Set: TabStop(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: PaletteButtonClass) -> str
        Set: Tag(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: PaletteButtonClass) -> Int16
        Set: Top(self: PaletteButtonClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: PaletteButtonClass) -> bool
        Set: TripleState(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: PaletteButtonClass) -> str
        Set: ValidationRule(self: PaletteButtonClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: PaletteButtonClass) -> str
        Set: ValidationText(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: PaletteButtonClass) -> object
        Set: Value(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: PaletteButtonClass) -> bool
        Set: Visible(self: PaletteButtonClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: PaletteButtonClass) -> Int16
        Set: Width(self: PaletteButtonClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: PaletteButtonClass) -> str
        Set: _Name(self: PaletteButtonClass) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: PaletteButtonClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: PaletteButtonClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: PaletteButtonClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: PaletteButtonClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: PaletteButtonClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: PaletteButtonClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: PaletteButtonClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _PaletteButtonEvents_Event_add_AfterUpdate(self): # -> 
        """ _PaletteButtonEvents_Event_add_AfterUpdate(self: PaletteButtonClass, : _PaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_BeforeUpdate(self): # -> 
        """ _PaletteButtonEvents_Event_add_BeforeUpdate(self: PaletteButtonClass, : _PaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_Click(self): # -> 
        """ _PaletteButtonEvents_Event_add_Click(self: PaletteButtonClass, : _PaletteButtonEvents_ClickEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_DblClick(self): # -> 
        """ _PaletteButtonEvents_Event_add_DblClick(self: PaletteButtonClass, : _PaletteButtonEvents_DblClickEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_Enter(self): # -> 
        """ _PaletteButtonEvents_Event_add_Enter(self: PaletteButtonClass, : _PaletteButtonEvents_EnterEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_Exit(self): # -> 
        """ _PaletteButtonEvents_Event_add_Exit(self: PaletteButtonClass, : _PaletteButtonEvents_ExitEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_GotFocus(self): # -> 
        """ _PaletteButtonEvents_Event_add_GotFocus(self: PaletteButtonClass, : _PaletteButtonEvents_GotFocusEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_KeyDown(self): # -> 
        """ _PaletteButtonEvents_Event_add_KeyDown(self: PaletteButtonClass, : _PaletteButtonEvents_KeyDownEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_KeyPress(self): # -> 
        """ _PaletteButtonEvents_Event_add_KeyPress(self: PaletteButtonClass, : _PaletteButtonEvents_KeyPressEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_KeyUp(self): # -> 
        """ _PaletteButtonEvents_Event_add_KeyUp(self: PaletteButtonClass, : _PaletteButtonEvents_KeyUpEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_LostFocus(self): # -> 
        """ _PaletteButtonEvents_Event_add_LostFocus(self: PaletteButtonClass, : _PaletteButtonEvents_LostFocusEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_MouseDown(self): # -> 
        """ _PaletteButtonEvents_Event_add_MouseDown(self: PaletteButtonClass, : _PaletteButtonEvents_MouseDownEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_MouseMove(self): # -> 
        """ _PaletteButtonEvents_Event_add_MouseMove(self: PaletteButtonClass, : _PaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def _PaletteButtonEvents_Event_add_MouseUp(self): # -> 
        """ _PaletteButtonEvents_Event_add_MouseUp(self: PaletteButtonClass, : _PaletteButtonEvents_MouseUpEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_AfterUpdate(self): # -> 
        """ _PaletteButtonEvents_Event_remove_AfterUpdate(self: PaletteButtonClass, : _PaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _PaletteButtonEvents_Event_remove_BeforeUpdate(self: PaletteButtonClass, : _PaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_Click(self): # -> 
        """ _PaletteButtonEvents_Event_remove_Click(self: PaletteButtonClass, : _PaletteButtonEvents_ClickEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_DblClick(self): # -> 
        """ _PaletteButtonEvents_Event_remove_DblClick(self: PaletteButtonClass, : _PaletteButtonEvents_DblClickEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_Enter(self): # -> 
        """ _PaletteButtonEvents_Event_remove_Enter(self: PaletteButtonClass, : _PaletteButtonEvents_EnterEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_Exit(self): # -> 
        """ _PaletteButtonEvents_Event_remove_Exit(self: PaletteButtonClass, : _PaletteButtonEvents_ExitEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_GotFocus(self): # -> 
        """ _PaletteButtonEvents_Event_remove_GotFocus(self: PaletteButtonClass, : _PaletteButtonEvents_GotFocusEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_KeyDown(self): # -> 
        """ _PaletteButtonEvents_Event_remove_KeyDown(self: PaletteButtonClass, : _PaletteButtonEvents_KeyDownEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_KeyPress(self): # -> 
        """ _PaletteButtonEvents_Event_remove_KeyPress(self: PaletteButtonClass, : _PaletteButtonEvents_KeyPressEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_KeyUp(self): # -> 
        """ _PaletteButtonEvents_Event_remove_KeyUp(self: PaletteButtonClass, : _PaletteButtonEvents_KeyUpEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_LostFocus(self): # -> 
        """ _PaletteButtonEvents_Event_remove_LostFocus(self: PaletteButtonClass, : _PaletteButtonEvents_LostFocusEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_MouseDown(self): # -> 
        """ _PaletteButtonEvents_Event_remove_MouseDown(self: PaletteButtonClass, : _PaletteButtonEvents_MouseDownEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_MouseMove(self): # -> 
        """ _PaletteButtonEvents_Event_remove_MouseMove(self: PaletteButtonClass, : _PaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def _PaletteButtonEvents_Event_remove_MouseUp(self): # -> 
        """ _PaletteButtonEvents_Event_remove_MouseUp(self: PaletteButtonClass, : _PaletteButtonEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispPaletteButtonEvents_Event_AfterUpdate = ...
    DispPaletteButtonEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _PaletteButtonEvents_Event_AfterUpdate = ...
    _PaletteButtonEvents_Event_BeforeUpdate = ...
    _PaletteButtonEvents_Event_Click = ...
    _PaletteButtonEvents_Event_DblClick = ...
    _PaletteButtonEvents_Event_Enter = ...
    _PaletteButtonEvents_Event_Exit = ...
    _PaletteButtonEvents_Event_GotFocus = ...
    _PaletteButtonEvents_Event_KeyDown = ...
    _PaletteButtonEvents_Event_KeyPress = ...
    _PaletteButtonEvents_Event_KeyUp = ...
    _PaletteButtonEvents_Event_LostFocus = ...
    _PaletteButtonEvents_Event_MouseDown = ...
    _PaletteButtonEvents_Event_MouseMove = ...
    _PaletteButtonEvents_Event_MouseUp = ...


class _Printer: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def BottomMargin(self) -> int:
        """
        Get: BottomMargin(self: _Printer) -> int
        Set: BottomMargin(self: _Printer) = value
        """
        ...

    @property
    def ColorMode(self) -> AcPrintColor:
        """
        Get: ColorMode(self: _Printer) -> AcPrintColor
        Set: ColorMode(self: _Printer) = value
        """
        ...

    @property
    def ColumnSpacing(self) -> int:
        """
        Get: ColumnSpacing(self: _Printer) -> int
        Set: ColumnSpacing(self: _Printer) = value
        """
        ...

    @property
    def Copies(self) -> int:
        """
        Get: Copies(self: _Printer) -> int
        Set: Copies(self: _Printer) = value
        """
        ...

    @property
    def DataOnly(self) -> bool:
        """
        Get: DataOnly(self: _Printer) -> bool
        Set: DataOnly(self: _Printer) = value
        """
        ...

    @property
    def DefaultSize(self) -> bool:
        """
        Get: DefaultSize(self: _Printer) -> bool
        Set: DefaultSize(self: _Printer) = value
        """
        ...

    @property
    def DeviceName(self) -> str:
        """ Get: DeviceName(self: _Printer) -> str """
        ...

    @property
    def DriverName(self) -> str:
        """ Get: DriverName(self: _Printer) -> str """
        ...

    @property
    def Duplex(self) -> AcPrintDuplex:
        """
        Get: Duplex(self: _Printer) -> AcPrintDuplex
        Set: Duplex(self: _Printer) = value
        """
        ...

    @property
    def ItemLayout(self) -> AcPrintItemLayout:
        """
        Get: ItemLayout(self: _Printer) -> AcPrintItemLayout
        Set: ItemLayout(self: _Printer) = value
        """
        ...

    @property
    def ItemsAcross(self) -> int:
        """
        Get: ItemsAcross(self: _Printer) -> int
        Set: ItemsAcross(self: _Printer) = value
        """
        ...

    @property
    def ItemSizeHeight(self) -> int:
        """
        Get: ItemSizeHeight(self: _Printer) -> int
        Set: ItemSizeHeight(self: _Printer) = value
        """
        ...

    @property
    def ItemSizeWidth(self) -> int:
        """
        Get: ItemSizeWidth(self: _Printer) -> int
        Set: ItemSizeWidth(self: _Printer) = value
        """
        ...

    @property
    def LeftMargin(self) -> int:
        """
        Get: LeftMargin(self: _Printer) -> int
        Set: LeftMargin(self: _Printer) = value
        """
        ...

    @property
    def Orientation(self) -> AcPrintOrientation:
        """
        Get: Orientation(self: _Printer) -> AcPrintOrientation
        Set: Orientation(self: _Printer) = value
        """
        ...

    @property
    def PaperBin(self) -> AcPrintPaperBin:
        """
        Get: PaperBin(self: _Printer) -> AcPrintPaperBin
        Set: PaperBin(self: _Printer) = value
        """
        ...

    @property
    def PaperSize(self) -> AcPrintPaperSize:
        """
        Get: PaperSize(self: _Printer) -> AcPrintPaperSize
        Set: PaperSize(self: _Printer) = value
        """
        ...

    @property
    def Port(self) -> str:
        """ Get: Port(self: _Printer) -> str """
        ...

    @property
    def PrintQuality(self) -> AcPrintObjQuality:
        """
        Get: PrintQuality(self: _Printer) -> AcPrintObjQuality
        Set: PrintQuality(self: _Printer) = value
        """
        ...

    @property
    def RightMargin(self) -> int:
        """
        Get: RightMargin(self: _Printer) -> int
        Set: RightMargin(self: _Printer) = value
        """
        ...

    @property
    def RowSpacing(self) -> int:
        """
        Get: RowSpacing(self: _Printer) -> int
        Set: RowSpacing(self: _Printer) = value
        """
        ...

    @property
    def TopMargin(self) -> int:
        """
        Get: TopMargin(self: _Printer) -> int
        Set: TopMargin(self: _Printer) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Printer, dispid: int) -> bool """
        ...


class Printer(_Printer): # skipped bases: <type 'object'>
    """ no doc """
    pass

class PrinterClass(__ComObject, Printer): # skipped bases: <type '_Printer'>, <type 'object'>
    """ PrinterClass() """
    @property
    def BottomMargin(self) -> int:
        """
        Get: BottomMargin(self: PrinterClass) -> int
        Set: BottomMargin(self: PrinterClass) = value
        """
        ...

    @property
    def ColorMode(self) -> AcPrintColor:
        """
        Get: ColorMode(self: PrinterClass) -> AcPrintColor
        Set: ColorMode(self: PrinterClass) = value
        """
        ...

    @property
    def ColumnSpacing(self) -> int:
        """
        Get: ColumnSpacing(self: PrinterClass) -> int
        Set: ColumnSpacing(self: PrinterClass) = value
        """
        ...

    @property
    def Copies(self) -> int:
        """
        Get: Copies(self: PrinterClass) -> int
        Set: Copies(self: PrinterClass) = value
        """
        ...

    @property
    def DataOnly(self) -> bool:
        """
        Get: DataOnly(self: PrinterClass) -> bool
        Set: DataOnly(self: PrinterClass) = value
        """
        ...

    @property
    def DefaultSize(self) -> bool:
        """
        Get: DefaultSize(self: PrinterClass) -> bool
        Set: DefaultSize(self: PrinterClass) = value
        """
        ...

    @property
    def DeviceName(self) -> str:
        """ Get: DeviceName(self: PrinterClass) -> str """
        ...

    @property
    def DriverName(self) -> str:
        """ Get: DriverName(self: PrinterClass) -> str """
        ...

    @property
    def Duplex(self) -> AcPrintDuplex:
        """
        Get: Duplex(self: PrinterClass) -> AcPrintDuplex
        Set: Duplex(self: PrinterClass) = value
        """
        ...

    @property
    def ItemLayout(self) -> AcPrintItemLayout:
        """
        Get: ItemLayout(self: PrinterClass) -> AcPrintItemLayout
        Set: ItemLayout(self: PrinterClass) = value
        """
        ...

    @property
    def ItemsAcross(self) -> int:
        """
        Get: ItemsAcross(self: PrinterClass) -> int
        Set: ItemsAcross(self: PrinterClass) = value
        """
        ...

    @property
    def ItemSizeHeight(self) -> int:
        """
        Get: ItemSizeHeight(self: PrinterClass) -> int
        Set: ItemSizeHeight(self: PrinterClass) = value
        """
        ...

    @property
    def ItemSizeWidth(self) -> int:
        """
        Get: ItemSizeWidth(self: PrinterClass) -> int
        Set: ItemSizeWidth(self: PrinterClass) = value
        """
        ...

    @property
    def LeftMargin(self) -> int:
        """
        Get: LeftMargin(self: PrinterClass) -> int
        Set: LeftMargin(self: PrinterClass) = value
        """
        ...

    @property
    def Orientation(self) -> AcPrintOrientation:
        """
        Get: Orientation(self: PrinterClass) -> AcPrintOrientation
        Set: Orientation(self: PrinterClass) = value
        """
        ...

    @property
    def PaperBin(self) -> AcPrintPaperBin:
        """
        Get: PaperBin(self: PrinterClass) -> AcPrintPaperBin
        Set: PaperBin(self: PrinterClass) = value
        """
        ...

    @property
    def PaperSize(self) -> AcPrintPaperSize:
        """
        Get: PaperSize(self: PrinterClass) -> AcPrintPaperSize
        Set: PaperSize(self: PrinterClass) = value
        """
        ...

    @property
    def Port(self) -> str:
        """ Get: Port(self: PrinterClass) -> str """
        ...

    @property
    def PrintQuality(self) -> AcPrintObjQuality:
        """
        Get: PrintQuality(self: PrinterClass) -> AcPrintObjQuality
        Set: PrintQuality(self: PrinterClass) = value
        """
        ...

    @property
    def RightMargin(self) -> int:
        """
        Get: RightMargin(self: PrinterClass) -> int
        Set: RightMargin(self: PrinterClass) = value
        """
        ...

    @property
    def RowSpacing(self) -> int:
        """
        Get: RowSpacing(self: PrinterClass) -> int
        Set: RowSpacing(self: PrinterClass) = value
        """
        ...

    @property
    def TopMargin(self) -> int:
        """
        Get: TopMargin(self: PrinterClass) -> int
        Set: TopMargin(self: PrinterClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: PrinterClass, dispid: int) -> bool """
        ...


class Printers(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Printers) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Printers) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Printers) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Printers, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class ProcKind(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum ProcKind, values: Get (3), Let (1), Proc (0), Set (2) """
    Get: ProcKind = ...
    Let: ProcKind = ...
    Proc: ProcKind = ...
    Set: ProcKind = ...
    value__ = ...


class Properties(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Properties) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Properties) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Properties) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Properties, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _Rectangle: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Rectangle) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Rectangle) -> int
        Set: BackColor(self: _Rectangle) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Rectangle) -> Single
        Set: BackShade(self: _Rectangle) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Rectangle) -> Byte
        Set: BackStyle(self: _Rectangle) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Rectangle) -> int
        Set: BackThemeColorIndex(self: _Rectangle) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Rectangle) -> Single
        Set: BackTint(self: _Rectangle) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Rectangle) -> int
        Set: BorderColor(self: _Rectangle) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Rectangle) -> Byte
        Set: BorderLineStyle(self: _Rectangle) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Rectangle) -> Single
        Set: BorderShade(self: _Rectangle) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Rectangle) -> Byte
        Set: BorderStyle(self: _Rectangle) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Rectangle) -> int
        Set: BorderThemeColorIndex(self: _Rectangle) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Rectangle) -> Single
        Set: BorderTint(self: _Rectangle) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Rectangle) -> Byte
        Set: BorderWidth(self: _Rectangle) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Rectangle) -> str
        Set: ControlName(self: _Rectangle) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Rectangle) -> Byte
        Set: ControlType(self: _Rectangle) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Rectangle) -> Byte
        Set: DisplayWhen(self: _Rectangle) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Rectangle) -> str
        Set: EventProcPrefix(self: _Rectangle) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Rectangle) -> Int16
        Set: Height(self: _Rectangle) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Rectangle) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Rectangle) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Rectangle) -> bool
        Set: InSelection(self: _Rectangle) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Rectangle) -> bool
        Set: IsVisible(self: _Rectangle) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Rectangle) -> Int16
        Set: Left(self: _Rectangle) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Rectangle) -> str
        Set: Name(self: _Rectangle) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Rectangle) -> Byte
        Set: OldBorderStyle(self: _Rectangle) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Rectangle) -> str
        Set: OnClick(self: _Rectangle) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Rectangle) -> str
        Set: OnClickMacro(self: _Rectangle) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Rectangle) -> str
        Set: OnDblClick(self: _Rectangle) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Rectangle) -> str
        Set: OnDblClickMacro(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Rectangle) -> str
        Set: OnMouseDown(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Rectangle) -> str
        Set: OnMouseDownMacro(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Rectangle) -> str
        Set: OnMouseMove(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Rectangle) -> str
        Set: OnMouseMoveMacro(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Rectangle) -> str
        Set: OnMouseUp(self: _Rectangle) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Rectangle) -> str
        Set: OnMouseUpMacro(self: _Rectangle) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Rectangle) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Rectangle) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Rectangle) -> Int16
        Set: Section(self: _Rectangle) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Rectangle) -> Byte
        Set: SpecialEffect(self: _Rectangle) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Rectangle) -> str
        Set: Tag(self: _Rectangle) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Rectangle) -> Int16
        Set: Top(self: _Rectangle) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Rectangle) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Rectangle) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Rectangle) -> bool
        Set: Visible(self: _Rectangle) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Rectangle) -> Int16
        Set: Width(self: _Rectangle) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Rectangle) -> str
        Set: _Name(self: _Rectangle) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Rectangle, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Rectangle, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Rectangle) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Rectangle, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class Rectangle(DispRectangleEvents_Event, _Rectangle): # skipped bases: <type 'object'>
    """ no doc """
    pass

class RectangleClass(_RectangleEvents_Event, Rectangle, __ComObject): # skipped bases: <type 'DispRectangleEvents_Event'>, <type '_Rectangle'>, <type 'object'>
    """ RectangleClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: RectangleClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: RectangleClass) -> int
        Set: BackColor(self: RectangleClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: RectangleClass) -> Single
        Set: BackShade(self: RectangleClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: RectangleClass) -> Byte
        Set: BackStyle(self: RectangleClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: RectangleClass) -> int
        Set: BackThemeColorIndex(self: RectangleClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: RectangleClass) -> Single
        Set: BackTint(self: RectangleClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: RectangleClass) -> int
        Set: BorderColor(self: RectangleClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: RectangleClass) -> Byte
        Set: BorderLineStyle(self: RectangleClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: RectangleClass) -> Single
        Set: BorderShade(self: RectangleClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: RectangleClass) -> Byte
        Set: BorderStyle(self: RectangleClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: RectangleClass) -> int
        Set: BorderThemeColorIndex(self: RectangleClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: RectangleClass) -> Single
        Set: BorderTint(self: RectangleClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: RectangleClass) -> Byte
        Set: BorderWidth(self: RectangleClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: RectangleClass) -> str
        Set: ControlName(self: RectangleClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: RectangleClass) -> Byte
        Set: ControlType(self: RectangleClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: RectangleClass) -> Byte
        Set: DisplayWhen(self: RectangleClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: RectangleClass) -> str
        Set: EventProcPrefix(self: RectangleClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: RectangleClass) -> Int16
        Set: Height(self: RectangleClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: RectangleClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: RectangleClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: RectangleClass) -> bool
        Set: InSelection(self: RectangleClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: RectangleClass) -> bool
        Set: IsVisible(self: RectangleClass) = value
        """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: RectangleClass) -> Int16
        Set: Left(self: RectangleClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: RectangleClass) -> str
        Set: Name(self: RectangleClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: RectangleClass) -> Byte
        Set: OldBorderStyle(self: RectangleClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: RectangleClass) -> str
        Set: OnClick(self: RectangleClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: RectangleClass) -> str
        Set: OnClickMacro(self: RectangleClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: RectangleClass) -> str
        Set: OnDblClick(self: RectangleClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: RectangleClass) -> str
        Set: OnDblClickMacro(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: RectangleClass) -> str
        Set: OnMouseDown(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: RectangleClass) -> str
        Set: OnMouseDownMacro(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: RectangleClass) -> str
        Set: OnMouseMove(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: RectangleClass) -> str
        Set: OnMouseMoveMacro(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: RectangleClass) -> str
        Set: OnMouseUp(self: RectangleClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: RectangleClass) -> str
        Set: OnMouseUpMacro(self: RectangleClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: RectangleClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: RectangleClass) -> Properties """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: RectangleClass) -> Int16
        Set: Section(self: RectangleClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: RectangleClass) -> Byte
        Set: SpecialEffect(self: RectangleClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: RectangleClass) -> str
        Set: Tag(self: RectangleClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: RectangleClass) -> Int16
        Set: Top(self: RectangleClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: RectangleClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: RectangleClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: RectangleClass) -> bool
        Set: Visible(self: RectangleClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: RectangleClass) -> Int16
        Set: Width(self: RectangleClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: RectangleClass) -> str
        Set: _Name(self: RectangleClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: RectangleClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: RectangleClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: RectangleClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: RectangleClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _RectangleEvents_Event_add_Click(self): # -> 
        """ _RectangleEvents_Event_add_Click(self: RectangleClass, : _RectangleEvents_ClickEventHandler) """
        ...

    def _RectangleEvents_Event_add_DblClick(self): # -> 
        """ _RectangleEvents_Event_add_DblClick(self: RectangleClass, : _RectangleEvents_DblClickEventHandler) """
        ...

    def _RectangleEvents_Event_add_MouseDown(self): # -> 
        """ _RectangleEvents_Event_add_MouseDown(self: RectangleClass, : _RectangleEvents_MouseDownEventHandler) """
        ...

    def _RectangleEvents_Event_add_MouseMove(self): # -> 
        """ _RectangleEvents_Event_add_MouseMove(self: RectangleClass, : _RectangleEvents_MouseMoveEventHandler) """
        ...

    def _RectangleEvents_Event_add_MouseUp(self): # -> 
        """ _RectangleEvents_Event_add_MouseUp(self: RectangleClass, : _RectangleEvents_MouseUpEventHandler) """
        ...

    def _RectangleEvents_Event_remove_Click(self): # -> 
        """ _RectangleEvents_Event_remove_Click(self: RectangleClass, : _RectangleEvents_ClickEventHandler) """
        ...

    def _RectangleEvents_Event_remove_DblClick(self): # -> 
        """ _RectangleEvents_Event_remove_DblClick(self: RectangleClass, : _RectangleEvents_DblClickEventHandler) """
        ...

    def _RectangleEvents_Event_remove_MouseDown(self): # -> 
        """ _RectangleEvents_Event_remove_MouseDown(self: RectangleClass, : _RectangleEvents_MouseDownEventHandler) """
        ...

    def _RectangleEvents_Event_remove_MouseMove(self): # -> 
        """ _RectangleEvents_Event_remove_MouseMove(self: RectangleClass, : _RectangleEvents_MouseMoveEventHandler) """
        ...

    def _RectangleEvents_Event_remove_MouseUp(self): # -> 
        """ _RectangleEvents_Event_remove_MouseUp(self: RectangleClass, : _RectangleEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _RectangleEvents_Event_Click = ...
    _RectangleEvents_Event_DblClick = ...
    _RectangleEvents_Event_MouseDown = ...
    _RectangleEvents_Event_MouseMove = ...
    _RectangleEvents_Event_MouseUp = ...


class Reference: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def BuiltIn(self) -> bool:
        """ Get: BuiltIn(self: Reference) -> bool """
        ...

    @property
    def Collection(self) -> References:
        """ Get: Collection(self: Reference) -> References """
        ...

    @property
    def FullPath(self) -> str:
        """ Get: FullPath(self: Reference) -> str """
        ...

    @property
    def Guid(self) -> str:
        """ Get: Guid(self: Reference) -> str """
        ...

    @property
    def IsBroken(self) -> bool:
        """ Get: IsBroken(self: Reference) -> bool """
        ...

    @property
    def Kind(self) -> vbext_RefKind:
        """ Get: Kind(self: Reference) -> vbext_RefKind """
        ...

    @property
    def Major(self) -> int:
        """ Get: Major(self: Reference) -> int """
        ...

    @property
    def Minor(self) -> int:
        """ Get: Minor(self: Reference) -> int """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: Reference) -> str """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Reference, dispid: int) -> bool """
        ...


class _References(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: _References) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _References) -> object """
        ...


    def AddFromFile(self, FileName:str) -> Reference:
        """ AddFromFile(self: _References, FileName: str) -> Reference """
        ...

    def AddFromGuid(self, Guid:str, Major:int, Minor:int) -> Reference:
        """ AddFromGuid(self: _References, Guid: str, Major: int, Minor: int) -> Reference """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _References, dispid: int) -> bool """
        ...

    def Item(self, var:object) -> Reference:
        """ Item(self: _References, var: object) -> Reference """
        ...

    def Remove(self, Reference:Reference): # -> 
        """ Remove(self: _References, Reference: Reference) """
        ...


class _References_Events_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_ItemAdded(self): # -> 
        """ add_ItemAdded(self: _References_Events_Event, : _References_Events_ItemAddedEventHandler) """
        ...

    def add_ItemRemoved(self): # -> 
        """ add_ItemRemoved(self: _References_Events_Event, : _References_Events_ItemRemovedEventHandler) """
        ...

    def remove_ItemAdded(self): # -> 
        """ remove_ItemAdded(self: _References_Events_Event, : _References_Events_ItemAddedEventHandler) """
        ...

    def remove_ItemRemoved(self): # -> 
        """ remove_ItemRemoved(self: _References_Events_Event, : _References_Events_ItemRemovedEventHandler) """
        ...

    ItemAdded = ...
    ItemRemoved = ...


class References(_References_Events_Event, _References): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class ReferencesClass(References, __ComObject): # skipped bases: <type '_References'>, <type 'IEnumerable'>, <type '_References_Events_Event'>, <type 'object'>
    """ ReferencesClass() """
    @property
    def Count(self) -> int:
        """ Get: Count(self: ReferencesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ReferencesClass) -> object """
        ...


    def AddFromFile(self, FileName:str) -> Reference:
        """ AddFromFile(self: ReferencesClass, FileName: str) -> Reference """
        ...

    def AddFromGuid(self, Guid:str, Major:int, Minor:int) -> Reference:
        """ AddFromGuid(self: ReferencesClass, Guid: str, Major: int, Minor: int) -> Reference """
        ...

    def add_ItemAdded(self): # -> 
        """ add_ItemAdded(self: ReferencesClass, : _References_Events_ItemAddedEventHandler) """
        ...

    def add_ItemRemoved(self): # -> 
        """ add_ItemRemoved(self: ReferencesClass, : _References_Events_ItemRemovedEventHandler) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: ReferencesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ReferencesClass, dispid: int) -> bool """
        ...

    def Item(self, var:object) -> Reference:
        """ Item(self: ReferencesClass, var: object) -> Reference """
        ...

    def Remove(self, Reference:Reference): # -> 
        """ Remove(self: ReferencesClass, Reference: Reference) """
        ...

    def remove_ItemAdded(self): # -> 
        """ remove_ItemAdded(self: ReferencesClass, : _References_Events_ItemAddedEventHandler) """
        ...

    def remove_ItemRemoved(self): # -> 
        """ remove_ItemRemoved(self: ReferencesClass, : _References_Events_ItemRemovedEventHandler) """
        ...

    ItemAdded = ...
    ItemRemoved = ...


class RefKind(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum RefKind, values: Project (1), TypeLib (0) """
    Project: RefKind = ...
    TypeLib: RefKind = ...
    value__ = ...


class _Report3(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Report3) -> int
        Set: acHiddenCurrentPage(self: _Report3) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Report3) -> _Control """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: _Report3) -> bool
        Set: AllowDesignChanges(self: _Report3) = value
        """
        ...

    @property
    def AllowLayoutView(self) -> bool:
        """
        Get: AllowLayoutView(self: _Report3) -> bool
        Set: AllowLayoutView(self: _Report3) = value
        """
        ...

    @property
    def AllowReportView(self) -> bool:
        """
        Get: AllowReportView(self: _Report3) -> bool
        Set: AllowReportView(self: _Report3) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Report3) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: _Report3) -> bool
        Set: AutoCenter(self: _Report3) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: _Report3) -> bool
        Set: AutoResize(self: _Report3) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Report3) -> Byte
        Set: BorderStyle(self: _Report3) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Report3) -> str
        Set: Caption(self: _Report3) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: _Report3) -> bool
        Set: CloseButton(self: _Report3) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: _Report3) -> bool
        Set: ControlBox(self: _Report3) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Report3) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Report3) -> Int16
        Set: Count(self: _Report3) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Report3) -> int
        Set: CurrentRecord(self: _Report3) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: _Report3) -> Int16
        Set: CurrentView(self: _Report3) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: _Report3) -> Single
        Set: CurrentX(self: _Report3) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: _Report3) -> Single
        Set: CurrentY(self: _Report3) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: _Report3) -> Byte
        Set: Cycle(self: _Report3) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: _Report3) -> Byte
        Set: DateGrouping(self: _Report3) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: _Report3) -> Byte
        Set: DefaultView(self: _Report3) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Report3) -> bool
        Set: Dirty(self: _Report3) = value
        """
        ...

    @property
    def DisplayOnSharePointSite(self) -> Byte:
        """
        Get: DisplayOnSharePointSite(self: _Report3) -> Byte
        Set: DisplayOnSharePointSite(self: _Report3) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: _Report3) -> Int16
        Set: DrawMode(self: _Report3) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: _Report3) -> Int16
        Set: DrawStyle(self: _Report3) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: _Report3) -> Int16
        Set: DrawWidth(self: _Report3) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Report3) -> bool
        Set: FastLaserPrinting(self: _Report3) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: _Report3) -> int
        Set: FillColor(self: _Report3) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: _Report3) -> Int16
        Set: FillStyle(self: _Report3) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Report3) -> str
        Set: Filter(self: _Report3) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Report3) -> bool
        Set: FilterOn(self: _Report3) = value
        """
        ...

    @property
    def FilterOnLoad(self) -> bool:
        """
        Get: FilterOnLoad(self: _Report3) -> bool
        Set: FilterOnLoad(self: _Report3) = value
        """
        ...

    @property
    def FitToPage(self) -> bool:
        """
        Get: FitToPage(self: _Report3) -> bool
        Set: FitToPage(self: _Report3) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Report3) -> Int16
        Set: FontBold(self: _Report3) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: _Report3) -> Int16
        Set: FontItalic(self: _Report3) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Report3) -> str
        Set: FontName(self: _Report3) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Report3) -> Int16
        Set: FontSize(self: _Report3) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: _Report3) -> Int16
        Set: FontUnderline(self: _Report3) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Report3) -> int
        Set: ForeColor(self: _Report3) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: _Report3) -> Int16
        Set: FormatCount(self: _Report3) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Report3) -> str
        Set: FormName(self: _Report3) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Report3) -> Int16
        Set: GridX(self: _Report3) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Report3) -> Int16
        Set: GridY(self: _Report3) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: _Report3) -> Byte
        Set: GrpKeepTogether(self: _Report3) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: _Report3) -> int
        Set: HasData(self: _Report3) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Report3) -> bool
        Set: HasModule(self: _Report3) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: _Report3) -> int
        Set: Height(self: _Report3) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Report3) -> int
        Set: HelpContextId(self: _Report3) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Report3) -> str
        Set: HelpFile(self: _Report3) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Report3) -> int
        Set: Hwnd(self: _Report3) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Report3) -> str
        Set: InputParameters(self: _Report3) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: _Report3) -> bool
        Set: KeyPreview(self: _Report3) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Report3) -> bool
        Set: LayoutForPrint(self: _Report3) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: _Report3) -> int
        Set: Left(self: _Report3) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Report3) -> int
        Set: LogicalPageHeight(self: _Report3) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Report3) -> int
        Set: LogicalPageWidth(self: _Report3) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Report3) -> bool
        Set: MaxButton(self: _Report3) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Report3) -> str
        Set: MenuBar(self: _Report3) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Report3) -> bool
        Set: MinButton(self: _Report3) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: _Report3) -> Byte
        Set: MinMaxButtons(self: _Report3) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: _Report3) -> bool
        Set: Modal(self: _Report3) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Report3) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: _Report3) -> str
        Set: MouseWheel(self: _Report3) = value
        """
        ...

    @property
    def MouseWheelMacro(self) -> str:
        """
        Get: MouseWheelMacro(self: _Report3) -> str
        Set: MouseWheelMacro(self: _Report3) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: _Report3) -> bool
        Set: Moveable(self: _Report3) = value
        """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: _Report3) -> bool
        Set: MoveLayout(self: _Report3) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Report3) -> str
        Set: Name(self: _Report3) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: _Report3) -> bool
        Set: NextRecord(self: _Report3) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Report3) -> str
        Set: OnActivate(self: _Report3) = value
        """
        ...

    @property
    def OnActivateMacro(self) -> str:
        """
        Get: OnActivateMacro(self: _Report3) -> str
        Set: OnActivateMacro(self: _Report3) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: _Report3) -> str
        Set: OnApplyFilter(self: _Report3) = value
        """
        ...

    @property
    def OnApplyFilterMacro(self) -> str:
        """
        Get: OnApplyFilterMacro(self: _Report3) -> str
        Set: OnApplyFilterMacro(self: _Report3) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Report3) -> str
        Set: OnClick(self: _Report3) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Report3) -> str
        Set: OnClickMacro(self: _Report3) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Report3) -> str
        Set: OnClose(self: _Report3) = value
        """
        ...

    @property
    def OnCloseMacro(self) -> str:
        """
        Get: OnCloseMacro(self: _Report3) -> str
        Set: OnCloseMacro(self: _Report3) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: _Report3) -> str
        Set: OnCurrent(self: _Report3) = value
        """
        ...

    @property
    def OnCurrentMacro(self) -> str:
        """
        Get: OnCurrentMacro(self: _Report3) -> str
        Set: OnCurrentMacro(self: _Report3) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Report3) -> str
        Set: OnDblClick(self: _Report3) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Report3) -> str
        Set: OnDblClickMacro(self: _Report3) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Report3) -> str
        Set: OnDeactivate(self: _Report3) = value
        """
        ...

    @property
    def OnDeactivateMacro(self) -> str:
        """
        Get: OnDeactivateMacro(self: _Report3) -> str
        Set: OnDeactivateMacro(self: _Report3) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Report3) -> str
        Set: OnError(self: _Report3) = value
        """
        ...

    @property
    def OnErrorMacro(self) -> str:
        """
        Get: OnErrorMacro(self: _Report3) -> str
        Set: OnErrorMacro(self: _Report3) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: _Report3) -> str
        Set: OnFilter(self: _Report3) = value
        """
        ...

    @property
    def OnFilterMacro(self) -> str:
        """
        Get: OnFilterMacro(self: _Report3) -> str
        Set: OnFilterMacro(self: _Report3) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Report3) -> str
        Set: OnGotFocus(self: _Report3) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Report3) -> str
        Set: OnGotFocusMacro(self: _Report3) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Report3) -> str
        Set: OnKeyDown(self: _Report3) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Report3) -> str
        Set: OnKeyDownMacro(self: _Report3) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Report3) -> str
        Set: OnKeyPress(self: _Report3) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Report3) -> str
        Set: OnKeyPressMacro(self: _Report3) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Report3) -> str
        Set: OnKeyUp(self: _Report3) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Report3) -> str
        Set: OnKeyUpMacro(self: _Report3) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: _Report3) -> str
        Set: OnLoad(self: _Report3) = value
        """
        ...

    @property
    def OnLoadMacro(self) -> str:
        """
        Get: OnLoadMacro(self: _Report3) -> str
        Set: OnLoadMacro(self: _Report3) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Report3) -> str
        Set: OnLostFocus(self: _Report3) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Report3) -> str
        Set: OnLostFocusMacro(self: _Report3) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Report3) -> str
        Set: OnMenu(self: _Report3) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Report3) -> str
        Set: OnMouseDown(self: _Report3) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Report3) -> str
        Set: OnMouseDownMacro(self: _Report3) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Report3) -> str
        Set: OnMouseMove(self: _Report3) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Report3) -> str
        Set: OnMouseMoveMacro(self: _Report3) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Report3) -> str
        Set: OnMouseUp(self: _Report3) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Report3) -> str
        Set: OnMouseUpMacro(self: _Report3) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: _Report3) -> str
        Set: OnNoData(self: _Report3) = value
        """
        ...

    @property
    def OnNoDataMacro(self) -> str:
        """
        Get: OnNoDataMacro(self: _Report3) -> str
        Set: OnNoDataMacro(self: _Report3) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Report3) -> str
        Set: OnOpen(self: _Report3) = value
        """
        ...

    @property
    def OnOpenMacro(self) -> str:
        """
        Get: OnOpenMacro(self: _Report3) -> str
        Set: OnOpenMacro(self: _Report3) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: _Report3) -> str
        Set: OnPage(self: _Report3) = value
        """
        ...

    @property
    def OnPageMacro(self) -> str:
        """
        Get: OnPageMacro(self: _Report3) -> str
        Set: OnPageMacro(self: _Report3) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: _Report3) -> str
        Set: OnResize(self: _Report3) = value
        """
        ...

    @property
    def OnResizeMacro(self) -> str:
        """
        Get: OnResizeMacro(self: _Report3) -> str
        Set: OnResizeMacro(self: _Report3) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: _Report3) -> str
        Set: OnTimer(self: _Report3) = value
        """
        ...

    @property
    def OnTimerMacro(self) -> str:
        """
        Get: OnTimerMacro(self: _Report3) -> str
        Set: OnTimerMacro(self: _Report3) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: _Report3) -> str
        Set: OnUnload(self: _Report3) = value
        """
        ...

    @property
    def OnUnloadMacro(self) -> str:
        """
        Get: OnUnloadMacro(self: _Report3) -> str
        Set: OnUnloadMacro(self: _Report3) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: _Report3) -> object
        Set: OpenArgs(self: _Report3) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Report3) -> str
        Set: OrderBy(self: _Report3) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Report3) -> bool
        Set: OrderByOn(self: _Report3) = value
        """
        ...

    @property
    def OrderByOnLoad(self) -> bool:
        """
        Get: OrderByOnLoad(self: _Report3) -> bool
        Set: OrderByOnLoad(self: _Report3) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Report3) -> Byte
        Set: Orientation(self: _Report3) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Report3) -> int
        Set: Page(self: _Report3) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: _Report3) -> Byte
        Set: PageFooter(self: _Report3) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: _Report3) -> Byte
        Set: PageHeader(self: _Report3) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Report3) -> Int16
        Set: Pages(self: _Report3) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Report3) -> bool
        Set: Painting(self: _Report3) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Report3) -> object
        Set: PaintPalette(self: _Report3) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Report3) -> str
        Set: PaletteSource(self: _Report3) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Report3) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Report3) -> str
        Set: Picture(self: _Report3) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Report3) -> Byte
        Set: PictureAlignment(self: _Report3) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Report3) -> object
        Set: PictureData(self: _Report3) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: _Report3) -> Byte
        Set: PicturePages(self: _Report3) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Report3) -> object
        Set: PicturePalette(self: _Report3) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Report3) -> Byte
        Set: PictureSizeMode(self: _Report3) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Report3) -> bool
        Set: PictureTiling(self: _Report3) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Report3) -> Byte
        Set: PictureType(self: _Report3) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: _Report3) -> bool
        Set: PopUp(self: _Report3) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: _Report3) -> Int16
        Set: PrintCount(self: _Report3) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: _Report3) -> Printer
        Set: Printer(self: _Report3) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: _Report3) -> bool
        Set: PrintSection(self: _Report3) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Report3) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Report3) -> object
        Set: PrtDevMode(self: _Report3) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Report3) -> object
        Set: PrtDevNames(self: _Report3) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Report3) -> object
        Set: PrtMip(self: _Report3) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Report3) -> Byte
        Set: RecordLocks(self: _Report3) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Report3) -> object
        Set: Recordset(self: _Report3) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Report3) -> str
        Set: RecordSource(self: _Report3) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: _Report3) -> str
        Set: RecordSourceQualifier(self: _Report3) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _Report3) -> Report """
        ...

    @property
    def RibbonName(self) -> str:
        """
        Get: RibbonName(self: _Report3) -> str
        Set: RibbonName(self: _Report3) = value
        """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: _Report3) -> Single
        Set: ScaleHeight(self: _Report3) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: _Report3) -> Single
        Set: ScaleLeft(self: _Report3) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: _Report3) -> Int16
        Set: ScaleMode(self: _Report3) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: _Report3) -> Single
        Set: ScaleTop(self: _Report3) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: _Report3) -> Single
        Set: ScaleWidth(self: _Report3) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: _Report3) -> Byte
        Set: ScrollBars(self: _Report3) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Report3) -> str
        Set: ServerFilter(self: _Report3) = value
        """
        ...

    @property
    def Shape(self) -> str:
        """ Get: Shape(self: _Report3) -> str """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Report3) -> str
        Set: ShortcutMenuBar(self: _Report3) = value
        """
        ...

    @property
    def ShowPageMargins(self) -> bool:
        """
        Get: ShowPageMargins(self: _Report3) -> bool
        Set: ShowPageMargins(self: _Report3) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Report3) -> str
        Set: Tag(self: _Report3) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: _Report3) -> int
        Set: TimerInterval(self: _Report3) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Report3) -> str
        Set: Toolbar(self: _Report3) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: _Report3) -> int
        Set: Top(self: _Report3) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: _Report3) -> bool
        Set: UseDefaultPrinter(self: _Report3) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Report3) -> bool
        Set: Visible(self: _Report3) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Report3) -> Int16
        Set: Width(self: _Report3) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: _Report3) -> Int16
        Set: WindowHeight(self: _Report3) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: _Report3) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: _Report3) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: _Report3) -> Int16
        Set: WindowWidth(self: _Report3) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Report3) -> int
        Set: ZoomControl(self: _Report3) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Report3) -> str
        Set: _Name(self: _Report3) = value
        """
        ...


    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: _Report3, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: _Report3, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Report3, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: _Report3, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: _Report3, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Report3) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: _Report3, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: _Report3, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: _Report3, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Report3, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _ReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Activate(self): # -> 
        """ add_Activate(self: _ReportEvents_Event, : _ReportEvents_ActivateEventHandler) """
        ...

    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: _ReportEvents_Event, : _ReportEvents_ApplyFilterEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _ReportEvents_Event, : _ReportEvents_ClickEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: _ReportEvents_Event, : _ReportEvents_CloseEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: _ReportEvents_Event, : _ReportEvents_CurrentEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ReportEvents_Event, : _ReportEvents_DblClickEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: _ReportEvents_Event, : _ReportEvents_DeactivateEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: _ReportEvents_Event, : _ReportEvents_ErrorEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: _ReportEvents_Event, : _ReportEvents_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ReportEvents_Event, : _ReportEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _ReportEvents_Event, : _ReportEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _ReportEvents_Event, : _ReportEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _ReportEvents_Event, : _ReportEvents_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: _ReportEvents_Event, : _ReportEvents_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ReportEvents_Event, : _ReportEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ReportEvents_Event, : _ReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ReportEvents_Event, : _ReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ReportEvents_Event, : _ReportEvents_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: _ReportEvents_Event, : _ReportEvents_MouseWheelEventHandler) """
        ...

    def add_NoData(self): # -> 
        """ add_NoData(self: _ReportEvents_Event, : _ReportEvents_NoDataEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: _ReportEvents_Event, : _ReportEvents_OpenEventHandler) """
        ...

    def add_Page(self): # -> 
        """ add_Page(self: _ReportEvents_Event, : _ReportEvents_PageEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: _ReportEvents_Event, : _ReportEvents_ResizeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: _ReportEvents_Event, : _ReportEvents_TimerEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: _ReportEvents_Event, : _ReportEvents_UnloadEventHandler) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: _ReportEvents_Event, : _ReportEvents_ActivateEventHandler) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: _ReportEvents_Event, : _ReportEvents_ApplyFilterEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ReportEvents_Event, : _ReportEvents_ClickEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: _ReportEvents_Event, : _ReportEvents_CloseEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: _ReportEvents_Event, : _ReportEvents_CurrentEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ReportEvents_Event, : _ReportEvents_DblClickEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: _ReportEvents_Event, : _ReportEvents_DeactivateEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: _ReportEvents_Event, : _ReportEvents_ErrorEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: _ReportEvents_Event, : _ReportEvents_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ReportEvents_Event, : _ReportEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _ReportEvents_Event, : _ReportEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _ReportEvents_Event, : _ReportEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _ReportEvents_Event, : _ReportEvents_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: _ReportEvents_Event, : _ReportEvents_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ReportEvents_Event, : _ReportEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ReportEvents_Event, : _ReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ReportEvents_Event, : _ReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ReportEvents_Event, : _ReportEvents_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: _ReportEvents_Event, : _ReportEvents_MouseWheelEventHandler) """
        ...

    def remove_NoData(self): # -> 
        """ remove_NoData(self: _ReportEvents_Event, : _ReportEvents_NoDataEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: _ReportEvents_Event, : _ReportEvents_OpenEventHandler) """
        ...

    def remove_Page(self): # -> 
        """ remove_Page(self: _ReportEvents_Event, : _ReportEvents_PageEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: _ReportEvents_Event, : _ReportEvents_ResizeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: _ReportEvents_Event, : _ReportEvents_TimerEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: _ReportEvents_Event, : _ReportEvents_UnloadEventHandler) """
        ...

    Activate = ...
    ApplyFilter = ...
    Click = ...
    Close = ...
    Current = ...
    DblClick = ...
    Deactivate = ...
    Error = ...
    Filter = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    MouseWheel = ...
    NoData = ...
    Open = ...
    Page = ...
    Resize = ...
    Timer = ...
    Unload = ...


class Report(_ReportEvents_Event, _Report3): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class ReportClass(_ReportEventsOld_Event, Report, __ComObject): # skipped bases: <type '_ReportEvents_Event'>, <type '_Report3'>, <type 'IEnumerable'>, <type 'object'>
    """ ReportClass() """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: ReportClass) -> int
        Set: acHiddenCurrentPage(self: ReportClass) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: ReportClass) -> _Control """
        ...

    @property
    def AllowDesignChanges(self) -> bool:
        """
        Get: AllowDesignChanges(self: ReportClass) -> bool
        Set: AllowDesignChanges(self: ReportClass) = value
        """
        ...

    @property
    def AllowLayoutView(self) -> bool:
        """
        Get: AllowLayoutView(self: ReportClass) -> bool
        Set: AllowLayoutView(self: ReportClass) = value
        """
        ...

    @property
    def AllowReportView(self) -> bool:
        """
        Get: AllowReportView(self: ReportClass) -> bool
        Set: AllowReportView(self: ReportClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ReportClass) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: ReportClass) -> bool
        Set: AutoCenter(self: ReportClass) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: ReportClass) -> bool
        Set: AutoResize(self: ReportClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ReportClass) -> Byte
        Set: BorderStyle(self: ReportClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: ReportClass) -> str
        Set: Caption(self: ReportClass) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: ReportClass) -> bool
        Set: CloseButton(self: ReportClass) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: ReportClass) -> bool
        Set: ControlBox(self: ReportClass) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: ReportClass) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: ReportClass) -> Int16
        Set: Count(self: ReportClass) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: ReportClass) -> int
        Set: CurrentRecord(self: ReportClass) = value
        """
        ...

    @property
    def CurrentView(self) -> Int16:
        """
        Get: CurrentView(self: ReportClass) -> Int16
        Set: CurrentView(self: ReportClass) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: ReportClass) -> Single
        Set: CurrentX(self: ReportClass) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: ReportClass) -> Single
        Set: CurrentY(self: ReportClass) = value
        """
        ...

    @property
    def Cycle(self) -> Byte:
        """
        Get: Cycle(self: ReportClass) -> Byte
        Set: Cycle(self: ReportClass) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: ReportClass) -> Byte
        Set: DateGrouping(self: ReportClass) = value
        """
        ...

    @property
    def DefaultView(self) -> Byte:
        """
        Get: DefaultView(self: ReportClass) -> Byte
        Set: DefaultView(self: ReportClass) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: ReportClass) -> bool
        Set: Dirty(self: ReportClass) = value
        """
        ...

    @property
    def DisplayOnSharePointSite(self) -> Byte:
        """
        Get: DisplayOnSharePointSite(self: ReportClass) -> Byte
        Set: DisplayOnSharePointSite(self: ReportClass) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: ReportClass) -> Int16
        Set: DrawMode(self: ReportClass) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: ReportClass) -> Int16
        Set: DrawStyle(self: ReportClass) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: ReportClass) -> Int16
        Set: DrawWidth(self: ReportClass) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: ReportClass) -> bool
        Set: FastLaserPrinting(self: ReportClass) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: ReportClass) -> int
        Set: FillColor(self: ReportClass) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: ReportClass) -> Int16
        Set: FillStyle(self: ReportClass) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: ReportClass) -> str
        Set: Filter(self: ReportClass) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: ReportClass) -> bool
        Set: FilterOn(self: ReportClass) = value
        """
        ...

    @property
    def FilterOnLoad(self) -> bool:
        """
        Get: FilterOnLoad(self: ReportClass) -> bool
        Set: FilterOnLoad(self: ReportClass) = value
        """
        ...

    @property
    def FitToPage(self) -> bool:
        """
        Get: FitToPage(self: ReportClass) -> bool
        Set: FitToPage(self: ReportClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ReportClass) -> Int16
        Set: FontBold(self: ReportClass) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: ReportClass) -> Int16
        Set: FontItalic(self: ReportClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ReportClass) -> str
        Set: FontName(self: ReportClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ReportClass) -> Int16
        Set: FontSize(self: ReportClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: ReportClass) -> Int16
        Set: FontUnderline(self: ReportClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ReportClass) -> int
        Set: ForeColor(self: ReportClass) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: ReportClass) -> Int16
        Set: FormatCount(self: ReportClass) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: ReportClass) -> str
        Set: FormName(self: ReportClass) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: ReportClass) -> Int16
        Set: GridX(self: ReportClass) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: ReportClass) -> Int16
        Set: GridY(self: ReportClass) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: ReportClass) -> Byte
        Set: GrpKeepTogether(self: ReportClass) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: ReportClass) -> int
        Set: HasData(self: ReportClass) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: ReportClass) -> bool
        Set: HasModule(self: ReportClass) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: ReportClass) -> int
        Set: Height(self: ReportClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ReportClass) -> int
        Set: HelpContextId(self: ReportClass) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: ReportClass) -> str
        Set: HelpFile(self: ReportClass) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: ReportClass) -> int
        Set: Hwnd(self: ReportClass) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: ReportClass) -> str
        Set: InputParameters(self: ReportClass) = value
        """
        ...

    @property
    def KeyPreview(self) -> bool:
        """
        Get: KeyPreview(self: ReportClass) -> bool
        Set: KeyPreview(self: ReportClass) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: ReportClass) -> bool
        Set: LayoutForPrint(self: ReportClass) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: ReportClass) -> int
        Set: Left(self: ReportClass) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: ReportClass) -> int
        Set: LogicalPageHeight(self: ReportClass) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: ReportClass) -> int
        Set: LogicalPageWidth(self: ReportClass) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: ReportClass) -> bool
        Set: MaxButton(self: ReportClass) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: ReportClass) -> str
        Set: MenuBar(self: ReportClass) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: ReportClass) -> bool
        Set: MinButton(self: ReportClass) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: ReportClass) -> Byte
        Set: MinMaxButtons(self: ReportClass) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: ReportClass) -> bool
        Set: Modal(self: ReportClass) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: ReportClass) -> Module """
        ...

    @property
    def MouseWheel(self) -> str:
        """
        Get: MouseWheel(self: ReportClass) -> str
        Set: MouseWheel(self: ReportClass) = value
        """
        ...

    @property
    def MouseWheelMacro(self) -> str:
        """
        Get: MouseWheelMacro(self: ReportClass) -> str
        Set: MouseWheelMacro(self: ReportClass) = value
        """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: ReportClass) -> bool
        Set: Moveable(self: ReportClass) = value
        """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: ReportClass) -> bool
        Set: MoveLayout(self: ReportClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ReportClass) -> str
        Set: Name(self: ReportClass) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: ReportClass) -> bool
        Set: NextRecord(self: ReportClass) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: ReportClass) -> str
        Set: OnActivate(self: ReportClass) = value
        """
        ...

    @property
    def OnActivateMacro(self) -> str:
        """
        Get: OnActivateMacro(self: ReportClass) -> str
        Set: OnActivateMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnApplyFilter(self) -> str:
        """
        Get: OnApplyFilter(self: ReportClass) -> str
        Set: OnApplyFilter(self: ReportClass) = value
        """
        ...

    @property
    def OnApplyFilterMacro(self) -> str:
        """
        Get: OnApplyFilterMacro(self: ReportClass) -> str
        Set: OnApplyFilterMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ReportClass) -> str
        Set: OnClick(self: ReportClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ReportClass) -> str
        Set: OnClickMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: ReportClass) -> str
        Set: OnClose(self: ReportClass) = value
        """
        ...

    @property
    def OnCloseMacro(self) -> str:
        """
        Get: OnCloseMacro(self: ReportClass) -> str
        Set: OnCloseMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnCurrent(self) -> str:
        """
        Get: OnCurrent(self: ReportClass) -> str
        Set: OnCurrent(self: ReportClass) = value
        """
        ...

    @property
    def OnCurrentMacro(self) -> str:
        """
        Get: OnCurrentMacro(self: ReportClass) -> str
        Set: OnCurrentMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ReportClass) -> str
        Set: OnDblClick(self: ReportClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ReportClass) -> str
        Set: OnDblClickMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: ReportClass) -> str
        Set: OnDeactivate(self: ReportClass) = value
        """
        ...

    @property
    def OnDeactivateMacro(self) -> str:
        """
        Get: OnDeactivateMacro(self: ReportClass) -> str
        Set: OnDeactivateMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: ReportClass) -> str
        Set: OnError(self: ReportClass) = value
        """
        ...

    @property
    def OnErrorMacro(self) -> str:
        """
        Get: OnErrorMacro(self: ReportClass) -> str
        Set: OnErrorMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnFilter(self) -> str:
        """
        Get: OnFilter(self: ReportClass) -> str
        Set: OnFilter(self: ReportClass) = value
        """
        ...

    @property
    def OnFilterMacro(self) -> str:
        """
        Get: OnFilterMacro(self: ReportClass) -> str
        Set: OnFilterMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: ReportClass) -> str
        Set: OnGotFocus(self: ReportClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: ReportClass) -> str
        Set: OnGotFocusMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: ReportClass) -> str
        Set: OnKeyDown(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: ReportClass) -> str
        Set: OnKeyDownMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: ReportClass) -> str
        Set: OnKeyPress(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: ReportClass) -> str
        Set: OnKeyPressMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: ReportClass) -> str
        Set: OnKeyUp(self: ReportClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: ReportClass) -> str
        Set: OnKeyUpMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnLoad(self) -> str:
        """
        Get: OnLoad(self: ReportClass) -> str
        Set: OnLoad(self: ReportClass) = value
        """
        ...

    @property
    def OnLoadMacro(self) -> str:
        """
        Get: OnLoadMacro(self: ReportClass) -> str
        Set: OnLoadMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: ReportClass) -> str
        Set: OnLostFocus(self: ReportClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: ReportClass) -> str
        Set: OnLostFocusMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: ReportClass) -> str
        Set: OnMenu(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ReportClass) -> str
        Set: OnMouseDown(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ReportClass) -> str
        Set: OnMouseDownMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ReportClass) -> str
        Set: OnMouseMove(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ReportClass) -> str
        Set: OnMouseMoveMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ReportClass) -> str
        Set: OnMouseUp(self: ReportClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ReportClass) -> str
        Set: OnMouseUpMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: ReportClass) -> str
        Set: OnNoData(self: ReportClass) = value
        """
        ...

    @property
    def OnNoDataMacro(self) -> str:
        """
        Get: OnNoDataMacro(self: ReportClass) -> str
        Set: OnNoDataMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: ReportClass) -> str
        Set: OnOpen(self: ReportClass) = value
        """
        ...

    @property
    def OnOpenMacro(self) -> str:
        """
        Get: OnOpenMacro(self: ReportClass) -> str
        Set: OnOpenMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: ReportClass) -> str
        Set: OnPage(self: ReportClass) = value
        """
        ...

    @property
    def OnPageMacro(self) -> str:
        """
        Get: OnPageMacro(self: ReportClass) -> str
        Set: OnPageMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnResize(self) -> str:
        """
        Get: OnResize(self: ReportClass) -> str
        Set: OnResize(self: ReportClass) = value
        """
        ...

    @property
    def OnResizeMacro(self) -> str:
        """
        Get: OnResizeMacro(self: ReportClass) -> str
        Set: OnResizeMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnTimer(self) -> str:
        """
        Get: OnTimer(self: ReportClass) -> str
        Set: OnTimer(self: ReportClass) = value
        """
        ...

    @property
    def OnTimerMacro(self) -> str:
        """
        Get: OnTimerMacro(self: ReportClass) -> str
        Set: OnTimerMacro(self: ReportClass) = value
        """
        ...

    @property
    def OnUnload(self) -> str:
        """
        Get: OnUnload(self: ReportClass) -> str
        Set: OnUnload(self: ReportClass) = value
        """
        ...

    @property
    def OnUnloadMacro(self) -> str:
        """
        Get: OnUnloadMacro(self: ReportClass) -> str
        Set: OnUnloadMacro(self: ReportClass) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: ReportClass) -> object
        Set: OpenArgs(self: ReportClass) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: ReportClass) -> str
        Set: OrderBy(self: ReportClass) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: ReportClass) -> bool
        Set: OrderByOn(self: ReportClass) = value
        """
        ...

    @property
    def OrderByOnLoad(self) -> bool:
        """
        Get: OrderByOnLoad(self: ReportClass) -> bool
        Set: OrderByOnLoad(self: ReportClass) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: ReportClass) -> Byte
        Set: Orientation(self: ReportClass) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: ReportClass) -> int
        Set: Page(self: ReportClass) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: ReportClass) -> Byte
        Set: PageFooter(self: ReportClass) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: ReportClass) -> Byte
        Set: PageHeader(self: ReportClass) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: ReportClass) -> Int16
        Set: Pages(self: ReportClass) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: ReportClass) -> bool
        Set: Painting(self: ReportClass) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: ReportClass) -> object
        Set: PaintPalette(self: ReportClass) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: ReportClass) -> str
        Set: PaletteSource(self: ReportClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ReportClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: ReportClass) -> str
        Set: Picture(self: ReportClass) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: ReportClass) -> Byte
        Set: PictureAlignment(self: ReportClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: ReportClass) -> object
        Set: PictureData(self: ReportClass) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: ReportClass) -> Byte
        Set: PicturePages(self: ReportClass) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: ReportClass) -> object
        Set: PicturePalette(self: ReportClass) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: ReportClass) -> Byte
        Set: PictureSizeMode(self: ReportClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: ReportClass) -> bool
        Set: PictureTiling(self: ReportClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: ReportClass) -> Byte
        Set: PictureType(self: ReportClass) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: ReportClass) -> bool
        Set: PopUp(self: ReportClass) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: ReportClass) -> Int16
        Set: PrintCount(self: ReportClass) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: ReportClass) -> Printer
        Set: Printer(self: ReportClass) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: ReportClass) -> bool
        Set: PrintSection(self: ReportClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ReportClass) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: ReportClass) -> object
        Set: PrtDevMode(self: ReportClass) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: ReportClass) -> object
        Set: PrtDevNames(self: ReportClass) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: ReportClass) -> object
        Set: PrtMip(self: ReportClass) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: ReportClass) -> Byte
        Set: RecordLocks(self: ReportClass) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: ReportClass) -> object
        Set: Recordset(self: ReportClass) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: ReportClass) -> str
        Set: RecordSource(self: ReportClass) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: ReportClass) -> str
        Set: RecordSourceQualifier(self: ReportClass) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: ReportClass) -> Report """
        ...

    @property
    def RibbonName(self) -> str:
        """
        Get: RibbonName(self: ReportClass) -> str
        Set: RibbonName(self: ReportClass) = value
        """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: ReportClass) -> Single
        Set: ScaleHeight(self: ReportClass) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: ReportClass) -> Single
        Set: ScaleLeft(self: ReportClass) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: ReportClass) -> Int16
        Set: ScaleMode(self: ReportClass) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: ReportClass) -> Single
        Set: ScaleTop(self: ReportClass) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: ReportClass) -> Single
        Set: ScaleWidth(self: ReportClass) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: ReportClass) -> Byte
        Set: ScrollBars(self: ReportClass) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: ReportClass) -> str
        Set: ServerFilter(self: ReportClass) = value
        """
        ...

    @property
    def Shape(self) -> str:
        """ Get: Shape(self: ReportClass) -> str """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ReportClass) -> str
        Set: ShortcutMenuBar(self: ReportClass) = value
        """
        ...

    @property
    def ShowPageMargins(self) -> bool:
        """
        Get: ShowPageMargins(self: ReportClass) -> bool
        Set: ShowPageMargins(self: ReportClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ReportClass) -> str
        Set: Tag(self: ReportClass) = value
        """
        ...

    @property
    def TimerInterval(self) -> int:
        """
        Get: TimerInterval(self: ReportClass) -> int
        Set: TimerInterval(self: ReportClass) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: ReportClass) -> str
        Set: Toolbar(self: ReportClass) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: ReportClass) -> int
        Set: Top(self: ReportClass) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: ReportClass) -> bool
        Set: UseDefaultPrinter(self: ReportClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ReportClass) -> bool
        Set: Visible(self: ReportClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ReportClass) -> Int16
        Set: Width(self: ReportClass) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: ReportClass) -> Int16
        Set: WindowHeight(self: ReportClass) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: ReportClass) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: ReportClass) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: ReportClass) -> Int16
        Set: WindowWidth(self: ReportClass) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: ReportClass) -> int
        Set: ZoomControl(self: ReportClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ReportClass) -> str
        Set: _Name(self: ReportClass) = value
        """
        ...


    def add_ApplyFilter(self): # -> 
        """ add_ApplyFilter(self: ReportClass, : _ReportEvents_ApplyFilterEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: ReportClass, : _ReportEvents_ClickEventHandler) """
        ...

    def add_Current(self): # -> 
        """ add_Current(self: ReportClass, : _ReportEvents_CurrentEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: ReportClass, : _ReportEvents_DblClickEventHandler) """
        ...

    def add_Filter(self): # -> 
        """ add_Filter(self: ReportClass, : _ReportEvents_FilterEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: ReportClass, : _ReportEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: ReportClass, : _ReportEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: ReportClass, : _ReportEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: ReportClass, : _ReportEvents_KeyUpEventHandler) """
        ...

    def add_Load(self): # -> 
        """ add_Load(self: ReportClass, : _ReportEvents_LoadEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: ReportClass, : _ReportEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: ReportClass, : _ReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: ReportClass, : _ReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: ReportClass, : _ReportEvents_MouseUpEventHandler) """
        ...

    def add_MouseWheel(self): # -> 
        """ add_MouseWheel(self: ReportClass, : _ReportEvents_MouseWheelEventHandler) """
        ...

    def add_Resize(self): # -> 
        """ add_Resize(self: ReportClass, : _ReportEvents_ResizeEventHandler) """
        ...

    def add_Timer(self): # -> 
        """ add_Timer(self: ReportClass, : _ReportEvents_TimerEventHandler) """
        ...

    def add_Unload(self): # -> 
        """ add_Unload(self: ReportClass, : _ReportEvents_UnloadEventHandler) """
        ...

    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: ReportClass, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: ReportClass) -> IEnumerator """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: ReportClass, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ReportClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: ReportClass, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: ReportClass, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def remove_ApplyFilter(self): # -> 
        """ remove_ApplyFilter(self: ReportClass, : _ReportEvents_ApplyFilterEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: ReportClass, : _ReportEvents_ClickEventHandler) """
        ...

    def remove_Current(self): # -> 
        """ remove_Current(self: ReportClass, : _ReportEvents_CurrentEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: ReportClass, : _ReportEvents_DblClickEventHandler) """
        ...

    def remove_Filter(self): # -> 
        """ remove_Filter(self: ReportClass, : _ReportEvents_FilterEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: ReportClass, : _ReportEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: ReportClass, : _ReportEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: ReportClass, : _ReportEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: ReportClass, : _ReportEvents_KeyUpEventHandler) """
        ...

    def remove_Load(self): # -> 
        """ remove_Load(self: ReportClass, : _ReportEvents_LoadEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: ReportClass, : _ReportEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: ReportClass, : _ReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: ReportClass, : _ReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: ReportClass, : _ReportEvents_MouseUpEventHandler) """
        ...

    def remove_MouseWheel(self): # -> 
        """ remove_MouseWheel(self: ReportClass, : _ReportEvents_MouseWheelEventHandler) """
        ...

    def remove_Resize(self): # -> 
        """ remove_Resize(self: ReportClass, : _ReportEvents_ResizeEventHandler) """
        ...

    def remove_Timer(self): # -> 
        """ remove_Timer(self: ReportClass, : _ReportEvents_TimerEventHandler) """
        ...

    def remove_Unload(self): # -> 
        """ remove_Unload(self: ReportClass, : _ReportEvents_UnloadEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ReportClass) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: ReportClass, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: ReportClass, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: ReportClass, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ReportClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ReportEventsOld_Event_add_Activate(self): # -> 
        """ _ReportEventsOld_Event_add_Activate(self: ReportClass, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def _ReportEventsOld_Event_add_Close(self): # -> 
        """ _ReportEventsOld_Event_add_Close(self: ReportClass, : _ReportEventsOld_CloseEventHandler) """
        ...

    def _ReportEventsOld_Event_add_Deactivate(self): # -> 
        """ _ReportEventsOld_Event_add_Deactivate(self: ReportClass, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def _ReportEventsOld_Event_add_Error(self): # -> 
        """ _ReportEventsOld_Event_add_Error(self: ReportClass, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def _ReportEventsOld_Event_add_NoData(self): # -> 
        """ _ReportEventsOld_Event_add_NoData(self: ReportClass, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def _ReportEventsOld_Event_add_Open(self): # -> 
        """ _ReportEventsOld_Event_add_Open(self: ReportClass, : _ReportEventsOld_OpenEventHandler) """
        ...

    def _ReportEventsOld_Event_add_Page(self): # -> 
        """ _ReportEventsOld_Event_add_Page(self: ReportClass, : _ReportEventsOld_PageEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Activate(self): # -> 
        """ _ReportEventsOld_Event_remove_Activate(self: ReportClass, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Close(self): # -> 
        """ _ReportEventsOld_Event_remove_Close(self: ReportClass, : _ReportEventsOld_CloseEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Deactivate(self): # -> 
        """ _ReportEventsOld_Event_remove_Deactivate(self: ReportClass, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Error(self): # -> 
        """ _ReportEventsOld_Event_remove_Error(self: ReportClass, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_NoData(self): # -> 
        """ _ReportEventsOld_Event_remove_NoData(self: ReportClass, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Open(self): # -> 
        """ _ReportEventsOld_Event_remove_Open(self: ReportClass, : _ReportEventsOld_OpenEventHandler) """
        ...

    def _ReportEventsOld_Event_remove_Page(self): # -> 
        """ _ReportEventsOld_Event_remove_Page(self: ReportClass, : _ReportEventsOld_PageEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    ApplyFilter = ...
    Click = ...
    Close = ...
    Current = ...
    DblClick = ...
    Deactivate = ...
    Error = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    Load = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NoData = ...
    Open = ...
    Resize = ...
    Timer = ...
    Unload = ...
    _ReportEventsOld_Event_Activate = ...
    _ReportEventsOld_Event_Close = ...
    _ReportEventsOld_Event_Deactivate = ...
    _ReportEventsOld_Event_Error = ...
    _ReportEventsOld_Event_NoData = ...
    _ReportEventsOld_Event_Open = ...
    _ReportEventsOld_Event_Page = ...
    _ReportEvents_Event_Filter = ...
    _ReportEvents_Event_MouseWheel = ...
    _ReportEvents_Event_Page = ...


class _Report(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Report) -> int
        Set: acHiddenCurrentPage(self: _Report) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Report) -> _Control """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Report) -> Application """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Report) -> str
        Set: Caption(self: _Report) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Report) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Report) -> Int16
        Set: Count(self: _Report) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Report) -> int
        Set: CurrentRecord(self: _Report) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: _Report) -> Single
        Set: CurrentX(self: _Report) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: _Report) -> Single
        Set: CurrentY(self: _Report) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: _Report) -> Byte
        Set: DateGrouping(self: _Report) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Report) -> bool
        Set: Dirty(self: _Report) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: _Report) -> Int16
        Set: DrawMode(self: _Report) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: _Report) -> Int16
        Set: DrawStyle(self: _Report) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: _Report) -> Int16
        Set: DrawWidth(self: _Report) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Report) -> bool
        Set: FastLaserPrinting(self: _Report) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: _Report) -> int
        Set: FillColor(self: _Report) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: _Report) -> Int16
        Set: FillStyle(self: _Report) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Report) -> str
        Set: Filter(self: _Report) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Report) -> bool
        Set: FilterOn(self: _Report) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Report) -> Int16
        Set: FontBold(self: _Report) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: _Report) -> Int16
        Set: FontItalic(self: _Report) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Report) -> str
        Set: FontName(self: _Report) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Report) -> Int16
        Set: FontSize(self: _Report) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: _Report) -> Int16
        Set: FontUnderline(self: _Report) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Report) -> int
        Set: ForeColor(self: _Report) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: _Report) -> Int16
        Set: FormatCount(self: _Report) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Report) -> str
        Set: FormName(self: _Report) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Report) -> Int16
        Set: GridX(self: _Report) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Report) -> Int16
        Set: GridY(self: _Report) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: _Report) -> Byte
        Set: GrpKeepTogether(self: _Report) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: _Report) -> int
        Set: HasData(self: _Report) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Report) -> bool
        Set: HasModule(self: _Report) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: _Report) -> int
        Set: Height(self: _Report) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Report) -> int
        Set: HelpContextId(self: _Report) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Report) -> str
        Set: HelpFile(self: _Report) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Report) -> int
        Set: Hwnd(self: _Report) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Report) -> str
        Set: InputParameters(self: _Report) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Report) -> bool
        Set: LayoutForPrint(self: _Report) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: _Report) -> int
        Set: Left(self: _Report) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Report) -> int
        Set: LogicalPageHeight(self: _Report) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Report) -> int
        Set: LogicalPageWidth(self: _Report) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Report) -> bool
        Set: MaxButton(self: _Report) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Report) -> str
        Set: MenuBar(self: _Report) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Report) -> bool
        Set: MinButton(self: _Report) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Report) -> Module """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: _Report) -> bool
        Set: MoveLayout(self: _Report) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Report) -> str
        Set: Name(self: _Report) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: _Report) -> bool
        Set: NextRecord(self: _Report) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Report) -> str
        Set: OnActivate(self: _Report) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Report) -> str
        Set: OnClose(self: _Report) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Report) -> str
        Set: OnDeactivate(self: _Report) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Report) -> str
        Set: OnError(self: _Report) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Report) -> str
        Set: OnMenu(self: _Report) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: _Report) -> str
        Set: OnNoData(self: _Report) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Report) -> str
        Set: OnOpen(self: _Report) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: _Report) -> str
        Set: OnPage(self: _Report) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Report) -> str
        Set: OrderBy(self: _Report) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Report) -> bool
        Set: OrderByOn(self: _Report) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Report) -> Byte
        Set: Orientation(self: _Report) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Report) -> int
        Set: Page(self: _Report) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: _Report) -> Byte
        Set: PageFooter(self: _Report) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: _Report) -> Byte
        Set: PageHeader(self: _Report) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Report) -> Int16
        Set: Pages(self: _Report) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Report) -> bool
        Set: Painting(self: _Report) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Report) -> object
        Set: PaintPalette(self: _Report) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Report) -> str
        Set: PaletteSource(self: _Report) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Report) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Report) -> str
        Set: Picture(self: _Report) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Report) -> Byte
        Set: PictureAlignment(self: _Report) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Report) -> object
        Set: PictureData(self: _Report) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: _Report) -> Byte
        Set: PicturePages(self: _Report) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Report) -> object
        Set: PicturePalette(self: _Report) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Report) -> Byte
        Set: PictureSizeMode(self: _Report) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Report) -> bool
        Set: PictureTiling(self: _Report) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Report) -> Byte
        Set: PictureType(self: _Report) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: _Report) -> Int16
        Set: PrintCount(self: _Report) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: _Report) -> bool
        Set: PrintSection(self: _Report) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Report) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Report) -> object
        Set: PrtDevMode(self: _Report) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Report) -> object
        Set: PrtDevNames(self: _Report) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Report) -> object
        Set: PrtMip(self: _Report) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Report) -> Byte
        Set: RecordLocks(self: _Report) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Report) -> str
        Set: RecordSource(self: _Report) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _Report) -> Report """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: _Report) -> Single
        Set: ScaleHeight(self: _Report) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: _Report) -> Single
        Set: ScaleLeft(self: _Report) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: _Report) -> Int16
        Set: ScaleMode(self: _Report) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: _Report) -> Single
        Set: ScaleTop(self: _Report) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: _Report) -> Single
        Set: ScaleWidth(self: _Report) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Report) -> str
        Set: ServerFilter(self: _Report) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Report) -> str
        Set: ShortcutMenuBar(self: _Report) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Report) -> str
        Set: Tag(self: _Report) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Report) -> str
        Set: Toolbar(self: _Report) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: _Report) -> int
        Set: Top(self: _Report) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Report) -> bool
        Set: Visible(self: _Report) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Report) -> Int16
        Set: Width(self: _Report) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Report) -> int
        Set: ZoomControl(self: _Report) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Report) -> str
        Set: _Name(self: _Report) = value
        """
        ...


    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: _Report, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: _Report, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: _Report, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: _Report, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: _Report, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: _Report, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: _Report, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Report, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _ReportEventsOld_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Activate(self): # -> 
        """ add_Activate(self: _ReportEventsOld_Event, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: _ReportEventsOld_Event, : _ReportEventsOld_CloseEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: _ReportEventsOld_Event, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: _ReportEventsOld_Event, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def add_NoData(self): # -> 
        """ add_NoData(self: _ReportEventsOld_Event, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: _ReportEventsOld_Event, : _ReportEventsOld_OpenEventHandler) """
        ...

    def add_Page(self): # -> 
        """ add_Page(self: _ReportEventsOld_Event, : _ReportEventsOld_PageEventHandler) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: _ReportEventsOld_Event, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: _ReportEventsOld_Event, : _ReportEventsOld_CloseEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: _ReportEventsOld_Event, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: _ReportEventsOld_Event, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def remove_NoData(self): # -> 
        """ remove_NoData(self: _ReportEventsOld_Event, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: _ReportEventsOld_Event, : _ReportEventsOld_OpenEventHandler) """
        ...

    def remove_Page(self): # -> 
        """ remove_Page(self: _ReportEventsOld_Event, : _ReportEventsOld_PageEventHandler) """
        ...

    Activate = ...
    Close = ...
    Deactivate = ...
    Error = ...
    NoData = ...
    Open = ...
    Page = ...


class ReportOld(_ReportEventsOld_Event, _Report): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class ReportOldClass(ReportOld, __ComObject): # skipped bases: <type '_Report'>, <type 'IEnumerable'>, <type '_ReportEventsOld_Event'>, <type 'object'>
    """ ReportOldClass() """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: ReportOldClass) -> int
        Set: acHiddenCurrentPage(self: ReportOldClass) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: ReportOldClass) -> _Control """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ReportOldClass) -> Application """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: ReportOldClass) -> str
        Set: Caption(self: ReportOldClass) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: ReportOldClass) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: ReportOldClass) -> Int16
        Set: Count(self: ReportOldClass) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: ReportOldClass) -> int
        Set: CurrentRecord(self: ReportOldClass) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: ReportOldClass) -> Single
        Set: CurrentX(self: ReportOldClass) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: ReportOldClass) -> Single
        Set: CurrentY(self: ReportOldClass) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: ReportOldClass) -> Byte
        Set: DateGrouping(self: ReportOldClass) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: ReportOldClass) -> bool
        Set: Dirty(self: ReportOldClass) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: ReportOldClass) -> Int16
        Set: DrawMode(self: ReportOldClass) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: ReportOldClass) -> Int16
        Set: DrawStyle(self: ReportOldClass) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: ReportOldClass) -> Int16
        Set: DrawWidth(self: ReportOldClass) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: ReportOldClass) -> bool
        Set: FastLaserPrinting(self: ReportOldClass) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: ReportOldClass) -> int
        Set: FillColor(self: ReportOldClass) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: ReportOldClass) -> Int16
        Set: FillStyle(self: ReportOldClass) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: ReportOldClass) -> str
        Set: Filter(self: ReportOldClass) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: ReportOldClass) -> bool
        Set: FilterOn(self: ReportOldClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ReportOldClass) -> Int16
        Set: FontBold(self: ReportOldClass) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: ReportOldClass) -> Int16
        Set: FontItalic(self: ReportOldClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ReportOldClass) -> str
        Set: FontName(self: ReportOldClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ReportOldClass) -> Int16
        Set: FontSize(self: ReportOldClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: ReportOldClass) -> Int16
        Set: FontUnderline(self: ReportOldClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ReportOldClass) -> int
        Set: ForeColor(self: ReportOldClass) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: ReportOldClass) -> Int16
        Set: FormatCount(self: ReportOldClass) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: ReportOldClass) -> str
        Set: FormName(self: ReportOldClass) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: ReportOldClass) -> Int16
        Set: GridX(self: ReportOldClass) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: ReportOldClass) -> Int16
        Set: GridY(self: ReportOldClass) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: ReportOldClass) -> Byte
        Set: GrpKeepTogether(self: ReportOldClass) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: ReportOldClass) -> int
        Set: HasData(self: ReportOldClass) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: ReportOldClass) -> bool
        Set: HasModule(self: ReportOldClass) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: ReportOldClass) -> int
        Set: Height(self: ReportOldClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ReportOldClass) -> int
        Set: HelpContextId(self: ReportOldClass) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: ReportOldClass) -> str
        Set: HelpFile(self: ReportOldClass) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: ReportOldClass) -> int
        Set: Hwnd(self: ReportOldClass) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: ReportOldClass) -> str
        Set: InputParameters(self: ReportOldClass) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: ReportOldClass) -> bool
        Set: LayoutForPrint(self: ReportOldClass) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: ReportOldClass) -> int
        Set: Left(self: ReportOldClass) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: ReportOldClass) -> int
        Set: LogicalPageHeight(self: ReportOldClass) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: ReportOldClass) -> int
        Set: LogicalPageWidth(self: ReportOldClass) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: ReportOldClass) -> bool
        Set: MaxButton(self: ReportOldClass) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: ReportOldClass) -> str
        Set: MenuBar(self: ReportOldClass) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: ReportOldClass) -> bool
        Set: MinButton(self: ReportOldClass) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: ReportOldClass) -> Module """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: ReportOldClass) -> bool
        Set: MoveLayout(self: ReportOldClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ReportOldClass) -> str
        Set: Name(self: ReportOldClass) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: ReportOldClass) -> bool
        Set: NextRecord(self: ReportOldClass) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: ReportOldClass) -> str
        Set: OnActivate(self: ReportOldClass) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: ReportOldClass) -> str
        Set: OnClose(self: ReportOldClass) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: ReportOldClass) -> str
        Set: OnDeactivate(self: ReportOldClass) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: ReportOldClass) -> str
        Set: OnError(self: ReportOldClass) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: ReportOldClass) -> str
        Set: OnMenu(self: ReportOldClass) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: ReportOldClass) -> str
        Set: OnNoData(self: ReportOldClass) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: ReportOldClass) -> str
        Set: OnOpen(self: ReportOldClass) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: ReportOldClass) -> str
        Set: OnPage(self: ReportOldClass) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: ReportOldClass) -> str
        Set: OrderBy(self: ReportOldClass) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: ReportOldClass) -> bool
        Set: OrderByOn(self: ReportOldClass) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: ReportOldClass) -> Byte
        Set: Orientation(self: ReportOldClass) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: ReportOldClass) -> int
        Set: Page(self: ReportOldClass) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: ReportOldClass) -> Byte
        Set: PageFooter(self: ReportOldClass) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: ReportOldClass) -> Byte
        Set: PageHeader(self: ReportOldClass) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: ReportOldClass) -> Int16
        Set: Pages(self: ReportOldClass) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: ReportOldClass) -> bool
        Set: Painting(self: ReportOldClass) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: ReportOldClass) -> object
        Set: PaintPalette(self: ReportOldClass) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: ReportOldClass) -> str
        Set: PaletteSource(self: ReportOldClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ReportOldClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: ReportOldClass) -> str
        Set: Picture(self: ReportOldClass) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: ReportOldClass) -> Byte
        Set: PictureAlignment(self: ReportOldClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: ReportOldClass) -> object
        Set: PictureData(self: ReportOldClass) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: ReportOldClass) -> Byte
        Set: PicturePages(self: ReportOldClass) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: ReportOldClass) -> object
        Set: PicturePalette(self: ReportOldClass) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: ReportOldClass) -> Byte
        Set: PictureSizeMode(self: ReportOldClass) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: ReportOldClass) -> bool
        Set: PictureTiling(self: ReportOldClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: ReportOldClass) -> Byte
        Set: PictureType(self: ReportOldClass) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: ReportOldClass) -> Int16
        Set: PrintCount(self: ReportOldClass) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: ReportOldClass) -> bool
        Set: PrintSection(self: ReportOldClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ReportOldClass) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: ReportOldClass) -> object
        Set: PrtDevMode(self: ReportOldClass) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: ReportOldClass) -> object
        Set: PrtDevNames(self: ReportOldClass) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: ReportOldClass) -> object
        Set: PrtMip(self: ReportOldClass) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: ReportOldClass) -> Byte
        Set: RecordLocks(self: ReportOldClass) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: ReportOldClass) -> str
        Set: RecordSource(self: ReportOldClass) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: ReportOldClass) -> Report """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: ReportOldClass) -> Single
        Set: ScaleHeight(self: ReportOldClass) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: ReportOldClass) -> Single
        Set: ScaleLeft(self: ReportOldClass) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: ReportOldClass) -> Int16
        Set: ScaleMode(self: ReportOldClass) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: ReportOldClass) -> Single
        Set: ScaleTop(self: ReportOldClass) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: ReportOldClass) -> Single
        Set: ScaleWidth(self: ReportOldClass) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: ReportOldClass) -> str
        Set: ServerFilter(self: ReportOldClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ReportOldClass) -> str
        Set: ShortcutMenuBar(self: ReportOldClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ReportOldClass) -> str
        Set: Tag(self: ReportOldClass) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: ReportOldClass) -> str
        Set: Toolbar(self: ReportOldClass) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: ReportOldClass) -> int
        Set: Top(self: ReportOldClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ReportOldClass) -> bool
        Set: Visible(self: ReportOldClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ReportOldClass) -> Int16
        Set: Width(self: ReportOldClass) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: ReportOldClass) -> int
        Set: ZoomControl(self: ReportOldClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ReportOldClass) -> str
        Set: _Name(self: ReportOldClass) = value
        """
        ...


    def add_Activate(self): # -> 
        """ add_Activate(self: ReportOldClass, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: ReportOldClass, : _ReportEventsOld_CloseEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: ReportOldClass, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: ReportOldClass, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def add_NoData(self): # -> 
        """ add_NoData(self: ReportOldClass, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: ReportOldClass, : _ReportEventsOld_OpenEventHandler) """
        ...

    def add_Page(self): # -> 
        """ add_Page(self: ReportOldClass, : _ReportEventsOld_PageEventHandler) """
        ...

    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: ReportOldClass, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: ReportOldClass) -> IEnumerator """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: ReportOldClass, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: ReportOldClass, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: ReportOldClass, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: ReportOldClass, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: ReportOldClass, : _ReportEventsOld_CloseEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: ReportOldClass, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: ReportOldClass, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def remove_NoData(self): # -> 
        """ remove_NoData(self: ReportOldClass, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: ReportOldClass, : _ReportEventsOld_OpenEventHandler) """
        ...

    def remove_Page(self): # -> 
        """ remove_Page(self: ReportOldClass, : _ReportEventsOld_PageEventHandler) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: ReportOldClass, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: ReportOldClass, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: ReportOldClass, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ReportOldClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    Close = ...
    Deactivate = ...
    Error = ...
    NoData = ...
    Open = ...
    _ReportEventsOld_Event_Page = ...


class _Report2(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: _Report2) -> int
        Set: acHiddenCurrentPage(self: _Report2) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: _Report2) -> _Control """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Report2) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: _Report2) -> bool
        Set: AutoCenter(self: _Report2) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: _Report2) -> bool
        Set: AutoResize(self: _Report2) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Report2) -> Byte
        Set: BorderStyle(self: _Report2) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _Report2) -> str
        Set: Caption(self: _Report2) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: _Report2) -> bool
        Set: CloseButton(self: _Report2) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: _Report2) -> bool
        Set: ControlBox(self: _Report2) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _Report2) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: _Report2) -> Int16
        Set: Count(self: _Report2) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: _Report2) -> int
        Set: CurrentRecord(self: _Report2) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: _Report2) -> Single
        Set: CurrentX(self: _Report2) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: _Report2) -> Single
        Set: CurrentY(self: _Report2) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: _Report2) -> Byte
        Set: DateGrouping(self: _Report2) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: _Report2) -> bool
        Set: Dirty(self: _Report2) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: _Report2) -> Int16
        Set: DrawMode(self: _Report2) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: _Report2) -> Int16
        Set: DrawStyle(self: _Report2) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: _Report2) -> Int16
        Set: DrawWidth(self: _Report2) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: _Report2) -> bool
        Set: FastLaserPrinting(self: _Report2) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: _Report2) -> int
        Set: FillColor(self: _Report2) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: _Report2) -> Int16
        Set: FillStyle(self: _Report2) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: _Report2) -> str
        Set: Filter(self: _Report2) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: _Report2) -> bool
        Set: FilterOn(self: _Report2) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Report2) -> Int16
        Set: FontBold(self: _Report2) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: _Report2) -> Int16
        Set: FontItalic(self: _Report2) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Report2) -> str
        Set: FontName(self: _Report2) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Report2) -> Int16
        Set: FontSize(self: _Report2) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: _Report2) -> Int16
        Set: FontUnderline(self: _Report2) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Report2) -> int
        Set: ForeColor(self: _Report2) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: _Report2) -> Int16
        Set: FormatCount(self: _Report2) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: _Report2) -> str
        Set: FormName(self: _Report2) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: _Report2) -> Int16
        Set: GridX(self: _Report2) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: _Report2) -> Int16
        Set: GridY(self: _Report2) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: _Report2) -> Byte
        Set: GrpKeepTogether(self: _Report2) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: _Report2) -> int
        Set: HasData(self: _Report2) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: _Report2) -> bool
        Set: HasModule(self: _Report2) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: _Report2) -> int
        Set: Height(self: _Report2) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Report2) -> int
        Set: HelpContextId(self: _Report2) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: _Report2) -> str
        Set: HelpFile(self: _Report2) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: _Report2) -> int
        Set: Hwnd(self: _Report2) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: _Report2) -> str
        Set: InputParameters(self: _Report2) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: _Report2) -> bool
        Set: LayoutForPrint(self: _Report2) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: _Report2) -> int
        Set: Left(self: _Report2) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: _Report2) -> int
        Set: LogicalPageHeight(self: _Report2) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: _Report2) -> int
        Set: LogicalPageWidth(self: _Report2) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: _Report2) -> bool
        Set: MaxButton(self: _Report2) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: _Report2) -> str
        Set: MenuBar(self: _Report2) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: _Report2) -> bool
        Set: MinButton(self: _Report2) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: _Report2) -> Byte
        Set: MinMaxButtons(self: _Report2) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: _Report2) -> bool
        Set: Modal(self: _Report2) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: _Report2) -> Module """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: _Report2) -> bool
        Set: Moveable(self: _Report2) = value
        """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: _Report2) -> bool
        Set: MoveLayout(self: _Report2) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Report2) -> str
        Set: Name(self: _Report2) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: _Report2) -> bool
        Set: NextRecord(self: _Report2) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: _Report2) -> str
        Set: OnActivate(self: _Report2) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: _Report2) -> str
        Set: OnClose(self: _Report2) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: _Report2) -> str
        Set: OnDeactivate(self: _Report2) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: _Report2) -> str
        Set: OnError(self: _Report2) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: _Report2) -> str
        Set: OnMenu(self: _Report2) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: _Report2) -> str
        Set: OnNoData(self: _Report2) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: _Report2) -> str
        Set: OnOpen(self: _Report2) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: _Report2) -> str
        Set: OnPage(self: _Report2) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: _Report2) -> object
        Set: OpenArgs(self: _Report2) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: _Report2) -> str
        Set: OrderBy(self: _Report2) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: _Report2) -> bool
        Set: OrderByOn(self: _Report2) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: _Report2) -> Byte
        Set: Orientation(self: _Report2) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: _Report2) -> int
        Set: Page(self: _Report2) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: _Report2) -> Byte
        Set: PageFooter(self: _Report2) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: _Report2) -> Byte
        Set: PageHeader(self: _Report2) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: _Report2) -> Int16
        Set: Pages(self: _Report2) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: _Report2) -> bool
        Set: Painting(self: _Report2) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: _Report2) -> object
        Set: PaintPalette(self: _Report2) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: _Report2) -> str
        Set: PaletteSource(self: _Report2) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Report2) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _Report2) -> str
        Set: Picture(self: _Report2) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: _Report2) -> Byte
        Set: PictureAlignment(self: _Report2) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _Report2) -> object
        Set: PictureData(self: _Report2) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: _Report2) -> Byte
        Set: PicturePages(self: _Report2) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: _Report2) -> object
        Set: PicturePalette(self: _Report2) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: _Report2) -> Byte
        Set: PictureSizeMode(self: _Report2) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: _Report2) -> bool
        Set: PictureTiling(self: _Report2) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _Report2) -> Byte
        Set: PictureType(self: _Report2) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: _Report2) -> bool
        Set: PopUp(self: _Report2) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: _Report2) -> Int16
        Set: PrintCount(self: _Report2) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: _Report2) -> Printer
        Set: Printer(self: _Report2) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: _Report2) -> bool
        Set: PrintSection(self: _Report2) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Report2) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: _Report2) -> object
        Set: PrtDevMode(self: _Report2) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: _Report2) -> object
        Set: PrtDevNames(self: _Report2) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: _Report2) -> object
        Set: PrtMip(self: _Report2) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: _Report2) -> Byte
        Set: RecordLocks(self: _Report2) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: _Report2) -> object
        Set: Recordset(self: _Report2) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: _Report2) -> str
        Set: RecordSource(self: _Report2) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: _Report2) -> str
        Set: RecordSourceQualifier(self: _Report2) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _Report2) -> Report """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: _Report2) -> Single
        Set: ScaleHeight(self: _Report2) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: _Report2) -> Single
        Set: ScaleLeft(self: _Report2) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: _Report2) -> Int16
        Set: ScaleMode(self: _Report2) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: _Report2) -> Single
        Set: ScaleTop(self: _Report2) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: _Report2) -> Single
        Set: ScaleWidth(self: _Report2) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: _Report2) -> str
        Set: ServerFilter(self: _Report2) = value
        """
        ...

    @property
    def Shape(self) -> str:
        """ Get: Shape(self: _Report2) -> str """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Report2) -> str
        Set: ShortcutMenuBar(self: _Report2) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Report2) -> str
        Set: Tag(self: _Report2) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: _Report2) -> str
        Set: Toolbar(self: _Report2) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: _Report2) -> int
        Set: Top(self: _Report2) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: _Report2) -> bool
        Set: UseDefaultPrinter(self: _Report2) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Report2) -> bool
        Set: Visible(self: _Report2) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Report2) -> Int16
        Set: Width(self: _Report2) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: _Report2) -> Int16
        Set: WindowHeight(self: _Report2) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: _Report2) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: _Report2) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: _Report2) -> Int16
        Set: WindowWidth(self: _Report2) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: _Report2) -> int
        Set: ZoomControl(self: _Report2) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Report2) -> str
        Set: _Name(self: _Report2) = value
        """
        ...


    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: _Report2, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: _Report2, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Report2, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: _Report2, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: _Report2, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: _Report2, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: _Report2, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: _Report2, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Report2, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class ReportOldV10(_ReportEventsOld_Event, _Report2): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class ReportOldV10Class(ReportOldV10, __ComObject): # skipped bases: <type '_Report2'>, <type 'IEnumerable'>, <type '_ReportEventsOld_Event'>, <type 'object'>
    """ ReportOldV10Class() """
    @property
    def acHiddenCurrentPage(self) -> int:
        """
        Get: acHiddenCurrentPage(self: ReportOldV10Class) -> int
        Set: acHiddenCurrentPage(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: ReportOldV10Class) -> _Control """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ReportOldV10Class) -> Application """
        ...

    @property
    def AutoCenter(self) -> bool:
        """
        Get: AutoCenter(self: ReportOldV10Class) -> bool
        Set: AutoCenter(self: ReportOldV10Class) = value
        """
        ...

    @property
    def AutoResize(self) -> bool:
        """
        Get: AutoResize(self: ReportOldV10Class) -> bool
        Set: AutoResize(self: ReportOldV10Class) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ReportOldV10Class) -> Byte
        Set: BorderStyle(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: ReportOldV10Class) -> str
        Set: Caption(self: ReportOldV10Class) = value
        """
        ...

    @property
    def CloseButton(self) -> bool:
        """
        Get: CloseButton(self: ReportOldV10Class) -> bool
        Set: CloseButton(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ControlBox(self) -> bool:
        """
        Get: ControlBox(self: ReportOldV10Class) -> bool
        Set: ControlBox(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: ReportOldV10Class) -> Controls """
        ...

    @property
    def Count(self) -> Int16:
        """
        Get: Count(self: ReportOldV10Class) -> Int16
        Set: Count(self: ReportOldV10Class) = value
        """
        ...

    @property
    def CurrentRecord(self) -> int:
        """
        Get: CurrentRecord(self: ReportOldV10Class) -> int
        Set: CurrentRecord(self: ReportOldV10Class) = value
        """
        ...

    @property
    def CurrentX(self) -> Single:
        """
        Get: CurrentX(self: ReportOldV10Class) -> Single
        Set: CurrentX(self: ReportOldV10Class) = value
        """
        ...

    @property
    def CurrentY(self) -> Single:
        """
        Get: CurrentY(self: ReportOldV10Class) -> Single
        Set: CurrentY(self: ReportOldV10Class) = value
        """
        ...

    @property
    def DateGrouping(self) -> Byte:
        """
        Get: DateGrouping(self: ReportOldV10Class) -> Byte
        Set: DateGrouping(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Dirty(self) -> bool:
        """
        Get: Dirty(self: ReportOldV10Class) -> bool
        Set: Dirty(self: ReportOldV10Class) = value
        """
        ...

    @property
    def DrawMode(self) -> Int16:
        """
        Get: DrawMode(self: ReportOldV10Class) -> Int16
        Set: DrawMode(self: ReportOldV10Class) = value
        """
        ...

    @property
    def DrawStyle(self) -> Int16:
        """
        Get: DrawStyle(self: ReportOldV10Class) -> Int16
        Set: DrawStyle(self: ReportOldV10Class) = value
        """
        ...

    @property
    def DrawWidth(self) -> Int16:
        """
        Get: DrawWidth(self: ReportOldV10Class) -> Int16
        Set: DrawWidth(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FastLaserPrinting(self) -> bool:
        """
        Get: FastLaserPrinting(self: ReportOldV10Class) -> bool
        Set: FastLaserPrinting(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FillColor(self) -> int:
        """
        Get: FillColor(self: ReportOldV10Class) -> int
        Set: FillColor(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FillStyle(self) -> Int16:
        """
        Get: FillStyle(self: ReportOldV10Class) -> Int16
        Set: FillStyle(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Filter(self) -> str:
        """
        Get: Filter(self: ReportOldV10Class) -> str
        Set: Filter(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FilterOn(self) -> bool:
        """
        Get: FilterOn(self: ReportOldV10Class) -> bool
        Set: FilterOn(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ReportOldV10Class) -> Int16
        Set: FontBold(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FontItalic(self) -> Int16:
        """
        Get: FontItalic(self: ReportOldV10Class) -> Int16
        Set: FontItalic(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ReportOldV10Class) -> str
        Set: FontName(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ReportOldV10Class) -> Int16
        Set: FontSize(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FontUnderline(self) -> Int16:
        """
        Get: FontUnderline(self: ReportOldV10Class) -> Int16
        Set: FontUnderline(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ReportOldV10Class) -> int
        Set: ForeColor(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FormatCount(self) -> Int16:
        """
        Get: FormatCount(self: ReportOldV10Class) -> Int16
        Set: FormatCount(self: ReportOldV10Class) = value
        """
        ...

    @property
    def FormName(self) -> str:
        """
        Get: FormName(self: ReportOldV10Class) -> str
        Set: FormName(self: ReportOldV10Class) = value
        """
        ...

    @property
    def GridX(self) -> Int16:
        """
        Get: GridX(self: ReportOldV10Class) -> Int16
        Set: GridX(self: ReportOldV10Class) = value
        """
        ...

    @property
    def GridY(self) -> Int16:
        """
        Get: GridY(self: ReportOldV10Class) -> Int16
        Set: GridY(self: ReportOldV10Class) = value
        """
        ...

    @property
    def GrpKeepTogether(self) -> Byte:
        """
        Get: GrpKeepTogether(self: ReportOldV10Class) -> Byte
        Set: GrpKeepTogether(self: ReportOldV10Class) = value
        """
        ...

    @property
    def HasData(self) -> int:
        """
        Get: HasData(self: ReportOldV10Class) -> int
        Set: HasData(self: ReportOldV10Class) = value
        """
        ...

    @property
    def HasModule(self) -> bool:
        """
        Get: HasModule(self: ReportOldV10Class) -> bool
        Set: HasModule(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Height(self) -> int:
        """
        Get: Height(self: ReportOldV10Class) -> int
        Set: Height(self: ReportOldV10Class) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ReportOldV10Class) -> int
        Set: HelpContextId(self: ReportOldV10Class) = value
        """
        ...

    @property
    def HelpFile(self) -> str:
        """
        Get: HelpFile(self: ReportOldV10Class) -> str
        Set: HelpFile(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Hwnd(self) -> int:
        """
        Get: Hwnd(self: ReportOldV10Class) -> int
        Set: Hwnd(self: ReportOldV10Class) = value
        """
        ...

    @property
    def InputParameters(self) -> str:
        """
        Get: InputParameters(self: ReportOldV10Class) -> str
        Set: InputParameters(self: ReportOldV10Class) = value
        """
        ...

    @property
    def LayoutForPrint(self) -> bool:
        """
        Get: LayoutForPrint(self: ReportOldV10Class) -> bool
        Set: LayoutForPrint(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Left(self) -> int:
        """
        Get: Left(self: ReportOldV10Class) -> int
        Set: Left(self: ReportOldV10Class) = value
        """
        ...

    @property
    def LogicalPageHeight(self) -> int:
        """
        Get: LogicalPageHeight(self: ReportOldV10Class) -> int
        Set: LogicalPageHeight(self: ReportOldV10Class) = value
        """
        ...

    @property
    def LogicalPageWidth(self) -> int:
        """
        Get: LogicalPageWidth(self: ReportOldV10Class) -> int
        Set: LogicalPageWidth(self: ReportOldV10Class) = value
        """
        ...

    @property
    def MaxButton(self) -> bool:
        """
        Get: MaxButton(self: ReportOldV10Class) -> bool
        Set: MaxButton(self: ReportOldV10Class) = value
        """
        ...

    @property
    def MenuBar(self) -> str:
        """
        Get: MenuBar(self: ReportOldV10Class) -> str
        Set: MenuBar(self: ReportOldV10Class) = value
        """
        ...

    @property
    def MinButton(self) -> bool:
        """
        Get: MinButton(self: ReportOldV10Class) -> bool
        Set: MinButton(self: ReportOldV10Class) = value
        """
        ...

    @property
    def MinMaxButtons(self) -> Byte:
        """
        Get: MinMaxButtons(self: ReportOldV10Class) -> Byte
        Set: MinMaxButtons(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Modal(self) -> bool:
        """
        Get: Modal(self: ReportOldV10Class) -> bool
        Set: Modal(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Module(self) -> Module:
        """ Get: Module(self: ReportOldV10Class) -> Module """
        ...

    @property
    def Moveable(self) -> bool:
        """
        Get: Moveable(self: ReportOldV10Class) -> bool
        Set: Moveable(self: ReportOldV10Class) = value
        """
        ...

    @property
    def MoveLayout(self) -> bool:
        """
        Get: MoveLayout(self: ReportOldV10Class) -> bool
        Set: MoveLayout(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ReportOldV10Class) -> str
        Set: Name(self: ReportOldV10Class) = value
        """
        ...

    @property
    def NextRecord(self) -> bool:
        """
        Get: NextRecord(self: ReportOldV10Class) -> bool
        Set: NextRecord(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnActivate(self) -> str:
        """
        Get: OnActivate(self: ReportOldV10Class) -> str
        Set: OnActivate(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnClose(self) -> str:
        """
        Get: OnClose(self: ReportOldV10Class) -> str
        Set: OnClose(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnDeactivate(self) -> str:
        """
        Get: OnDeactivate(self: ReportOldV10Class) -> str
        Set: OnDeactivate(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnError(self) -> str:
        """
        Get: OnError(self: ReportOldV10Class) -> str
        Set: OnError(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnMenu(self) -> str:
        """
        Get: OnMenu(self: ReportOldV10Class) -> str
        Set: OnMenu(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnNoData(self) -> str:
        """
        Get: OnNoData(self: ReportOldV10Class) -> str
        Set: OnNoData(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnOpen(self) -> str:
        """
        Get: OnOpen(self: ReportOldV10Class) -> str
        Set: OnOpen(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OnPage(self) -> str:
        """
        Get: OnPage(self: ReportOldV10Class) -> str
        Set: OnPage(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OpenArgs(self) -> object:
        """
        Get: OpenArgs(self: ReportOldV10Class) -> object
        Set: OpenArgs(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OrderBy(self) -> str:
        """
        Get: OrderBy(self: ReportOldV10Class) -> str
        Set: OrderBy(self: ReportOldV10Class) = value
        """
        ...

    @property
    def OrderByOn(self) -> bool:
        """
        Get: OrderByOn(self: ReportOldV10Class) -> bool
        Set: OrderByOn(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Orientation(self) -> Byte:
        """
        Get: Orientation(self: ReportOldV10Class) -> Byte
        Set: Orientation(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Page(self) -> int:
        """
        Get: Page(self: ReportOldV10Class) -> int
        Set: Page(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PageFooter(self) -> Byte:
        """
        Get: PageFooter(self: ReportOldV10Class) -> Byte
        Set: PageFooter(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PageHeader(self) -> Byte:
        """
        Get: PageHeader(self: ReportOldV10Class) -> Byte
        Set: PageHeader(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Pages(self) -> Int16:
        """
        Get: Pages(self: ReportOldV10Class) -> Int16
        Set: Pages(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Painting(self) -> bool:
        """
        Get: Painting(self: ReportOldV10Class) -> bool
        Set: Painting(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PaintPalette(self) -> object:
        """
        Get: PaintPalette(self: ReportOldV10Class) -> object
        Set: PaintPalette(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PaletteSource(self) -> str:
        """
        Get: PaletteSource(self: ReportOldV10Class) -> str
        Set: PaletteSource(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ReportOldV10Class) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: ReportOldV10Class) -> str
        Set: Picture(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PictureAlignment(self) -> Byte:
        """
        Get: PictureAlignment(self: ReportOldV10Class) -> Byte
        Set: PictureAlignment(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: ReportOldV10Class) -> object
        Set: PictureData(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PicturePages(self) -> Byte:
        """
        Get: PicturePages(self: ReportOldV10Class) -> Byte
        Set: PicturePages(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PicturePalette(self) -> object:
        """
        Get: PicturePalette(self: ReportOldV10Class) -> object
        Set: PicturePalette(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PictureSizeMode(self) -> Byte:
        """
        Get: PictureSizeMode(self: ReportOldV10Class) -> Byte
        Set: PictureSizeMode(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PictureTiling(self) -> bool:
        """
        Get: PictureTiling(self: ReportOldV10Class) -> bool
        Set: PictureTiling(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: ReportOldV10Class) -> Byte
        Set: PictureType(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PopUp(self) -> bool:
        """
        Get: PopUp(self: ReportOldV10Class) -> bool
        Set: PopUp(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PrintCount(self) -> Int16:
        """
        Get: PrintCount(self: ReportOldV10Class) -> Int16
        Set: PrintCount(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Printer(self) -> Printer:
        """
        Get: Printer(self: ReportOldV10Class) -> Printer
        Set: Printer(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PrintSection(self) -> bool:
        """
        Get: PrintSection(self: ReportOldV10Class) -> bool
        Set: PrintSection(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ReportOldV10Class) -> Properties """
        ...

    @property
    def PrtDevMode(self) -> object:
        """
        Get: PrtDevMode(self: ReportOldV10Class) -> object
        Set: PrtDevMode(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PrtDevNames(self) -> object:
        """
        Get: PrtDevNames(self: ReportOldV10Class) -> object
        Set: PrtDevNames(self: ReportOldV10Class) = value
        """
        ...

    @property
    def PrtMip(self) -> object:
        """
        Get: PrtMip(self: ReportOldV10Class) -> object
        Set: PrtMip(self: ReportOldV10Class) = value
        """
        ...

    @property
    def RecordLocks(self) -> Byte:
        """
        Get: RecordLocks(self: ReportOldV10Class) -> Byte
        Set: RecordLocks(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Recordset(self) -> object:
        """
        Get: Recordset(self: ReportOldV10Class) -> object
        Set: Recordset(self: ReportOldV10Class) = value
        """
        ...

    @property
    def RecordSource(self) -> str:
        """
        Get: RecordSource(self: ReportOldV10Class) -> str
        Set: RecordSource(self: ReportOldV10Class) = value
        """
        ...

    @property
    def RecordSourceQualifier(self) -> str:
        """
        Get: RecordSourceQualifier(self: ReportOldV10Class) -> str
        Set: RecordSourceQualifier(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: ReportOldV10Class) -> Report """
        ...

    @property
    def ScaleHeight(self) -> Single:
        """
        Get: ScaleHeight(self: ReportOldV10Class) -> Single
        Set: ScaleHeight(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ScaleLeft(self) -> Single:
        """
        Get: ScaleLeft(self: ReportOldV10Class) -> Single
        Set: ScaleLeft(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ScaleMode(self) -> Int16:
        """
        Get: ScaleMode(self: ReportOldV10Class) -> Int16
        Set: ScaleMode(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ScaleTop(self) -> Single:
        """
        Get: ScaleTop(self: ReportOldV10Class) -> Single
        Set: ScaleTop(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ScaleWidth(self) -> Single:
        """
        Get: ScaleWidth(self: ReportOldV10Class) -> Single
        Set: ScaleWidth(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ServerFilter(self) -> str:
        """
        Get: ServerFilter(self: ReportOldV10Class) -> str
        Set: ServerFilter(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Shape(self) -> str:
        """ Get: Shape(self: ReportOldV10Class) -> str """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ReportOldV10Class) -> str
        Set: ShortcutMenuBar(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ReportOldV10Class) -> str
        Set: Tag(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Toolbar(self) -> str:
        """
        Get: Toolbar(self: ReportOldV10Class) -> str
        Set: Toolbar(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Top(self) -> int:
        """
        Get: Top(self: ReportOldV10Class) -> int
        Set: Top(self: ReportOldV10Class) = value
        """
        ...

    @property
    def UseDefaultPrinter(self) -> bool:
        """
        Get: UseDefaultPrinter(self: ReportOldV10Class) -> bool
        Set: UseDefaultPrinter(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ReportOldV10Class) -> bool
        Set: Visible(self: ReportOldV10Class) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ReportOldV10Class) -> Int16
        Set: Width(self: ReportOldV10Class) = value
        """
        ...

    @property
    def WindowHeight(self) -> Int16:
        """
        Get: WindowHeight(self: ReportOldV10Class) -> Int16
        Set: WindowHeight(self: ReportOldV10Class) = value
        """
        ...

    @property
    def WindowLeft(self) -> Int16:
        """ Get: WindowLeft(self: ReportOldV10Class) -> Int16 """
        ...

    @property
    def WindowTop(self) -> Int16:
        """ Get: WindowTop(self: ReportOldV10Class) -> Int16 """
        ...

    @property
    def WindowWidth(self) -> Int16:
        """
        Get: WindowWidth(self: ReportOldV10Class) -> Int16
        Set: WindowWidth(self: ReportOldV10Class) = value
        """
        ...

    @property
    def ZoomControl(self) -> int:
        """
        Get: ZoomControl(self: ReportOldV10Class) -> int
        Set: ZoomControl(self: ReportOldV10Class) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ReportOldV10Class) -> str
        Set: _Name(self: ReportOldV10Class) = value
        """
        ...


    def add_Activate(self): # -> 
        """ add_Activate(self: ReportOldV10Class, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def add_Close(self): # -> 
        """ add_Close(self: ReportOldV10Class, : _ReportEventsOld_CloseEventHandler) """
        ...

    def add_Deactivate(self): # -> 
        """ add_Deactivate(self: ReportOldV10Class, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def add_Error(self): # -> 
        """ add_Error(self: ReportOldV10Class, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def add_NoData(self): # -> 
        """ add_NoData(self: ReportOldV10Class, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def add_Open(self): # -> 
        """ add_Open(self: ReportOldV10Class, : _ReportEventsOld_OpenEventHandler) """
        ...

    def add_Page(self): # -> 
        """ add_Page(self: ReportOldV10Class, : _ReportEventsOld_PageEventHandler) """
        ...

    def Circle(self, flags:Int16, X:Single, Y:Single, radius:Single, color:int, start:Single, end:Single, aspect:Single): # -> 
        """ Circle(self: ReportOldV10Class, flags: Int16, X: Single, Y: Single, radius: Single, color: int, start: Single, end: Single, aspect: Single) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: ReportOldV10Class) -> IEnumerator """
        ...

    def Line(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single, color:int): # -> 
        """ Line(self: ReportOldV10Class, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single, color: int) """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ReportOldV10Class, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Print(self, Expr:str): # -> 
        """ Print(self: ReportOldV10Class, Expr: str) """
        ...

    def PSet(self, flags:Int16, X:Single, Y:Single, color:int): # -> 
        """ PSet(self: ReportOldV10Class, flags: Int16, X: Single, Y: Single, color: int) """
        ...

    def remove_Activate(self): # -> 
        """ remove_Activate(self: ReportOldV10Class, : _ReportEventsOld_ActivateEventHandler) """
        ...

    def remove_Close(self): # -> 
        """ remove_Close(self: ReportOldV10Class, : _ReportEventsOld_CloseEventHandler) """
        ...

    def remove_Deactivate(self): # -> 
        """ remove_Deactivate(self: ReportOldV10Class, : _ReportEventsOld_DeactivateEventHandler) """
        ...

    def remove_Error(self): # -> 
        """ remove_Error(self: ReportOldV10Class, : _ReportEventsOld_ErrorEventHandler) """
        ...

    def remove_NoData(self): # -> 
        """ remove_NoData(self: ReportOldV10Class, : _ReportEventsOld_NoDataEventHandler) """
        ...

    def remove_Open(self): # -> 
        """ remove_Open(self: ReportOldV10Class, : _ReportEventsOld_OpenEventHandler) """
        ...

    def remove_Page(self): # -> 
        """ remove_Page(self: ReportOldV10Class, : _ReportEventsOld_PageEventHandler) """
        ...

    def Scale(self, flags:Int16, x1:Single, y1:Single, x2:Single, y2:Single): # -> 
        """ Scale(self: ReportOldV10Class, flags: Int16, x1: Single, y1: Single, x2: Single, y2: Single) """
        ...

    def TextHeight(self, Expr:str) -> Single:
        """ TextHeight(self: ReportOldV10Class, Expr: str) -> Single """
        ...

    def TextWidth(self, Expr:str) -> Single:
        """ TextWidth(self: ReportOldV10Class, Expr: str) -> Single """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ReportOldV10Class, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Activate = ...
    Close = ...
    Deactivate = ...
    Error = ...
    NoData = ...
    Open = ...
    _ReportEventsOld_Event_Page = ...


class Reports(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: Reports) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: Reports) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Reports) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Reports, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _ReturnVar: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: _ReturnVar) -> str """
        ...

    @property
    def Value(self) -> object:
        """ Get: Value(self: _ReturnVar) -> object """
        ...

    @property
    def _Value(self) -> object:
        """ Get: _Value(self: _ReturnVar) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ReturnVar, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class ReturnVar(_ReturnVar): # skipped bases: <type 'object'>
    """ no doc """
    pass

class ReturnVarClass(__ComObject, ReturnVar): # skipped bases: <type '_ReturnVar'>, <type 'object'>
    """ ReturnVarClass() """
    @property
    def Name(self) -> str:
        """ Get: Name(self: ReturnVarClass) -> str """
        ...

    @property
    def Value(self) -> object:
        """ Get: Value(self: ReturnVarClass) -> object """
        ...

    @property
    def _Value(self) -> object:
        """ Get: _Value(self: ReturnVarClass) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ReturnVarClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _ReturnVars(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ReturnVars) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _ReturnVars) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ReturnVars) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ReturnVars, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class ReturnVars(_ReturnVars): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class ReturnVarsClass(ReturnVars, __ComObject): # skipped bases: <type '_ReturnVars'>, <type 'IEnumerable'>, <type 'object'>
    """ ReturnVarsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: ReturnVarsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: ReturnVarsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ReturnVarsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: ReturnVarsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ReturnVarsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class Screen: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def ActiveControl(self) -> _Control:
        """ Get: ActiveControl(self: Screen) -> _Control """
        ...

    @property
    def ActiveDataAccessPage(self) -> DataAccessPage:
        """ Get: ActiveDataAccessPage(self: Screen) -> DataAccessPage """
        ...

    @property
    def ActiveDatasheet(self) -> Form:
        """ Get: ActiveDatasheet(self: Screen) -> Form """
        ...

    @property
    def ActiveForm(self) -> Form:
        """ Get: ActiveForm(self: Screen) -> Form """
        ...

    @property
    def ActiveReport(self) -> Report:
        """ Get: ActiveReport(self: Screen) -> Report """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: Screen) -> Application """
        ...

    @property
    def MousePointer(self) -> Int16:
        """
        Get: MousePointer(self: Screen) -> Int16
        Set: MousePointer(self: Screen) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: Screen) -> object """
        ...

    @property
    def PreviousControl(self) -> _Control:
        """ Get: PreviousControl(self: Screen) -> _Control """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: Screen, dispid: int) -> bool """
        ...


class _Section: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AlternateBackColor(self) -> int:
        """
        Get: AlternateBackColor(self: _Section) -> int
        Set: AlternateBackColor(self: _Section) = value
        """
        ...

    @property
    def AlternateBackShade(self) -> Single:
        """
        Get: AlternateBackShade(self: _Section) -> Single
        Set: AlternateBackShade(self: _Section) = value
        """
        ...

    @property
    def AlternateBackThemeColorIndex(self) -> int:
        """
        Get: AlternateBackThemeColorIndex(self: _Section) -> int
        Set: AlternateBackThemeColorIndex(self: _Section) = value
        """
        ...

    @property
    def AlternateBackTint(self) -> Single:
        """
        Get: AlternateBackTint(self: _Section) -> Single
        Set: AlternateBackTint(self: _Section) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Section) -> Application """
        ...

    @property
    def AutoHeight(self) -> bool:
        """
        Get: AutoHeight(self: _Section) -> bool
        Set: AutoHeight(self: _Section) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Section) -> int
        Set: BackColor(self: _Section) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Section) -> Single
        Set: BackShade(self: _Section) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Section) -> int
        Set: BackThemeColorIndex(self: _Section) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Section) -> Single
        Set: BackTint(self: _Section) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _Section) -> bool
        Set: CanGrow(self: _Section) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _Section) -> bool
        Set: CanShrink(self: _Section) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Section) -> Children """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Section) -> Byte
        Set: DisplayWhen(self: _Section) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Section) -> str
        Set: EventProcPrefix(self: _Section) = value
        """
        ...

    @property
    def ForceNewPage(self) -> Byte:
        """
        Get: ForceNewPage(self: _Section) -> Byte
        Set: ForceNewPage(self: _Section) = value
        """
        ...

    @property
    def HasContinued(self) -> bool:
        """
        Get: HasContinued(self: _Section) -> bool
        Set: HasContinued(self: _Section) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Section) -> Int16
        Set: Height(self: _Section) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Section) -> bool
        Set: InSelection(self: _Section) = value
        """
        ...

    @property
    def KeepTogether(self) -> bool:
        """
        Get: KeepTogether(self: _Section) -> bool
        Set: KeepTogether(self: _Section) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Section) -> str
        Set: Name(self: _Section) = value
        """
        ...

    @property
    def NewRowOrCol(self) -> Byte:
        """
        Get: NewRowOrCol(self: _Section) -> Byte
        Set: NewRowOrCol(self: _Section) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Section) -> str
        Set: OnClick(self: _Section) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Section) -> str
        Set: OnClickMacro(self: _Section) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Section) -> str
        Set: OnDblClick(self: _Section) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Section) -> str
        Set: OnDblClickMacro(self: _Section) = value
        """
        ...

    @property
    def OnFormat(self) -> str:
        """
        Get: OnFormat(self: _Section) -> str
        Set: OnFormat(self: _Section) = value
        """
        ...

    @property
    def OnFormatMacro(self) -> str:
        """
        Get: OnFormatMacro(self: _Section) -> str
        Set: OnFormatMacro(self: _Section) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Section) -> str
        Set: OnMouseDown(self: _Section) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Section) -> str
        Set: OnMouseDownMacro(self: _Section) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Section) -> str
        Set: OnMouseMove(self: _Section) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Section) -> str
        Set: OnMouseMoveMacro(self: _Section) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Section) -> str
        Set: OnMouseUp(self: _Section) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Section) -> str
        Set: OnMouseUpMacro(self: _Section) = value
        """
        ...

    @property
    def OnPaint(self) -> str:
        """
        Get: OnPaint(self: _Section) -> str
        Set: OnPaint(self: _Section) = value
        """
        ...

    @property
    def OnPaintMacro(self) -> str:
        """
        Get: OnPaintMacro(self: _Section) -> str
        Set: OnPaintMacro(self: _Section) = value
        """
        ...

    @property
    def OnPrint(self) -> str:
        """
        Get: OnPrint(self: _Section) -> str
        Set: OnPrint(self: _Section) = value
        """
        ...

    @property
    def OnPrintMacro(self) -> str:
        """
        Get: OnPrintMacro(self: _Section) -> str
        Set: OnPrintMacro(self: _Section) = value
        """
        ...

    @property
    def OnRetreat(self) -> str:
        """
        Get: OnRetreat(self: _Section) -> str
        Set: OnRetreat(self: _Section) = value
        """
        ...

    @property
    def OnRetreatMacro(self) -> str:
        """
        Get: OnRetreatMacro(self: _Section) -> str
        Set: OnRetreatMacro(self: _Section) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Section) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Section) -> Properties """
        ...

    @property
    def RepeatSection(self) -> bool:
        """
        Get: RepeatSection(self: _Section) -> bool
        Set: RepeatSection(self: _Section) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Section) -> Byte
        Set: SpecialEffect(self: _Section) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Section) -> str
        Set: Tag(self: _Section) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Section) -> bool
        Set: Visible(self: _Section) = value
        """
        ...

    @property
    def WillContinue(self) -> bool:
        """
        Get: WillContinue(self: _Section) -> bool
        Set: WillContinue(self: _Section) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Section) -> str
        Set: _Name(self: _Section) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Section, dispid: int) -> bool """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: _Section) """
        ...


class Section(_Section, DispSectionEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class SectionClass(_SectionEvents_Event, Section, __ComObject): # skipped bases: <type '_Section'>, <type 'DispSectionEvents_Event'>, <type 'object'>
    """ SectionClass() """
    @property
    def AlternateBackColor(self) -> int:
        """
        Get: AlternateBackColor(self: SectionClass) -> int
        Set: AlternateBackColor(self: SectionClass) = value
        """
        ...

    @property
    def AlternateBackShade(self) -> Single:
        """
        Get: AlternateBackShade(self: SectionClass) -> Single
        Set: AlternateBackShade(self: SectionClass) = value
        """
        ...

    @property
    def AlternateBackThemeColorIndex(self) -> int:
        """
        Get: AlternateBackThemeColorIndex(self: SectionClass) -> int
        Set: AlternateBackThemeColorIndex(self: SectionClass) = value
        """
        ...

    @property
    def AlternateBackTint(self) -> Single:
        """
        Get: AlternateBackTint(self: SectionClass) -> Single
        Set: AlternateBackTint(self: SectionClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: SectionClass) -> Application """
        ...

    @property
    def AutoHeight(self) -> bool:
        """
        Get: AutoHeight(self: SectionClass) -> bool
        Set: AutoHeight(self: SectionClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: SectionClass) -> int
        Set: BackColor(self: SectionClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: SectionClass) -> Single
        Set: BackShade(self: SectionClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: SectionClass) -> int
        Set: BackThemeColorIndex(self: SectionClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: SectionClass) -> Single
        Set: BackTint(self: SectionClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: SectionClass) -> bool
        Set: CanGrow(self: SectionClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: SectionClass) -> bool
        Set: CanShrink(self: SectionClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: SectionClass) -> Children """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: SectionClass) -> Byte
        Set: DisplayWhen(self: SectionClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: SectionClass) -> str
        Set: EventProcPrefix(self: SectionClass) = value
        """
        ...

    @property
    def ForceNewPage(self) -> Byte:
        """
        Get: ForceNewPage(self: SectionClass) -> Byte
        Set: ForceNewPage(self: SectionClass) = value
        """
        ...

    @property
    def HasContinued(self) -> bool:
        """
        Get: HasContinued(self: SectionClass) -> bool
        Set: HasContinued(self: SectionClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: SectionClass) -> Int16
        Set: Height(self: SectionClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: SectionClass) -> bool
        Set: InSelection(self: SectionClass) = value
        """
        ...

    @property
    def KeepTogether(self) -> bool:
        """
        Get: KeepTogether(self: SectionClass) -> bool
        Set: KeepTogether(self: SectionClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: SectionClass) -> str
        Set: Name(self: SectionClass) = value
        """
        ...

    @property
    def NewRowOrCol(self) -> Byte:
        """
        Get: NewRowOrCol(self: SectionClass) -> Byte
        Set: NewRowOrCol(self: SectionClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: SectionClass) -> str
        Set: OnClick(self: SectionClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: SectionClass) -> str
        Set: OnClickMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: SectionClass) -> str
        Set: OnDblClick(self: SectionClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: SectionClass) -> str
        Set: OnDblClickMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnFormat(self) -> str:
        """
        Get: OnFormat(self: SectionClass) -> str
        Set: OnFormat(self: SectionClass) = value
        """
        ...

    @property
    def OnFormatMacro(self) -> str:
        """
        Get: OnFormatMacro(self: SectionClass) -> str
        Set: OnFormatMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: SectionClass) -> str
        Set: OnMouseDown(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: SectionClass) -> str
        Set: OnMouseDownMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: SectionClass) -> str
        Set: OnMouseMove(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: SectionClass) -> str
        Set: OnMouseMoveMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: SectionClass) -> str
        Set: OnMouseUp(self: SectionClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: SectionClass) -> str
        Set: OnMouseUpMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnPaint(self) -> str:
        """
        Get: OnPaint(self: SectionClass) -> str
        Set: OnPaint(self: SectionClass) = value
        """
        ...

    @property
    def OnPaintMacro(self) -> str:
        """
        Get: OnPaintMacro(self: SectionClass) -> str
        Set: OnPaintMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnPrint(self) -> str:
        """
        Get: OnPrint(self: SectionClass) -> str
        Set: OnPrint(self: SectionClass) = value
        """
        ...

    @property
    def OnPrintMacro(self) -> str:
        """
        Get: OnPrintMacro(self: SectionClass) -> str
        Set: OnPrintMacro(self: SectionClass) = value
        """
        ...

    @property
    def OnRetreat(self) -> str:
        """
        Get: OnRetreat(self: SectionClass) -> str
        Set: OnRetreat(self: SectionClass) = value
        """
        ...

    @property
    def OnRetreatMacro(self) -> str:
        """
        Get: OnRetreatMacro(self: SectionClass) -> str
        Set: OnRetreatMacro(self: SectionClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SectionClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: SectionClass) -> Properties """
        ...

    @property
    def RepeatSection(self) -> bool:
        """
        Get: RepeatSection(self: SectionClass) -> bool
        Set: RepeatSection(self: SectionClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: SectionClass) -> Byte
        Set: SpecialEffect(self: SectionClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: SectionClass) -> str
        Set: Tag(self: SectionClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: SectionClass) -> bool
        Set: Visible(self: SectionClass) = value
        """
        ...

    @property
    def WillContinue(self) -> bool:
        """
        Get: WillContinue(self: SectionClass) -> bool
        Set: WillContinue(self: SectionClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: SectionClass) -> str
        Set: _Name(self: SectionClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SectionClass, dispid: int) -> bool """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: SectionClass) """
        ...

    def _SectionEvents_Event_add_Click(self): # -> 
        """ _SectionEvents_Event_add_Click(self: SectionClass, : _SectionEvents_ClickEventHandler) """
        ...

    def _SectionEvents_Event_add_DblClick(self): # -> 
        """ _SectionEvents_Event_add_DblClick(self: SectionClass, : _SectionEvents_DblClickEventHandler) """
        ...

    def _SectionEvents_Event_add_MouseDown(self): # -> 
        """ _SectionEvents_Event_add_MouseDown(self: SectionClass, : _SectionEvents_MouseDownEventHandler) """
        ...

    def _SectionEvents_Event_add_MouseMove(self): # -> 
        """ _SectionEvents_Event_add_MouseMove(self: SectionClass, : _SectionEvents_MouseMoveEventHandler) """
        ...

    def _SectionEvents_Event_add_MouseUp(self): # -> 
        """ _SectionEvents_Event_add_MouseUp(self: SectionClass, : _SectionEvents_MouseUpEventHandler) """
        ...

    def _SectionEvents_Event_add_Paint(self): # -> 
        """ _SectionEvents_Event_add_Paint(self: SectionClass, : _SectionEvents_PaintEventHandler) """
        ...

    def _SectionEvents_Event_remove_Click(self): # -> 
        """ _SectionEvents_Event_remove_Click(self: SectionClass, : _SectionEvents_ClickEventHandler) """
        ...

    def _SectionEvents_Event_remove_DblClick(self): # -> 
        """ _SectionEvents_Event_remove_DblClick(self: SectionClass, : _SectionEvents_DblClickEventHandler) """
        ...

    def _SectionEvents_Event_remove_MouseDown(self): # -> 
        """ _SectionEvents_Event_remove_MouseDown(self: SectionClass, : _SectionEvents_MouseDownEventHandler) """
        ...

    def _SectionEvents_Event_remove_MouseMove(self): # -> 
        """ _SectionEvents_Event_remove_MouseMove(self: SectionClass, : _SectionEvents_MouseMoveEventHandler) """
        ...

    def _SectionEvents_Event_remove_MouseUp(self): # -> 
        """ _SectionEvents_Event_remove_MouseUp(self: SectionClass, : _SectionEvents_MouseUpEventHandler) """
        ...

    def _SectionEvents_Event_remove_Paint(self): # -> 
        """ _SectionEvents_Event_remove_Paint(self: SectionClass, : _SectionEvents_PaintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    _SectionEvents_Event_Click = ...
    _SectionEvents_Event_DblClick = ...
    _SectionEvents_Event_MouseDown = ...
    _SectionEvents_Event_MouseMove = ...
    _SectionEvents_Event_MouseUp = ...
    _SectionEvents_Event_Paint = ...


class SharedResource: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """
        Get: Name(self: SharedResource) -> str
        Set: Name(self: SharedResource) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SharedResource) -> object """
        ...

    @property
    def Type(self) -> AcResourceType:
        """ Get: Type(self: SharedResource) -> AcResourceType """
        ...


    def Delete(self): # -> 
        """ Delete(self: SharedResource) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SharedResource, dispid: int) -> bool """
        ...


class SharedResources(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SharedResources) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: SharedResources) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SharedResources) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SharedResources, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _SmartTag: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SmartTag) -> Application """
        ...

    @property
    def IsMissing(self) -> bool:
        """ Get: IsMissing(self: _SmartTag) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: _SmartTag) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SmartTag) -> object """
        ...

    @property
    def Properties(self) -> SmartTagProperties:
        """ Get: Properties(self: _SmartTag) -> SmartTagProperties """
        ...

    @property
    def SmartTagActions(self) -> SmartTagActions:
        """ Get: SmartTagActions(self: _SmartTag) -> SmartTagActions """
        ...

    @property
    def XML(self) -> str:
        """ Get: XML(self: _SmartTag) -> str """
        ...


    def Delete(self): # -> 
        """ Delete(self: _SmartTag) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTag, dispid: int) -> bool """
        ...


class SmartTag(_SmartTag): # skipped bases: <type 'object'>
    """ no doc """
    pass

class _SmartTagAction: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SmartTagAction) -> Application """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: _SmartTagAction) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SmartTagAction) -> object """
        ...


    def Execute(self): # -> 
        """ Execute(self: _SmartTagAction) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTagAction, dispid: int) -> bool """
        ...


class SmartTagAction(_SmartTagAction): # skipped bases: <type 'object'>
    """ no doc """
    pass

class SmartTagActionClass(SmartTagAction, __ComObject): # skipped bases: <type '_SmartTagAction'>, <type 'object'>
    """ SmartTagActionClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SmartTagActionClass) -> Application """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: SmartTagActionClass) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SmartTagActionClass) -> object """
        ...


    def Execute(self): # -> 
        """ Execute(self: SmartTagActionClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagActionClass, dispid: int) -> bool """
        ...


class _SmartTagActions(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SmartTagActions) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _SmartTagActions) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SmartTagActions) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTagActions, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class SmartTagActions(_SmartTagActions): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class SmartTagActionsClass(SmartTagActions, __ComObject): # skipped bases: <type 'IEnumerable'>, <type '_SmartTagActions'>, <type 'object'>
    """ SmartTagActionsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SmartTagActionsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: SmartTagActionsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SmartTagActionsClass) -> object """
        ...


    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: SmartTagActionsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagActionsClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class SmartTagClass(__ComObject, SmartTag): # skipped bases: <type '_SmartTag'>, <type 'object'>
    """ SmartTagClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SmartTagClass) -> Application """
        ...

    @property
    def IsMissing(self) -> bool:
        """ Get: IsMissing(self: SmartTagClass) -> bool """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: SmartTagClass) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SmartTagClass) -> object """
        ...

    @property
    def Properties(self) -> SmartTagProperties:
        """ Get: Properties(self: SmartTagClass) -> SmartTagProperties """
        ...

    @property
    def SmartTagActions(self) -> SmartTagActions:
        """ Get: SmartTagActions(self: SmartTagClass) -> SmartTagActions """
        ...

    @property
    def XML(self) -> str:
        """ Get: XML(self: SmartTagClass) -> str """
        ...


    def Delete(self): # -> 
        """ Delete(self: SmartTagClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagClass, dispid: int) -> bool """
        ...


class _SmartTagProperties(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SmartTagProperties) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _SmartTagProperties) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SmartTagProperties) -> object """
        ...


    def Add(self, Name:str, Value:object) -> SmartTagProperty:
        """ Add(self: _SmartTagProperties, Name: str, Value: object) -> SmartTagProperty """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTagProperties, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class SmartTagProperties(_SmartTagProperties): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class SmartTagPropertiesClass(SmartTagProperties, __ComObject): # skipped bases: <type '_SmartTagProperties'>, <type 'IEnumerable'>, <type 'object'>
    """ SmartTagPropertiesClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SmartTagPropertiesClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: SmartTagPropertiesClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SmartTagPropertiesClass) -> object """
        ...


    def Add(self, Name:str, Value:object) -> SmartTagProperty:
        """ Add(self: SmartTagPropertiesClass, Name: str, Value: object) -> SmartTagProperty """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: SmartTagPropertiesClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagPropertiesClass, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _SmartTagProperty: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """
        Get: Name(self: _SmartTagProperty) -> str
        Set: Name(self: _SmartTagProperty) = value
        """
        ...

    @property
    def Value(self) -> str:
        """
        Get: Value(self: _SmartTagProperty) -> str
        Set: Value(self: _SmartTagProperty) = value
        """
        ...


    def Delete(self): # -> 
        """ Delete(self: _SmartTagProperty) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTagProperty, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class SmartTagProperty(_SmartTagProperty): # skipped bases: <type 'object'>
    """ no doc """
    pass

class SmartTagPropertyClass(SmartTagProperty, __ComObject): # skipped bases: <type '_SmartTagProperty'>, <type 'object'>
    """ SmartTagPropertyClass() """
    @property
    def Name(self) -> str:
        """
        Get: Name(self: SmartTagPropertyClass) -> str
        Set: Name(self: SmartTagPropertyClass) = value
        """
        ...

    @property
    def Value(self) -> str:
        """
        Get: Value(self: SmartTagPropertyClass) -> str
        Set: Value(self: SmartTagPropertyClass) = value
        """
        ...


    def Delete(self): # -> 
        """ Delete(self: SmartTagPropertyClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagPropertyClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class _SmartTags(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SmartTags) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _SmartTags) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SmartTags) -> object """
        ...


    def Add(self, Name:str) -> SmartTag:
        """ Add(self: _SmartTags, Name: str) -> SmartTag """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SmartTags, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class SmartTags(_SmartTags): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class SmartTagsClass(__ComObject, SmartTags): # skipped bases: <type '_SmartTags'>, <type 'IEnumerable'>, <type 'object'>
    """ SmartTagsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SmartTagsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: SmartTagsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SmartTagsClass) -> object """
        ...


    def Add(self, Name:str) -> SmartTag:
        """ Add(self: SmartTagsClass, Name: str) -> SmartTag """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: SmartTagsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SmartTagsClass, dispid: int) -> bool """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _SubForm(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _SubForm) -> bool
        Set: AddColon(self: _SubForm) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SubForm) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _SubForm) -> bool
        Set: AutoLabel(self: _SubForm) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _SubForm) -> int
        Set: BorderColor(self: _SubForm) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _SubForm) -> Byte
        Set: BorderLineStyle(self: _SubForm) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _SubForm) -> Single
        Set: BorderShade(self: _SubForm) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _SubForm) -> Byte
        Set: BorderStyle(self: _SubForm) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _SubForm) -> int
        Set: BorderThemeColorIndex(self: _SubForm) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _SubForm) -> Single
        Set: BorderTint(self: _SubForm) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _SubForm) -> Byte
        Set: BorderWidth(self: _SubForm) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _SubForm) -> Int16
        Set: BottomPadding(self: _SubForm) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _SubForm) -> bool
        Set: CanGrow(self: _SubForm) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _SubForm) -> bool
        Set: CanShrink(self: _SubForm) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _SubForm) -> str
        Set: ControlName(self: _SubForm) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: _SubForm) -> Controls """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _SubForm) -> Byte
        Set: ControlType(self: _SubForm) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _SubForm) -> Byte
        Set: DisplayWhen(self: _SubForm) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _SubForm) -> bool
        Set: Enabled(self: _SubForm) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _SubForm) -> str
        Set: EventProcPrefix(self: _SubForm) = value
        """
        ...

    @property
    def FilterOnEmptyMaster(self) -> bool:
        """
        Get: FilterOnEmptyMaster(self: _SubForm) -> bool
        Set: FilterOnEmptyMaster(self: _SubForm) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _SubForm) -> Form """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _SubForm) -> int
        Set: GridlineColor(self: _SubForm) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _SubForm) -> Single
        Set: GridlineShade(self: _SubForm) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _SubForm) -> Byte
        Set: GridlineStyleBottom(self: _SubForm) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _SubForm) -> Byte
        Set: GridlineStyleLeft(self: _SubForm) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _SubForm) -> Byte
        Set: GridlineStyleRight(self: _SubForm) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _SubForm) -> Byte
        Set: GridlineStyleTop(self: _SubForm) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _SubForm) -> int
        Set: GridlineThemeColorIndex(self: _SubForm) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _SubForm) -> Single
        Set: GridlineTint(self: _SubForm) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _SubForm) -> Byte
        Set: GridlineWidthBottom(self: _SubForm) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _SubForm) -> Byte
        Set: GridlineWidthLeft(self: _SubForm) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _SubForm) -> Byte
        Set: GridlineWidthRight(self: _SubForm) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _SubForm) -> Byte
        Set: GridlineWidthTop(self: _SubForm) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _SubForm) -> Int16
        Set: Height(self: _SubForm) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _SubForm) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _SubForm) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _SubForm) -> bool
        Set: InSelection(self: _SubForm) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _SubForm) -> bool
        Set: IsVisible(self: _SubForm) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _SubForm) -> Byte
        Set: LabelAlign(self: _SubForm) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _SubForm) -> Int16
        Set: LabelX(self: _SubForm) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _SubForm) -> Int16
        Set: LabelY(self: _SubForm) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _SubForm) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _SubForm) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _SubForm) -> Int16
        Set: Left(self: _SubForm) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _SubForm) -> Int16
        Set: LeftPadding(self: _SubForm) = value
        """
        ...

    @property
    def LinkChildFields(self) -> str:
        """
        Get: LinkChildFields(self: _SubForm) -> str
        Set: LinkChildFields(self: _SubForm) = value
        """
        ...

    @property
    def LinkMasterFields(self) -> str:
        """
        Get: LinkMasterFields(self: _SubForm) -> str
        Set: LinkMasterFields(self: _SubForm) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _SubForm) -> bool
        Set: Locked(self: _SubForm) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _SubForm) -> str
        Set: Name(self: _SubForm) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _SubForm) -> Byte
        Set: OldBorderStyle(self: _SubForm) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _SubForm) -> str
        Set: OnEnter(self: _SubForm) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _SubForm) -> str
        Set: OnEnterMacro(self: _SubForm) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _SubForm) -> str
        Set: OnExit(self: _SubForm) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _SubForm) -> str
        Set: OnExitMacro(self: _SubForm) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SubForm) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _SubForm) -> Properties """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _SubForm) -> Report """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _SubForm) -> Int16
        Set: RightPadding(self: _SubForm) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _SubForm) -> Int16
        Set: Section(self: _SubForm) = value
        """
        ...

    @property
    def SourceObject(self) -> str:
        """
        Get: SourceObject(self: _SubForm) -> str
        Set: SourceObject(self: _SubForm) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _SubForm) -> Byte
        Set: SpecialEffect(self: _SubForm) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _SubForm) -> str
        Set: StatusBarText(self: _SubForm) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _SubForm) -> Int16
        Set: TabIndex(self: _SubForm) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _SubForm) -> bool
        Set: TabStop(self: _SubForm) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _SubForm) -> str
        Set: Tag(self: _SubForm) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _SubForm) -> Int16
        Set: Top(self: _SubForm) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _SubForm) -> Int16
        Set: TopPadding(self: _SubForm) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _SubForm) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _SubForm) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _SubForm) -> bool
        Set: Visible(self: _SubForm) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _SubForm) -> Int16
        Set: Width(self: _SubForm) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _SubForm) -> str
        Set: _Name(self: _SubForm) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _SubForm) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SubForm, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _SubForm, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _SubForm) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _SubForm) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _SubForm) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _SubForm, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class SubForm(_SubForm, DispSubFormEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class SubFormClass(SubForm, _SubFormEvents_Event, __ComObject): # skipped bases: <type '_SubForm'>, <type 'DispSubFormEvents_Event'>, <type 'IAccessible'>, <type 'object'>
    """ SubFormClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: SubFormClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: SubFormClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: SubFormClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: SubFormClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: SubFormClass) -> bool
        Set: AddColon(self: SubFormClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: SubFormClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: SubFormClass) -> bool
        Set: AutoLabel(self: SubFormClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: SubFormClass) -> int
        Set: BorderColor(self: SubFormClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: SubFormClass) -> Byte
        Set: BorderLineStyle(self: SubFormClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: SubFormClass) -> Single
        Set: BorderShade(self: SubFormClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: SubFormClass) -> Byte
        Set: BorderStyle(self: SubFormClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: SubFormClass) -> int
        Set: BorderThemeColorIndex(self: SubFormClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: SubFormClass) -> Single
        Set: BorderTint(self: SubFormClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: SubFormClass) -> Byte
        Set: BorderWidth(self: SubFormClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: SubFormClass) -> Int16
        Set: BottomPadding(self: SubFormClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: SubFormClass) -> bool
        Set: CanGrow(self: SubFormClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: SubFormClass) -> bool
        Set: CanShrink(self: SubFormClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: SubFormClass) -> str
        Set: ControlName(self: SubFormClass) = value
        """
        ...

    @property
    def Controls(self) -> Controls:
        """ Get: Controls(self: SubFormClass) -> Controls """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: SubFormClass) -> Byte
        Set: ControlType(self: SubFormClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: SubFormClass) -> Byte
        Set: DisplayWhen(self: SubFormClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: SubFormClass) -> bool
        Set: Enabled(self: SubFormClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: SubFormClass) -> str
        Set: EventProcPrefix(self: SubFormClass) = value
        """
        ...

    @property
    def FilterOnEmptyMaster(self) -> bool:
        """
        Get: FilterOnEmptyMaster(self: SubFormClass) -> bool
        Set: FilterOnEmptyMaster(self: SubFormClass) = value
        """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: SubFormClass) -> Form """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: SubFormClass) -> int
        Set: GridlineColor(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: SubFormClass) -> Single
        Set: GridlineShade(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: SubFormClass) -> Byte
        Set: GridlineStyleBottom(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: SubFormClass) -> Byte
        Set: GridlineStyleLeft(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: SubFormClass) -> Byte
        Set: GridlineStyleRight(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: SubFormClass) -> Byte
        Set: GridlineStyleTop(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: SubFormClass) -> int
        Set: GridlineThemeColorIndex(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: SubFormClass) -> Single
        Set: GridlineTint(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: SubFormClass) -> Byte
        Set: GridlineWidthBottom(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: SubFormClass) -> Byte
        Set: GridlineWidthLeft(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: SubFormClass) -> Byte
        Set: GridlineWidthRight(self: SubFormClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: SubFormClass) -> Byte
        Set: GridlineWidthTop(self: SubFormClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: SubFormClass) -> Int16
        Set: Height(self: SubFormClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: SubFormClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: SubFormClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: SubFormClass) -> bool
        Set: InSelection(self: SubFormClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: SubFormClass) -> bool
        Set: IsVisible(self: SubFormClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: SubFormClass) -> Byte
        Set: LabelAlign(self: SubFormClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: SubFormClass) -> Int16
        Set: LabelX(self: SubFormClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: SubFormClass) -> Int16
        Set: LabelY(self: SubFormClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: SubFormClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: SubFormClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: SubFormClass) -> Int16
        Set: Left(self: SubFormClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: SubFormClass) -> Int16
        Set: LeftPadding(self: SubFormClass) = value
        """
        ...

    @property
    def LinkChildFields(self) -> str:
        """
        Get: LinkChildFields(self: SubFormClass) -> str
        Set: LinkChildFields(self: SubFormClass) = value
        """
        ...

    @property
    def LinkMasterFields(self) -> str:
        """
        Get: LinkMasterFields(self: SubFormClass) -> str
        Set: LinkMasterFields(self: SubFormClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: SubFormClass) -> bool
        Set: Locked(self: SubFormClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: SubFormClass) -> str
        Set: Name(self: SubFormClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: SubFormClass) -> Byte
        Set: OldBorderStyle(self: SubFormClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: SubFormClass) -> str
        Set: OnEnter(self: SubFormClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: SubFormClass) -> str
        Set: OnEnterMacro(self: SubFormClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: SubFormClass) -> str
        Set: OnExit(self: SubFormClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: SubFormClass) -> str
        Set: OnExitMacro(self: SubFormClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SubFormClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: SubFormClass) -> Properties """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: SubFormClass) -> Report """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: SubFormClass) -> Int16
        Set: RightPadding(self: SubFormClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: SubFormClass) -> Int16
        Set: Section(self: SubFormClass) = value
        """
        ...

    @property
    def SourceObject(self) -> str:
        """
        Get: SourceObject(self: SubFormClass) -> str
        Set: SourceObject(self: SubFormClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: SubFormClass) -> Byte
        Set: SpecialEffect(self: SubFormClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: SubFormClass) -> str
        Set: StatusBarText(self: SubFormClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: SubFormClass) -> Int16
        Set: TabIndex(self: SubFormClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: SubFormClass) -> bool
        Set: TabStop(self: SubFormClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: SubFormClass) -> str
        Set: Tag(self: SubFormClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: SubFormClass) -> Int16
        Set: Top(self: SubFormClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: SubFormClass) -> Int16
        Set: TopPadding(self: SubFormClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: SubFormClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: SubFormClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: SubFormClass) -> bool
        Set: Visible(self: SubFormClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: SubFormClass) -> Int16
        Set: Width(self: SubFormClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: SubFormClass) -> str
        Set: _Name(self: SubFormClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: SubFormClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: SubFormClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: SubFormClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: SubFormClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: SubFormClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: SubFormClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SubFormClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: SubFormClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: SubFormClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: SubFormClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: SubFormClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: SubFormClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _SubFormEvents_Event_add_Enter(self): # -> 
        """ _SubFormEvents_Event_add_Enter(self: SubFormClass, : _SubFormEvents_EnterEventHandler) """
        ...

    def _SubFormEvents_Event_add_Exit(self): # -> 
        """ _SubFormEvents_Event_add_Exit(self: SubFormClass, : _SubFormEvents_ExitEventHandler) """
        ...

    def _SubFormEvents_Event_remove_Enter(self): # -> 
        """ _SubFormEvents_Event_remove_Enter(self: SubFormClass, : _SubFormEvents_EnterEventHandler) """
        ...

    def _SubFormEvents_Event_remove_Exit(self): # -> 
        """ _SubFormEvents_Event_remove_Exit(self: SubFormClass, : _SubFormEvents_ExitEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    Enter = ...
    Exit = ...
    _SubFormEvents_Event_Enter = ...
    _SubFormEvents_Event_Exit = ...


class _SubReport: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SubReport) -> Application """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _SubReport) -> Form """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SubReport) -> object """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _SubReport) -> Report """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SubReport, dispid: int) -> bool """
        ...


class SubReport(_SubReport, DispSubReportEvents_Event): # skipped bases: <type 'object'>
    """ no doc """
    pass

class SubReportClass(SubReport, _SubReportEvents_Event, __ComObject): # skipped bases: <type 'DispSubReportEvents_Event'>, <type '_SubReport'>, <type 'object'>
    """ SubReportClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: SubReportClass) -> Application """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: SubReportClass) -> Form """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: SubReportClass) -> object """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: SubReportClass) -> Report """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: SubReportClass, dispid: int) -> bool """
        ...

    def _SubReportEvents_Event_add_Enter(self): # -> 
        """ _SubReportEvents_Event_add_Enter(self: SubReportClass, : _SubReportEvents_EnterEventHandler) """
        ...

    def _SubReportEvents_Event_add_Exit(self): # -> 
        """ _SubReportEvents_Event_add_Exit(self: SubReportClass, : _SubReportEvents_ExitEventHandler) """
        ...

    def _SubReportEvents_Event_remove_Enter(self): # -> 
        """ _SubReportEvents_Event_remove_Enter(self: SubReportClass, : _SubReportEvents_EnterEventHandler) """
        ...

    def _SubReportEvents_Event_remove_Exit(self): # -> 
        """ _SubReportEvents_Event_remove_Exit(self: SubReportClass, : _SubReportEvents_ExitEventHandler) """
        ...

    Enter = ...
    Exit = ...
    _SubReportEvents_Event_Enter = ...
    _SubReportEvents_Event_Exit = ...


class _TabControl(IAccessible, IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _TabControl) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _TabControl) -> int
        Set: BackColor(self: _TabControl) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _TabControl) -> Single
        Set: BackShade(self: _TabControl) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _TabControl) -> Byte
        Set: BackStyle(self: _TabControl) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _TabControl) -> int
        Set: BackThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _TabControl) -> Single
        Set: BackTint(self: _TabControl) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _TabControl) -> int
        Set: BorderColor(self: _TabControl) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _TabControl) -> Single
        Set: BorderShade(self: _TabControl) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _TabControl) -> Byte
        Set: BorderStyle(self: _TabControl) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _TabControl) -> int
        Set: BorderThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _TabControl) -> Single
        Set: BorderTint(self: _TabControl) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _TabControl) -> Int16
        Set: BottomPadding(self: _TabControl) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _TabControl) -> str
        Set: ControlName(self: _TabControl) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _TabControl) -> Byte
        Set: ControlType(self: _TabControl) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _TabControl) -> Byte
        Set: DisplayWhen(self: _TabControl) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _TabControl) -> bool
        Set: Enabled(self: _TabControl) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _TabControl) -> str
        Set: EventProcPrefix(self: _TabControl) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _TabControl) -> Int16
        Set: FontBold(self: _TabControl) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _TabControl) -> bool
        Set: FontItalic(self: _TabControl) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _TabControl) -> str
        Set: FontName(self: _TabControl) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _TabControl) -> Int16
        Set: FontSize(self: _TabControl) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _TabControl) -> bool
        Set: FontUnderline(self: _TabControl) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _TabControl) -> Int16
        Set: FontWeight(self: _TabControl) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _TabControl) -> int
        Set: ForeColor(self: _TabControl) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _TabControl) -> Single
        Set: ForeShade(self: _TabControl) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _TabControl) -> int
        Set: ForeThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _TabControl) -> Single
        Set: ForeTint(self: _TabControl) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: _TabControl) -> int
        Set: Gradient(self: _TabControl) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _TabControl) -> int
        Set: GridlineColor(self: _TabControl) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _TabControl) -> Single
        Set: GridlineShade(self: _TabControl) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _TabControl) -> Byte
        Set: GridlineStyleBottom(self: _TabControl) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _TabControl) -> Byte
        Set: GridlineStyleLeft(self: _TabControl) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _TabControl) -> Byte
        Set: GridlineStyleRight(self: _TabControl) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _TabControl) -> Byte
        Set: GridlineStyleTop(self: _TabControl) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _TabControl) -> int
        Set: GridlineThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _TabControl) -> Single
        Set: GridlineTint(self: _TabControl) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _TabControl) -> Byte
        Set: GridlineWidthBottom(self: _TabControl) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _TabControl) -> Byte
        Set: GridlineWidthLeft(self: _TabControl) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _TabControl) -> Byte
        Set: GridlineWidthRight(self: _TabControl) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _TabControl) -> Byte
        Set: GridlineWidthTop(self: _TabControl) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _TabControl) -> Int16
        Set: Height(self: _TabControl) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _TabControl) -> int
        Set: HelpContextId(self: _TabControl) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _TabControl) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _TabControl) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: _TabControl) -> int
        Set: HoverColor(self: _TabControl) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: _TabControl) -> int
        Set: HoverForeColor(self: _TabControl) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: _TabControl) -> Single
        Set: HoverForeShade(self: _TabControl) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: _TabControl) -> int
        Set: HoverForeThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: _TabControl) -> Single
        Set: HoverForeTint(self: _TabControl) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: _TabControl) -> Single
        Set: HoverShade(self: _TabControl) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: _TabControl) -> int
        Set: HoverThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: _TabControl) -> Single
        Set: HoverTint(self: _TabControl) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _TabControl) -> bool
        Set: InSelection(self: _TabControl) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _TabControl) -> bool
        Set: IsVisible(self: _TabControl) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _TabControl) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _TabControl) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _TabControl) -> Int16
        Set: Left(self: _TabControl) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _TabControl) -> Int16
        Set: LeftPadding(self: _TabControl) = value
        """
        ...

    @property
    def MultiRow(self) -> bool:
        """
        Get: MultiRow(self: _TabControl) -> bool
        Set: MultiRow(self: _TabControl) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _TabControl) -> str
        Set: Name(self: _TabControl) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _TabControl) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: _TabControl) -> str
        Set: OnChange(self: _TabControl) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: _TabControl) -> str
        Set: OnChangeMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _TabControl) -> str
        Set: OnClick(self: _TabControl) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _TabControl) -> str
        Set: OnClickMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _TabControl) -> str
        Set: OnDblClick(self: _TabControl) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _TabControl) -> str
        Set: OnDblClickMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _TabControl) -> str
        Set: OnKeyDown(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _TabControl) -> str
        Set: OnKeyDownMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _TabControl) -> str
        Set: OnKeyPress(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _TabControl) -> str
        Set: OnKeyPressMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _TabControl) -> str
        Set: OnKeyUp(self: _TabControl) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _TabControl) -> str
        Set: OnKeyUpMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _TabControl) -> str
        Set: OnMouseDown(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _TabControl) -> str
        Set: OnMouseDownMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _TabControl) -> str
        Set: OnMouseMove(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _TabControl) -> str
        Set: OnMouseMoveMacro(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _TabControl) -> str
        Set: OnMouseUp(self: _TabControl) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _TabControl) -> str
        Set: OnMouseUpMacro(self: _TabControl) = value
        """
        ...

    @property
    def Pages(self) -> Pages:
        """ Get: Pages(self: _TabControl) -> Pages """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _TabControl) -> object """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: _TabControl) -> int
        Set: PressedColor(self: _TabControl) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: _TabControl) -> int
        Set: PressedForeColor(self: _TabControl) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: _TabControl) -> Single
        Set: PressedForeShade(self: _TabControl) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: _TabControl) -> int
        Set: PressedForeThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: _TabControl) -> Single
        Set: PressedForeTint(self: _TabControl) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: _TabControl) -> Single
        Set: PressedShade(self: _TabControl) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: _TabControl) -> int
        Set: PressedThemeColorIndex(self: _TabControl) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: _TabControl) -> Single
        Set: PressedTint(self: _TabControl) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _TabControl) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _TabControl) -> Int16
        Set: RightPadding(self: _TabControl) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _TabControl) -> Int16
        Set: Section(self: _TabControl) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: _TabControl) -> int
        Set: Shape(self: _TabControl) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _TabControl) -> str
        Set: ShortcutMenuBar(self: _TabControl) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _TabControl) -> str
        Set: StatusBarText(self: _TabControl) = value
        """
        ...

    @property
    def Style(self) -> Byte:
        """
        Get: Style(self: _TabControl) -> Byte
        Set: Style(self: _TabControl) = value
        """
        ...

    @property
    def TabFixedHeight(self) -> Int16:
        """
        Get: TabFixedHeight(self: _TabControl) -> Int16
        Set: TabFixedHeight(self: _TabControl) = value
        """
        ...

    @property
    def TabFixedWidth(self) -> Int16:
        """
        Get: TabFixedWidth(self: _TabControl) -> Int16
        Set: TabFixedWidth(self: _TabControl) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _TabControl) -> Int16
        Set: TabIndex(self: _TabControl) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _TabControl) -> bool
        Set: TabStop(self: _TabControl) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _TabControl) -> str
        Set: Tag(self: _TabControl) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _TabControl) -> Byte
        Set: TextFontCharSet(self: _TabControl) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _TabControl) -> int
        Set: ThemeFontIndex(self: _TabControl) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _TabControl) -> Int16
        Set: Top(self: _TabControl) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _TabControl) -> Int16
        Set: TopPadding(self: _TabControl) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: _TabControl) -> bool
        Set: UseTheme(self: _TabControl) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _TabControl) -> object
        Set: Value(self: _TabControl) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _TabControl) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _TabControl) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _TabControl) -> bool
        Set: Visible(self: _TabControl) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _TabControl) -> Int16
        Set: Width(self: _TabControl) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _TabControl) -> str
        Set: _Name(self: _TabControl) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _TabControl, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _TabControl, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _TabControl) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _TabControl, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class TabControl(DispTabControlEvents_Event, _TabControl): # skipped bases: <type 'IEnumerable'>, <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class TabControlClass(TabControl, _TabControlEvents_Event, __ComObject): # skipped bases: <type 'DispTabControlEvents_Event'>, <type 'IEnumerable'>, <type 'IAccessible'>, <type '_TabControl'>, <type 'object'>
    """ TabControlClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: TabControlClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: TabControlClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: TabControlClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: TabControlClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: TabControlClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: TabControlClass) -> int
        Set: BackColor(self: TabControlClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: TabControlClass) -> Single
        Set: BackShade(self: TabControlClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: TabControlClass) -> Byte
        Set: BackStyle(self: TabControlClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: TabControlClass) -> int
        Set: BackThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: TabControlClass) -> Single
        Set: BackTint(self: TabControlClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: TabControlClass) -> int
        Set: BorderColor(self: TabControlClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: TabControlClass) -> Single
        Set: BorderShade(self: TabControlClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: TabControlClass) -> Byte
        Set: BorderStyle(self: TabControlClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: TabControlClass) -> int
        Set: BorderThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: TabControlClass) -> Single
        Set: BorderTint(self: TabControlClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: TabControlClass) -> Int16
        Set: BottomPadding(self: TabControlClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: TabControlClass) -> str
        Set: ControlName(self: TabControlClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: TabControlClass) -> Byte
        Set: ControlType(self: TabControlClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: TabControlClass) -> Byte
        Set: DisplayWhen(self: TabControlClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: TabControlClass) -> bool
        Set: Enabled(self: TabControlClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: TabControlClass) -> str
        Set: EventProcPrefix(self: TabControlClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: TabControlClass) -> Int16
        Set: FontBold(self: TabControlClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: TabControlClass) -> bool
        Set: FontItalic(self: TabControlClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: TabControlClass) -> str
        Set: FontName(self: TabControlClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: TabControlClass) -> Int16
        Set: FontSize(self: TabControlClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: TabControlClass) -> bool
        Set: FontUnderline(self: TabControlClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: TabControlClass) -> Int16
        Set: FontWeight(self: TabControlClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: TabControlClass) -> int
        Set: ForeColor(self: TabControlClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: TabControlClass) -> Single
        Set: ForeShade(self: TabControlClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: TabControlClass) -> int
        Set: ForeThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: TabControlClass) -> Single
        Set: ForeTint(self: TabControlClass) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: TabControlClass) -> int
        Set: Gradient(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: TabControlClass) -> int
        Set: GridlineColor(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: TabControlClass) -> Single
        Set: GridlineShade(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: TabControlClass) -> Byte
        Set: GridlineStyleBottom(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: TabControlClass) -> Byte
        Set: GridlineStyleLeft(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: TabControlClass) -> Byte
        Set: GridlineStyleRight(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: TabControlClass) -> Byte
        Set: GridlineStyleTop(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: TabControlClass) -> int
        Set: GridlineThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: TabControlClass) -> Single
        Set: GridlineTint(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: TabControlClass) -> Byte
        Set: GridlineWidthBottom(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: TabControlClass) -> Byte
        Set: GridlineWidthLeft(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: TabControlClass) -> Byte
        Set: GridlineWidthRight(self: TabControlClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: TabControlClass) -> Byte
        Set: GridlineWidthTop(self: TabControlClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: TabControlClass) -> Int16
        Set: Height(self: TabControlClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: TabControlClass) -> int
        Set: HelpContextId(self: TabControlClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: TabControlClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: TabControlClass) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: TabControlClass) -> int
        Set: HoverColor(self: TabControlClass) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: TabControlClass) -> int
        Set: HoverForeColor(self: TabControlClass) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: TabControlClass) -> Single
        Set: HoverForeShade(self: TabControlClass) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: TabControlClass) -> int
        Set: HoverForeThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: TabControlClass) -> Single
        Set: HoverForeTint(self: TabControlClass) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: TabControlClass) -> Single
        Set: HoverShade(self: TabControlClass) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: TabControlClass) -> int
        Set: HoverThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: TabControlClass) -> Single
        Set: HoverTint(self: TabControlClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: TabControlClass) -> bool
        Set: InSelection(self: TabControlClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: TabControlClass) -> bool
        Set: IsVisible(self: TabControlClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: TabControlClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: TabControlClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: TabControlClass) -> Int16
        Set: Left(self: TabControlClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: TabControlClass) -> Int16
        Set: LeftPadding(self: TabControlClass) = value
        """
        ...

    @property
    def MultiRow(self) -> bool:
        """
        Get: MultiRow(self: TabControlClass) -> bool
        Set: MultiRow(self: TabControlClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: TabControlClass) -> str
        Set: Name(self: TabControlClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: TabControlClass) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: TabControlClass) -> str
        Set: OnChange(self: TabControlClass) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: TabControlClass) -> str
        Set: OnChangeMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: TabControlClass) -> str
        Set: OnClick(self: TabControlClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: TabControlClass) -> str
        Set: OnClickMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: TabControlClass) -> str
        Set: OnDblClick(self: TabControlClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: TabControlClass) -> str
        Set: OnDblClickMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: TabControlClass) -> str
        Set: OnKeyDown(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: TabControlClass) -> str
        Set: OnKeyDownMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: TabControlClass) -> str
        Set: OnKeyPress(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: TabControlClass) -> str
        Set: OnKeyPressMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: TabControlClass) -> str
        Set: OnKeyUp(self: TabControlClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: TabControlClass) -> str
        Set: OnKeyUpMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: TabControlClass) -> str
        Set: OnMouseDown(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: TabControlClass) -> str
        Set: OnMouseDownMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: TabControlClass) -> str
        Set: OnMouseMove(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: TabControlClass) -> str
        Set: OnMouseMoveMacro(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: TabControlClass) -> str
        Set: OnMouseUp(self: TabControlClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: TabControlClass) -> str
        Set: OnMouseUpMacro(self: TabControlClass) = value
        """
        ...

    @property
    def Pages(self) -> Pages:
        """ Get: Pages(self: TabControlClass) -> Pages """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: TabControlClass) -> object """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: TabControlClass) -> int
        Set: PressedColor(self: TabControlClass) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: TabControlClass) -> int
        Set: PressedForeColor(self: TabControlClass) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: TabControlClass) -> Single
        Set: PressedForeShade(self: TabControlClass) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: TabControlClass) -> int
        Set: PressedForeThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: TabControlClass) -> Single
        Set: PressedForeTint(self: TabControlClass) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: TabControlClass) -> Single
        Set: PressedShade(self: TabControlClass) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: TabControlClass) -> int
        Set: PressedThemeColorIndex(self: TabControlClass) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: TabControlClass) -> Single
        Set: PressedTint(self: TabControlClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: TabControlClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: TabControlClass) -> Int16
        Set: RightPadding(self: TabControlClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: TabControlClass) -> Int16
        Set: Section(self: TabControlClass) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: TabControlClass) -> int
        Set: Shape(self: TabControlClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: TabControlClass) -> str
        Set: ShortcutMenuBar(self: TabControlClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: TabControlClass) -> str
        Set: StatusBarText(self: TabControlClass) = value
        """
        ...

    @property
    def Style(self) -> Byte:
        """
        Get: Style(self: TabControlClass) -> Byte
        Set: Style(self: TabControlClass) = value
        """
        ...

    @property
    def TabFixedHeight(self) -> Int16:
        """
        Get: TabFixedHeight(self: TabControlClass) -> Int16
        Set: TabFixedHeight(self: TabControlClass) = value
        """
        ...

    @property
    def TabFixedWidth(self) -> Int16:
        """
        Get: TabFixedWidth(self: TabControlClass) -> Int16
        Set: TabFixedWidth(self: TabControlClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: TabControlClass) -> Int16
        Set: TabIndex(self: TabControlClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: TabControlClass) -> bool
        Set: TabStop(self: TabControlClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: TabControlClass) -> str
        Set: Tag(self: TabControlClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: TabControlClass) -> Byte
        Set: TextFontCharSet(self: TabControlClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: TabControlClass) -> int
        Set: ThemeFontIndex(self: TabControlClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: TabControlClass) -> Int16
        Set: Top(self: TabControlClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: TabControlClass) -> Int16
        Set: TopPadding(self: TabControlClass) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: TabControlClass) -> bool
        Set: UseTheme(self: TabControlClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: TabControlClass) -> object
        Set: Value(self: TabControlClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: TabControlClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: TabControlClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: TabControlClass) -> bool
        Set: Visible(self: TabControlClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: TabControlClass) -> Int16
        Set: Width(self: TabControlClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: TabControlClass) -> str
        Set: _Name(self: TabControlClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: TabControlClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: TabControlClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: TabControlClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: TabControlClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: TabControlClass, flagsSelect: int, varChild: object) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: TabControlClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: TabControlClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: TabControlClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: TabControlClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: TabControlClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _TabControlEvents_Event_add_Change(self): # -> 
        """ _TabControlEvents_Event_add_Change(self: TabControlClass, : _TabControlEvents_ChangeEventHandler) """
        ...

    def _TabControlEvents_Event_add_Click(self): # -> 
        """ _TabControlEvents_Event_add_Click(self: TabControlClass, : _TabControlEvents_ClickEventHandler) """
        ...

    def _TabControlEvents_Event_add_DblClick(self): # -> 
        """ _TabControlEvents_Event_add_DblClick(self: TabControlClass, : _TabControlEvents_DblClickEventHandler) """
        ...

    def _TabControlEvents_Event_add_KeyDown(self): # -> 
        """ _TabControlEvents_Event_add_KeyDown(self: TabControlClass, : _TabControlEvents_KeyDownEventHandler) """
        ...

    def _TabControlEvents_Event_add_KeyPress(self): # -> 
        """ _TabControlEvents_Event_add_KeyPress(self: TabControlClass, : _TabControlEvents_KeyPressEventHandler) """
        ...

    def _TabControlEvents_Event_add_KeyUp(self): # -> 
        """ _TabControlEvents_Event_add_KeyUp(self: TabControlClass, : _TabControlEvents_KeyUpEventHandler) """
        ...

    def _TabControlEvents_Event_add_MouseDown(self): # -> 
        """ _TabControlEvents_Event_add_MouseDown(self: TabControlClass, : _TabControlEvents_MouseDownEventHandler) """
        ...

    def _TabControlEvents_Event_add_MouseMove(self): # -> 
        """ _TabControlEvents_Event_add_MouseMove(self: TabControlClass, : _TabControlEvents_MouseMoveEventHandler) """
        ...

    def _TabControlEvents_Event_add_MouseUp(self): # -> 
        """ _TabControlEvents_Event_add_MouseUp(self: TabControlClass, : _TabControlEvents_MouseUpEventHandler) """
        ...

    def _TabControlEvents_Event_remove_Change(self): # -> 
        """ _TabControlEvents_Event_remove_Change(self: TabControlClass, : _TabControlEvents_ChangeEventHandler) """
        ...

    def _TabControlEvents_Event_remove_Click(self): # -> 
        """ _TabControlEvents_Event_remove_Click(self: TabControlClass, : _TabControlEvents_ClickEventHandler) """
        ...

    def _TabControlEvents_Event_remove_DblClick(self): # -> 
        """ _TabControlEvents_Event_remove_DblClick(self: TabControlClass, : _TabControlEvents_DblClickEventHandler) """
        ...

    def _TabControlEvents_Event_remove_KeyDown(self): # -> 
        """ _TabControlEvents_Event_remove_KeyDown(self: TabControlClass, : _TabControlEvents_KeyDownEventHandler) """
        ...

    def _TabControlEvents_Event_remove_KeyPress(self): # -> 
        """ _TabControlEvents_Event_remove_KeyPress(self: TabControlClass, : _TabControlEvents_KeyPressEventHandler) """
        ...

    def _TabControlEvents_Event_remove_KeyUp(self): # -> 
        """ _TabControlEvents_Event_remove_KeyUp(self: TabControlClass, : _TabControlEvents_KeyUpEventHandler) """
        ...

    def _TabControlEvents_Event_remove_MouseDown(self): # -> 
        """ _TabControlEvents_Event_remove_MouseDown(self: TabControlClass, : _TabControlEvents_MouseDownEventHandler) """
        ...

    def _TabControlEvents_Event_remove_MouseMove(self): # -> 
        """ _TabControlEvents_Event_remove_MouseMove(self: TabControlClass, : _TabControlEvents_MouseMoveEventHandler) """
        ...

    def _TabControlEvents_Event_remove_MouseUp(self): # -> 
        """ _TabControlEvents_Event_remove_MouseUp(self: TabControlClass, : _TabControlEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Change = ...
    Click = ...
    DblClick = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _TabControlEvents_Event_Change = ...
    _TabControlEvents_Event_Click = ...
    _TabControlEvents_Event_DblClick = ...
    _TabControlEvents_Event_KeyDown = ...
    _TabControlEvents_Event_KeyPress = ...
    _TabControlEvents_Event_KeyUp = ...
    _TabControlEvents_Event_MouseDown = ...
    _TabControlEvents_Event_MouseMove = ...
    _TabControlEvents_Event_MouseUp = ...


class _TempVar: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: _TempVar) -> str """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _TempVar) -> object
        Set: Value(self: _TempVar) = value
        """
        ...

    @property
    def _Value(self) -> object:
        """
        Get: _Value(self: _TempVar) -> object
        Set: _Value(self: _TempVar) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _TempVar, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class TempVar(_TempVar): # skipped bases: <type 'object'>
    """ no doc """
    pass

class TempVarClass(TempVar, __ComObject): # skipped bases: <type '_TempVar'>, <type 'object'>
    """ TempVarClass() """
    @property
    def Name(self) -> str:
        """ Get: Name(self: TempVarClass) -> str """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: TempVarClass) -> object
        Set: Value(self: TempVarClass) = value
        """
        ...

    @property
    def _Value(self) -> object:
        """
        Get: _Value(self: TempVarClass) -> object
        Set: _Value(self: TempVarClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: TempVarClass, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class _TempVars(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _TempVars) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: _TempVars) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _TempVars) -> object """
        ...


    def Add(self, Name:str, Value:object): # -> 
        """ Add(self: _TempVars, Name: str, Value: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _TempVars, dispid: int) -> bool """
        ...

    def Remove(self, var:object): # -> 
        """ Remove(self: _TempVars, var: object) """
        ...

    def RemoveAll(self): # -> 
        """ RemoveAll(self: _TempVars) """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class TempVars(_TempVars): # skipped bases: <type 'IEnumerable'>, <type 'object'>
    """ no doc """
    pass

class TempVarsClass(TempVars, __ComObject): # skipped bases: <type 'IEnumerable'>, <type '_TempVars'>, <type 'object'>
    """ TempVarsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: TempVarsClass) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: TempVarsClass) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: TempVarsClass) -> object """
        ...


    def Add(self, Name:str, Value:object): # -> 
        """ Add(self: TempVarsClass, Name: str, Value: object) """
        ...

    def GetEnumerator(self) -> IEnumerator:
        """ GetEnumerator(self: TempVarsClass) -> IEnumerator """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: TempVarsClass, dispid: int) -> bool """
        ...

    def Remove(self, var:object): # -> 
        """ Remove(self: TempVarsClass, var: object) """
        ...

    def RemoveAll(self): # -> 
        """ RemoveAll(self: TempVarsClass) """
        ...

    def __add__(self, *args): #cannot find CLR method
        """ x.__add__(y) <==> x+y """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _Textbox(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _Textbox) -> bool
        Set: AddColon(self: _Textbox) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _Textbox) -> str
        Set: AfterUpdate(self: _Textbox) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _Textbox) -> str
        Set: AfterUpdateMacro(self: _Textbox) = value
        """
        ...

    @property
    def AllowAutoCorrect(self) -> bool:
        """
        Get: AllowAutoCorrect(self: _Textbox) -> bool
        Set: AllowAutoCorrect(self: _Textbox) = value
        """
        ...

    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: _Textbox) -> Byte
        Set: AllowedText(self: _Textbox) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _Textbox) -> Application """
        ...

    @property
    def AsianLineBreak(self) -> bool:
        """
        Get: AsianLineBreak(self: _Textbox) -> bool
        Set: AsianLineBreak(self: _Textbox) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _Textbox) -> bool
        Set: AutoLabel(self: _Textbox) = value
        """
        ...

    @property
    def AutoTab(self) -> bool:
        """
        Get: AutoTab(self: _Textbox) -> bool
        Set: AutoTab(self: _Textbox) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _Textbox) -> int
        Set: BackColor(self: _Textbox) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _Textbox) -> Single
        Set: BackShade(self: _Textbox) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _Textbox) -> Byte
        Set: BackStyle(self: _Textbox) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _Textbox) -> int
        Set: BackThemeColorIndex(self: _Textbox) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _Textbox) -> Single
        Set: BackTint(self: _Textbox) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _Textbox) -> str
        Set: BeforeUpdate(self: _Textbox) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _Textbox) -> str
        Set: BeforeUpdateMacro(self: _Textbox) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _Textbox) -> int
        Set: BorderColor(self: _Textbox) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _Textbox) -> Byte
        Set: BorderLineStyle(self: _Textbox) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _Textbox) -> Single
        Set: BorderShade(self: _Textbox) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _Textbox) -> Byte
        Set: BorderStyle(self: _Textbox) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _Textbox) -> int
        Set: BorderThemeColorIndex(self: _Textbox) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _Textbox) -> Single
        Set: BorderTint(self: _Textbox) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _Textbox) -> Byte
        Set: BorderWidth(self: _Textbox) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: _Textbox) -> Int16
        Set: BottomMargin(self: _Textbox) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _Textbox) -> Int16
        Set: BottomPadding(self: _Textbox) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _Textbox) -> bool
        Set: CanGrow(self: _Textbox) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _Textbox) -> bool
        Set: CanShrink(self: _Textbox) = value
        """
        ...

    @property
    def Coltyp(self) -> int:
        """
        Get: Coltyp(self: _Textbox) -> int
        Set: Coltyp(self: _Textbox) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _Textbox) -> bool
        Set: ColumnHidden(self: _Textbox) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _Textbox) -> Int16
        Set: ColumnOrder(self: _Textbox) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _Textbox) -> Int16
        Set: ColumnWidth(self: _Textbox) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _Textbox) -> str
        Set: ControlName(self: _Textbox) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _Textbox) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _Textbox) -> str
        Set: ControlSource(self: _Textbox) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _Textbox) -> str
        Set: ControlTipText(self: _Textbox) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _Textbox) -> Byte
        Set: ControlType(self: _Textbox) = value
        """
        ...

    @property
    def DecimalPlaces(self) -> Byte:
        """
        Get: DecimalPlaces(self: _Textbox) -> Byte
        Set: DecimalPlaces(self: _Textbox) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _Textbox) -> str
        Set: DefaultValue(self: _Textbox) = value
        """
        ...

    @property
    def DisplayAsHyperlink(self) -> AcDisplayAsHyperlink:
        """
        Get: DisplayAsHyperlink(self: _Textbox) -> AcDisplayAsHyperlink
        Set: DisplayAsHyperlink(self: _Textbox) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _Textbox) -> Byte
        Set: DisplayWhen(self: _Textbox) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _Textbox) -> bool
        Set: Enabled(self: _Textbox) = value
        """
        ...

    @property
    def EnterKeyBehavior(self) -> bool:
        """
        Get: EnterKeyBehavior(self: _Textbox) -> bool
        Set: EnterKeyBehavior(self: _Textbox) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _Textbox) -> str
        Set: EventProcPrefix(self: _Textbox) = value
        """
        ...

    @property
    def FELineBreak(self) -> bool:
        """
        Get: FELineBreak(self: _Textbox) -> bool
        Set: FELineBreak(self: _Textbox) = value
        """
        ...

    @property
    def FilterLookup(self) -> Byte:
        """
        Get: FilterLookup(self: _Textbox) -> Byte
        Set: FilterLookup(self: _Textbox) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _Textbox) -> Int16
        Set: FontBold(self: _Textbox) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _Textbox) -> bool
        Set: FontItalic(self: _Textbox) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _Textbox) -> str
        Set: FontName(self: _Textbox) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _Textbox) -> Int16
        Set: FontSize(self: _Textbox) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _Textbox) -> bool
        Set: FontUnderline(self: _Textbox) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _Textbox) -> Int16
        Set: FontWeight(self: _Textbox) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _Textbox) -> int
        Set: ForeColor(self: _Textbox) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _Textbox) -> Single
        Set: ForeShade(self: _Textbox) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _Textbox) -> int
        Set: ForeThemeColorIndex(self: _Textbox) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _Textbox) -> Single
        Set: ForeTint(self: _Textbox) = value
        """
        ...

    @property
    def Format(self) -> str:
        """
        Get: Format(self: _Textbox) -> str
        Set: Format(self: _Textbox) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: _Textbox) -> FormatConditions """
        ...

    @property
    def FormatPictureText(self) -> str:
        """
        Get: FormatPictureText(self: _Textbox) -> str
        Set: FormatPictureText(self: _Textbox) = value
        """
        ...

    @property
    def FuriganaControl(self) -> str:
        """
        Get: FuriganaControl(self: _Textbox) -> str
        Set: FuriganaControl(self: _Textbox) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _Textbox) -> int
        Set: GridlineColor(self: _Textbox) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _Textbox) -> Single
        Set: GridlineShade(self: _Textbox) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _Textbox) -> Byte
        Set: GridlineStyleBottom(self: _Textbox) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _Textbox) -> Byte
        Set: GridlineStyleLeft(self: _Textbox) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _Textbox) -> Byte
        Set: GridlineStyleRight(self: _Textbox) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _Textbox) -> Byte
        Set: GridlineStyleTop(self: _Textbox) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _Textbox) -> int
        Set: GridlineThemeColorIndex(self: _Textbox) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _Textbox) -> Single
        Set: GridlineTint(self: _Textbox) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _Textbox) -> Byte
        Set: GridlineWidthBottom(self: _Textbox) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _Textbox) -> Byte
        Set: GridlineWidthLeft(self: _Textbox) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _Textbox) -> Byte
        Set: GridlineWidthRight(self: _Textbox) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _Textbox) -> Byte
        Set: GridlineWidthTop(self: _Textbox) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _Textbox) -> Int16
        Set: Height(self: _Textbox) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _Textbox) -> int
        Set: HelpContextId(self: _Textbox) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _Textbox) -> bool
        Set: HideDuplicates(self: _Textbox) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _Textbox) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _Textbox) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _Textbox) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: _Textbox) -> bool
        Set: IMEHold(self: _Textbox) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: _Textbox) -> AcImeMode
        Set: IMEMode(self: _Textbox) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: _Textbox) -> AcImeSentenceMode
        Set: IMESentenceMode(self: _Textbox) = value
        """
        ...

    @property
    def InputMask(self) -> str:
        """
        Get: InputMask(self: _Textbox) -> str
        Set: InputMask(self: _Textbox) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _Textbox) -> bool
        Set: InSelection(self: _Textbox) = value
        """
        ...

    @property
    def IsHyperlink(self) -> bool:
        """
        Get: IsHyperlink(self: _Textbox) -> bool
        Set: IsHyperlink(self: _Textbox) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _Textbox) -> bool
        Set: IsVisible(self: _Textbox) = value
        """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: _Textbox) -> Byte
        Set: KeyboardLanguage(self: _Textbox) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _Textbox) -> Byte
        Set: LabelAlign(self: _Textbox) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _Textbox) -> Int16
        Set: LabelX(self: _Textbox) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _Textbox) -> Int16
        Set: LabelY(self: _Textbox) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _Textbox) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _Textbox) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _Textbox) -> Int16
        Set: Left(self: _Textbox) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: _Textbox) -> Int16
        Set: LeftMargin(self: _Textbox) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _Textbox) -> Int16
        Set: LeftPadding(self: _Textbox) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: _Textbox) -> Int16
        Set: LineSpacing(self: _Textbox) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _Textbox) -> bool
        Set: Locked(self: _Textbox) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _Textbox) -> str
        Set: Name(self: _Textbox) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _Textbox) -> Byte
        Set: NumeralShapes(self: _Textbox) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _Textbox) -> Byte
        Set: OldBorderStyle(self: _Textbox) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _Textbox) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: _Textbox) -> str
        Set: OnChange(self: _Textbox) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: _Textbox) -> str
        Set: OnChangeMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _Textbox) -> str
        Set: OnClick(self: _Textbox) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _Textbox) -> str
        Set: OnClickMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _Textbox) -> str
        Set: OnDblClick(self: _Textbox) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _Textbox) -> str
        Set: OnDblClickMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: _Textbox) -> str
        Set: OnDirty(self: _Textbox) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _Textbox) -> str
        Set: OnEnter(self: _Textbox) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _Textbox) -> str
        Set: OnEnterMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _Textbox) -> str
        Set: OnExit(self: _Textbox) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _Textbox) -> str
        Set: OnExitMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _Textbox) -> str
        Set: OnGotFocus(self: _Textbox) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _Textbox) -> str
        Set: OnGotFocusMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _Textbox) -> str
        Set: OnKeyDown(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _Textbox) -> str
        Set: OnKeyDownMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _Textbox) -> str
        Set: OnKeyPress(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _Textbox) -> str
        Set: OnKeyPressMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _Textbox) -> str
        Set: OnKeyUp(self: _Textbox) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _Textbox) -> str
        Set: OnKeyUpMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _Textbox) -> str
        Set: OnLostFocus(self: _Textbox) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _Textbox) -> str
        Set: OnLostFocusMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _Textbox) -> str
        Set: OnMouseDown(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _Textbox) -> str
        Set: OnMouseDownMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _Textbox) -> str
        Set: OnMouseMove(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _Textbox) -> str
        Set: OnMouseMoveMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _Textbox) -> str
        Set: OnMouseUp(self: _Textbox) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _Textbox) -> str
        Set: OnMouseUpMacro(self: _Textbox) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: _Textbox) -> str
        Set: OnUndo(self: _Textbox) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _Textbox) -> object """
        ...

    @property
    def PostalAddress(self) -> str:
        """
        Get: PostalAddress(self: _Textbox) -> str
        Set: PostalAddress(self: _Textbox) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _Textbox) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _Textbox) -> Byte
        Set: ReadingOrder(self: _Textbox) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: _Textbox) -> Int16
        Set: RightMargin(self: _Textbox) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _Textbox) -> Int16
        Set: RightPadding(self: _Textbox) = value
        """
        ...

    @property
    def RunningSum(self) -> Byte:
        """
        Get: RunningSum(self: _Textbox) -> Byte
        Set: RunningSum(self: _Textbox) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: _Textbox) -> Byte
        Set: ScrollBarAlign(self: _Textbox) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: _Textbox) -> Byte
        Set: ScrollBars(self: _Textbox) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _Textbox) -> Int16
        Set: Section(self: _Textbox) = value
        """
        ...

    @property
    def SelLength(self) -> Int16:
        """
        Get: SelLength(self: _Textbox) -> Int16
        Set: SelLength(self: _Textbox) = value
        """
        ...

    @property
    def SelStart(self) -> Int16:
        """
        Get: SelStart(self: _Textbox) -> Int16
        Set: SelStart(self: _Textbox) = value
        """
        ...

    @property
    def SelText(self) -> str:
        """
        Get: SelText(self: _Textbox) -> str
        Set: SelText(self: _Textbox) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _Textbox) -> str
        Set: ShortcutMenuBar(self: _Textbox) = value
        """
        ...

    @property
    def ShowDatePicker(self) -> Int16:
        """
        Get: ShowDatePicker(self: _Textbox) -> Int16
        Set: ShowDatePicker(self: _Textbox) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _Textbox) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _Textbox) -> Byte
        Set: SpecialEffect(self: _Textbox) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _Textbox) -> str
        Set: StatusBarText(self: _Textbox) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _Textbox) -> Int16
        Set: TabIndex(self: _Textbox) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _Textbox) -> bool
        Set: TabStop(self: _Textbox) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _Textbox) -> str
        Set: Tag(self: _Textbox) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _Textbox) -> str
        Set: Target(self: _Textbox) = value
        """
        ...

    @property
    def Text(self) -> str:
        """
        Get: Text(self: _Textbox) -> str
        Set: Text(self: _Textbox) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: _Textbox) -> Byte
        Set: TextAlign(self: _Textbox) = value
        """
        ...

    @property
    def TextAlignGeneral(self) -> Int16:
        """
        Get: TextAlignGeneral(self: _Textbox) -> Int16
        Set: TextAlignGeneral(self: _Textbox) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _Textbox) -> Byte
        Set: TextFontCharSet(self: _Textbox) = value
        """
        ...

    @property
    def TextFormat(self) -> AcTextFormat:
        """
        Get: TextFormat(self: _Textbox) -> AcTextFormat
        Set: TextFormat(self: _Textbox) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _Textbox) -> int
        Set: ThemeFontIndex(self: _Textbox) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _Textbox) -> Int16
        Set: Top(self: _Textbox) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: _Textbox) -> Int16
        Set: TopMargin(self: _Textbox) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _Textbox) -> Int16
        Set: TopPadding(self: _Textbox) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _Textbox) -> str
        Set: ValidationRule(self: _Textbox) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _Textbox) -> str
        Set: ValidationText(self: _Textbox) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _Textbox) -> object
        Set: Value(self: _Textbox) = value
        """
        ...

    @property
    def Vertical(self) -> bool:
        """
        Get: Vertical(self: _Textbox) -> bool
        Set: Vertical(self: _Textbox) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _Textbox) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _Textbox) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _Textbox) -> bool
        Set: Visible(self: _Textbox) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _Textbox) -> Int16
        Set: Width(self: _Textbox) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _Textbox) -> str
        Set: _Name(self: _Textbox) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _Textbox) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _Textbox, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _Textbox, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _Textbox) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _Textbox) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _Textbox) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _Textbox) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _Textbox, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class TextBox(DispTextBoxEvents_Event, _Textbox): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class TextBoxClass(TextBox, _TextBoxEvents_Event, __ComObject): # skipped bases: <type 'DispTextBoxEvents_Event'>, <type '_Textbox'>, <type 'IAccessible'>, <type 'object'>
    """ TextBoxClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: TextBoxClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: TextBoxClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: TextBoxClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: TextBoxClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: TextBoxClass) -> bool
        Set: AddColon(self: TextBoxClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: TextBoxClass) -> str
        Set: AfterUpdate(self: TextBoxClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: TextBoxClass) -> str
        Set: AfterUpdateMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def AllowAutoCorrect(self) -> bool:
        """
        Get: AllowAutoCorrect(self: TextBoxClass) -> bool
        Set: AllowAutoCorrect(self: TextBoxClass) = value
        """
        ...

    @property
    def AllowedText(self) -> Byte:
        """
        Get: AllowedText(self: TextBoxClass) -> Byte
        Set: AllowedText(self: TextBoxClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: TextBoxClass) -> Application """
        ...

    @property
    def AsianLineBreak(self) -> bool:
        """
        Get: AsianLineBreak(self: TextBoxClass) -> bool
        Set: AsianLineBreak(self: TextBoxClass) = value
        """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: TextBoxClass) -> bool
        Set: AutoLabel(self: TextBoxClass) = value
        """
        ...

    @property
    def AutoTab(self) -> bool:
        """
        Get: AutoTab(self: TextBoxClass) -> bool
        Set: AutoTab(self: TextBoxClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: TextBoxClass) -> int
        Set: BackColor(self: TextBoxClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: TextBoxClass) -> Single
        Set: BackShade(self: TextBoxClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: TextBoxClass) -> Byte
        Set: BackStyle(self: TextBoxClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: TextBoxClass) -> int
        Set: BackThemeColorIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: TextBoxClass) -> Single
        Set: BackTint(self: TextBoxClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: TextBoxClass) -> str
        Set: BeforeUpdate(self: TextBoxClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: TextBoxClass) -> str
        Set: BeforeUpdateMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: TextBoxClass) -> int
        Set: BorderColor(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: TextBoxClass) -> Byte
        Set: BorderLineStyle(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: TextBoxClass) -> Single
        Set: BorderShade(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: TextBoxClass) -> Byte
        Set: BorderStyle(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: TextBoxClass) -> int
        Set: BorderThemeColorIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: TextBoxClass) -> Single
        Set: BorderTint(self: TextBoxClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: TextBoxClass) -> Byte
        Set: BorderWidth(self: TextBoxClass) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: TextBoxClass) -> Int16
        Set: BottomMargin(self: TextBoxClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: TextBoxClass) -> Int16
        Set: BottomPadding(self: TextBoxClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: TextBoxClass) -> bool
        Set: CanGrow(self: TextBoxClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: TextBoxClass) -> bool
        Set: CanShrink(self: TextBoxClass) = value
        """
        ...

    @property
    def Coltyp(self) -> int:
        """
        Get: Coltyp(self: TextBoxClass) -> int
        Set: Coltyp(self: TextBoxClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: TextBoxClass) -> bool
        Set: ColumnHidden(self: TextBoxClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: TextBoxClass) -> Int16
        Set: ColumnOrder(self: TextBoxClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: TextBoxClass) -> Int16
        Set: ColumnWidth(self: TextBoxClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: TextBoxClass) -> str
        Set: ControlName(self: TextBoxClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: TextBoxClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: TextBoxClass) -> str
        Set: ControlSource(self: TextBoxClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: TextBoxClass) -> str
        Set: ControlTipText(self: TextBoxClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: TextBoxClass) -> Byte
        Set: ControlType(self: TextBoxClass) = value
        """
        ...

    @property
    def DecimalPlaces(self) -> Byte:
        """
        Get: DecimalPlaces(self: TextBoxClass) -> Byte
        Set: DecimalPlaces(self: TextBoxClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: TextBoxClass) -> str
        Set: DefaultValue(self: TextBoxClass) = value
        """
        ...

    @property
    def DisplayAsHyperlink(self) -> AcDisplayAsHyperlink:
        """
        Get: DisplayAsHyperlink(self: TextBoxClass) -> AcDisplayAsHyperlink
        Set: DisplayAsHyperlink(self: TextBoxClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: TextBoxClass) -> Byte
        Set: DisplayWhen(self: TextBoxClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: TextBoxClass) -> bool
        Set: Enabled(self: TextBoxClass) = value
        """
        ...

    @property
    def EnterKeyBehavior(self) -> bool:
        """
        Get: EnterKeyBehavior(self: TextBoxClass) -> bool
        Set: EnterKeyBehavior(self: TextBoxClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: TextBoxClass) -> str
        Set: EventProcPrefix(self: TextBoxClass) = value
        """
        ...

    @property
    def FELineBreak(self) -> bool:
        """
        Get: FELineBreak(self: TextBoxClass) -> bool
        Set: FELineBreak(self: TextBoxClass) = value
        """
        ...

    @property
    def FilterLookup(self) -> Byte:
        """
        Get: FilterLookup(self: TextBoxClass) -> Byte
        Set: FilterLookup(self: TextBoxClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: TextBoxClass) -> Int16
        Set: FontBold(self: TextBoxClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: TextBoxClass) -> bool
        Set: FontItalic(self: TextBoxClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: TextBoxClass) -> str
        Set: FontName(self: TextBoxClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: TextBoxClass) -> Int16
        Set: FontSize(self: TextBoxClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: TextBoxClass) -> bool
        Set: FontUnderline(self: TextBoxClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: TextBoxClass) -> Int16
        Set: FontWeight(self: TextBoxClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: TextBoxClass) -> int
        Set: ForeColor(self: TextBoxClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: TextBoxClass) -> Single
        Set: ForeShade(self: TextBoxClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: TextBoxClass) -> int
        Set: ForeThemeColorIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: TextBoxClass) -> Single
        Set: ForeTint(self: TextBoxClass) = value
        """
        ...

    @property
    def Format(self) -> str:
        """
        Get: Format(self: TextBoxClass) -> str
        Set: Format(self: TextBoxClass) = value
        """
        ...

    @property
    def FormatConditions(self) -> FormatConditions:
        """ Get: FormatConditions(self: TextBoxClass) -> FormatConditions """
        ...

    @property
    def FormatPictureText(self) -> str:
        """
        Get: FormatPictureText(self: TextBoxClass) -> str
        Set: FormatPictureText(self: TextBoxClass) = value
        """
        ...

    @property
    def FuriganaControl(self) -> str:
        """
        Get: FuriganaControl(self: TextBoxClass) -> str
        Set: FuriganaControl(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: TextBoxClass) -> int
        Set: GridlineColor(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: TextBoxClass) -> Single
        Set: GridlineShade(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: TextBoxClass) -> Byte
        Set: GridlineStyleBottom(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: TextBoxClass) -> Byte
        Set: GridlineStyleLeft(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: TextBoxClass) -> Byte
        Set: GridlineStyleRight(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: TextBoxClass) -> Byte
        Set: GridlineStyleTop(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: TextBoxClass) -> int
        Set: GridlineThemeColorIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: TextBoxClass) -> Single
        Set: GridlineTint(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: TextBoxClass) -> Byte
        Set: GridlineWidthBottom(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: TextBoxClass) -> Byte
        Set: GridlineWidthLeft(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: TextBoxClass) -> Byte
        Set: GridlineWidthRight(self: TextBoxClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: TextBoxClass) -> Byte
        Set: GridlineWidthTop(self: TextBoxClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: TextBoxClass) -> Int16
        Set: Height(self: TextBoxClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: TextBoxClass) -> int
        Set: HelpContextId(self: TextBoxClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: TextBoxClass) -> bool
        Set: HideDuplicates(self: TextBoxClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: TextBoxClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: TextBoxClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: TextBoxClass) -> Hyperlink """
        ...

    @property
    def IMEHold(self) -> bool:
        """
        Get: IMEHold(self: TextBoxClass) -> bool
        Set: IMEHold(self: TextBoxClass) = value
        """
        ...

    @property
    def IMEMode(self) -> AcImeMode:
        """
        Get: IMEMode(self: TextBoxClass) -> AcImeMode
        Set: IMEMode(self: TextBoxClass) = value
        """
        ...

    @property
    def IMESentenceMode(self) -> AcImeSentenceMode:
        """
        Get: IMESentenceMode(self: TextBoxClass) -> AcImeSentenceMode
        Set: IMESentenceMode(self: TextBoxClass) = value
        """
        ...

    @property
    def InputMask(self) -> str:
        """
        Get: InputMask(self: TextBoxClass) -> str
        Set: InputMask(self: TextBoxClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: TextBoxClass) -> bool
        Set: InSelection(self: TextBoxClass) = value
        """
        ...

    @property
    def IsHyperlink(self) -> bool:
        """
        Get: IsHyperlink(self: TextBoxClass) -> bool
        Set: IsHyperlink(self: TextBoxClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: TextBoxClass) -> bool
        Set: IsVisible(self: TextBoxClass) = value
        """
        ...

    @property
    def KeyboardLanguage(self) -> Byte:
        """
        Get: KeyboardLanguage(self: TextBoxClass) -> Byte
        Set: KeyboardLanguage(self: TextBoxClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: TextBoxClass) -> Byte
        Set: LabelAlign(self: TextBoxClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: TextBoxClass) -> Int16
        Set: LabelX(self: TextBoxClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: TextBoxClass) -> Int16
        Set: LabelY(self: TextBoxClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: TextBoxClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: TextBoxClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: TextBoxClass) -> Int16
        Set: Left(self: TextBoxClass) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: TextBoxClass) -> Int16
        Set: LeftMargin(self: TextBoxClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: TextBoxClass) -> Int16
        Set: LeftPadding(self: TextBoxClass) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: TextBoxClass) -> Int16
        Set: LineSpacing(self: TextBoxClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: TextBoxClass) -> bool
        Set: Locked(self: TextBoxClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: TextBoxClass) -> str
        Set: Name(self: TextBoxClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: TextBoxClass) -> Byte
        Set: NumeralShapes(self: TextBoxClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: TextBoxClass) -> Byte
        Set: OldBorderStyle(self: TextBoxClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: TextBoxClass) -> object """
        ...

    @property
    def OnChange(self) -> str:
        """
        Get: OnChange(self: TextBoxClass) -> str
        Set: OnChange(self: TextBoxClass) = value
        """
        ...

    @property
    def OnChangeMacro(self) -> str:
        """
        Get: OnChangeMacro(self: TextBoxClass) -> str
        Set: OnChangeMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: TextBoxClass) -> str
        Set: OnClick(self: TextBoxClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: TextBoxClass) -> str
        Set: OnClickMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: TextBoxClass) -> str
        Set: OnDblClick(self: TextBoxClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: TextBoxClass) -> str
        Set: OnDblClickMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnDirty(self) -> str:
        """
        Get: OnDirty(self: TextBoxClass) -> str
        Set: OnDirty(self: TextBoxClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: TextBoxClass) -> str
        Set: OnEnter(self: TextBoxClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: TextBoxClass) -> str
        Set: OnEnterMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: TextBoxClass) -> str
        Set: OnExit(self: TextBoxClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: TextBoxClass) -> str
        Set: OnExitMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: TextBoxClass) -> str
        Set: OnGotFocus(self: TextBoxClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: TextBoxClass) -> str
        Set: OnGotFocusMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: TextBoxClass) -> str
        Set: OnKeyDown(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: TextBoxClass) -> str
        Set: OnKeyDownMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: TextBoxClass) -> str
        Set: OnKeyPress(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: TextBoxClass) -> str
        Set: OnKeyPressMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: TextBoxClass) -> str
        Set: OnKeyUp(self: TextBoxClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: TextBoxClass) -> str
        Set: OnKeyUpMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: TextBoxClass) -> str
        Set: OnLostFocus(self: TextBoxClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: TextBoxClass) -> str
        Set: OnLostFocusMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: TextBoxClass) -> str
        Set: OnMouseDown(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: TextBoxClass) -> str
        Set: OnMouseDownMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: TextBoxClass) -> str
        Set: OnMouseMove(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: TextBoxClass) -> str
        Set: OnMouseMoveMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: TextBoxClass) -> str
        Set: OnMouseUp(self: TextBoxClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: TextBoxClass) -> str
        Set: OnMouseUpMacro(self: TextBoxClass) = value
        """
        ...

    @property
    def OnUndo(self) -> str:
        """
        Get: OnUndo(self: TextBoxClass) -> str
        Set: OnUndo(self: TextBoxClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: TextBoxClass) -> object """
        ...

    @property
    def PostalAddress(self) -> str:
        """
        Get: PostalAddress(self: TextBoxClass) -> str
        Set: PostalAddress(self: TextBoxClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: TextBoxClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: TextBoxClass) -> Byte
        Set: ReadingOrder(self: TextBoxClass) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: TextBoxClass) -> Int16
        Set: RightMargin(self: TextBoxClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: TextBoxClass) -> Int16
        Set: RightPadding(self: TextBoxClass) = value
        """
        ...

    @property
    def RunningSum(self) -> Byte:
        """
        Get: RunningSum(self: TextBoxClass) -> Byte
        Set: RunningSum(self: TextBoxClass) = value
        """
        ...

    @property
    def ScrollBarAlign(self) -> Byte:
        """
        Get: ScrollBarAlign(self: TextBoxClass) -> Byte
        Set: ScrollBarAlign(self: TextBoxClass) = value
        """
        ...

    @property
    def ScrollBars(self) -> Byte:
        """
        Get: ScrollBars(self: TextBoxClass) -> Byte
        Set: ScrollBars(self: TextBoxClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: TextBoxClass) -> Int16
        Set: Section(self: TextBoxClass) = value
        """
        ...

    @property
    def SelLength(self) -> Int16:
        """
        Get: SelLength(self: TextBoxClass) -> Int16
        Set: SelLength(self: TextBoxClass) = value
        """
        ...

    @property
    def SelStart(self) -> Int16:
        """
        Get: SelStart(self: TextBoxClass) -> Int16
        Set: SelStart(self: TextBoxClass) = value
        """
        ...

    @property
    def SelText(self) -> str:
        """
        Get: SelText(self: TextBoxClass) -> str
        Set: SelText(self: TextBoxClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: TextBoxClass) -> str
        Set: ShortcutMenuBar(self: TextBoxClass) = value
        """
        ...

    @property
    def ShowDatePicker(self) -> Int16:
        """
        Get: ShowDatePicker(self: TextBoxClass) -> Int16
        Set: ShowDatePicker(self: TextBoxClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: TextBoxClass) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: TextBoxClass) -> Byte
        Set: SpecialEffect(self: TextBoxClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: TextBoxClass) -> str
        Set: StatusBarText(self: TextBoxClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: TextBoxClass) -> Int16
        Set: TabIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: TextBoxClass) -> bool
        Set: TabStop(self: TextBoxClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: TextBoxClass) -> str
        Set: Tag(self: TextBoxClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: TextBoxClass) -> str
        Set: Target(self: TextBoxClass) = value
        """
        ...

    @property
    def Text(self) -> str:
        """
        Get: Text(self: TextBoxClass) -> str
        Set: Text(self: TextBoxClass) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: TextBoxClass) -> Byte
        Set: TextAlign(self: TextBoxClass) = value
        """
        ...

    @property
    def TextAlignGeneral(self) -> Int16:
        """
        Get: TextAlignGeneral(self: TextBoxClass) -> Int16
        Set: TextAlignGeneral(self: TextBoxClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: TextBoxClass) -> Byte
        Set: TextFontCharSet(self: TextBoxClass) = value
        """
        ...

    @property
    def TextFormat(self) -> AcTextFormat:
        """
        Get: TextFormat(self: TextBoxClass) -> AcTextFormat
        Set: TextFormat(self: TextBoxClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: TextBoxClass) -> int
        Set: ThemeFontIndex(self: TextBoxClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: TextBoxClass) -> Int16
        Set: Top(self: TextBoxClass) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: TextBoxClass) -> Int16
        Set: TopMargin(self: TextBoxClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: TextBoxClass) -> Int16
        Set: TopPadding(self: TextBoxClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: TextBoxClass) -> str
        Set: ValidationRule(self: TextBoxClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: TextBoxClass) -> str
        Set: ValidationText(self: TextBoxClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: TextBoxClass) -> object
        Set: Value(self: TextBoxClass) = value
        """
        ...

    @property
    def Vertical(self) -> bool:
        """
        Get: Vertical(self: TextBoxClass) -> bool
        Set: Vertical(self: TextBoxClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: TextBoxClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: TextBoxClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: TextBoxClass) -> bool
        Set: Visible(self: TextBoxClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: TextBoxClass) -> Int16
        Set: Width(self: TextBoxClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: TextBoxClass) -> str
        Set: _Name(self: TextBoxClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: TextBoxClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: TextBoxClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: TextBoxClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: TextBoxClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: TextBoxClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: TextBoxClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: TextBoxClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: TextBoxClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: TextBoxClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: TextBoxClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: TextBoxClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: TextBoxClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: TextBoxClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _TextBoxEvents_Event_add_AfterUpdate(self): # -> 
        """ _TextBoxEvents_Event_add_AfterUpdate(self: TextBoxClass, : _TextBoxEvents_AfterUpdateEventHandler) """
        ...

    def _TextBoxEvents_Event_add_BeforeUpdate(self): # -> 
        """ _TextBoxEvents_Event_add_BeforeUpdate(self: TextBoxClass, : _TextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Change(self): # -> 
        """ _TextBoxEvents_Event_add_Change(self: TextBoxClass, : _TextBoxEvents_ChangeEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Click(self): # -> 
        """ _TextBoxEvents_Event_add_Click(self: TextBoxClass, : _TextBoxEvents_ClickEventHandler) """
        ...

    def _TextBoxEvents_Event_add_DblClick(self): # -> 
        """ _TextBoxEvents_Event_add_DblClick(self: TextBoxClass, : _TextBoxEvents_DblClickEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Dirty(self): # -> 
        """ _TextBoxEvents_Event_add_Dirty(self: TextBoxClass, : _TextBoxEvents_DirtyEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Enter(self): # -> 
        """ _TextBoxEvents_Event_add_Enter(self: TextBoxClass, : _TextBoxEvents_EnterEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Exit(self): # -> 
        """ _TextBoxEvents_Event_add_Exit(self: TextBoxClass, : _TextBoxEvents_ExitEventHandler) """
        ...

    def _TextBoxEvents_Event_add_GotFocus(self): # -> 
        """ _TextBoxEvents_Event_add_GotFocus(self: TextBoxClass, : _TextBoxEvents_GotFocusEventHandler) """
        ...

    def _TextBoxEvents_Event_add_KeyDown(self): # -> 
        """ _TextBoxEvents_Event_add_KeyDown(self: TextBoxClass, : _TextBoxEvents_KeyDownEventHandler) """
        ...

    def _TextBoxEvents_Event_add_KeyPress(self): # -> 
        """ _TextBoxEvents_Event_add_KeyPress(self: TextBoxClass, : _TextBoxEvents_KeyPressEventHandler) """
        ...

    def _TextBoxEvents_Event_add_KeyUp(self): # -> 
        """ _TextBoxEvents_Event_add_KeyUp(self: TextBoxClass, : _TextBoxEvents_KeyUpEventHandler) """
        ...

    def _TextBoxEvents_Event_add_LostFocus(self): # -> 
        """ _TextBoxEvents_Event_add_LostFocus(self: TextBoxClass, : _TextBoxEvents_LostFocusEventHandler) """
        ...

    def _TextBoxEvents_Event_add_MouseDown(self): # -> 
        """ _TextBoxEvents_Event_add_MouseDown(self: TextBoxClass, : _TextBoxEvents_MouseDownEventHandler) """
        ...

    def _TextBoxEvents_Event_add_MouseMove(self): # -> 
        """ _TextBoxEvents_Event_add_MouseMove(self: TextBoxClass, : _TextBoxEvents_MouseMoveEventHandler) """
        ...

    def _TextBoxEvents_Event_add_MouseUp(self): # -> 
        """ _TextBoxEvents_Event_add_MouseUp(self: TextBoxClass, : _TextBoxEvents_MouseUpEventHandler) """
        ...

    def _TextBoxEvents_Event_add_Undo(self): # -> 
        """ _TextBoxEvents_Event_add_Undo(self: TextBoxClass, : _TextBoxEvents_UndoEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_AfterUpdate(self): # -> 
        """ _TextBoxEvents_Event_remove_AfterUpdate(self: TextBoxClass, : _TextBoxEvents_AfterUpdateEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _TextBoxEvents_Event_remove_BeforeUpdate(self: TextBoxClass, : _TextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Change(self): # -> 
        """ _TextBoxEvents_Event_remove_Change(self: TextBoxClass, : _TextBoxEvents_ChangeEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Click(self): # -> 
        """ _TextBoxEvents_Event_remove_Click(self: TextBoxClass, : _TextBoxEvents_ClickEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_DblClick(self): # -> 
        """ _TextBoxEvents_Event_remove_DblClick(self: TextBoxClass, : _TextBoxEvents_DblClickEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Dirty(self): # -> 
        """ _TextBoxEvents_Event_remove_Dirty(self: TextBoxClass, : _TextBoxEvents_DirtyEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Enter(self): # -> 
        """ _TextBoxEvents_Event_remove_Enter(self: TextBoxClass, : _TextBoxEvents_EnterEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Exit(self): # -> 
        """ _TextBoxEvents_Event_remove_Exit(self: TextBoxClass, : _TextBoxEvents_ExitEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_GotFocus(self): # -> 
        """ _TextBoxEvents_Event_remove_GotFocus(self: TextBoxClass, : _TextBoxEvents_GotFocusEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_KeyDown(self): # -> 
        """ _TextBoxEvents_Event_remove_KeyDown(self: TextBoxClass, : _TextBoxEvents_KeyDownEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_KeyPress(self): # -> 
        """ _TextBoxEvents_Event_remove_KeyPress(self: TextBoxClass, : _TextBoxEvents_KeyPressEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_KeyUp(self): # -> 
        """ _TextBoxEvents_Event_remove_KeyUp(self: TextBoxClass, : _TextBoxEvents_KeyUpEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_LostFocus(self): # -> 
        """ _TextBoxEvents_Event_remove_LostFocus(self: TextBoxClass, : _TextBoxEvents_LostFocusEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_MouseDown(self): # -> 
        """ _TextBoxEvents_Event_remove_MouseDown(self: TextBoxClass, : _TextBoxEvents_MouseDownEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_MouseMove(self): # -> 
        """ _TextBoxEvents_Event_remove_MouseMove(self: TextBoxClass, : _TextBoxEvents_MouseMoveEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_MouseUp(self): # -> 
        """ _TextBoxEvents_Event_remove_MouseUp(self: TextBoxClass, : _TextBoxEvents_MouseUpEventHandler) """
        ...

    def _TextBoxEvents_Event_remove_Undo(self): # -> 
        """ _TextBoxEvents_Event_remove_Undo(self: TextBoxClass, : _TextBoxEvents_UndoEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DispTextBoxEvents_Event_AfterUpdate = ...
    DispTextBoxEvents_Event_BeforeUpdate = ...
    DispTextBoxEvents_Event_Undo = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _TextBoxEvents_Event_AfterUpdate = ...
    _TextBoxEvents_Event_BeforeUpdate = ...
    _TextBoxEvents_Event_Change = ...
    _TextBoxEvents_Event_Click = ...
    _TextBoxEvents_Event_DblClick = ...
    _TextBoxEvents_Event_Dirty = ...
    _TextBoxEvents_Event_Enter = ...
    _TextBoxEvents_Event_Exit = ...
    _TextBoxEvents_Event_GotFocus = ...
    _TextBoxEvents_Event_KeyDown = ...
    _TextBoxEvents_Event_KeyPress = ...
    _TextBoxEvents_Event_KeyUp = ...
    _TextBoxEvents_Event_LostFocus = ...
    _TextBoxEvents_Event_MouseDown = ...
    _TextBoxEvents_Event_MouseMove = ...
    _TextBoxEvents_Event_MouseUp = ...
    _TextBoxEvents_Event_Undo = ...


class _ToggleButton(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _ToggleButton) -> bool
        Set: AddColon(self: _ToggleButton) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _ToggleButton) -> str
        Set: AfterUpdate(self: _ToggleButton) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _ToggleButton) -> str
        Set: AfterUpdateMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ToggleButton) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _ToggleButton) -> bool
        Set: AutoLabel(self: _ToggleButton) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _ToggleButton) -> int
        Set: BackColor(self: _ToggleButton) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _ToggleButton) -> Single
        Set: BackShade(self: _ToggleButton) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _ToggleButton) -> int
        Set: BackThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _ToggleButton) -> Single
        Set: BackTint(self: _ToggleButton) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _ToggleButton) -> str
        Set: BeforeUpdate(self: _ToggleButton) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _ToggleButton) -> str
        Set: BeforeUpdateMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: _ToggleButton) -> int
        Set: Bevel(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _ToggleButton) -> int
        Set: BorderColor(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _ToggleButton) -> Single
        Set: BorderShade(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _ToggleButton) -> Byte
        Set: BorderStyle(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _ToggleButton) -> int
        Set: BorderThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _ToggleButton) -> Single
        Set: BorderTint(self: _ToggleButton) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _ToggleButton) -> Byte
        Set: BorderWidth(self: _ToggleButton) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ToggleButton) -> Int16
        Set: BottomPadding(self: _ToggleButton) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _ToggleButton) -> str
        Set: Caption(self: _ToggleButton) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _ToggleButton) -> bool
        Set: ColumnHidden(self: _ToggleButton) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _ToggleButton) -> Int16
        Set: ColumnOrder(self: _ToggleButton) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _ToggleButton) -> Int16
        Set: ColumnWidth(self: _ToggleButton) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _ToggleButton) -> str
        Set: ControlName(self: _ToggleButton) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _ToggleButton) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _ToggleButton) -> str
        Set: ControlSource(self: _ToggleButton) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _ToggleButton) -> str
        Set: ControlTipText(self: _ToggleButton) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _ToggleButton) -> Byte
        Set: ControlType(self: _ToggleButton) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _ToggleButton) -> str
        Set: DefaultValue(self: _ToggleButton) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _ToggleButton) -> Byte
        Set: DisplayWhen(self: _ToggleButton) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _ToggleButton) -> bool
        Set: Enabled(self: _ToggleButton) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _ToggleButton) -> str
        Set: EventProcPrefix(self: _ToggleButton) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _ToggleButton) -> Int16
        Set: FontBold(self: _ToggleButton) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _ToggleButton) -> bool
        Set: FontItalic(self: _ToggleButton) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _ToggleButton) -> str
        Set: FontName(self: _ToggleButton) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _ToggleButton) -> Int16
        Set: FontSize(self: _ToggleButton) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _ToggleButton) -> bool
        Set: FontUnderline(self: _ToggleButton) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _ToggleButton) -> Int16
        Set: FontWeight(self: _ToggleButton) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _ToggleButton) -> int
        Set: ForeColor(self: _ToggleButton) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _ToggleButton) -> Single
        Set: ForeShade(self: _ToggleButton) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _ToggleButton) -> int
        Set: ForeThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _ToggleButton) -> Single
        Set: ForeTint(self: _ToggleButton) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: _ToggleButton) -> int
        Set: Glow(self: _ToggleButton) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: _ToggleButton) -> int
        Set: Gradient(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ToggleButton) -> int
        Set: GridlineColor(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _ToggleButton) -> Single
        Set: GridlineShade(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ToggleButton) -> Byte
        Set: GridlineStyleBottom(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ToggleButton) -> Byte
        Set: GridlineStyleLeft(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ToggleButton) -> Byte
        Set: GridlineStyleRight(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ToggleButton) -> Byte
        Set: GridlineStyleTop(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _ToggleButton) -> int
        Set: GridlineThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _ToggleButton) -> Single
        Set: GridlineTint(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ToggleButton) -> Byte
        Set: GridlineWidthBottom(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ToggleButton) -> Byte
        Set: GridlineWidthLeft(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ToggleButton) -> Byte
        Set: GridlineWidthRight(self: _ToggleButton) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ToggleButton) -> Byte
        Set: GridlineWidthTop(self: _ToggleButton) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _ToggleButton) -> Int16
        Set: Height(self: _ToggleButton) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _ToggleButton) -> int
        Set: HelpContextId(self: _ToggleButton) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _ToggleButton) -> bool
        Set: HideDuplicates(self: _ToggleButton) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ToggleButton) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: _ToggleButton) -> int
        Set: HoverColor(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: _ToggleButton) -> int
        Set: HoverForeColor(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: _ToggleButton) -> Single
        Set: HoverForeShade(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: _ToggleButton) -> int
        Set: HoverForeThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: _ToggleButton) -> Single
        Set: HoverForeTint(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: _ToggleButton) -> Single
        Set: HoverShade(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: _ToggleButton) -> int
        Set: HoverThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: _ToggleButton) -> Single
        Set: HoverTint(self: _ToggleButton) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _ToggleButton) -> bool
        Set: InSelection(self: _ToggleButton) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _ToggleButton) -> bool
        Set: IsVisible(self: _ToggleButton) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _ToggleButton) -> Byte
        Set: LabelAlign(self: _ToggleButton) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _ToggleButton) -> Int16
        Set: LabelX(self: _ToggleButton) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _ToggleButton) -> Int16
        Set: LabelY(self: _ToggleButton) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ToggleButton) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ToggleButton) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _ToggleButton) -> Int16
        Set: Left(self: _ToggleButton) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ToggleButton) -> Int16
        Set: LeftPadding(self: _ToggleButton) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _ToggleButton) -> bool
        Set: Locked(self: _ToggleButton) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ToggleButton) -> str
        Set: Name(self: _ToggleButton) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _ToggleButton) -> object
        Set: ObjectPalette(self: _ToggleButton) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _ToggleButton) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _ToggleButton) -> str
        Set: OnClick(self: _ToggleButton) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _ToggleButton) -> str
        Set: OnClickMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _ToggleButton) -> str
        Set: OnDblClick(self: _ToggleButton) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _ToggleButton) -> str
        Set: OnDblClickMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _ToggleButton) -> str
        Set: OnEnter(self: _ToggleButton) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _ToggleButton) -> str
        Set: OnEnterMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _ToggleButton) -> str
        Set: OnExit(self: _ToggleButton) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _ToggleButton) -> str
        Set: OnExitMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _ToggleButton) -> str
        Set: OnGotFocus(self: _ToggleButton) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _ToggleButton) -> str
        Set: OnGotFocusMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _ToggleButton) -> str
        Set: OnKeyDown(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _ToggleButton) -> str
        Set: OnKeyDownMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _ToggleButton) -> str
        Set: OnKeyPress(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _ToggleButton) -> str
        Set: OnKeyPressMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _ToggleButton) -> str
        Set: OnKeyUp(self: _ToggleButton) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _ToggleButton) -> str
        Set: OnKeyUpMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _ToggleButton) -> str
        Set: OnLostFocus(self: _ToggleButton) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _ToggleButton) -> str
        Set: OnLostFocusMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _ToggleButton) -> str
        Set: OnMouseDown(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _ToggleButton) -> str
        Set: OnMouseDownMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _ToggleButton) -> str
        Set: OnMouseMove(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _ToggleButton) -> str
        Set: OnMouseMoveMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _ToggleButton) -> str
        Set: OnMouseUp(self: _ToggleButton) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _ToggleButton) -> str
        Set: OnMouseUpMacro(self: _ToggleButton) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _ToggleButton) -> int
        Set: OptionValue(self: _ToggleButton) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ToggleButton) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _ToggleButton) -> str
        Set: Picture(self: _ToggleButton) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _ToggleButton) -> object
        Set: PictureData(self: _ToggleButton) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _ToggleButton) -> Byte
        Set: PictureType(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: _ToggleButton) -> int
        Set: PressedColor(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: _ToggleButton) -> int
        Set: PressedForeColor(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: _ToggleButton) -> Single
        Set: PressedForeShade(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: _ToggleButton) -> int
        Set: PressedForeThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: _ToggleButton) -> Single
        Set: PressedForeTint(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: _ToggleButton) -> Single
        Set: PressedShade(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: _ToggleButton) -> int
        Set: PressedThemeColorIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: _ToggleButton) -> Single
        Set: PressedTint(self: _ToggleButton) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ToggleButton) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: _ToggleButton) -> int
        Set: QuickStyle(self: _ToggleButton) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: _ToggleButton) -> int
        Set: QuickStyleMask(self: _ToggleButton) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _ToggleButton) -> Byte
        Set: ReadingOrder(self: _ToggleButton) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ToggleButton) -> Int16
        Set: RightPadding(self: _ToggleButton) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _ToggleButton) -> Int16
        Set: Section(self: _ToggleButton) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: _ToggleButton) -> int
        Set: Shadow(self: _ToggleButton) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: _ToggleButton) -> int
        Set: Shape(self: _ToggleButton) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _ToggleButton) -> str
        Set: ShortcutMenuBar(self: _ToggleButton) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: _ToggleButton) -> int
        Set: SoftEdges(self: _ToggleButton) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _ToggleButton) -> str
        Set: StatusBarText(self: _ToggleButton) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _ToggleButton) -> Int16
        Set: TabIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _ToggleButton) -> bool
        Set: TabStop(self: _ToggleButton) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _ToggleButton) -> str
        Set: Tag(self: _ToggleButton) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _ToggleButton) -> Byte
        Set: TextFontCharSet(self: _ToggleButton) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _ToggleButton) -> int
        Set: ThemeFontIndex(self: _ToggleButton) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _ToggleButton) -> Int16
        Set: Top(self: _ToggleButton) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ToggleButton) -> Int16
        Set: TopPadding(self: _ToggleButton) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _ToggleButton) -> bool
        Set: TripleState(self: _ToggleButton) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: _ToggleButton) -> bool
        Set: UseTheme(self: _ToggleButton) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _ToggleButton) -> str
        Set: ValidationRule(self: _ToggleButton) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _ToggleButton) -> str
        Set: ValidationText(self: _ToggleButton) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _ToggleButton) -> object
        Set: Value(self: _ToggleButton) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ToggleButton) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ToggleButton) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _ToggleButton) -> bool
        Set: Visible(self: _ToggleButton) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _ToggleButton) -> Int16
        Set: Width(self: _ToggleButton) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ToggleButton) -> str
        Set: _Name(self: _ToggleButton) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _ToggleButton) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ToggleButton, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ToggleButton, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _ToggleButton) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _ToggleButton) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ToggleButton) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _ToggleButton) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ToggleButton, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class ToggleButton(DispToggleButtonEvents_Event, _ToggleButton): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class ToggleButtonClass(_ToggleButtonEvents_Event, __ComObject, ToggleButton): # skipped bases: <type 'DispToggleButtonEvents_Event'>, <type '_ToggleButton'>, <type 'IAccessible'>, <type 'object'>
    """ ToggleButtonClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: ToggleButtonClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: ToggleButtonClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: ToggleButtonClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: ToggleButtonClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: ToggleButtonClass) -> bool
        Set: AddColon(self: ToggleButtonClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: ToggleButtonClass) -> str
        Set: AfterUpdate(self: ToggleButtonClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: ToggleButtonClass) -> str
        Set: AfterUpdateMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: ToggleButtonClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: ToggleButtonClass) -> bool
        Set: AutoLabel(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: ToggleButtonClass) -> int
        Set: BackColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: ToggleButtonClass) -> Single
        Set: BackShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: ToggleButtonClass) -> int
        Set: BackThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: ToggleButtonClass) -> Single
        Set: BackTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: ToggleButtonClass) -> str
        Set: BeforeUpdate(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: ToggleButtonClass) -> str
        Set: BeforeUpdateMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: ToggleButtonClass) -> int
        Set: Bevel(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: ToggleButtonClass) -> int
        Set: BorderColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: ToggleButtonClass) -> Single
        Set: BorderShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: ToggleButtonClass) -> Byte
        Set: BorderStyle(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: ToggleButtonClass) -> int
        Set: BorderThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: ToggleButtonClass) -> Single
        Set: BorderTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: ToggleButtonClass) -> Byte
        Set: BorderWidth(self: ToggleButtonClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: ToggleButtonClass) -> Int16
        Set: BottomPadding(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: ToggleButtonClass) -> str
        Set: Caption(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: ToggleButtonClass) -> bool
        Set: ColumnHidden(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: ToggleButtonClass) -> Int16
        Set: ColumnOrder(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: ToggleButtonClass) -> Int16
        Set: ColumnWidth(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: ToggleButtonClass) -> str
        Set: ControlName(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: ToggleButtonClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: ToggleButtonClass) -> str
        Set: ControlSource(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: ToggleButtonClass) -> str
        Set: ControlTipText(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: ToggleButtonClass) -> Byte
        Set: ControlType(self: ToggleButtonClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: ToggleButtonClass) -> str
        Set: DefaultValue(self: ToggleButtonClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: ToggleButtonClass) -> Byte
        Set: DisplayWhen(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: ToggleButtonClass) -> bool
        Set: Enabled(self: ToggleButtonClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: ToggleButtonClass) -> str
        Set: EventProcPrefix(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: ToggleButtonClass) -> Int16
        Set: FontBold(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: ToggleButtonClass) -> bool
        Set: FontItalic(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: ToggleButtonClass) -> str
        Set: FontName(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: ToggleButtonClass) -> Int16
        Set: FontSize(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: ToggleButtonClass) -> bool
        Set: FontUnderline(self: ToggleButtonClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: ToggleButtonClass) -> Int16
        Set: FontWeight(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: ToggleButtonClass) -> int
        Set: ForeColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: ToggleButtonClass) -> Single
        Set: ForeShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: ToggleButtonClass) -> int
        Set: ForeThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: ToggleButtonClass) -> Single
        Set: ForeTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: ToggleButtonClass) -> int
        Set: Glow(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: ToggleButtonClass) -> int
        Set: Gradient(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: ToggleButtonClass) -> int
        Set: GridlineColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: ToggleButtonClass) -> Single
        Set: GridlineShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: ToggleButtonClass) -> Byte
        Set: GridlineStyleBottom(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: ToggleButtonClass) -> Byte
        Set: GridlineStyleLeft(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: ToggleButtonClass) -> Byte
        Set: GridlineStyleRight(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: ToggleButtonClass) -> Byte
        Set: GridlineStyleTop(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: ToggleButtonClass) -> int
        Set: GridlineThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: ToggleButtonClass) -> Single
        Set: GridlineTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: ToggleButtonClass) -> Byte
        Set: GridlineWidthBottom(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: ToggleButtonClass) -> Byte
        Set: GridlineWidthLeft(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: ToggleButtonClass) -> Byte
        Set: GridlineWidthRight(self: ToggleButtonClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: ToggleButtonClass) -> Byte
        Set: GridlineWidthTop(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: ToggleButtonClass) -> Int16
        Set: Height(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: ToggleButtonClass) -> int
        Set: HelpContextId(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: ToggleButtonClass) -> bool
        Set: HideDuplicates(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: ToggleButtonClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: ToggleButtonClass) -> int
        Set: HoverColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: ToggleButtonClass) -> int
        Set: HoverForeColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: ToggleButtonClass) -> Single
        Set: HoverForeShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: ToggleButtonClass) -> int
        Set: HoverForeThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: ToggleButtonClass) -> Single
        Set: HoverForeTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: ToggleButtonClass) -> Single
        Set: HoverShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: ToggleButtonClass) -> int
        Set: HoverThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: ToggleButtonClass) -> Single
        Set: HoverTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: ToggleButtonClass) -> bool
        Set: InSelection(self: ToggleButtonClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: ToggleButtonClass) -> bool
        Set: IsVisible(self: ToggleButtonClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: ToggleButtonClass) -> Byte
        Set: LabelAlign(self: ToggleButtonClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: ToggleButtonClass) -> Int16
        Set: LabelX(self: ToggleButtonClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: ToggleButtonClass) -> Int16
        Set: LabelY(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: ToggleButtonClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: ToggleButtonClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: ToggleButtonClass) -> Int16
        Set: Left(self: ToggleButtonClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: ToggleButtonClass) -> Int16
        Set: LeftPadding(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: ToggleButtonClass) -> bool
        Set: Locked(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: ToggleButtonClass) -> str
        Set: Name(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: ToggleButtonClass) -> object
        Set: ObjectPalette(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: ToggleButtonClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: ToggleButtonClass) -> str
        Set: OnClick(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: ToggleButtonClass) -> str
        Set: OnClickMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: ToggleButtonClass) -> str
        Set: OnDblClick(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: ToggleButtonClass) -> str
        Set: OnDblClickMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: ToggleButtonClass) -> str
        Set: OnEnter(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: ToggleButtonClass) -> str
        Set: OnEnterMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: ToggleButtonClass) -> str
        Set: OnExit(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: ToggleButtonClass) -> str
        Set: OnExitMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: ToggleButtonClass) -> str
        Set: OnGotFocus(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: ToggleButtonClass) -> str
        Set: OnGotFocusMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: ToggleButtonClass) -> str
        Set: OnKeyDown(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: ToggleButtonClass) -> str
        Set: OnKeyDownMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: ToggleButtonClass) -> str
        Set: OnKeyPress(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: ToggleButtonClass) -> str
        Set: OnKeyPressMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: ToggleButtonClass) -> str
        Set: OnKeyUp(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: ToggleButtonClass) -> str
        Set: OnKeyUpMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: ToggleButtonClass) -> str
        Set: OnLostFocus(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: ToggleButtonClass) -> str
        Set: OnLostFocusMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: ToggleButtonClass) -> str
        Set: OnMouseDown(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: ToggleButtonClass) -> str
        Set: OnMouseDownMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: ToggleButtonClass) -> str
        Set: OnMouseMove(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: ToggleButtonClass) -> str
        Set: OnMouseMoveMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: ToggleButtonClass) -> str
        Set: OnMouseUp(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: ToggleButtonClass) -> str
        Set: OnMouseUpMacro(self: ToggleButtonClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: ToggleButtonClass) -> int
        Set: OptionValue(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: ToggleButtonClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: ToggleButtonClass) -> str
        Set: Picture(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: ToggleButtonClass) -> object
        Set: PictureData(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: ToggleButtonClass) -> Byte
        Set: PictureType(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: ToggleButtonClass) -> int
        Set: PressedColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: ToggleButtonClass) -> int
        Set: PressedForeColor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: ToggleButtonClass) -> Single
        Set: PressedForeShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: ToggleButtonClass) -> int
        Set: PressedForeThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: ToggleButtonClass) -> Single
        Set: PressedForeTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: ToggleButtonClass) -> Single
        Set: PressedShade(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: ToggleButtonClass) -> int
        Set: PressedThemeColorIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: ToggleButtonClass) -> Single
        Set: PressedTint(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: ToggleButtonClass) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: ToggleButtonClass) -> int
        Set: QuickStyle(self: ToggleButtonClass) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: ToggleButtonClass) -> int
        Set: QuickStyleMask(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: ToggleButtonClass) -> Byte
        Set: ReadingOrder(self: ToggleButtonClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: ToggleButtonClass) -> Int16
        Set: RightPadding(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: ToggleButtonClass) -> Int16
        Set: Section(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: ToggleButtonClass) -> int
        Set: Shadow(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: ToggleButtonClass) -> int
        Set: Shape(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: ToggleButtonClass) -> str
        Set: ShortcutMenuBar(self: ToggleButtonClass) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: ToggleButtonClass) -> int
        Set: SoftEdges(self: ToggleButtonClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: ToggleButtonClass) -> str
        Set: StatusBarText(self: ToggleButtonClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: ToggleButtonClass) -> Int16
        Set: TabIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: ToggleButtonClass) -> bool
        Set: TabStop(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: ToggleButtonClass) -> str
        Set: Tag(self: ToggleButtonClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: ToggleButtonClass) -> Byte
        Set: TextFontCharSet(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: ToggleButtonClass) -> int
        Set: ThemeFontIndex(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: ToggleButtonClass) -> Int16
        Set: Top(self: ToggleButtonClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: ToggleButtonClass) -> Int16
        Set: TopPadding(self: ToggleButtonClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: ToggleButtonClass) -> bool
        Set: TripleState(self: ToggleButtonClass) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: ToggleButtonClass) -> bool
        Set: UseTheme(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: ToggleButtonClass) -> str
        Set: ValidationRule(self: ToggleButtonClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: ToggleButtonClass) -> str
        Set: ValidationText(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: ToggleButtonClass) -> object
        Set: Value(self: ToggleButtonClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: ToggleButtonClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: ToggleButtonClass) -> bool
        Set: Visible(self: ToggleButtonClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: ToggleButtonClass) -> Int16
        Set: Width(self: ToggleButtonClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: ToggleButtonClass) -> str
        Set: _Name(self: ToggleButtonClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: ToggleButtonClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: ToggleButtonClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: ToggleButtonClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: ToggleButtonClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: ToggleButtonClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: ToggleButtonClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: ToggleButtonClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: ToggleButtonClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: ToggleButtonClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: ToggleButtonClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: ToggleButtonClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: ToggleButtonClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: ToggleButtonClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ToggleButtonEvents_Event_add_AfterUpdate(self): # -> 
        """ _ToggleButtonEvents_Event_add_AfterUpdate(self: ToggleButtonClass, : _ToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_BeforeUpdate(self): # -> 
        """ _ToggleButtonEvents_Event_add_BeforeUpdate(self: ToggleButtonClass, : _ToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_Click(self): # -> 
        """ _ToggleButtonEvents_Event_add_Click(self: ToggleButtonClass, : _ToggleButtonEvents_ClickEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_DblClick(self): # -> 
        """ _ToggleButtonEvents_Event_add_DblClick(self: ToggleButtonClass, : _ToggleButtonEvents_DblClickEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_Enter(self): # -> 
        """ _ToggleButtonEvents_Event_add_Enter(self: ToggleButtonClass, : _ToggleButtonEvents_EnterEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_Exit(self): # -> 
        """ _ToggleButtonEvents_Event_add_Exit(self: ToggleButtonClass, : _ToggleButtonEvents_ExitEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_GotFocus(self): # -> 
        """ _ToggleButtonEvents_Event_add_GotFocus(self: ToggleButtonClass, : _ToggleButtonEvents_GotFocusEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_KeyDown(self): # -> 
        """ _ToggleButtonEvents_Event_add_KeyDown(self: ToggleButtonClass, : _ToggleButtonEvents_KeyDownEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_KeyPress(self): # -> 
        """ _ToggleButtonEvents_Event_add_KeyPress(self: ToggleButtonClass, : _ToggleButtonEvents_KeyPressEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_KeyUp(self): # -> 
        """ _ToggleButtonEvents_Event_add_KeyUp(self: ToggleButtonClass, : _ToggleButtonEvents_KeyUpEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_LostFocus(self): # -> 
        """ _ToggleButtonEvents_Event_add_LostFocus(self: ToggleButtonClass, : _ToggleButtonEvents_LostFocusEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_MouseDown(self): # -> 
        """ _ToggleButtonEvents_Event_add_MouseDown(self: ToggleButtonClass, : _ToggleButtonEvents_MouseDownEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_MouseMove(self): # -> 
        """ _ToggleButtonEvents_Event_add_MouseMove(self: ToggleButtonClass, : _ToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def _ToggleButtonEvents_Event_add_MouseUp(self): # -> 
        """ _ToggleButtonEvents_Event_add_MouseUp(self: ToggleButtonClass, : _ToggleButtonEvents_MouseUpEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_AfterUpdate(self): # -> 
        """ _ToggleButtonEvents_Event_remove_AfterUpdate(self: ToggleButtonClass, : _ToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_BeforeUpdate(self): # -> 
        """ _ToggleButtonEvents_Event_remove_BeforeUpdate(self: ToggleButtonClass, : _ToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_Click(self): # -> 
        """ _ToggleButtonEvents_Event_remove_Click(self: ToggleButtonClass, : _ToggleButtonEvents_ClickEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_DblClick(self): # -> 
        """ _ToggleButtonEvents_Event_remove_DblClick(self: ToggleButtonClass, : _ToggleButtonEvents_DblClickEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_Enter(self): # -> 
        """ _ToggleButtonEvents_Event_remove_Enter(self: ToggleButtonClass, : _ToggleButtonEvents_EnterEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_Exit(self): # -> 
        """ _ToggleButtonEvents_Event_remove_Exit(self: ToggleButtonClass, : _ToggleButtonEvents_ExitEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_GotFocus(self): # -> 
        """ _ToggleButtonEvents_Event_remove_GotFocus(self: ToggleButtonClass, : _ToggleButtonEvents_GotFocusEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_KeyDown(self): # -> 
        """ _ToggleButtonEvents_Event_remove_KeyDown(self: ToggleButtonClass, : _ToggleButtonEvents_KeyDownEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_KeyPress(self): # -> 
        """ _ToggleButtonEvents_Event_remove_KeyPress(self: ToggleButtonClass, : _ToggleButtonEvents_KeyPressEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_KeyUp(self): # -> 
        """ _ToggleButtonEvents_Event_remove_KeyUp(self: ToggleButtonClass, : _ToggleButtonEvents_KeyUpEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_LostFocus(self): # -> 
        """ _ToggleButtonEvents_Event_remove_LostFocus(self: ToggleButtonClass, : _ToggleButtonEvents_LostFocusEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_MouseDown(self): # -> 
        """ _ToggleButtonEvents_Event_remove_MouseDown(self: ToggleButtonClass, : _ToggleButtonEvents_MouseDownEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_MouseMove(self): # -> 
        """ _ToggleButtonEvents_Event_remove_MouseMove(self: ToggleButtonClass, : _ToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def _ToggleButtonEvents_Event_remove_MouseUp(self): # -> 
        """ _ToggleButtonEvents_Event_remove_MouseUp(self: ToggleButtonClass, : _ToggleButtonEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispToggleButtonEvents_Event_AfterUpdate = ...
    DispToggleButtonEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _ToggleButtonEvents_Event_AfterUpdate = ...
    _ToggleButtonEvents_Event_BeforeUpdate = ...
    _ToggleButtonEvents_Event_Click = ...
    _ToggleButtonEvents_Event_DblClick = ...
    _ToggleButtonEvents_Event_Enter = ...
    _ToggleButtonEvents_Event_Exit = ...
    _ToggleButtonEvents_Event_GotFocus = ...
    _ToggleButtonEvents_Event_KeyDown = ...
    _ToggleButtonEvents_Event_KeyPress = ...
    _ToggleButtonEvents_Event_KeyUp = ...
    _ToggleButtonEvents_Event_LostFocus = ...
    _ToggleButtonEvents_Event_MouseDown = ...
    _ToggleButtonEvents_Event_MouseMove = ...
    _ToggleButtonEvents_Event_MouseUp = ...


class _WebBrowserControl(IAccessible): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _WebBrowserControl) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _WebBrowserControl) -> int
        Set: BorderColor(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _WebBrowserControl) -> Byte
        Set: BorderLineStyle(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _WebBrowserControl) -> Single
        Set: BorderShade(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _WebBrowserControl) -> Byte
        Set: BorderStyle(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _WebBrowserControl) -> int
        Set: BorderThemeColorIndex(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _WebBrowserControl) -> Single
        Set: BorderTint(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _WebBrowserControl) -> Byte
        Set: BorderWidth(self: _WebBrowserControl) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _WebBrowserControl) -> Int16
        Set: BottomPadding(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _WebBrowserControl) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _WebBrowserControl) -> str
        Set: ControlSource(self: _WebBrowserControl) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _WebBrowserControl) -> str
        Set: ControlTipText(self: _WebBrowserControl) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _WebBrowserControl) -> Byte
        Set: ControlType(self: _WebBrowserControl) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _WebBrowserControl) -> Byte
        Set: DisplayWhen(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _WebBrowserControl) -> bool
        Set: Enabled(self: _WebBrowserControl) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _WebBrowserControl) -> str
        Set: EventProcPrefix(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _WebBrowserControl) -> int
        Set: GridlineColor(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _WebBrowserControl) -> Single
        Set: GridlineShade(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _WebBrowserControl) -> Byte
        Set: GridlineStyleBottom(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _WebBrowserControl) -> Byte
        Set: GridlineStyleLeft(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _WebBrowserControl) -> Byte
        Set: GridlineStyleRight(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _WebBrowserControl) -> Byte
        Set: GridlineStyleTop(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _WebBrowserControl) -> int
        Set: GridlineThemeColorIndex(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _WebBrowserControl) -> Single
        Set: GridlineTint(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _WebBrowserControl) -> Byte
        Set: GridlineWidthBottom(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _WebBrowserControl) -> Byte
        Set: GridlineWidthLeft(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _WebBrowserControl) -> Byte
        Set: GridlineWidthRight(self: _WebBrowserControl) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _WebBrowserControl) -> Byte
        Set: GridlineWidthTop(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _WebBrowserControl) -> Int16
        Set: Height(self: _WebBrowserControl) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _WebBrowserControl) -> int
        Set: HelpContextId(self: _WebBrowserControl) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _WebBrowserControl) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _WebBrowserControl) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _WebBrowserControl) -> bool
        Set: InSelection(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _WebBrowserControl) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _WebBrowserControl) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _WebBrowserControl) -> Int16
        Set: Left(self: _WebBrowserControl) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _WebBrowserControl) -> Int16
        Set: LeftPadding(self: _WebBrowserControl) = value
        """
        ...

    @property
    def LocationURL(self) -> str:
        """ Get: LocationURL(self: _WebBrowserControl) -> str """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _WebBrowserControl) -> str
        Set: Name(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _WebBrowserControl) -> object """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _WebBrowserControl) -> object """
        ...

    @property
    def OnBeforeNavigate(self) -> str:
        """
        Get: OnBeforeNavigate(self: _WebBrowserControl) -> str
        Set: OnBeforeNavigate(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnBeforeNavigateMacro(self) -> str:
        """
        Get: OnBeforeNavigateMacro(self: _WebBrowserControl) -> str
        Set: OnBeforeNavigateMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _WebBrowserControl) -> str
        Set: OnClickMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _WebBrowserControl) -> str
        Set: OnDblClickMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnDocumentComplete(self) -> str:
        """
        Get: OnDocumentComplete(self: _WebBrowserControl) -> str
        Set: OnDocumentComplete(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnDocumentCompleteMacro(self) -> str:
        """
        Get: OnDocumentCompleteMacro(self: _WebBrowserControl) -> str
        Set: OnDocumentCompleteMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _WebBrowserControl) -> str
        Set: OnKeyDown(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _WebBrowserControl) -> str
        Set: OnKeyDownMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _WebBrowserControl) -> str
        Set: OnKeyPress(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _WebBrowserControl) -> str
        Set: OnKeyPressMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _WebBrowserControl) -> str
        Set: OnKeyUp(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _WebBrowserControl) -> str
        Set: OnKeyUpMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _WebBrowserControl) -> str
        Set: OnMouseDown(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _WebBrowserControl) -> str
        Set: OnMouseDownMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _WebBrowserControl) -> str
        Set: OnMouseMove(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _WebBrowserControl) -> str
        Set: OnMouseMoveMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _WebBrowserControl) -> str
        Set: OnMouseUp(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _WebBrowserControl) -> str
        Set: OnMouseUpMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnNavigateError(self) -> str:
        """
        Get: OnNavigateError(self: _WebBrowserControl) -> str
        Set: OnNavigateError(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnNavigateErrorMacro(self) -> str:
        """
        Get: OnNavigateErrorMacro(self: _WebBrowserControl) -> str
        Set: OnNavigateErrorMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnProgressChange(self) -> str:
        """
        Get: OnProgressChange(self: _WebBrowserControl) -> str
        Set: OnProgressChange(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnProgressChangeMacro(self) -> str:
        """
        Get: OnProgressChangeMacro(self: _WebBrowserControl) -> str
        Set: OnProgressChangeMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: _WebBrowserControl) -> str
        Set: OnUpdated(self: _WebBrowserControl) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: _WebBrowserControl) -> str
        Set: OnUpdatedMacro(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _WebBrowserControl) -> object """
        ...

    @property
    def Progress(self) -> int:
        """ Get: Progress(self: _WebBrowserControl) -> int """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _WebBrowserControl) -> Properties """
        ...

    @property
    def ReadyState(self) -> AcWebBrowserState:
        """ Get: ReadyState(self: _WebBrowserControl) -> AcWebBrowserState """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _WebBrowserControl) -> Int16
        Set: RightPadding(self: _WebBrowserControl) = value
        """
        ...

    @property
    def ScrollBars(self) -> AcWebBrowserScrollBars:
        """
        Get: ScrollBars(self: _WebBrowserControl) -> AcWebBrowserScrollBars
        Set: ScrollBars(self: _WebBrowserControl) = value
        """
        ...

    @property
    def ScrollLeft(self) -> int:
        """
        Get: ScrollLeft(self: _WebBrowserControl) -> int
        Set: ScrollLeft(self: _WebBrowserControl) = value
        """
        ...

    @property
    def ScrollTop(self) -> int:
        """
        Get: ScrollTop(self: _WebBrowserControl) -> int
        Set: ScrollTop(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _WebBrowserControl) -> Int16
        Set: Section(self: _WebBrowserControl) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Int16:
        """
        Get: SpecialEffect(self: _WebBrowserControl) -> Int16
        Set: SpecialEffect(self: _WebBrowserControl) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _WebBrowserControl) -> str
        Set: StatusBarText(self: _WebBrowserControl) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _WebBrowserControl) -> Int16
        Set: TabIndex(self: _WebBrowserControl) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _WebBrowserControl) -> bool
        Set: TabStop(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _WebBrowserControl) -> str
        Set: Tag(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _WebBrowserControl) -> Int16
        Set: Top(self: _WebBrowserControl) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _WebBrowserControl) -> Int16
        Set: TopPadding(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Transform(self) -> str:
        """
        Get: Transform(self: _WebBrowserControl) -> str
        Set: Transform(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _WebBrowserControl) -> object
        Set: Value(self: _WebBrowserControl) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _WebBrowserControl) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _WebBrowserControl) -> bool
        Set: Visible(self: _WebBrowserControl) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _WebBrowserControl) -> Int16
        Set: Width(self: _WebBrowserControl) = value
        """
        ...


    def Goto(self): # -> 
        """ Goto(self: _WebBrowserControl) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _WebBrowserControl, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _WebBrowserControl, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _WebBrowserControl) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _WebBrowserControl) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _WebBrowserControl) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _WebBrowserControl) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _WebBrowserControl, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class WebBrowserControl(DispWebBrowserControlEvents_Event, _WebBrowserControl): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class WebBrowserControlClass(WebBrowserControl, __ComObject): # skipped bases: <type 'DispWebBrowserControlEvents_Event'>, <type '_WebBrowserControl'>, <type 'IAccessible'>, <type 'object'>
    """ WebBrowserControlClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: WebBrowserControlClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: WebBrowserControlClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: WebBrowserControlClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: WebBrowserControlClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: WebBrowserControlClass) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: WebBrowserControlClass) -> int
        Set: BorderColor(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: WebBrowserControlClass) -> Byte
        Set: BorderLineStyle(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: WebBrowserControlClass) -> Single
        Set: BorderShade(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: WebBrowserControlClass) -> Byte
        Set: BorderStyle(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: WebBrowserControlClass) -> int
        Set: BorderThemeColorIndex(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: WebBrowserControlClass) -> Single
        Set: BorderTint(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: WebBrowserControlClass) -> Byte
        Set: BorderWidth(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: WebBrowserControlClass) -> Int16
        Set: BottomPadding(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: WebBrowserControlClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: WebBrowserControlClass) -> str
        Set: ControlSource(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: WebBrowserControlClass) -> str
        Set: ControlTipText(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: WebBrowserControlClass) -> Byte
        Set: ControlType(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: WebBrowserControlClass) -> Byte
        Set: DisplayWhen(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: WebBrowserControlClass) -> bool
        Set: Enabled(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: WebBrowserControlClass) -> str
        Set: EventProcPrefix(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: WebBrowserControlClass) -> int
        Set: GridlineColor(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: WebBrowserControlClass) -> Single
        Set: GridlineShade(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: WebBrowserControlClass) -> Byte
        Set: GridlineStyleBottom(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: WebBrowserControlClass) -> Byte
        Set: GridlineStyleLeft(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: WebBrowserControlClass) -> Byte
        Set: GridlineStyleRight(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: WebBrowserControlClass) -> Byte
        Set: GridlineStyleTop(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: WebBrowserControlClass) -> int
        Set: GridlineThemeColorIndex(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: WebBrowserControlClass) -> Single
        Set: GridlineTint(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: WebBrowserControlClass) -> Byte
        Set: GridlineWidthBottom(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: WebBrowserControlClass) -> Byte
        Set: GridlineWidthLeft(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: WebBrowserControlClass) -> Byte
        Set: GridlineWidthRight(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: WebBrowserControlClass) -> Byte
        Set: GridlineWidthTop(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: WebBrowserControlClass) -> Int16
        Set: Height(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: WebBrowserControlClass) -> int
        Set: HelpContextId(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: WebBrowserControlClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: WebBrowserControlClass) -> Hyperlink """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: WebBrowserControlClass) -> bool
        Set: InSelection(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: WebBrowserControlClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: WebBrowserControlClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: WebBrowserControlClass) -> Int16
        Set: Left(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: WebBrowserControlClass) -> Int16
        Set: LeftPadding(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def LocationURL(self) -> str:
        """ Get: LocationURL(self: WebBrowserControlClass) -> str """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: WebBrowserControlClass) -> str
        Set: Name(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: WebBrowserControlClass) -> object """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: WebBrowserControlClass) -> object """
        ...

    @property
    def OnBeforeNavigate(self) -> str:
        """
        Get: OnBeforeNavigate(self: WebBrowserControlClass) -> str
        Set: OnBeforeNavigate(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnBeforeNavigateMacro(self) -> str:
        """
        Get: OnBeforeNavigateMacro(self: WebBrowserControlClass) -> str
        Set: OnBeforeNavigateMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: WebBrowserControlClass) -> str
        Set: OnClickMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: WebBrowserControlClass) -> str
        Set: OnDblClickMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnDocumentComplete(self) -> str:
        """
        Get: OnDocumentComplete(self: WebBrowserControlClass) -> str
        Set: OnDocumentComplete(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnDocumentCompleteMacro(self) -> str:
        """
        Get: OnDocumentCompleteMacro(self: WebBrowserControlClass) -> str
        Set: OnDocumentCompleteMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: WebBrowserControlClass) -> str
        Set: OnKeyDown(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: WebBrowserControlClass) -> str
        Set: OnKeyDownMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: WebBrowserControlClass) -> str
        Set: OnKeyPress(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: WebBrowserControlClass) -> str
        Set: OnKeyPressMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: WebBrowserControlClass) -> str
        Set: OnKeyUp(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: WebBrowserControlClass) -> str
        Set: OnKeyUpMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: WebBrowserControlClass) -> str
        Set: OnMouseDown(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: WebBrowserControlClass) -> str
        Set: OnMouseDownMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: WebBrowserControlClass) -> str
        Set: OnMouseMove(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: WebBrowserControlClass) -> str
        Set: OnMouseMoveMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: WebBrowserControlClass) -> str
        Set: OnMouseUp(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: WebBrowserControlClass) -> str
        Set: OnMouseUpMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnNavigateError(self) -> str:
        """
        Get: OnNavigateError(self: WebBrowserControlClass) -> str
        Set: OnNavigateError(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnNavigateErrorMacro(self) -> str:
        """
        Get: OnNavigateErrorMacro(self: WebBrowserControlClass) -> str
        Set: OnNavigateErrorMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnProgressChange(self) -> str:
        """
        Get: OnProgressChange(self: WebBrowserControlClass) -> str
        Set: OnProgressChange(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnProgressChangeMacro(self) -> str:
        """
        Get: OnProgressChangeMacro(self: WebBrowserControlClass) -> str
        Set: OnProgressChangeMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: WebBrowserControlClass) -> str
        Set: OnUpdated(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: WebBrowserControlClass) -> str
        Set: OnUpdatedMacro(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WebBrowserControlClass) -> object """
        ...

    @property
    def Progress(self) -> int:
        """ Get: Progress(self: WebBrowserControlClass) -> int """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: WebBrowserControlClass) -> Properties """
        ...

    @property
    def ReadyState(self) -> AcWebBrowserState:
        """ Get: ReadyState(self: WebBrowserControlClass) -> AcWebBrowserState """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: WebBrowserControlClass) -> Int16
        Set: RightPadding(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def ScrollBars(self) -> AcWebBrowserScrollBars:
        """
        Get: ScrollBars(self: WebBrowserControlClass) -> AcWebBrowserScrollBars
        Set: ScrollBars(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def ScrollLeft(self) -> int:
        """
        Get: ScrollLeft(self: WebBrowserControlClass) -> int
        Set: ScrollLeft(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def ScrollTop(self) -> int:
        """
        Get: ScrollTop(self: WebBrowserControlClass) -> int
        Set: ScrollTop(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: WebBrowserControlClass) -> Int16
        Set: Section(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Int16:
        """
        Get: SpecialEffect(self: WebBrowserControlClass) -> Int16
        Set: SpecialEffect(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: WebBrowserControlClass) -> str
        Set: StatusBarText(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: WebBrowserControlClass) -> Int16
        Set: TabIndex(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: WebBrowserControlClass) -> bool
        Set: TabStop(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: WebBrowserControlClass) -> str
        Set: Tag(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: WebBrowserControlClass) -> Int16
        Set: Top(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: WebBrowserControlClass) -> Int16
        Set: TopPadding(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Transform(self) -> str:
        """
        Get: Transform(self: WebBrowserControlClass) -> str
        Set: Transform(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: WebBrowserControlClass) -> object
        Set: Value(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: WebBrowserControlClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: WebBrowserControlClass) -> bool
        Set: Visible(self: WebBrowserControlClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: WebBrowserControlClass) -> Int16
        Set: Width(self: WebBrowserControlClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: WebBrowserControlClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: WebBrowserControlClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: WebBrowserControlClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: WebBrowserControlClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: WebBrowserControlClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: WebBrowserControlClass, : DispWebBrowserControlEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeNavigate2(self): # -> 
        """ add_BeforeNavigate2(self: WebBrowserControlClass, : DispWebBrowserControlEvents_BeforeNavigate2EventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: WebBrowserControlClass, : DispWebBrowserControlEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DirtyEventHandler) """
        ...

    def add_DocumentComplete(self): # -> 
        """ add_DocumentComplete(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DocumentCompleteEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: WebBrowserControlClass, : DispWebBrowserControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: WebBrowserControlClass, : DispWebBrowserControlEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: WebBrowserControlClass, : DispWebBrowserControlEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseUpEventHandler) """
        ...

    def add_NavigateError(self): # -> 
        """ add_NavigateError(self: WebBrowserControlClass, : DispWebBrowserControlEvents_NavigateErrorEventHandler) """
        ...

    def add_ProgressChange(self): # -> 
        """ add_ProgressChange(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ProgressChangeEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: WebBrowserControlClass, : DispWebBrowserControlEvents_UpdatedEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: WebBrowserControlClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WebBrowserControlClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: WebBrowserControlClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: WebBrowserControlClass, : DispWebBrowserControlEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeNavigate2(self): # -> 
        """ remove_BeforeNavigate2(self: WebBrowserControlClass, : DispWebBrowserControlEvents_BeforeNavigate2EventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: WebBrowserControlClass, : DispWebBrowserControlEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DirtyEventHandler) """
        ...

    def remove_DocumentComplete(self): # -> 
        """ remove_DocumentComplete(self: WebBrowserControlClass, : DispWebBrowserControlEvents_DocumentCompleteEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: WebBrowserControlClass, : DispWebBrowserControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: WebBrowserControlClass, : DispWebBrowserControlEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: WebBrowserControlClass, : DispWebBrowserControlEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: WebBrowserControlClass, : DispWebBrowserControlEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: WebBrowserControlClass, : DispWebBrowserControlEvents_MouseUpEventHandler) """
        ...

    def remove_NavigateError(self): # -> 
        """ remove_NavigateError(self: WebBrowserControlClass, : DispWebBrowserControlEvents_NavigateErrorEventHandler) """
        ...

    def remove_ProgressChange(self): # -> 
        """ remove_ProgressChange(self: WebBrowserControlClass, : DispWebBrowserControlEvents_ProgressChangeEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: WebBrowserControlClass, : DispWebBrowserControlEvents_UpdatedEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: WebBrowserControlClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: WebBrowserControlClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: WebBrowserControlClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: WebBrowserControlClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: WebBrowserControlClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    AfterUpdate = ...
    BeforeNavigate2 = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    DocumentComplete = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NavigateError = ...
    ProgressChange = ...
    Updated = ...


class _WebOptions: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _WebOptions) -> Application """
        ...

    @property
    def DownloadComponents(self) -> bool:
        """
        Get: DownloadComponents(self: _WebOptions) -> bool
        Set: DownloadComponents(self: _WebOptions) = value
        """
        ...

    @property
    def Encoding(self): # -> MsoEncoding
        """
        Get: Encoding(self: _WebOptions) -> MsoEncoding
        Set: Encoding(self: _WebOptions) = value
        """
        ...

    @property
    def FolderSuffix(self) -> str:
        """ Get: FolderSuffix(self: _WebOptions) -> str """
        ...

    @property
    def LocationOfComponents(self) -> str:
        """
        Get: LocationOfComponents(self: _WebOptions) -> str
        Set: LocationOfComponents(self: _WebOptions) = value
        """
        ...

    @property
    def OrganizeInFolder(self) -> bool:
        """
        Get: OrganizeInFolder(self: _WebOptions) -> bool
        Set: OrganizeInFolder(self: _WebOptions) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _WebOptions) -> object """
        ...

    @property
    def TargetBrowser(self): # -> MsoTargetBrowser
        """
        Get: TargetBrowser(self: _WebOptions) -> MsoTargetBrowser
        Set: TargetBrowser(self: _WebOptions) = value
        """
        ...

    @property
    def UseLongFileNames(self) -> bool:
        """
        Get: UseLongFileNames(self: _WebOptions) -> bool
        Set: UseLongFileNames(self: _WebOptions) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _WebOptions, dispid: int) -> bool """
        ...

    def UseDefaultFolderSuffix(self): # -> 
        """ UseDefaultFolderSuffix(self: _WebOptions) """
        ...


class WebOptions(_WebOptions): # skipped bases: <type 'object'>
    """ no doc """
    pass

class WebOptionsClass(WebOptions, __ComObject): # skipped bases: <type '_WebOptions'>, <type 'object'>
    """ WebOptionsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: WebOptionsClass) -> Application """
        ...

    @property
    def DownloadComponents(self) -> bool:
        """
        Get: DownloadComponents(self: WebOptionsClass) -> bool
        Set: DownloadComponents(self: WebOptionsClass) = value
        """
        ...

    @property
    def Encoding(self): # -> MsoEncoding
        """
        Get: Encoding(self: WebOptionsClass) -> MsoEncoding
        Set: Encoding(self: WebOptionsClass) = value
        """
        ...

    @property
    def FolderSuffix(self) -> str:
        """ Get: FolderSuffix(self: WebOptionsClass) -> str """
        ...

    @property
    def LocationOfComponents(self) -> str:
        """
        Get: LocationOfComponents(self: WebOptionsClass) -> str
        Set: LocationOfComponents(self: WebOptionsClass) = value
        """
        ...

    @property
    def OrganizeInFolder(self) -> bool:
        """
        Get: OrganizeInFolder(self: WebOptionsClass) -> bool
        Set: OrganizeInFolder(self: WebOptionsClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WebOptionsClass) -> object """
        ...

    @property
    def TargetBrowser(self): # -> MsoTargetBrowser
        """
        Get: TargetBrowser(self: WebOptionsClass) -> MsoTargetBrowser
        Set: TargetBrowser(self: WebOptionsClass) = value
        """
        ...

    @property
    def UseLongFileNames(self) -> bool:
        """
        Get: UseLongFileNames(self: WebOptionsClass) -> bool
        Set: UseLongFileNames(self: WebOptionsClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WebOptionsClass, dispid: int) -> bool """
        ...

    def UseDefaultFolderSuffix(self): # -> 
        """ UseDefaultFolderSuffix(self: WebOptionsClass) """
        ...


class WebService: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Entities(self) -> Entities:
        """ Get: Entities(self: WebService) -> Entities """
        ...

    @property
    def Name(self) -> str:
        """ Get: Name(self: WebService) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WebService) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WebService, dispid: int) -> bool """
        ...


class WebServices(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: WebServices) -> Application """
        ...

    @property
    def Count(self) -> int:
        """ Get: Count(self: WebServices) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WebServices) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WebServices, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _WizHook: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def DbcVbProject(self) -> VBProject:
        """ Get: DbcVbProject(self: _WizHook) -> VBProject """
        ...

    @property
    def Key(self): # -> 
        """ Set: Key(self: _WizHook) = value """
        ...


    def AccessUserDataDir(self) -> str:
        """ AccessUserDataDir(self: _WizHook) -> str """
        ...

    def AccessWizFilePath(self, bstrWhich:str) -> str:
        """ AccessWizFilePath(self: _WizHook, bstrWhich: str) -> str """
        ...

    def AdpUIDPwd(self, pbstrUID, pbstrPwd) -> Tuple_[bool, str, str]:
        """ AdpUIDPwd(self: _WizHook) -> (bool, str, str) """
        ...

    def AnalyzeQuery(self, Workspace, Database, Query, Results) -> Tuple_[int, str]:
        """ AnalyzeQuery(self: _WizHook, Workspace: Workspace, Database: Database, Query: str) -> (int, str) """
        ...

    def AnalyzeTable(self, Workspace, Database, Table, ReturnDebugInfo, Results) -> Tuple_[int, str]:
        """ AnalyzeTable(self: _WizHook, Workspace: Workspace, Database: Database, Table: str, ReturnDebugInfo: bool) -> (int, str) """
        ...

    def ArgsOfActid(self, Actid:int) -> int:
        """ ArgsOfActid(self: _WizHook, Actid: int) -> int """
        ...

    def BracketString(self, String, flags) -> Tuple_[bool, str]:
        """ BracketString(self: _WizHook, flags: int) -> (bool, str) """
        ...

    def CacheStatus(self, bstrStatus:str): # -> 
        """ CacheStatus(self: _WizHook, bstrStatus: str) """
        ...

    def CloseCurrentDatabase(self) -> bool:
        """ CloseCurrentDatabase(self: _WizHook) -> bool """
        ...

    def CreateDataPageControl(self, DpName:str, CtlName:str, Typ:int, Section:str, SectionType:int, AppletCode:str, X:int, Y:int, dx:int, dy:int): # -> 
        """ CreateDataPageControl(self: _WizHook, DpName: str, CtlName: str, Typ: int, Section: str, SectionType: int, AppletCode: str, X: int, Y: int, dx: int, dy: int) """
        ...

    def CurrentLangID(self) -> int:
        """ CurrentLangID(self: _WizHook) -> int """
        ...

    def EmbedFileOnDataPage(self, DpName:str, FileToInsert:str) -> str:
        """ EmbedFileOnDataPage(self: _WizHook, DpName: str, FileToInsert: str) -> str """
        ...

    def EnglishPictToLocal(self, In, Out) -> Tuple_[bool, str]:
        """ EnglishPictToLocal(self: _WizHook, In: str) -> (bool, str) """
        ...

    def ExecuteTempImexSpec(self, bstrSpecXML:str): # -> 
        """ ExecuteTempImexSpec(self: _WizHook, bstrSpecXML: str) """
        ...

    def FCacheStatus(self) -> bool:
        """ FCacheStatus(self: _WizHook) -> bool """
        ...

    def FCreateNameMap(self, objtyp:Int16, bstrObjName:str) -> bool:
        """ FCreateNameMap(self: _WizHook, objtyp: Int16, bstrObjName: str) -> bool """
        ...

    def FGetMSDE(self, fBlockKeys:bool) -> bool:
        """ FGetMSDE(self: _WizHook, fBlockKeys: bool) -> bool """
        ...

    def FileExists(self, File:str) -> bool:
        """ FileExists(self: _WizHook, File: str) -> bool """
        ...

    def FirstDbcDataObject(self, Name, ObjType, Attribs) -> Tuple_[bool, str, AcObjectType, int]:
        """ FirstDbcDataObject(self: _WizHook) -> (bool, str, AcObjectType, int) """
        ...

    def FIsFEWch(self, wch:int) -> bool:
        """ FIsFEWch(self: _WizHook, wch: int) -> bool """
        ...

    def FIsPublishedXasTable(self, bstrObjectName:str) -> bool:
        """ FIsPublishedXasTable(self: _WizHook, bstrObjectName: str) -> bool """
        ...

    def FIsValidXasObjectName(self, bstrObjectName:str, iobjtyp:AcObjectType) -> bool:
        """ FIsValidXasObjectName(self: _WizHook, bstrObjectName: str, iobjtyp: AcObjectType) -> bool """
        ...

    def FIsXasDb(self) -> bool:
        """ FIsXasDb(self: _WizHook) -> bool """
        ...

    def FullPath(self, RelativePath, FullPath) -> Tuple_[Int16, str]:
        """ FullPath(self: _WizHook, RelativePath: str) -> (Int16, str) """
        ...

    def GetAccWizRCPath(self) -> str:
        """ GetAccWizRCPath(self: _WizHook) -> str """
        ...

    def GetAdeRegistryPath(self) -> str:
        """ GetAdeRegistryPath(self: _WizHook) -> str """
        ...

    def GetColumns(self, bstrBase:str) -> str:
        """ GetColumns(self: _WizHook, bstrBase: str) -> str """
        ...

    def GetCurrentView(self, bstrTableName:str) -> int:
        """ GetCurrentView(self: _WizHook, bstrTableName: str) -> int """
        ...

    def GetDisabledExtensions(self) -> str:
        """ GetDisabledExtensions(self: _WizHook) -> str """
        ...

    def GetFileName(self, hwndOwner, AppName, DlgTitle, OpenTitle, File, InitialDir, Filter, FilterIndex, View, flags, fOpen) -> Tuple_[int, str]:
        """ GetFileName(self: _WizHook, hwndOwner: int, AppName: str, DlgTitle: str, OpenTitle: str, InitialDir: str, Filter: str, FilterIndex: int, View: int, flags: int, fOpen: bool) -> (int, str) """
        ...

    def GetFileName2(self, hwndOwner, AppName, DlgTitle, OpenTitle, File, InitialDir, Filter, FilterIndex, View, flags, fOpen, fFileSystem) -> Tuple_[int, str]:
        """ GetFileName2(self: _WizHook, hwndOwner: int, AppName: str, DlgTitle: str, OpenTitle: str, InitialDir: str, Filter: str, FilterIndex: int, View: int, flags: int, fOpen: bool, fFileSystem: object) -> (int, str) """
        ...

    def GetFileOdso(self, bstrExt, bstrFilename) -> Tuple_[int, str]:
        """ GetFileOdso(self: _WizHook, bstrExt: str) -> (int, str) """
        ...

    def GetImexTblName(self) -> str:
        """ GetImexTblName(self: _WizHook) -> str """
        ...

    def GetInfoForColumns(self, bstrBase:str) -> str:
        """ GetInfoForColumns(self: _WizHook, bstrBase: str) -> str """
        ...

    def GetLinkedListProperty(self, bstrTableName:str, bstrPropertyName:str, fServer:bool) -> str:
        """ GetLinkedListProperty(self: _WizHook, bstrTableName: str, bstrPropertyName: str, fServer: bool) -> str """
        ...

    def GetObjPubOption(self, bstrObjectName:str, iobjtyp:AcObjectType, fTablesAsClient:bool) -> int:
        """ GetObjPubOption(self: _WizHook, bstrObjectName: str, iobjtyp: AcObjectType, fTablesAsClient: bool) -> int """
        ...

    def GetScriptString(self, HScr, ScriptColumn, Value) -> Tuple_[bool, str]:
        """ GetScriptString(self: _WizHook, HScr: int, ScriptColumn: int) -> (bool, str) """
        ...

    def GetWizGlob(self, lWhich:int) -> object:
        """ GetWizGlob(self: _WizHook, lWhich: int) -> object """
        ...

    def GlobalProcExists(self, Name:str) -> bool:
        """ GlobalProcExists(self: _WizHook, Name: str) -> bool """
        ...

    def HideDates(self) -> bool:
        """ HideDates(self: _WizHook) -> bool """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _WizHook, dispid: int) -> bool """
        ...

    def IsValidIdent(self, Identifier:str) -> bool:
        """ IsValidIdent(self: _WizHook, Identifier: str) -> bool """
        ...

    def KeyboardLangID(self) -> int:
        """ KeyboardLangID(self: _WizHook) -> int """
        ...

    def KnownWizLeaks(self, fStart:bool): # -> 
        """ KnownWizLeaks(self: _WizHook, fStart: bool) """
        ...

    def LoadImexSpecSolution(self, bstrFilename:str): # -> 
        """ LoadImexSpecSolution(self: _WizHook, bstrFilename: str) """
        ...

    def LoadResourceLibrary(self, bstrObjectName:str) -> object:
        """ LoadResourceLibrary(self: _WizHook, bstrObjectName: str) -> object """
        ...

    def LocalFont(self) -> str:
        """ LocalFont(self: _WizHook) -> str """
        ...

    def NameFromActid(self, Actid:int) -> str:
        """ NameFromActid(self: _WizHook, Actid: int) -> str """
        ...

    def ObjTypOfRecordSource(self, RecordSource:str) -> Int16:
        """ ObjTypOfRecordSource(self: _WizHook, RecordSource: str) -> Int16 """
        ...

    def OfficeAddInDir(self) -> str:
        """ OfficeAddInDir(self: _WizHook) -> str """
        ...

    def OpenEmScript(self, pProperty, OpenMode, Extra, Version) -> Tuple_[int, int, int]:
        """ OpenEmScript(self: _WizHook, pProperty: _AccessProperty, OpenMode: int) -> (int, int, int) """
        ...

    def OpenPictureFile(self, File, Cancelled) -> Tuple_[bool, str, bool]:
        """ OpenPictureFile(self: _WizHook) -> (bool, str, bool) """
        ...

    def OpenScript(self, Script, Label, OpenMode, Extra, Version) -> Tuple_[int, int, int]:
        """ OpenScript(self: _WizHook, Script: str, Label: str, OpenMode: int) -> (int, int, int) """
        ...

    def ReportLeaksToFile(self, fRptToFile:bool, bstrFileOut:str): # -> 
        """ ReportLeaksToFile(self: _WizHook, fRptToFile: bool, bstrFileOut: str) """
        ...

    def SaveObject(self, bstrName:str, objtyp:Int16): # -> 
        """ SaveObject(self: _WizHook, bstrName: str, objtyp: Int16) """
        ...

    def SaveScriptString(self, HScr:int, ScriptColumn:int, Value:str) -> bool:
        """ SaveScriptString(self: _WizHook, HScr: int, ScriptColumn: int, Value: str) -> bool """
        ...

    def SetDefaultSpecName(self, bstrSpecName:str): # -> 
        """ SetDefaultSpecName(self: _WizHook, bstrSpecName: str) """
        ...

    def SetDpBlockKeyInput(self, fBlockKeys:bool): # -> 
        """ SetDpBlockKeyInput(self: _WizHook, fBlockKeys: bool) """
        ...

    def SetVbaPassword(self, bstrDbName:str, bstrConnect:str, bstrPasswd:str) -> bool:
        """ SetVbaPassword(self: _WizHook, bstrDbName: str, bstrConnect: str, bstrPasswd: str) -> bool """
        ...

    def SetWizGlob(self, lWhich:int, vValue:object): # -> 
        """ SetWizGlob(self: _WizHook, lWhich: int, vValue: object) """
        ...

    def SortStringArray(self, Array) -> Array:
        """ SortStringArray(self: _WizHook) -> Array """
        ...

    def SplitPath(self, Path, Drive, Dir, File, Ext) -> Tuple_[str, str, str, str]:
        """ SplitPath(self: _WizHook, Path: str) -> (str, str, str, str) """
        ...

    def TableFieldHasUniqueIndex(self, Table:str, Columns:str) -> bool:
        """ TableFieldHasUniqueIndex(self: _WizHook, Table: str, Columns: str) -> bool """
        ...

    def TranslateExpression(self, In, Out, ParseFlags, TranslateFlags) -> Tuple_[bool, str]:
        """ TranslateExpression(self: _WizHook, In: str, ParseFlags: int, TranslateFlags: int) -> (bool, str) """
        ...

    def TwipsFromFont(self, FontName, Size, Weight, Italic, Underline, Cch, Caption, MaxWidthCch, dx, dy) -> Tuple_[bool, int, int]:
        """ TwipsFromFont(self: _WizHook, FontName: str, Size: int, Weight: int, Italic: bool, Underline: bool, Cch: int, Caption: str, MaxWidthCch: int) -> (bool, int, int) """
        ...

    def WizCopyCmdbars(self, bstrADPName:str): # -> 
        """ WizCopyCmdbars(self: _WizHook, bstrADPName: str) """
        ...

    def WizHelp(self, HelpFile:str, wCmd:int, ContextID:int) -> bool:
        """ WizHelp(self: _WizHook, HelpFile: str, wCmd: int, ContextID: int) -> bool """
        ...

    def WizMsgBox(self, bstrText:str, bstrCaption:str, wStyle:int, idHelpID:int, bstrHelpFileName:str) -> int:
        """ WizMsgBox(self: _WizHook, bstrText: str, bstrCaption: str, wStyle: int, idHelpID: int, bstrHelpFileName: str) -> int """
        ...


class WizHook(_WizHook): # skipped bases: <type 'object'>
    """ no doc """
    pass

class WizHookClass(WizHook, __ComObject): # skipped bases: <type '_WizHook'>, <type 'object'>
    """ WizHookClass() """
    @property
    def DbcVbProject(self) -> VBProject:
        """ Get: DbcVbProject(self: WizHookClass) -> VBProject """
        ...

    @property
    def Key(self): # -> 
        """ Set: Key(self: WizHookClass) = value """
        ...


    def AccessUserDataDir(self) -> str:
        """ AccessUserDataDir(self: WizHookClass) -> str """
        ...

    def AccessWizFilePath(self, bstrWhich:str) -> str:
        """ AccessWizFilePath(self: WizHookClass, bstrWhich: str) -> str """
        ...

    def AdpUIDPwd(self, pbstrUID, pbstrPwd) -> Tuple_[bool, str, str]:
        """ AdpUIDPwd(self: WizHookClass) -> (bool, str, str) """
        ...

    def AnalyzeQuery(self, Workspace, Database, Query, Results) -> Tuple_[int, str]:
        """ AnalyzeQuery(self: WizHookClass, Workspace: Workspace, Database: Database, Query: str) -> (int, str) """
        ...

    def AnalyzeTable(self, Workspace, Database, Table, ReturnDebugInfo, Results) -> Tuple_[int, str]:
        """ AnalyzeTable(self: WizHookClass, Workspace: Workspace, Database: Database, Table: str, ReturnDebugInfo: bool) -> (int, str) """
        ...

    def ArgsOfActid(self, Actid:int) -> int:
        """ ArgsOfActid(self: WizHookClass, Actid: int) -> int """
        ...

    def BracketString(self, String, flags) -> Tuple_[bool, str]:
        """ BracketString(self: WizHookClass, flags: int) -> (bool, str) """
        ...

    def CacheStatus(self, bstrStatus:str): # -> 
        """ CacheStatus(self: WizHookClass, bstrStatus: str) """
        ...

    def CloseCurrentDatabase(self) -> bool:
        """ CloseCurrentDatabase(self: WizHookClass) -> bool """
        ...

    def CreateDataPageControl(self, DpName:str, CtlName:str, Typ:int, Section:str, SectionType:int, AppletCode:str, X:int, Y:int, dx:int, dy:int): # -> 
        """ CreateDataPageControl(self: WizHookClass, DpName: str, CtlName: str, Typ: int, Section: str, SectionType: int, AppletCode: str, X: int, Y: int, dx: int, dy: int) """
        ...

    def CurrentLangID(self) -> int:
        """ CurrentLangID(self: WizHookClass) -> int """
        ...

    def EmbedFileOnDataPage(self, DpName:str, FileToInsert:str) -> str:
        """ EmbedFileOnDataPage(self: WizHookClass, DpName: str, FileToInsert: str) -> str """
        ...

    def EnglishPictToLocal(self, In, Out) -> Tuple_[bool, str]:
        """ EnglishPictToLocal(self: WizHookClass, In: str) -> (bool, str) """
        ...

    def ExecuteTempImexSpec(self, bstrSpecXML:str): # -> 
        """ ExecuteTempImexSpec(self: WizHookClass, bstrSpecXML: str) """
        ...

    def FCacheStatus(self) -> bool:
        """ FCacheStatus(self: WizHookClass) -> bool """
        ...

    def FCreateNameMap(self, objtyp:Int16, bstrObjName:str) -> bool:
        """ FCreateNameMap(self: WizHookClass, objtyp: Int16, bstrObjName: str) -> bool """
        ...

    def FGetMSDE(self, fBlockKeys:bool) -> bool:
        """ FGetMSDE(self: WizHookClass, fBlockKeys: bool) -> bool """
        ...

    def FileExists(self, File:str) -> bool:
        """ FileExists(self: WizHookClass, File: str) -> bool """
        ...

    def FirstDbcDataObject(self, Name, ObjType, Attribs) -> Tuple_[bool, str, AcObjectType, int]:
        """ FirstDbcDataObject(self: WizHookClass) -> (bool, str, AcObjectType, int) """
        ...

    def FIsFEWch(self, wch:int) -> bool:
        """ FIsFEWch(self: WizHookClass, wch: int) -> bool """
        ...

    def FIsPublishedXasTable(self, bstrObjectName:str) -> bool:
        """ FIsPublishedXasTable(self: WizHookClass, bstrObjectName: str) -> bool """
        ...

    def FIsValidXasObjectName(self, bstrObjectName:str, iobjtyp:AcObjectType) -> bool:
        """ FIsValidXasObjectName(self: WizHookClass, bstrObjectName: str, iobjtyp: AcObjectType) -> bool """
        ...

    def FIsXasDb(self) -> bool:
        """ FIsXasDb(self: WizHookClass) -> bool """
        ...

    def FullPath(self, RelativePath, FullPath) -> Tuple_[Int16, str]:
        """ FullPath(self: WizHookClass, RelativePath: str) -> (Int16, str) """
        ...

    def GetAccWizRCPath(self) -> str:
        """ GetAccWizRCPath(self: WizHookClass) -> str """
        ...

    def GetAdeRegistryPath(self) -> str:
        """ GetAdeRegistryPath(self: WizHookClass) -> str """
        ...

    def GetColumns(self, bstrBase:str) -> str:
        """ GetColumns(self: WizHookClass, bstrBase: str) -> str """
        ...

    def GetCurrentView(self, bstrTableName:str) -> int:
        """ GetCurrentView(self: WizHookClass, bstrTableName: str) -> int """
        ...

    def GetDisabledExtensions(self) -> str:
        """ GetDisabledExtensions(self: WizHookClass) -> str """
        ...

    def GetFileName(self, hwndOwner, AppName, DlgTitle, OpenTitle, File, InitialDir, Filter, FilterIndex, View, flags, fOpen) -> Tuple_[int, str]:
        """ GetFileName(self: WizHookClass, hwndOwner: int, AppName: str, DlgTitle: str, OpenTitle: str, InitialDir: str, Filter: str, FilterIndex: int, View: int, flags: int, fOpen: bool) -> (int, str) """
        ...

    def GetFileName2(self, hwndOwner, AppName, DlgTitle, OpenTitle, File, InitialDir, Filter, FilterIndex, View, flags, fOpen, fFileSystem) -> Tuple_[int, str]:
        """ GetFileName2(self: WizHookClass, hwndOwner: int, AppName: str, DlgTitle: str, OpenTitle: str, InitialDir: str, Filter: str, FilterIndex: int, View: int, flags: int, fOpen: bool, fFileSystem: object) -> (int, str) """
        ...

    def GetFileOdso(self, bstrExt, bstrFilename) -> Tuple_[int, str]:
        """ GetFileOdso(self: WizHookClass, bstrExt: str) -> (int, str) """
        ...

    def GetImexTblName(self) -> str:
        """ GetImexTblName(self: WizHookClass) -> str """
        ...

    def GetInfoForColumns(self, bstrBase:str) -> str:
        """ GetInfoForColumns(self: WizHookClass, bstrBase: str) -> str """
        ...

    def GetLinkedListProperty(self, bstrTableName:str, bstrPropertyName:str, fServer:bool) -> str:
        """ GetLinkedListProperty(self: WizHookClass, bstrTableName: str, bstrPropertyName: str, fServer: bool) -> str """
        ...

    def GetObjPubOption(self, bstrObjectName:str, iobjtyp:AcObjectType, fTablesAsClient:bool) -> int:
        """ GetObjPubOption(self: WizHookClass, bstrObjectName: str, iobjtyp: AcObjectType, fTablesAsClient: bool) -> int """
        ...

    def GetScriptString(self, HScr, ScriptColumn, Value) -> Tuple_[bool, str]:
        """ GetScriptString(self: WizHookClass, HScr: int, ScriptColumn: int) -> (bool, str) """
        ...

    def GetWizGlob(self, lWhich:int) -> object:
        """ GetWizGlob(self: WizHookClass, lWhich: int) -> object """
        ...

    def GlobalProcExists(self, Name:str) -> bool:
        """ GlobalProcExists(self: WizHookClass, Name: str) -> bool """
        ...

    def HideDates(self) -> bool:
        """ HideDates(self: WizHookClass) -> bool """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WizHookClass, dispid: int) -> bool """
        ...

    def IsValidIdent(self, Identifier:str) -> bool:
        """ IsValidIdent(self: WizHookClass, Identifier: str) -> bool """
        ...

    def KeyboardLangID(self) -> int:
        """ KeyboardLangID(self: WizHookClass) -> int """
        ...

    def KnownWizLeaks(self, fStart:bool): # -> 
        """ KnownWizLeaks(self: WizHookClass, fStart: bool) """
        ...

    def LoadImexSpecSolution(self, bstrFilename:str): # -> 
        """ LoadImexSpecSolution(self: WizHookClass, bstrFilename: str) """
        ...

    def LoadResourceLibrary(self, bstrObjectName:str) -> object:
        """ LoadResourceLibrary(self: WizHookClass, bstrObjectName: str) -> object """
        ...

    def LocalFont(self) -> str:
        """ LocalFont(self: WizHookClass) -> str """
        ...

    def NameFromActid(self, Actid:int) -> str:
        """ NameFromActid(self: WizHookClass, Actid: int) -> str """
        ...

    def ObjTypOfRecordSource(self, RecordSource:str) -> Int16:
        """ ObjTypOfRecordSource(self: WizHookClass, RecordSource: str) -> Int16 """
        ...

    def OfficeAddInDir(self) -> str:
        """ OfficeAddInDir(self: WizHookClass) -> str """
        ...

    def OpenEmScript(self, pProperty, OpenMode, Extra, Version) -> Tuple_[int, int, int]:
        """ OpenEmScript(self: WizHookClass, pProperty: _AccessProperty, OpenMode: int) -> (int, int, int) """
        ...

    def OpenPictureFile(self, File, Cancelled) -> Tuple_[bool, str, bool]:
        """ OpenPictureFile(self: WizHookClass) -> (bool, str, bool) """
        ...

    def OpenScript(self, Script, Label, OpenMode, Extra, Version) -> Tuple_[int, int, int]:
        """ OpenScript(self: WizHookClass, Script: str, Label: str, OpenMode: int) -> (int, int, int) """
        ...

    def ReportLeaksToFile(self, fRptToFile:bool, bstrFileOut:str): # -> 
        """ ReportLeaksToFile(self: WizHookClass, fRptToFile: bool, bstrFileOut: str) """
        ...

    def SaveObject(self, bstrName:str, objtyp:Int16): # -> 
        """ SaveObject(self: WizHookClass, bstrName: str, objtyp: Int16) """
        ...

    def SaveScriptString(self, HScr:int, ScriptColumn:int, Value:str) -> bool:
        """ SaveScriptString(self: WizHookClass, HScr: int, ScriptColumn: int, Value: str) -> bool """
        ...

    def SetDefaultSpecName(self, bstrSpecName:str): # -> 
        """ SetDefaultSpecName(self: WizHookClass, bstrSpecName: str) """
        ...

    def SetDpBlockKeyInput(self, fBlockKeys:bool): # -> 
        """ SetDpBlockKeyInput(self: WizHookClass, fBlockKeys: bool) """
        ...

    def SetVbaPassword(self, bstrDbName:str, bstrConnect:str, bstrPasswd:str) -> bool:
        """ SetVbaPassword(self: WizHookClass, bstrDbName: str, bstrConnect: str, bstrPasswd: str) -> bool """
        ...

    def SetWizGlob(self, lWhich:int, vValue:object): # -> 
        """ SetWizGlob(self: WizHookClass, lWhich: int, vValue: object) """
        ...

    def SortStringArray(self, Array) -> Array:
        """ SortStringArray(self: WizHookClass) -> Array """
        ...

    def SplitPath(self, Path, Drive, Dir, File, Ext) -> Tuple_[str, str, str, str]:
        """ SplitPath(self: WizHookClass, Path: str) -> (str, str, str, str) """
        ...

    def TableFieldHasUniqueIndex(self, Table:str, Columns:str) -> bool:
        """ TableFieldHasUniqueIndex(self: WizHookClass, Table: str, Columns: str) -> bool """
        ...

    def TranslateExpression(self, In, Out, ParseFlags, TranslateFlags) -> Tuple_[bool, str]:
        """ TranslateExpression(self: WizHookClass, In: str, ParseFlags: int, TranslateFlags: int) -> (bool, str) """
        ...

    def TwipsFromFont(self, FontName, Size, Weight, Italic, Underline, Cch, Caption, MaxWidthCch, dx, dy) -> Tuple_[bool, int, int]:
        """ TwipsFromFont(self: WizHookClass, FontName: str, Size: int, Weight: int, Italic: bool, Underline: bool, Cch: int, Caption: str, MaxWidthCch: int) -> (bool, int, int) """
        ...

    def WizCopyCmdbars(self, bstrADPName:str): # -> 
        """ WizCopyCmdbars(self: WizHookClass, bstrADPName: str) """
        ...

    def WizHelp(self, HelpFile:str, wCmd:int, ContextID:int) -> bool:
        """ WizHelp(self: WizHookClass, HelpFile: str, wCmd: int, ContextID: int) -> bool """
        ...

    def WizMsgBox(self, bstrText:str, bstrCaption:str, wStyle:int, idHelpID:int, bstrHelpFileName:str) -> int:
        """ WizMsgBox(self: WizHookClass, bstrText: str, bstrCaption: str, wStyle: int, idHelpID: int, bstrHelpFileName: str) -> int """
        ...


class WSParameter: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Name(self) -> str:
        """ Get: Name(self: WSParameter) -> str """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WSParameter) -> object """
        ...

    @property
    def Type(self) -> Int16:
        """ Get: Type(self: WSParameter) -> Int16 """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WSParameter, dispid: int) -> bool """
        ...


class WSParameters(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: WSParameters) -> int """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: WSParameters) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: WSParameters, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _AccessProperty(Property): # skipped bases: <type '_DAO'>, <type 'object'>
    """ no doc """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _AccessProperty) -> Application """
        ...

    @property
    def Category(self) -> Int16:
        """ Get: Category(self: _AccessProperty) -> Int16 """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _AccessProperty) -> object """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _AccessProperty, dispid: int) -> bool """
        ...


class _AddTileUIReceiver: # skipped bases: <type 'object'>
    """ no doc """
    def BeginBatchNounAdd(self): # -> 
        """ BeginBatchNounAdd(self: _AddTileUIReceiver) """
        ...

    def CreateCustomTable(self, bstrTableName:str, bstrNounID:str) -> str:
        """ CreateCustomTable(self: _AddTileUIReceiver, bstrTableName: str, bstrNounID: str) -> str """
        ...

    def CreateObjectFromDefinition(self, pdispNounDefArray:object, pdispFinalNameArray:object): # -> 
        """ CreateObjectFromDefinition(self: _AddTileUIReceiver, pdispNounDefArray: object, pdispFinalNameArray: object) """
        ...

    def CreateRelationship(self, bstrLeftTable:str, bstrRightTable:str, bstrLookupFieldName:str, bstrLookupFieldDescription:str, lookupFieldPosition:int, iOptions:int): # -> 
        """ CreateRelationship(self: _AddTileUIReceiver, bstrLeftTable: str, bstrRightTable: str, bstrLookupFieldName: str, bstrLookupFieldDescription: str, lookupFieldPosition: int, iOptions: int) """
        ...

    def FinishBatchNounAdd(self): # -> 
        """ FinishBatchNounAdd(self: _AddTileUIReceiver) """
        ...

    def GetClientProtocolVersion(self) -> str:
        """ GetClientProtocolVersion(self: _AddTileUIReceiver) -> str """
        ...

    def GetDefinitionOfNounID(self, bstrNounID:str) -> str:
        """ GetDefinitionOfNounID(self: _AddTileUIReceiver, bstrNounID: str) -> str """
        ...

    def GetNounsMetadata(self) -> str:
        """ GetNounsMetadata(self: _AddTileUIReceiver) -> str """
        ...

    def GetNounsVersion(self) -> str:
        """ GetNounsVersion(self: _AddTileUIReceiver) -> str """
        ...

    def GetNounTables(self) -> str:
        """ GetNounTables(self: _AddTileUIReceiver) -> str """
        ...

    def ImportData(self, Type:Int16): # -> 
        """ ImportData(self: _AddTileUIReceiver, Type: Int16) """
        ...

    def IsOnlineContentAllowed(self) -> bool:
        """ IsOnlineContentAllowed(self: _AddTileUIReceiver) -> bool """
        ...

    def LaunchHyperlink(self, Type:Int16, bstrUrl:str): # -> 
        """ LaunchHyperlink(self: _AddTileUIReceiver, Type: Int16, bstrUrl: str) """
        ...

    def MetadataLoaded(self): # -> 
        """ MetadataLoaded(self: _AddTileUIReceiver) """
        ...

    def NotifyAddTileUIVisibilityChange(self, fVisible:bool): # -> 
        """ NotifyAddTileUIVisibilityChange(self: _AddTileUIReceiver, fVisible: bool) """
        ...

    def RegisterSearchTerm(self, bstrSearchTerm:str): # -> 
        """ RegisterSearchTerm(self: _AddTileUIReceiver, bstrSearchTerm: str) """
        ...


class _BoundObjectFrameEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _BoundObjectFrameEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _BoundObjectFrameEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _BoundObjectFrameEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _BoundObjectFrameEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _BoundObjectFrameEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _BoundObjectFrameEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _BoundObjectFrameEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _BoundObjectFrameEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _BoundObjectFrameEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _BoundObjectFrameEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _BoundObjectFrameEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _BoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _BoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _BoundObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: _BoundObjectFrameEvents) -> Int16 """
        ...


class _BoundObjectFrameEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _BoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...


class _BoundObjectFrameEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _BoundObjectFrameEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _BoundObjectFrameEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _BoundObjectFrameEvents_ClickEventHandler) """
        ...


class _BoundObjectFrameEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _BoundObjectFrameEvents_DblClickEventHandler) -> Int16 """
        ...


class _BoundObjectFrameEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _BoundObjectFrameEvents_EnterEventHandler) """
        ...


class _BoundObjectFrameEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_MouseUpEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: _BoundObjectFrameEvents_Event, : _BoundObjectFrameEvents_UpdatedEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...


class _BoundObjectFrameEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _BoundObjectFrameEvents_ExitEventHandler) -> Int16 """
        ...


class _BoundObjectFrameEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _BoundObjectFrameEvents_GotFocusEventHandler) """
        ...


class _BoundObjectFrameEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _BoundObjectFrameEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _BoundObjectFrameEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _BoundObjectFrameEvents_KeyPressEventHandler) -> Int16 """
        ...


class _BoundObjectFrameEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _BoundObjectFrameEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _BoundObjectFrameEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _BoundObjectFrameEvents_LostFocusEventHandler) """
        ...


class _BoundObjectFrameEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _BoundObjectFrameEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _BoundObjectFrameEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _BoundObjectFrameEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _BoundObjectFrameEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _BoundObjectFrameEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _BoundObjectFrameEvents_SinkHelper(_BoundObjectFrameEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UpdatedDelegate = ...


class _BoundObjectFrameEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _BoundObjectFrameEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: _BoundObjectFrameEvents_UpdatedEventHandler) -> Int16 """
        ...


class _CheckBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _CheckBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _CheckBoxEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _CheckBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _CheckBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _CheckBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _CheckBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _CheckBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _CheckBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _CheckBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _CheckBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _CheckBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _CheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _CheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _CheckBoxEvents) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxEvents_AfterUpdateEventHandler) """
        ...


class _CheckBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CheckBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _CheckBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxEvents_ClickEventHandler) """
        ...


class _CheckBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CheckBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class _CheckBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxEvents_EnterEventHandler) """
        ...


class _CheckBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _CheckBoxEvents_Event, : _CheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _CheckBoxEvents_Event, : _CheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _CheckBoxEvents_Event, : _CheckBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _CheckBoxEvents_Event, : _CheckBoxEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _CheckBoxEvents_Event, : _CheckBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _CheckBoxEvents_Event, : _CheckBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _CheckBoxEvents_Event, : _CheckBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _CheckBoxEvents_Event, : _CheckBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _CheckBoxEvents_Event, : _CheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _CheckBoxEvents_Event, : _CheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _CheckBoxEvents_Event, : _CheckBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _CheckBoxEvents_Event, : _CheckBoxEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _CheckBoxEvents_Event, : _CheckBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _CheckBoxEvents_Event, : _CheckBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _CheckBoxEvents_Event, : _CheckBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _CheckBoxEvents_Event, : _CheckBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _CheckBoxEvents_Event, : _CheckBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _CheckBoxEvents_Event, : _CheckBoxEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _CheckBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CheckBoxEvents_ExitEventHandler) -> Int16 """
        ...


class _CheckBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxEvents_GotFocusEventHandler) """
        ...


class _CheckBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CheckBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _CheckBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _CheckBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class _CheckBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CheckBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _CheckBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxEvents_LostFocusEventHandler) """
        ...


class _CheckBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxEvents_SinkHelper(_CheckBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _CheckBoxInOption(DispCheckBoxEvents_Event, _Checkbox): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _CheckBoxInOptionClass(_CheckBoxInOptionEvents_Event, _CheckBoxInOption, __ComObject): # skipped bases: <type '_Checkbox'>, <type 'DispCheckBoxEvents_Event'>, <type 'IAccessible'>, <type 'object'>
    """ _CheckBoxInOptionClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: _CheckBoxInOptionClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: _CheckBoxInOptionClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: _CheckBoxInOptionClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: _CheckBoxInOptionClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _CheckBoxInOptionClass) -> bool
        Set: AddColon(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _CheckBoxInOptionClass) -> str
        Set: AfterUpdate(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _CheckBoxInOptionClass) -> str
        Set: AfterUpdateMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _CheckBoxInOptionClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _CheckBoxInOptionClass) -> bool
        Set: AutoLabel(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _CheckBoxInOptionClass) -> str
        Set: BeforeUpdate(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _CheckBoxInOptionClass) -> str
        Set: BeforeUpdateMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _CheckBoxInOptionClass) -> int
        Set: BorderColor(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _CheckBoxInOptionClass) -> Byte
        Set: BorderLineStyle(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _CheckBoxInOptionClass) -> Single
        Set: BorderShade(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _CheckBoxInOptionClass) -> Byte
        Set: BorderStyle(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _CheckBoxInOptionClass) -> int
        Set: BorderThemeColorIndex(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _CheckBoxInOptionClass) -> Single
        Set: BorderTint(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _CheckBoxInOptionClass) -> Byte
        Set: BorderWidth(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _CheckBoxInOptionClass) -> Int16
        Set: BottomPadding(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _CheckBoxInOptionClass) -> bool
        Set: ColumnHidden(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _CheckBoxInOptionClass) -> Int16
        Set: ColumnOrder(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _CheckBoxInOptionClass) -> Int16
        Set: ColumnWidth(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _CheckBoxInOptionClass) -> str
        Set: ControlName(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _CheckBoxInOptionClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _CheckBoxInOptionClass) -> str
        Set: ControlSource(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _CheckBoxInOptionClass) -> str
        Set: ControlTipText(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _CheckBoxInOptionClass) -> Byte
        Set: ControlType(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _CheckBoxInOptionClass) -> str
        Set: DefaultValue(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _CheckBoxInOptionClass) -> Byte
        Set: DisplayWhen(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _CheckBoxInOptionClass) -> bool
        Set: Enabled(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _CheckBoxInOptionClass) -> str
        Set: EventProcPrefix(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _CheckBoxInOptionClass) -> int
        Set: GridlineColor(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _CheckBoxInOptionClass) -> Single
        Set: GridlineShade(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineStyleBottom(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineStyleLeft(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineStyleRight(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineStyleTop(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _CheckBoxInOptionClass) -> int
        Set: GridlineThemeColorIndex(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _CheckBoxInOptionClass) -> Single
        Set: GridlineTint(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineWidthBottom(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineWidthLeft(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineWidthRight(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _CheckBoxInOptionClass) -> Byte
        Set: GridlineWidthTop(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _CheckBoxInOptionClass) -> Int16
        Set: Height(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _CheckBoxInOptionClass) -> int
        Set: HelpContextId(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _CheckBoxInOptionClass) -> bool
        Set: HideDuplicates(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _CheckBoxInOptionClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _CheckBoxInOptionClass) -> bool
        Set: InSelection(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _CheckBoxInOptionClass) -> bool
        Set: IsVisible(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _CheckBoxInOptionClass) -> Byte
        Set: LabelAlign(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _CheckBoxInOptionClass) -> Int16
        Set: LabelX(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _CheckBoxInOptionClass) -> Int16
        Set: LabelY(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _CheckBoxInOptionClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _CheckBoxInOptionClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _CheckBoxInOptionClass) -> Int16
        Set: Left(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _CheckBoxInOptionClass) -> Int16
        Set: LeftPadding(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _CheckBoxInOptionClass) -> bool
        Set: Locked(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _CheckBoxInOptionClass) -> str
        Set: Name(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _CheckBoxInOptionClass) -> Byte
        Set: OldBorderStyle(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _CheckBoxInOptionClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _CheckBoxInOptionClass) -> str
        Set: OnClick(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnClickMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _CheckBoxInOptionClass) -> str
        Set: OnDblClick(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnDblClickMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _CheckBoxInOptionClass) -> str
        Set: OnEnter(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnEnterMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _CheckBoxInOptionClass) -> str
        Set: OnExit(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnExitMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _CheckBoxInOptionClass) -> str
        Set: OnGotFocus(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnGotFocusMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyDown(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyDownMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyPress(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyPressMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyUp(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnKeyUpMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _CheckBoxInOptionClass) -> str
        Set: OnLostFocus(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnLostFocusMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseDown(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseDownMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseMove(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseMoveMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseUp(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _CheckBoxInOptionClass) -> str
        Set: OnMouseUpMacro(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _CheckBoxInOptionClass) -> int
        Set: OptionValue(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _CheckBoxInOptionClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _CheckBoxInOptionClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _CheckBoxInOptionClass) -> Byte
        Set: ReadingOrder(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _CheckBoxInOptionClass) -> Int16
        Set: RightPadding(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _CheckBoxInOptionClass) -> Int16
        Set: Section(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _CheckBoxInOptionClass) -> str
        Set: ShortcutMenuBar(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _CheckBoxInOptionClass) -> Byte
        Set: SpecialEffect(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _CheckBoxInOptionClass) -> str
        Set: StatusBarText(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _CheckBoxInOptionClass) -> Int16
        Set: TabIndex(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _CheckBoxInOptionClass) -> bool
        Set: TabStop(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _CheckBoxInOptionClass) -> str
        Set: Tag(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _CheckBoxInOptionClass) -> Int16
        Set: Top(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _CheckBoxInOptionClass) -> Int16
        Set: TopPadding(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _CheckBoxInOptionClass) -> bool
        Set: TripleState(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _CheckBoxInOptionClass) -> str
        Set: ValidationRule(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _CheckBoxInOptionClass) -> str
        Set: ValidationText(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _CheckBoxInOptionClass) -> object
        Set: Value(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _CheckBoxInOptionClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _CheckBoxInOptionClass) -> bool
        Set: Visible(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _CheckBoxInOptionClass) -> Int16
        Set: Width(self: _CheckBoxInOptionClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _CheckBoxInOptionClass) -> str
        Set: _Name(self: _CheckBoxInOptionClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: _CheckBoxInOptionClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: _CheckBoxInOptionClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: _CheckBoxInOptionClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: _CheckBoxInOptionClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: _CheckBoxInOptionClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_ExitEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _CheckBoxInOptionClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CheckBoxInOptionClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _CheckBoxInOptionClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _CheckBoxInOptionClass, : DispCheckBoxEvents_ExitEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _CheckBoxInOptionClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _CheckBoxInOptionClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _CheckBoxInOptionClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _CheckBoxInOptionClass) """
        ...

    def _CheckBoxInOptionEvents_Event_add_GotFocus(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_GotFocus(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_GotFocusEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_KeyDown(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_KeyDown(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyDownEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_KeyPress(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_KeyPress(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyPressEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_KeyUp(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_KeyUp(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyUpEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_LostFocus(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_LostFocus(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_LostFocusEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_MouseDown(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_MouseDown(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseDownEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_MouseMove(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_MouseMove(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseMoveEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_add_MouseUp(self): # -> 
        """ _CheckBoxInOptionEvents_Event_add_MouseUp(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseUpEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_GotFocus(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_GotFocus(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_GotFocusEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_KeyDown(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_KeyDown(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyDownEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_KeyPress(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_KeyPress(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyPressEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_KeyUp(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_KeyUp(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_KeyUpEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_LostFocus(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_LostFocus(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_LostFocusEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_MouseDown(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_MouseDown(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseDownEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_MouseMove(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_MouseMove(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseMoveEventHandler) """
        ...

    def _CheckBoxInOptionEvents_Event_remove_MouseUp(self): # -> 
        """ _CheckBoxInOptionEvents_Event_remove_MouseUp(self: _CheckBoxInOptionClass, : _CheckBoxInOptionEvents_MouseUpEventHandler) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _CheckBoxInOptionClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispCheckBoxEvents_Event_AfterUpdate = ...
    DispCheckBoxEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _CheckBoxInOptionEvents_Event_GotFocus = ...
    _CheckBoxInOptionEvents_Event_KeyDown = ...
    _CheckBoxInOptionEvents_Event_KeyPress = ...
    _CheckBoxInOptionEvents_Event_KeyUp = ...
    _CheckBoxInOptionEvents_Event_LostFocus = ...
    _CheckBoxInOptionEvents_Event_MouseDown = ...
    _CheckBoxInOptionEvents_Event_MouseMove = ...
    _CheckBoxInOptionEvents_Event_MouseUp = ...


class _CheckBoxInOptionEvents: # skipped bases: <type 'object'>
    """ no doc """
    def GotFocus(self): # -> 
        """ GotFocus(self: _CheckBoxInOptionEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _CheckBoxInOptionEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _CheckBoxInOptionEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _CheckBoxInOptionEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _CheckBoxInOptionEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _CheckBoxInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _CheckBoxInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _CheckBoxInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxInOptionEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseUpEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _CheckBoxInOptionEvents_Event, : _CheckBoxInOptionEvents_MouseUpEventHandler) """
        ...

    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _CheckBoxInOptionEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxInOptionEvents_GotFocusEventHandler) """
        ...


class _CheckBoxInOptionEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CheckBoxInOptionEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _CheckBoxInOptionEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _CheckBoxInOptionEvents_KeyPressEventHandler) -> Int16 """
        ...


class _CheckBoxInOptionEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CheckBoxInOptionEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _CheckBoxInOptionEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CheckBoxInOptionEvents_LostFocusEventHandler) """
        ...


class _CheckBoxInOptionEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxInOptionEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxInOptionEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxInOptionEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxInOptionEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CheckBoxInOptionEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CheckBoxInOptionEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CheckBoxInOptionEvents_SinkHelper(_CheckBoxInOptionEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _ChildLabel(_Label, DispChildLabelEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _ChildLabelClass(_ChildLabelEvents_Event, __ComObject, _ChildLabel): # skipped bases: <type 'DispChildLabelEvents_Event'>, <type '_Label'>, <type 'IAccessible'>, <type 'object'>
    """ _ChildLabelClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: _ChildLabelClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: _ChildLabelClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: _ChildLabelClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: _ChildLabelClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ChildLabelClass) -> Application """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _ChildLabelClass) -> int
        Set: BackColor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _ChildLabelClass) -> Single
        Set: BackShade(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BackStyle(self) -> Byte:
        """
        Get: BackStyle(self: _ChildLabelClass) -> Byte
        Set: BackStyle(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _ChildLabelClass) -> int
        Set: BackThemeColorIndex(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _ChildLabelClass) -> Single
        Set: BackTint(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _ChildLabelClass) -> int
        Set: BorderColor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _ChildLabelClass) -> Byte
        Set: BorderLineStyle(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _ChildLabelClass) -> Single
        Set: BorderShade(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _ChildLabelClass) -> Byte
        Set: BorderStyle(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _ChildLabelClass) -> int
        Set: BorderThemeColorIndex(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _ChildLabelClass) -> Single
        Set: BorderTint(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _ChildLabelClass) -> Byte
        Set: BorderWidth(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BottomMargin(self) -> Int16:
        """
        Get: BottomMargin(self: _ChildLabelClass) -> Int16
        Set: BottomMargin(self: _ChildLabelClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ChildLabelClass) -> Int16
        Set: BottomPadding(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _ChildLabelClass) -> str
        Set: Caption(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _ChildLabelClass) -> str
        Set: ControlName(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _ChildLabelClass) -> str
        Set: ControlTipText(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _ChildLabelClass) -> Byte
        Set: ControlType(self: _ChildLabelClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _ChildLabelClass) -> Byte
        Set: DisplayWhen(self: _ChildLabelClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _ChildLabelClass) -> str
        Set: EventProcPrefix(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _ChildLabelClass) -> Int16
        Set: FontBold(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _ChildLabelClass) -> bool
        Set: FontItalic(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _ChildLabelClass) -> str
        Set: FontName(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _ChildLabelClass) -> Int16
        Set: FontSize(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _ChildLabelClass) -> bool
        Set: FontUnderline(self: _ChildLabelClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _ChildLabelClass) -> Int16
        Set: FontWeight(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _ChildLabelClass) -> int
        Set: ForeColor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _ChildLabelClass) -> Single
        Set: ForeShade(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _ChildLabelClass) -> int
        Set: ForeThemeColorIndex(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _ChildLabelClass) -> Single
        Set: ForeTint(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ChildLabelClass) -> int
        Set: GridlineColor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _ChildLabelClass) -> Single
        Set: GridlineShade(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ChildLabelClass) -> Byte
        Set: GridlineStyleBottom(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ChildLabelClass) -> Byte
        Set: GridlineStyleLeft(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ChildLabelClass) -> Byte
        Set: GridlineStyleRight(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ChildLabelClass) -> Byte
        Set: GridlineStyleTop(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _ChildLabelClass) -> int
        Set: GridlineThemeColorIndex(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _ChildLabelClass) -> Single
        Set: GridlineTint(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ChildLabelClass) -> Byte
        Set: GridlineWidthBottom(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ChildLabelClass) -> Byte
        Set: GridlineWidthLeft(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ChildLabelClass) -> Byte
        Set: GridlineWidthRight(self: _ChildLabelClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ChildLabelClass) -> Byte
        Set: GridlineWidthTop(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _ChildLabelClass) -> Int16
        Set: Height(self: _ChildLabelClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _ChildLabelClass) -> int
        Set: HelpContextId(self: _ChildLabelClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ChildLabelClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _ChildLabelClass) -> Hyperlink """
        ...

    @property
    def HyperlinkAddress(self) -> str:
        """
        Get: HyperlinkAddress(self: _ChildLabelClass) -> str
        Set: HyperlinkAddress(self: _ChildLabelClass) = value
        """
        ...

    @property
    def HyperlinkSubAddress(self) -> str:
        """
        Get: HyperlinkSubAddress(self: _ChildLabelClass) -> str
        Set: HyperlinkSubAddress(self: _ChildLabelClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _ChildLabelClass) -> bool
        Set: InSelection(self: _ChildLabelClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _ChildLabelClass) -> bool
        Set: IsVisible(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ChildLabelClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ChildLabelClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _ChildLabelClass) -> Int16
        Set: Left(self: _ChildLabelClass) = value
        """
        ...

    @property
    def LeftMargin(self) -> Int16:
        """
        Get: LeftMargin(self: _ChildLabelClass) -> Int16
        Set: LeftMargin(self: _ChildLabelClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ChildLabelClass) -> Int16
        Set: LeftPadding(self: _ChildLabelClass) = value
        """
        ...

    @property
    def LineSpacing(self) -> Int16:
        """
        Get: LineSpacing(self: _ChildLabelClass) -> Int16
        Set: LineSpacing(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ChildLabelClass) -> str
        Set: Name(self: _ChildLabelClass) = value
        """
        ...

    @property
    def NumeralShapes(self) -> Byte:
        """
        Get: NumeralShapes(self: _ChildLabelClass) -> Byte
        Set: NumeralShapes(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _ChildLabelClass) -> Byte
        Set: OldBorderStyle(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _ChildLabelClass) -> str
        Set: OnClick(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _ChildLabelClass) -> str
        Set: OnClickMacro(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _ChildLabelClass) -> str
        Set: OnDblClick(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _ChildLabelClass) -> str
        Set: OnDblClickMacro(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _ChildLabelClass) -> str
        Set: OnMouseDown(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _ChildLabelClass) -> str
        Set: OnMouseDownMacro(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _ChildLabelClass) -> str
        Set: OnMouseMove(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _ChildLabelClass) -> str
        Set: OnMouseMoveMacro(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _ChildLabelClass) -> str
        Set: OnMouseUp(self: _ChildLabelClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _ChildLabelClass) -> str
        Set: OnMouseUpMacro(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ChildLabelClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ChildLabelClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _ChildLabelClass) -> Byte
        Set: ReadingOrder(self: _ChildLabelClass) = value
        """
        ...

    @property
    def RightMargin(self) -> Int16:
        """
        Get: RightMargin(self: _ChildLabelClass) -> Int16
        Set: RightMargin(self: _ChildLabelClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ChildLabelClass) -> Int16
        Set: RightPadding(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _ChildLabelClass) -> Int16
        Set: Section(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _ChildLabelClass) -> str
        Set: ShortcutMenuBar(self: _ChildLabelClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _ChildLabelClass) -> SmartTags """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _ChildLabelClass) -> Byte
        Set: SpecialEffect(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _ChildLabelClass) -> str
        Set: Tag(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Target(self) -> str:
        """
        Get: Target(self: _ChildLabelClass) -> str
        Set: Target(self: _ChildLabelClass) = value
        """
        ...

    @property
    def TextAlign(self) -> Byte:
        """
        Get: TextAlign(self: _ChildLabelClass) -> Byte
        Set: TextAlign(self: _ChildLabelClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _ChildLabelClass) -> Byte
        Set: TextFontCharSet(self: _ChildLabelClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _ChildLabelClass) -> int
        Set: ThemeFontIndex(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _ChildLabelClass) -> Int16
        Set: Top(self: _ChildLabelClass) = value
        """
        ...

    @property
    def TopMargin(self) -> Int16:
        """
        Get: TopMargin(self: _ChildLabelClass) -> Int16
        Set: TopMargin(self: _ChildLabelClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ChildLabelClass) -> Int16
        Set: TopPadding(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Vertical(self) -> bool:
        """
        Get: Vertical(self: _ChildLabelClass) -> bool
        Set: Vertical(self: _ChildLabelClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ChildLabelClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _ChildLabelClass) -> bool
        Set: Visible(self: _ChildLabelClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _ChildLabelClass) -> Int16
        Set: Width(self: _ChildLabelClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ChildLabelClass) -> str
        Set: _Name(self: _ChildLabelClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: _ChildLabelClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: _ChildLabelClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: _ChildLabelClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: _ChildLabelClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: _ChildLabelClass, flagsSelect: int, varChild: object) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ChildLabelClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ChildLabelClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ChildLabelClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ChildLabelClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class _ChildLabelEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _ChildLabelEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _ChildLabelEvents_SinkHelper(_ChildLabelEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class _ComboBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _ComboBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _ComboBoxEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: _ComboBoxEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: _ComboBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ComboBoxEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: _ComboBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _ComboBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _ComboBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _ComboBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _ComboBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _ComboBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _ComboBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ComboBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ComboBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def NotInList(self, NewData, Response) -> Tuple_[str, Int16]:
        """ NotInList(self: _ComboBoxEvents) -> (str, Int16) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: _ComboBoxEvents) -> Int16 """
        ...


class _ComboBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_AfterUpdateEventHandler) """
        ...


class _ComboBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ComboBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _ComboBoxEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_ChangeEventHandler) """
        ...


class _ComboBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_ClickEventHandler) """
        ...


class _ComboBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ComboBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class _ComboBoxEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ComboBoxEvents_DirtyEventHandler) -> Int16 """
        ...


class _ComboBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_EnterEventHandler) """
        ...


class _ComboBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _ComboBoxEvents_Event, : _ComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _ComboBoxEvents_Event, : _ComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ComboBoxEvents_Event, : _ComboBoxEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: _ComboBoxEvents_Event, : _ComboBoxEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _ComboBoxEvents_Event, : _ComboBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ComboBoxEvents_Event, : _ComboBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ComboBoxEvents_Event, : _ComboBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseUpEventHandler) """
        ...

    def add_NotInList(self): # -> 
        """ add_NotInList(self: _ComboBoxEvents_Event, : _ComboBoxEvents_NotInListEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: _ComboBoxEvents_Event, : _ComboBoxEvents_UndoEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _ComboBoxEvents_Event, : _ComboBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _ComboBoxEvents_Event, : _ComboBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ComboBoxEvents_Event, : _ComboBoxEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: _ComboBoxEvents_Event, : _ComboBoxEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _ComboBoxEvents_Event, : _ComboBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _ComboBoxEvents_Event, : _ComboBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ComboBoxEvents_Event, : _ComboBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _ComboBoxEvents_Event, : _ComboBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ComboBoxEvents_Event, : _ComboBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ComboBoxEvents_Event, : _ComboBoxEvents_MouseUpEventHandler) """
        ...

    def remove_NotInList(self): # -> 
        """ remove_NotInList(self: _ComboBoxEvents_Event, : _ComboBoxEvents_NotInListEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: _ComboBoxEvents_Event, : _ComboBoxEvents_UndoEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    NotInList = ...
    Undo = ...


class _ComboBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ComboBoxEvents_ExitEventHandler) -> Int16 """
        ...


class _ComboBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_GotFocusEventHandler) """
        ...


class _ComboBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ComboBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _ComboBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _ComboBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class _ComboBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ComboBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _ComboBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ComboBoxEvents_LostFocusEventHandler) """
        ...


class _ComboBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ComboBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ComboBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ComboBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ComboBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ComboBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ComboBoxEvents_NotInListEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_NotInListEventHandler(: object, : UIntPtr) """
    def Invoke(self, NewData, Response) -> Tuple_[str, Int16]:
        """ Invoke(self: _ComboBoxEvents_NotInListEventHandler) -> (str, Int16) """
        ...


class _ComboBoxEvents_SinkHelper(_ComboBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_NotInListDelegate = ...
    m_UndoDelegate = ...


class _ComboBoxEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ComboBoxEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ComboBoxEvents_UndoEventHandler) -> Int16 """
        ...


class _CommandButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _CommandButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _CommandButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _CommandButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _CommandButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _CommandButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _CommandButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _CommandButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _CommandButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _CommandButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _CommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _CommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _CommandButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class _CommandButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CommandButtonEvents_ClickEventHandler) """
        ...


class _CommandButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CommandButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class _CommandButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CommandButtonEvents_EnterEventHandler) """
        ...


class _CommandButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _CommandButtonEvents_Event, : _CommandButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _CommandButtonEvents_Event, : _CommandButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _CommandButtonEvents_Event, : _CommandButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _CommandButtonEvents_Event, : _CommandButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _CommandButtonEvents_Event, : _CommandButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _CommandButtonEvents_Event, : _CommandButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _CommandButtonEvents_Event, : _CommandButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _CommandButtonEvents_Event, : _CommandButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _CommandButtonEvents_Event, : _CommandButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _CommandButtonEvents_Event, : _CommandButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _CommandButtonEvents_Event, : _CommandButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _CommandButtonEvents_Event, : _CommandButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _CommandButtonEvents_Event, : _CommandButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _CommandButtonEvents_Event, : _CommandButtonEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _CommandButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CommandButtonEvents_ExitEventHandler) -> Int16 """
        ...


class _CommandButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CommandButtonEvents_GotFocusEventHandler) """
        ...


class _CommandButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CommandButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _CommandButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _CommandButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class _CommandButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _CommandButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _CommandButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CommandButtonEvents_LostFocusEventHandler) """
        ...


class _CommandButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CommandButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CommandButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CommandButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CommandButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CommandButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _CommandButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _CommandButtonEvents_SinkHelper(_CommandButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _DispControlInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _ControlInReportEvents(_DispControlInReportEvents_Event, _Control): # skipped bases: <type 'object'>
    """ no doc """
    pass

class _ControlInReportEventsClass(__ControlInReportEvents_Event, _ControlInReportEvents, __ComObject): # skipped bases: <type '_DispControlInReportEvents_Event'>, <type '_Control'>, <type 'object'>
    """ _ControlInReportEventsClass() """
    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ControlInReportEventsClass) -> Application """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ControlInReportEventsClass) -> Int16
        Set: BottomPadding(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _ControlInReportEventsClass) -> Children """
        ...

    @property
    def Form(self) -> Form:
        """ Get: Form(self: _ControlInReportEventsClass) -> Form """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ControlInReportEventsClass) -> int
        Set: GridlineColor(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineStyleBottom(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineStyleLeft(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineStyleRight(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineStyleTop(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineWidthBottom(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineWidthLeft(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineWidthRight(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ControlInReportEventsClass) -> Byte
        Set: GridlineWidthTop(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ControlInReportEventsClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def Hyperlink(self) -> Hyperlink:
        """ Get: Hyperlink(self: _ControlInReportEventsClass) -> Hyperlink """
        ...

    @property
    def ItemsSelected(self) -> _ItemsSelected:
        """ Get: ItemsSelected(self: _ControlInReportEventsClass) -> _ItemsSelected """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ControlInReportEventsClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ControlInReportEventsClass) -> int """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ControlInReportEventsClass) -> Int16
        Set: LeftPadding(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ControlInReportEventsClass) -> str
        Set: Name(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _ControlInReportEventsClass) -> object """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _ControlInReportEventsClass) -> object """
        ...

    @property
    def Pages(self) -> Pages:
        """ Get: Pages(self: _ControlInReportEventsClass) -> Pages """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ControlInReportEventsClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ControlInReportEventsClass) -> Properties """
        ...

    @property
    def Report(self) -> Report:
        """ Get: Report(self: _ControlInReportEventsClass) -> Report """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ControlInReportEventsClass) -> Int16
        Set: RightPadding(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def SmartTags(self) -> SmartTags:
        """ Get: SmartTags(self: _ControlInReportEventsClass) -> SmartTags """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ControlInReportEventsClass) -> Int16
        Set: TopPadding(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ControlInReportEventsClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ControlInReportEventsClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ControlInReportEventsClass) -> str
        Set: _Name(self: _ControlInReportEventsClass) = value
        """
        ...


    def Dropdown(self): # -> 
        """ Dropdown(self: _ControlInReportEventsClass) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _ControlInReportEventsClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ControlInReportEventsClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ControlInReportEventsClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _ControlInReportEventsClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _ControlInReportEventsClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ControlInReportEventsClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _ControlInReportEventsClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ControlInReportEventsClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...


class _CustomControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: _CustomControlEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _CustomControlEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _CustomControlEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _CustomControlEvents) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: _CustomControlEvents) -> Int16 """
        ...


class _CustomControlEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CustomControlEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CustomControlEvents_EnterEventHandler) """
        ...


class _CustomControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: _CustomControlEvents_Event, : _CustomControlEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _CustomControlEvents_Event, : _CustomControlEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _CustomControlEvents_Event, : _CustomControlEvents_GotFocusEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _CustomControlEvents_Event, : _CustomControlEvents_LostFocusEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: _CustomControlEvents_Event, : _CustomControlEvents_UpdatedEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _CustomControlEvents_Event, : _CustomControlEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _CustomControlEvents_Event, : _CustomControlEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _CustomControlEvents_Event, : _CustomControlEvents_GotFocusEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _CustomControlEvents_Event, : _CustomControlEvents_LostFocusEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: _CustomControlEvents_Event, : _CustomControlEvents_UpdatedEventHandler) """
        ...

    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    Updated = ...


class _CustomControlEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CustomControlEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _CustomControlEvents_ExitEventHandler) -> Int16 """
        ...


class _CustomControlEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CustomControlEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CustomControlEvents_GotFocusEventHandler) """
        ...


class _CustomControlEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CustomControlEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _CustomControlEvents_LostFocusEventHandler) """
        ...


class _CustomControlEvents_SinkHelper(_CustomControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_LostFocusDelegate = ...
    m_UpdatedDelegate = ...


class _CustomControlEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _CustomControlEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: _CustomControlEvents_UpdatedEventHandler) -> Int16 """
        ...


class _CustomControlInReport(DispCustomControlInReportEvents_Event, _CustomControl): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _CustomControlInReportClass(_CustomControlInReport, __ComObject, _CustomControlInReportEvents_Event): # skipped bases: <type '_CustomControl'>, <type 'IAccessible'>, <type 'DispCustomControlInReportEvents_Event'>, <type 'object'>
    """ _CustomControlInReportClass() """
    @property
    def About(self) -> str:
        """
        Get: About(self: _CustomControlInReportClass) -> str
        Set: About(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: _CustomControlInReportClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _CustomControlInReportClass) -> Application """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _CustomControlInReportClass) -> int
        Set: BorderColor(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _CustomControlInReportClass) -> Byte
        Set: BorderLineStyle(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _CustomControlInReportClass) -> Single
        Set: BorderShade(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _CustomControlInReportClass) -> Byte
        Set: BorderStyle(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _CustomControlInReportClass) -> int
        Set: BorderThemeColorIndex(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _CustomControlInReportClass) -> Single
        Set: BorderTint(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _CustomControlInReportClass) -> Byte
        Set: BorderWidth(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _CustomControlInReportClass) -> Int16
        Set: BottomPadding(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Cancel(self) -> bool:
        """
        Get: Cancel(self: _CustomControlInReportClass) -> bool
        Set: Cancel(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Class(self) -> str:
        """
        Get: Class(self: _CustomControlInReportClass) -> str
        Set: Class(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _CustomControlInReportClass) -> str
        Set: ControlName(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _CustomControlInReportClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _CustomControlInReportClass) -> str
        Set: ControlSource(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _CustomControlInReportClass) -> str
        Set: ControlTipText(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _CustomControlInReportClass) -> Byte
        Set: ControlType(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Custom(self) -> str:
        """
        Get: Custom(self: _CustomControlInReportClass) -> str
        Set: Custom(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Default(self) -> bool:
        """
        Get: Default(self: _CustomControlInReportClass) -> bool
        Set: Default(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _CustomControlInReportClass) -> Byte
        Set: DisplayWhen(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _CustomControlInReportClass) -> bool
        Set: Enabled(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _CustomControlInReportClass) -> str
        Set: EventProcPrefix(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _CustomControlInReportClass) -> int
        Set: GridlineColor(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _CustomControlInReportClass) -> Byte
        Set: GridlineStyleBottom(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _CustomControlInReportClass) -> Byte
        Set: GridlineStyleLeft(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _CustomControlInReportClass) -> Byte
        Set: GridlineStyleRight(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _CustomControlInReportClass) -> Byte
        Set: GridlineStyleTop(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _CustomControlInReportClass) -> Byte
        Set: GridlineWidthBottom(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _CustomControlInReportClass) -> Byte
        Set: GridlineWidthLeft(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _CustomControlInReportClass) -> Byte
        Set: GridlineWidthRight(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _CustomControlInReportClass) -> Byte
        Set: GridlineWidthTop(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _CustomControlInReportClass) -> Int16
        Set: Height(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _CustomControlInReportClass) -> int
        Set: HelpContextId(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _CustomControlInReportClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _CustomControlInReportClass) -> bool
        Set: InSelection(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _CustomControlInReportClass) -> bool
        Set: IsVisible(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _CustomControlInReportClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _CustomControlInReportClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _CustomControlInReportClass) -> Int16
        Set: Left(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _CustomControlInReportClass) -> Int16
        Set: LeftPadding(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _CustomControlInReportClass) -> bool
        Set: Locked(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def LpOleObject(self) -> int:
        """
        Get: LpOleObject(self: _CustomControlInReportClass) -> int
        Set: LpOleObject(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _CustomControlInReportClass) -> str
        Set: Name(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Object(self) -> object:
        """ Get: Object(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _CustomControlInReportClass) -> object
        Set: ObjectPalette(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def ObjectVerbsCount(self) -> int:
        """
        Get: ObjectVerbsCount(self: _CustomControlInReportClass) -> int
        Set: ObjectVerbsCount(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _CustomControlInReportClass) -> Byte
        Set: OldBorderStyle(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def OLEClass(self) -> str:
        """
        Get: OLEClass(self: _CustomControlInReportClass) -> str
        Set: OLEClass(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OleData(self) -> object:
        """
        Get: OleData(self: _CustomControlInReportClass) -> object
        Set: OleData(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _CustomControlInReportClass) -> str
        Set: OnEnter(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _CustomControlInReportClass) -> str
        Set: OnEnterMacro(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _CustomControlInReportClass) -> str
        Set: OnExit(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _CustomControlInReportClass) -> str
        Set: OnExitMacro(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _CustomControlInReportClass) -> str
        Set: OnGotFocus(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _CustomControlInReportClass) -> str
        Set: OnGotFocusMacro(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _CustomControlInReportClass) -> str
        Set: OnLostFocus(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _CustomControlInReportClass) -> str
        Set: OnLostFocusMacro(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnUpdated(self) -> str:
        """
        Get: OnUpdated(self: _CustomControlInReportClass) -> str
        Set: OnUpdated(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def OnUpdatedMacro(self) -> str:
        """
        Get: OnUpdatedMacro(self: _CustomControlInReportClass) -> str
        Set: OnUpdatedMacro(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _CustomControlInReportClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _CustomControlInReportClass) -> Properties """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _CustomControlInReportClass) -> Int16
        Set: RightPadding(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _CustomControlInReportClass) -> Int16
        Set: Section(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _CustomControlInReportClass) -> Byte
        Set: SpecialEffect(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _CustomControlInReportClass) -> Int16
        Set: TabIndex(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _CustomControlInReportClass) -> bool
        Set: TabStop(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _CustomControlInReportClass) -> str
        Set: Tag(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _CustomControlInReportClass) -> Int16
        Set: Top(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _CustomControlInReportClass) -> Int16
        Set: TopPadding(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _CustomControlInReportClass) -> object
        Set: Value(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def VarOleObject(self) -> object:
        """
        Get: VarOleObject(self: _CustomControlInReportClass) -> object
        Set: VarOleObject(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Verb(self) -> int:
        """
        Get: Verb(self: _CustomControlInReportClass) -> int
        Set: Verb(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _CustomControlInReportClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _CustomControlInReportClass) -> bool
        Set: Visible(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _CustomControlInReportClass) -> Int16
        Set: Width(self: _CustomControlInReportClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _CustomControlInReportClass) -> str
        Set: _Name(self: _CustomControlInReportClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: _CustomControlInReportClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: _CustomControlInReportClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: _CustomControlInReportClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: _CustomControlInReportClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: _CustomControlInReportClass, flagsSelect: int, varChild: object) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _CustomControlInReportClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _CustomControlInReportClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _CustomControlInReportClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _CustomControlInReportClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _CustomControlInReportClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _CustomControlInReportClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _CustomControlInReportClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...


class _CustomControlInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _CustomControlInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _CustomControlInReportEvents_SinkHelper(_CustomControlInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class _DesignerReceiver: # skipped bases: <type 'object'>
    """ no doc """
    def DeleteAccessObject(self, accessObjectType:int, accessObjectName:str, pdispDependentObjectTypeNamePairArray:object) -> bool:
        """ DeleteAccessObject(self: _DesignerReceiver, accessObjectType: int, accessObjectName: str, pdispDependentObjectTypeNamePairArray: object) -> bool """
        ...

    def DeleteEmbeddedObject(self, handlerType:int, bstrCtrl:str, bstrProperty:str): # -> 
        """ DeleteEmbeddedObject(self: _DesignerReceiver, handlerType: int, bstrCtrl: str, bstrProperty: str) """
        ...

    def DuplicateAccessObject(self, accessObjectType:int, accessObjectName:str): # -> 
        """ DuplicateAccessObject(self: _DesignerReceiver, accessObjectType: int, accessObjectName: str) """
        ...

    def GetEmbeddedObject(self, handlerType:int, bstrCtrl:str, bstrProperty:str) -> str:
        """ GetEmbeddedObject(self: _DesignerReceiver, handlerType: int, bstrCtrl: str, bstrProperty: str) -> str """
        ...

    def GetEmbeddedRecordSourceSQL(self) -> str:
        """ GetEmbeddedRecordSourceSQL(self: _DesignerReceiver) -> str """
        ...

    def GetFormBodyAndCss(self, bstrFormName:str) -> object:
        """ GetFormBodyAndCss(self: _DesignerReceiver, bstrFormName: str) -> object """
        ...

    def IsExpressionValid(self, bstrExpression:str) -> object:
        """ IsExpressionValid(self: _DesignerReceiver, bstrExpression: str) -> object """
        ...

    def IsValidAccessObjectName(self, accessObjectType:int, varName:object) -> bool:
        """ IsValidAccessObjectName(self: _DesignerReceiver, accessObjectType: int, varName: object) -> bool """
        ...

    def LaunchBuilder(self, builder:Int16, bstrBuilderValue:str) -> object:
        """ LaunchBuilder(self: _DesignerReceiver, builder: Int16, bstrBuilderValue: str) -> object """
        ...

    def NotifyControlIDChanged(self, bstrOldCtrlID:str, bstrNewCtrlID:str): # -> 
        """ NotifyControlIDChanged(self: _DesignerReceiver, bstrOldCtrlID: str, bstrNewCtrlID: str) """
        ...

    def NotifyToUpdateView(self, iId:int): # -> 
        """ NotifyToUpdateView(self: _DesignerReceiver, iId: int) """
        ...

    def OpenAccessObject(self, accessObjectType:int, accessObjectName:str, fDesignMode:bool): # -> 
        """ OpenAccessObject(self: _DesignerReceiver, accessObjectType: int, accessObjectName: str, fDesignMode: bool) """
        ...

    def QuickCreateView(self, bstrViewName:str, viewtype:Int16, bstrRecordSource:str, fStandalone:bool): # -> 
        """ QuickCreateView(self: _DesignerReceiver, bstrViewName: str, viewtype: Int16, bstrRecordSource: str, fStandalone: bool) """
        ...

    def RecordSourceUpdated(self, bstrRecordSource:str): # -> 
        """ RecordSourceUpdated(self: _DesignerReceiver, bstrRecordSource: str) """
        ...

    def RefreshRibbon(self): # -> 
        """ RefreshRibbon(self: _DesignerReceiver) """
        ...

    def RetrieveControlSourcesInfo(self, bstrRecordSource:str) -> object:
        """ RetrieveControlSourcesInfo(self: _DesignerReceiver, bstrRecordSource: str) -> object """
        ...

    def RetrievePropertyValues(self, propertytype:Int16, inputData:object) -> object:
        """ RetrievePropertyValues(self: _DesignerReceiver, propertytype: Int16, inputData: object) -> object """
        ...

    def RetrieveRecordSourceInfo(self, bstrRecordSource:str) -> object:
        """ RetrieveRecordSourceInfo(self: _DesignerReceiver, bstrRecordSource: str) -> object """
        ...

    def RetrieveViewInfo(self, bstrViewName:str) -> object:
        """ RetrieveViewInfo(self: _DesignerReceiver, bstrViewName: str) -> object """
        ...

    def SaveEmbeddedObject(self, handlerType:int, bstrCtrl:str, bstrProperty:str, bstrExpression:str): # -> 
        """ SaveEmbeddedObject(self: _DesignerReceiver, handlerType: int, bstrCtrl: str, bstrProperty: str, bstrExpression: str) """
        ...

    def SetEmbeddedRecordSourceSQL(self, bstrRecordSource:str) -> str:
        """ SetEmbeddedRecordSourceSQL(self: _DesignerReceiver, bstrRecordSource: str) -> str """
        ...

    def SetReady(self): # -> 
        """ SetReady(self: _DesignerReceiver) """
        ...


class _DispControlInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _DispControlInReportEvents_SinkHelper(_DispControlInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class _DummyEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Initialize(self): # -> 
        """ Initialize(self: _DummyEvents) """
        ...

    def Terminate(self): # -> 
        """ Terminate(self: _DummyEvents) """
        ...


class _DummyEvents_InitializeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _DummyEvents_InitializeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _DummyEvents_InitializeEventHandler) """
        ...


class _DummyEvents_SinkHelper(_DummyEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_InitializeDelegate = ...
    m_TerminateDelegate = ...


class _DummyEvents_TerminateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _DummyEvents_TerminateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _DummyEvents_TerminateEventHandler) """
        ...


class _FormEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Activate(self): # -> 
        """ Activate(self: _FormEvents) """
        ...

    def AfterDelConfirm(self, Status) -> Int16:
        """ AfterDelConfirm(self: _FormEvents) -> Int16 """
        ...

    def AfterFinalRender(self, drawObject:object): # -> 
        """ AfterFinalRender(self: _FormEvents, drawObject: object) """
        ...

    def AfterInsert(self): # -> 
        """ AfterInsert(self: _FormEvents) """
        ...

    def AfterLayout(self, drawObject:object): # -> 
        """ AfterLayout(self: _FormEvents, drawObject: object) """
        ...

    def AfterRender(self, drawObject:object, chartObject:object): # -> 
        """ AfterRender(self: _FormEvents, drawObject: object, chartObject: object) """
        ...

    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _FormEvents) """
        ...

    def ApplyFilter(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ ApplyFilter(self: _FormEvents) -> (Int16, Int16) """
        ...

    def BeforeDelConfirm(self, Cancel, Response) -> Tuple_[Int16, Int16]:
        """ BeforeDelConfirm(self: _FormEvents) -> (Int16, Int16) """
        ...

    def BeforeInsert(self, Cancel) -> Int16:
        """ BeforeInsert(self: _FormEvents) -> Int16 """
        ...

    def BeforeQuery(self): # -> 
        """ BeforeQuery(self: _FormEvents) """
        ...

    def BeforeRender(self, drawObject:object, chartObject:object, Cancel:object): # -> 
        """ BeforeRender(self: _FormEvents, drawObject: object, chartObject: object, Cancel: object) """
        ...

    def BeforeScreenTip(self, ScreenTipText:object, SourceObject:object): # -> 
        """ BeforeScreenTip(self: _FormEvents, ScreenTipText: object, SourceObject: object) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _FormEvents) -> Int16 """
        ...

    def BeginBatchEdit(self, Cancel) -> Int16:
        """ BeginBatchEdit(self: _FormEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _FormEvents) """
        ...

    def Close(self): # -> 
        """ Close(self: _FormEvents) """
        ...

    def CommandBeforeExecute(self, Command:object, Cancel:object): # -> 
        """ CommandBeforeExecute(self: _FormEvents, Command: object, Cancel: object) """
        ...

    def CommandChecked(self, Command:object, Checked:object): # -> 
        """ CommandChecked(self: _FormEvents, Command: object, Checked: object) """
        ...

    def CommandEnabled(self, Command:object, Enabled:object): # -> 
        """ CommandEnabled(self: _FormEvents, Command: object, Enabled: object) """
        ...

    def CommandExecute(self, Command:object): # -> 
        """ CommandExecute(self: _FormEvents, Command: object) """
        ...

    def Current(self): # -> 
        """ Current(self: _FormEvents) """
        ...

    def DataChange(self, Reason:int): # -> 
        """ DataChange(self: _FormEvents, Reason: int) """
        ...

    def DataSetChange(self): # -> 
        """ DataSetChange(self: _FormEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _FormEvents) -> Int16 """
        ...

    def Deactivate(self): # -> 
        """ Deactivate(self: _FormEvents) """
        ...

    def Delete(self, Cancel) -> Int16:
        """ Delete(self: _FormEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: _FormEvents) -> Int16 """
        ...

    def Error(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Error(self: _FormEvents) -> (Int16, Int16) """
        ...

    def Filter(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Filter(self: _FormEvents) -> (Int16, Int16) """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _FormEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _FormEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _FormEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _FormEvents) -> (Int16, Int16) """
        ...

    def Load(self): # -> 
        """ Load(self: _FormEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _FormEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _FormEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _FormEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _FormEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseWheel(self, Page:bool, Count:int): # -> 
        """ MouseWheel(self: _FormEvents, Page: bool, Count: int) """
        ...

    def OnConnect(self): # -> 
        """ OnConnect(self: _FormEvents) """
        ...

    def OnDisconnect(self): # -> 
        """ OnDisconnect(self: _FormEvents) """
        ...

    def Open(self, Cancel) -> Int16:
        """ Open(self: _FormEvents) -> Int16 """
        ...

    def PivotTableChange(self, Reason:int): # -> 
        """ PivotTableChange(self: _FormEvents, Reason: int) """
        ...

    def Query(self): # -> 
        """ Query(self: _FormEvents) """
        ...

    def RecordExit(self, Cancel) -> Int16:
        """ RecordExit(self: _FormEvents) -> Int16 """
        ...

    def Resize(self): # -> 
        """ Resize(self: _FormEvents) """
        ...

    def SelectionChange(self): # -> 
        """ SelectionChange(self: _FormEvents) """
        ...

    def Timer(self): # -> 
        """ Timer(self: _FormEvents) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: _FormEvents) -> Int16 """
        ...

    def UndoBatchEdit(self, Cancel) -> Int16:
        """ UndoBatchEdit(self: _FormEvents) -> Int16 """
        ...

    def Unload(self, Cancel) -> Int16:
        """ Unload(self: _FormEvents) -> Int16 """
        ...

    def ViewChange(self, Reason:int): # -> 
        """ ViewChange(self: _FormEvents, Reason: int) """
        ...


class _FormEventsOld: # skipped bases: <type 'object'>
    """ no doc """
    def Activate(self): # -> 
        """ Activate(self: _FormEventsOld) """
        ...

    def AfterBeginTransaction(self, Connection:Connection) -> Connection:
        """ AfterBeginTransaction(self: _FormEventsOld, Connection: Connection) -> Connection """
        ...

    def AfterCommitTransaction(self, Connection:Connection) -> Connection:
        """ AfterCommitTransaction(self: _FormEventsOld, Connection: Connection) -> Connection """
        ...

    def AfterDelConfirm(self, Status) -> Int16:
        """ AfterDelConfirm(self: _FormEventsOld) -> Int16 """
        ...

    def AfterFinalRender(self, drawObject:object): # -> 
        """ AfterFinalRender(self: _FormEventsOld, drawObject: object) """
        ...

    def AfterInsert(self): # -> 
        """ AfterInsert(self: _FormEventsOld) """
        ...

    def AfterLayout(self, drawObject:object): # -> 
        """ AfterLayout(self: _FormEventsOld, drawObject: object) """
        ...

    def AfterRender(self, drawObject:object, chartObject:object): # -> 
        """ AfterRender(self: _FormEventsOld, drawObject: object, chartObject: object) """
        ...

    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _FormEventsOld) """
        ...

    def ApplyFilter(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ ApplyFilter(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def BeforeBeginTransaction(self, Cancel, Connection) -> Tuple_[Int16, Connection]:
        """ BeforeBeginTransaction(self: _FormEventsOld, Connection: Connection) -> (Int16, Connection) """
        ...

    def BeforeCommitTransaction(self, Cancel, Connection) -> Tuple_[Int16, Connection]:
        """ BeforeCommitTransaction(self: _FormEventsOld, Connection: Connection) -> (Int16, Connection) """
        ...

    def BeforeDelConfirm(self, Cancel, Response) -> Tuple_[Int16, Int16]:
        """ BeforeDelConfirm(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def BeforeInsert(self, Cancel) -> Int16:
        """ BeforeInsert(self: _FormEventsOld) -> Int16 """
        ...

    def BeforeQuery(self): # -> 
        """ BeforeQuery(self: _FormEventsOld) """
        ...

    def BeforeRender(self, drawObject:object, chartObject:object, Cancel:object): # -> 
        """ BeforeRender(self: _FormEventsOld, drawObject: object, chartObject: object, Cancel: object) """
        ...

    def BeforeScreenTip(self, ScreenTipText:object, SourceObject:object): # -> 
        """ BeforeScreenTip(self: _FormEventsOld, ScreenTipText: object, SourceObject: object) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _FormEventsOld) -> Int16 """
        ...

    def BeginBatchEdit(self, Cancel) -> Int16:
        """ BeginBatchEdit(self: _FormEventsOld) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _FormEventsOld) """
        ...

    def Close(self): # -> 
        """ Close(self: _FormEventsOld) """
        ...

    def CommandBeforeExecute(self, Command:object, Cancel:object): # -> 
        """ CommandBeforeExecute(self: _FormEventsOld, Command: object, Cancel: object) """
        ...

    def CommandChecked(self, Command:object, Checked:object): # -> 
        """ CommandChecked(self: _FormEventsOld, Command: object, Checked: object) """
        ...

    def CommandEnabled(self, Command:object, Enabled:object): # -> 
        """ CommandEnabled(self: _FormEventsOld, Command: object, Enabled: object) """
        ...

    def CommandExecute(self, Command:object): # -> 
        """ CommandExecute(self: _FormEventsOld, Command: object) """
        ...

    def Current(self): # -> 
        """ Current(self: _FormEventsOld) """
        ...

    def DataChange(self, Reason:int): # -> 
        """ DataChange(self: _FormEventsOld, Reason: int) """
        ...

    def DataSetChange(self): # -> 
        """ DataSetChange(self: _FormEventsOld) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _FormEventsOld) -> Int16 """
        ...

    def Deactivate(self): # -> 
        """ Deactivate(self: _FormEventsOld) """
        ...

    def Delete(self, Cancel) -> Int16:
        """ Delete(self: _FormEventsOld) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: _FormEventsOld) -> Int16 """
        ...

    def Error(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Error(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def Filter(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Filter(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _FormEventsOld) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _FormEventsOld) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _FormEventsOld) -> (Int16, Int16) """
        ...

    def Load(self): # -> 
        """ Load(self: _FormEventsOld) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _FormEventsOld) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _FormEventsOld) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _FormEventsOld) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _FormEventsOld) -> (Int16, Int16, Single, Single) """
        ...

    def MouseWheel(self, Page:bool, Count:int): # -> 
        """ MouseWheel(self: _FormEventsOld, Page: bool, Count: int) """
        ...

    def OnConnect(self): # -> 
        """ OnConnect(self: _FormEventsOld) """
        ...

    def OnDisconnect(self): # -> 
        """ OnDisconnect(self: _FormEventsOld) """
        ...

    def Open(self, Cancel) -> Int16:
        """ Open(self: _FormEventsOld) -> Int16 """
        ...

    def PivotTableChange(self, Reason:int): # -> 
        """ PivotTableChange(self: _FormEventsOld, Reason: int) """
        ...

    def Query(self): # -> 
        """ Query(self: _FormEventsOld) """
        ...

    def RecordExit(self, Cancel) -> Int16:
        """ RecordExit(self: _FormEventsOld) -> Int16 """
        ...

    def Resize(self): # -> 
        """ Resize(self: _FormEventsOld) """
        ...

    def RollbackTransaction(self, Connection:Connection) -> Connection:
        """ RollbackTransaction(self: _FormEventsOld, Connection: Connection) -> Connection """
        ...

    def SelectionChange(self): # -> 
        """ SelectionChange(self: _FormEventsOld) """
        ...

    def Timer(self): # -> 
        """ Timer(self: _FormEventsOld) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: _FormEventsOld) -> Int16 """
        ...

    def UndoBatchEdit(self, Cancel) -> Int16:
        """ UndoBatchEdit(self: _FormEventsOld) -> Int16 """
        ...

    def Unload(self, Cancel) -> Int16:
        """ Unload(self: _FormEventsOld) -> Int16 """
        ...

    def ViewChange(self, Reason:int): # -> 
        """ ViewChange(self: _FormEventsOld, Reason: int) """
        ...


class _FormEventsOld_ActivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ActivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_ActivateEventHandler) """
        ...


class _FormEventsOld_AfterBeginTransactionEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterBeginTransactionEventHandler(: object, : UIntPtr) """
    def Invoke(self, Connection:Connection) -> Connection:
        """ Invoke(self: _FormEventsOld_AfterBeginTransactionEventHandler, Connection: Connection) -> Connection """
        ...


class _FormEventsOld_AfterCommitTransactionEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterCommitTransactionEventHandler(: object, : UIntPtr) """
    def Invoke(self, Connection:Connection) -> Connection:
        """ Invoke(self: _FormEventsOld_AfterCommitTransactionEventHandler, Connection: Connection) -> Connection """
        ...


class _FormEventsOld_AfterDelConfirmEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterDelConfirmEventHandler(: object, : UIntPtr) """
    def Invoke(self, Status) -> Int16:
        """ Invoke(self: _FormEventsOld_AfterDelConfirmEventHandler) -> Int16 """
        ...


class _FormEventsOld_AfterFinalRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterFinalRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object): # -> 
        """ Invoke(self: _FormEventsOld_AfterFinalRenderEventHandler, drawObject: object) """
        ...


class _FormEventsOld_AfterInsertEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterInsertEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_AfterInsertEventHandler) """
        ...


class _FormEventsOld_AfterLayoutEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterLayoutEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object): # -> 
        """ Invoke(self: _FormEventsOld_AfterLayoutEventHandler, drawObject: object) """
        ...


class _FormEventsOld_AfterRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object, chartObject:object): # -> 
        """ Invoke(self: _FormEventsOld_AfterRenderEventHandler, drawObject: object, chartObject: object) """
        ...


class _FormEventsOld_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_AfterUpdateEventHandler) """
        ...


class _FormEventsOld_ApplyFilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ApplyFilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_ApplyFilterEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_BeforeBeginTransactionEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeBeginTransactionEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, Connection) -> Tuple_[Int16, Connection]:
        """ Invoke(self: _FormEventsOld_BeforeBeginTransactionEventHandler, Connection: Connection) -> (Int16, Connection) """
        ...


class _FormEventsOld_BeforeCommitTransactionEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeCommitTransactionEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, Connection) -> Tuple_[Int16, Connection]:
        """ Invoke(self: _FormEventsOld_BeforeCommitTransactionEventHandler, Connection: Connection) -> (Int16, Connection) """
        ...


class _FormEventsOld_BeforeDelConfirmEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeDelConfirmEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_BeforeDelConfirmEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_BeforeInsertEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeInsertEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_BeforeInsertEventHandler) -> Int16 """
        ...


class _FormEventsOld_BeforeQueryEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeQueryEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_BeforeQueryEventHandler) """
        ...


class _FormEventsOld_BeforeRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object, chartObject:object, Cancel:object): # -> 
        """ Invoke(self: _FormEventsOld_BeforeRenderEventHandler, drawObject: object, chartObject: object, Cancel: object) """
        ...


class _FormEventsOld_BeforeScreenTipEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeScreenTipEventHandler(: object, : UIntPtr) """
    def Invoke(self, ScreenTipText:object, SourceObject:object): # -> 
        """ Invoke(self: _FormEventsOld_BeforeScreenTipEventHandler, ScreenTipText: object, SourceObject: object) """
        ...


class _FormEventsOld_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_BeforeUpdateEventHandler) -> Int16 """
        ...


class _FormEventsOld_BeginBatchEditEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_BeginBatchEditEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_BeginBatchEditEventHandler) -> Int16 """
        ...


class _FormEventsOld_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_ClickEventHandler) """
        ...


class _FormEventsOld_CloseEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CloseEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_CloseEventHandler) """
        ...


class _FormEventsOld_CommandBeforeExecuteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CommandBeforeExecuteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Cancel:object): # -> 
        """ Invoke(self: _FormEventsOld_CommandBeforeExecuteEventHandler, Command: object, Cancel: object) """
        ...


class _FormEventsOld_CommandCheckedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CommandCheckedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Checked:object): # -> 
        """ Invoke(self: _FormEventsOld_CommandCheckedEventHandler, Command: object, Checked: object) """
        ...


class _FormEventsOld_CommandEnabledEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CommandEnabledEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Enabled:object): # -> 
        """ Invoke(self: _FormEventsOld_CommandEnabledEventHandler, Command: object, Enabled: object) """
        ...


class _FormEventsOld_CommandExecuteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CommandExecuteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object): # -> 
        """ Invoke(self: _FormEventsOld_CommandExecuteEventHandler, Command: object) """
        ...


class _FormEventsOld_CurrentEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_CurrentEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_CurrentEventHandler) """
        ...


class _FormEventsOld_DataChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DataChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEventsOld_DataChangeEventHandler, Reason: int) """
        ...


class _FormEventsOld_DataSetChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DataSetChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_DataSetChangeEventHandler) """
        ...


class _FormEventsOld_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_DblClickEventHandler) -> Int16 """
        ...


class _FormEventsOld_DeactivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DeactivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_DeactivateEventHandler) """
        ...


class _FormEventsOld_DeleteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DeleteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_DeleteEventHandler) -> Int16 """
        ...


class _FormEventsOld_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_DirtyEventHandler) -> Int16 """
        ...


class _FormEventsOld_ErrorEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ErrorEventHandler(: object, : UIntPtr) """
    def Invoke(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_ErrorEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_FilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_FilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_FilterEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_GotFocusEventHandler) """
        ...


class _FormEventsOld_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _FormEventsOld_KeyPressEventHandler) -> Int16 """
        ...


class _FormEventsOld_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEventsOld_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _FormEventsOld_LoadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_LoadEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_LoadEventHandler) """
        ...


class _FormEventsOld_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_LostFocusEventHandler) """
        ...


class _FormEventsOld_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEventsOld_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEventsOld_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEventsOld_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEventsOld_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEventsOld_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEventsOld_MouseWheelEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_MouseWheelEventHandler(: object, : UIntPtr) """
    def Invoke(self, Page:bool, Count:int): # -> 
        """ Invoke(self: _FormEventsOld_MouseWheelEventHandler, Page: bool, Count: int) """
        ...


class _FormEventsOld_OnConnectEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_OnConnectEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_OnConnectEventHandler) """
        ...


class _FormEventsOld_OnDisconnectEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_OnDisconnectEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_OnDisconnectEventHandler) """
        ...


class _FormEventsOld_OpenEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_OpenEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_OpenEventHandler) -> Int16 """
        ...


class _FormEventsOld_PivotTableChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_PivotTableChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEventsOld_PivotTableChangeEventHandler, Reason: int) """
        ...


class _FormEventsOld_QueryEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_QueryEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_QueryEventHandler) """
        ...


class _FormEventsOld_RecordExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_RecordExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_RecordExitEventHandler) -> Int16 """
        ...


class _FormEventsOld_ResizeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ResizeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_ResizeEventHandler) """
        ...


class _FormEventsOld_RollbackTransactionEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_RollbackTransactionEventHandler(: object, : UIntPtr) """
    def Invoke(self, Connection:Connection) -> Connection:
        """ Invoke(self: _FormEventsOld_RollbackTransactionEventHandler, Connection: Connection) -> Connection """
        ...


class _FormEventsOld_SelectionChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_SelectionChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_SelectionChangeEventHandler) """
        ...


class _FormEventsOld_SinkHelper(_FormEventsOld): # skipped bases: <type 'object'>
    """ no doc """
    m_ActivateDelegate = ...
    m_AfterBeginTransactionDelegate = ...
    m_AfterCommitTransactionDelegate = ...
    m_AfterDelConfirmDelegate = ...
    m_AfterFinalRenderDelegate = ...
    m_AfterInsertDelegate = ...
    m_AfterLayoutDelegate = ...
    m_AfterRenderDelegate = ...
    m_AfterUpdateDelegate = ...
    m_ApplyFilterDelegate = ...
    m_BeforeBeginTransactionDelegate = ...
    m_BeforeCommitTransactionDelegate = ...
    m_BeforeDelConfirmDelegate = ...
    m_BeforeInsertDelegate = ...
    m_BeforeQueryDelegate = ...
    m_BeforeRenderDelegate = ...
    m_BeforeScreenTipDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_BeginBatchEditDelegate = ...
    m_ClickDelegate = ...
    m_CloseDelegate = ...
    m_CommandBeforeExecuteDelegate = ...
    m_CommandCheckedDelegate = ...
    m_CommandEnabledDelegate = ...
    m_CommandExecuteDelegate = ...
    m_CurrentDelegate = ...
    m_DataChangeDelegate = ...
    m_DataSetChangeDelegate = ...
    m_DblClickDelegate = ...
    m_DeactivateDelegate = ...
    m_DeleteDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_ErrorDelegate = ...
    m_FilterDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LoadDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_MouseWheelDelegate = ...
    m_OnConnectDelegate = ...
    m_OnDisconnectDelegate = ...
    m_OpenDelegate = ...
    m_PivotTableChangeDelegate = ...
    m_QueryDelegate = ...
    m_RecordExitDelegate = ...
    m_ResizeDelegate = ...
    m_RollbackTransactionDelegate = ...
    m_SelectionChangeDelegate = ...
    m_TimerDelegate = ...
    m_UndoBatchEditDelegate = ...
    m_UndoDelegate = ...
    m_UnloadDelegate = ...
    m_ViewChangeDelegate = ...


class _FormEventsOld_TimerEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_TimerEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEventsOld_TimerEventHandler) """
        ...


class _FormEventsOld_UndoBatchEditEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_UndoBatchEditEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_UndoBatchEditEventHandler) -> Int16 """
        ...


class _FormEventsOld_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_UndoEventHandler) -> Int16 """
        ...


class _FormEventsOld_UnloadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_UnloadEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEventsOld_UnloadEventHandler) -> Int16 """
        ...


class _FormEventsOld_ViewChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEventsOld_ViewChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEventsOld_ViewChangeEventHandler, Reason: int) """
        ...


class _FormEvents_ActivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ActivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_ActivateEventHandler) """
        ...


class _FormEvents_AfterDelConfirmEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterDelConfirmEventHandler(: object, : UIntPtr) """
    def Invoke(self, Status) -> Int16:
        """ Invoke(self: _FormEvents_AfterDelConfirmEventHandler) -> Int16 """
        ...


class _FormEvents_AfterFinalRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterFinalRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object): # -> 
        """ Invoke(self: _FormEvents_AfterFinalRenderEventHandler, drawObject: object) """
        ...


class _FormEvents_AfterInsertEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterInsertEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_AfterInsertEventHandler) """
        ...


class _FormEvents_AfterLayoutEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterLayoutEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object): # -> 
        """ Invoke(self: _FormEvents_AfterLayoutEventHandler, drawObject: object) """
        ...


class _FormEvents_AfterRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object, chartObject:object): # -> 
        """ Invoke(self: _FormEvents_AfterRenderEventHandler, drawObject: object, chartObject: object) """
        ...


class _FormEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_AfterUpdateEventHandler) """
        ...


class _FormEvents_ApplyFilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ApplyFilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_ApplyFilterEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_BeforeDelConfirmEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeDelConfirmEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_BeforeDelConfirmEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_BeforeInsertEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeInsertEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_BeforeInsertEventHandler) -> Int16 """
        ...


class _FormEvents_BeforeQueryEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeQueryEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_BeforeQueryEventHandler) """
        ...


class _FormEvents_BeforeRenderEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeRenderEventHandler(: object, : UIntPtr) """
    def Invoke(self, drawObject:object, chartObject:object, Cancel:object): # -> 
        """ Invoke(self: _FormEvents_BeforeRenderEventHandler, drawObject: object, chartObject: object, Cancel: object) """
        ...


class _FormEvents_BeforeScreenTipEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeScreenTipEventHandler(: object, : UIntPtr) """
    def Invoke(self, ScreenTipText:object, SourceObject:object): # -> 
        """ Invoke(self: _FormEvents_BeforeScreenTipEventHandler, ScreenTipText: object, SourceObject: object) """
        ...


class _FormEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _FormEvents_BeginBatchEditEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_BeginBatchEditEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_BeginBatchEditEventHandler) -> Int16 """
        ...


class _FormEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_ClickEventHandler) """
        ...


class _FormEvents_CloseEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CloseEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_CloseEventHandler) """
        ...


class _FormEvents_CommandBeforeExecuteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CommandBeforeExecuteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Cancel:object): # -> 
        """ Invoke(self: _FormEvents_CommandBeforeExecuteEventHandler, Command: object, Cancel: object) """
        ...


class _FormEvents_CommandCheckedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CommandCheckedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Checked:object): # -> 
        """ Invoke(self: _FormEvents_CommandCheckedEventHandler, Command: object, Checked: object) """
        ...


class _FormEvents_CommandEnabledEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CommandEnabledEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object, Enabled:object): # -> 
        """ Invoke(self: _FormEvents_CommandEnabledEventHandler, Command: object, Enabled: object) """
        ...


class _FormEvents_CommandExecuteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CommandExecuteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Command:object): # -> 
        """ Invoke(self: _FormEvents_CommandExecuteEventHandler, Command: object) """
        ...


class _FormEvents_CurrentEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_CurrentEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_CurrentEventHandler) """
        ...


class _FormEvents_DataChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DataChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEvents_DataChangeEventHandler, Reason: int) """
        ...


class _FormEvents_DataSetChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DataSetChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_DataSetChangeEventHandler) """
        ...


class _FormEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_DblClickEventHandler) -> Int16 """
        ...


class _FormEvents_DeactivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DeactivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_DeactivateEventHandler) """
        ...


class _FormEvents_DeleteEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DeleteEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_DeleteEventHandler) -> Int16 """
        ...


class _FormEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_DirtyEventHandler) -> Int16 """
        ...


class _FormEvents_ErrorEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ErrorEventHandler(: object, : UIntPtr) """
    def Invoke(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_ErrorEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_FilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_FilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_FilterEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_GotFocusEventHandler) """
        ...


class _FormEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _FormEvents_KeyPressEventHandler) -> Int16 """
        ...


class _FormEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _FormEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _FormEvents_LoadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_LoadEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_LoadEventHandler) """
        ...


class _FormEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_LostFocusEventHandler) """
        ...


class _FormEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _FormEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _FormEvents_MouseWheelEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_MouseWheelEventHandler(: object, : UIntPtr) """
    def Invoke(self, Page:bool, Count:int): # -> 
        """ Invoke(self: _FormEvents_MouseWheelEventHandler, Page: bool, Count: int) """
        ...


class _FormEvents_OnConnectEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_OnConnectEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_OnConnectEventHandler) """
        ...


class _FormEvents_OnDisconnectEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_OnDisconnectEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_OnDisconnectEventHandler) """
        ...


class _FormEvents_OpenEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_OpenEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_OpenEventHandler) -> Int16 """
        ...


class _FormEvents_PivotTableChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_PivotTableChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEvents_PivotTableChangeEventHandler, Reason: int) """
        ...


class _FormEvents_QueryEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_QueryEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_QueryEventHandler) """
        ...


class _FormEvents_RecordExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_RecordExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_RecordExitEventHandler) -> Int16 """
        ...


class _FormEvents_ResizeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ResizeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_ResizeEventHandler) """
        ...


class _FormEvents_SelectionChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_SelectionChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_SelectionChangeEventHandler) """
        ...


class _FormEvents_SinkHelper(_FormEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ActivateDelegate = ...
    m_AfterDelConfirmDelegate = ...
    m_AfterFinalRenderDelegate = ...
    m_AfterInsertDelegate = ...
    m_AfterLayoutDelegate = ...
    m_AfterRenderDelegate = ...
    m_AfterUpdateDelegate = ...
    m_ApplyFilterDelegate = ...
    m_BeforeDelConfirmDelegate = ...
    m_BeforeInsertDelegate = ...
    m_BeforeQueryDelegate = ...
    m_BeforeRenderDelegate = ...
    m_BeforeScreenTipDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_BeginBatchEditDelegate = ...
    m_ClickDelegate = ...
    m_CloseDelegate = ...
    m_CommandBeforeExecuteDelegate = ...
    m_CommandCheckedDelegate = ...
    m_CommandEnabledDelegate = ...
    m_CommandExecuteDelegate = ...
    m_CurrentDelegate = ...
    m_DataChangeDelegate = ...
    m_DataSetChangeDelegate = ...
    m_DblClickDelegate = ...
    m_DeactivateDelegate = ...
    m_DeleteDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_ErrorDelegate = ...
    m_FilterDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LoadDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_MouseWheelDelegate = ...
    m_OnConnectDelegate = ...
    m_OnDisconnectDelegate = ...
    m_OpenDelegate = ...
    m_PivotTableChangeDelegate = ...
    m_QueryDelegate = ...
    m_RecordExitDelegate = ...
    m_ResizeDelegate = ...
    m_SelectionChangeDelegate = ...
    m_TimerDelegate = ...
    m_UndoBatchEditDelegate = ...
    m_UndoDelegate = ...
    m_UnloadDelegate = ...
    m_ViewChangeDelegate = ...


class _FormEvents_TimerEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_TimerEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _FormEvents_TimerEventHandler) """
        ...


class _FormEvents_UndoBatchEditEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_UndoBatchEditEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_UndoBatchEditEventHandler) -> Int16 """
        ...


class _FormEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_UndoEventHandler) -> Int16 """
        ...


class _FormEvents_UnloadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_UnloadEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _FormEvents_UnloadEventHandler) -> Int16 """
        ...


class _FormEvents_ViewChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _FormEvents_ViewChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reason:int): # -> 
        """ Invoke(self: _FormEvents_ViewChangeEventHandler, Reason: int) """
        ...


class _ImageEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _ImageEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ImageEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ImageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ImageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ImageEvents) -> (Int16, Int16, Single, Single) """
        ...


class _ImageEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ImageEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ImageEvents_ClickEventHandler) """
        ...


class _ImageEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ImageEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ImageEvents_DblClickEventHandler) -> Int16 """
        ...


class _ImageEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _ImageEvents_Event, : _ImageEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ImageEvents_Event, : _ImageEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ImageEvents_Event, : _ImageEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ImageEvents_Event, : _ImageEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ImageEvents_Event, : _ImageEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ImageEvents_Event, : _ImageEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ImageEvents_Event, : _ImageEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ImageEvents_Event, : _ImageEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ImageEvents_Event, : _ImageEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ImageEvents_Event, : _ImageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _ImageEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ImageEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ImageEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ImageEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ImageEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ImageEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ImageEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ImageEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ImageEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ImageEvents_SinkHelper(_ImageEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _ItemsSelected(IEnumerable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Count(self) -> int:
        """ Get: Count(self: _ItemsSelected) -> int """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ItemsSelected, dispid: int) -> bool """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...


class _LabelEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _LabelEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _LabelEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _LabelEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _LabelEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _LabelEvents) -> (Int16, Int16, Single, Single) """
        ...


class _LabelEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _LabelEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _LabelEvents_ClickEventHandler) """
        ...


class _LabelEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _LabelEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _LabelEvents_DblClickEventHandler) -> Int16 """
        ...


class _LabelEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _LabelEvents_Event, : _LabelEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _LabelEvents_Event, : _LabelEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _LabelEvents_Event, : _LabelEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _LabelEvents_Event, : _LabelEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _LabelEvents_Event, : _LabelEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _LabelEvents_Event, : _LabelEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _LabelEvents_Event, : _LabelEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _LabelEvents_Event, : _LabelEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _LabelEvents_Event, : _LabelEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _LabelEvents_Event, : _LabelEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _LabelEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _LabelEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _LabelEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _LabelEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _LabelEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _LabelEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _LabelEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _LabelEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _LabelEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _LabelEvents_SinkHelper(_LabelEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _LineEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _LineEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _LineEvents_SinkHelper(_LineEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class _ListBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _ListBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _ListBoxEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _ListBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ListBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _ListBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _ListBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _ListBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _ListBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _ListBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _ListBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ListBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ListBoxEvents) -> (Int16, Int16, Single, Single) """
        ...


class _ListBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ListBoxEvents_AfterUpdateEventHandler) """
        ...


class _ListBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ListBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _ListBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ListBoxEvents_ClickEventHandler) """
        ...


class _ListBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ListBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class _ListBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ListBoxEvents_EnterEventHandler) """
        ...


class _ListBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _ListBoxEvents_Event, : _ListBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _ListBoxEvents_Event, : _ListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _ListBoxEvents_Event, : _ListBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ListBoxEvents_Event, : _ListBoxEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _ListBoxEvents_Event, : _ListBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _ListBoxEvents_Event, : _ListBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ListBoxEvents_Event, : _ListBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ListBoxEvents_Event, : _ListBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _ListBoxEvents_Event, : _ListBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _ListBoxEvents_Event, : _ListBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ListBoxEvents_Event, : _ListBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ListBoxEvents_Event, : _ListBoxEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _ListBoxEvents_Event, : _ListBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _ListBoxEvents_Event, : _ListBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ListBoxEvents_Event, : _ListBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _ListBoxEvents_Event, : _ListBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ListBoxEvents_Event, : _ListBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ListBoxEvents_Event, : _ListBoxEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _ListBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ListBoxEvents_ExitEventHandler) -> Int16 """
        ...


class _ListBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ListBoxEvents_GotFocusEventHandler) """
        ...


class _ListBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ListBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _ListBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _ListBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class _ListBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ListBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _ListBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ListBoxEvents_LostFocusEventHandler) """
        ...


class _ListBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ListBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ListBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ListBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ListBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ListBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ListBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ListBoxEvents_SinkHelper(_ListBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _ObjectFrameEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _ObjectFrameEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ObjectFrameEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _ObjectFrameEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _ObjectFrameEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _ObjectFrameEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ObjectFrameEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ObjectFrameEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Updated(self, Code) -> Int16:
        """ Updated(self: _ObjectFrameEvents) -> Int16 """
        ...


class _ObjectFrameEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ObjectFrameEvents_ClickEventHandler) """
        ...


class _ObjectFrameEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ObjectFrameEvents_DblClickEventHandler) -> Int16 """
        ...


class _ObjectFrameEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ObjectFrameEvents_EnterEventHandler) """
        ...


class _ObjectFrameEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_GotFocusEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseUpEventHandler) """
        ...

    def add_Updated(self): # -> 
        """ add_Updated(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_UpdatedEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_GotFocusEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_MouseUpEventHandler) """
        ...

    def remove_Updated(self): # -> 
        """ remove_Updated(self: _ObjectFrameEvents_Event, : _ObjectFrameEvents_UpdatedEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Updated = ...


class _ObjectFrameEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ObjectFrameEvents_ExitEventHandler) -> Int16 """
        ...


class _ObjectFrameEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ObjectFrameEvents_GotFocusEventHandler) """
        ...


class _ObjectFrameEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ObjectFrameEvents_LostFocusEventHandler) """
        ...


class _ObjectFrameEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ObjectFrameEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ObjectFrameEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ObjectFrameEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ObjectFrameEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ObjectFrameEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ObjectFrameEvents_SinkHelper(_ObjectFrameEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UpdatedDelegate = ...


class _ObjectFrameEvents_UpdatedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ObjectFrameEvents_UpdatedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Code) -> Int16:
        """ Invoke(self: _ObjectFrameEvents_UpdatedEventHandler) -> Int16 """
        ...


class _OptionButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _OptionButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _OptionButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _OptionButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _OptionButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _OptionButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _OptionButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _OptionButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _OptionButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _OptionButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _OptionButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _OptionButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _OptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _OptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _OptionButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonEvents_AfterUpdateEventHandler) """
        ...


class _OptionButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _OptionButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonEvents_ClickEventHandler) """
        ...


class _OptionButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class _OptionButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonEvents_EnterEventHandler) """
        ...


class _OptionButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _OptionButtonEvents_Event, : _OptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _OptionButtonEvents_Event, : _OptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _OptionButtonEvents_Event, : _OptionButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _OptionButtonEvents_Event, : _OptionButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _OptionButtonEvents_Event, : _OptionButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _OptionButtonEvents_Event, : _OptionButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _OptionButtonEvents_Event, : _OptionButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _OptionButtonEvents_Event, : _OptionButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _OptionButtonEvents_Event, : _OptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _OptionButtonEvents_Event, : _OptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _OptionButtonEvents_Event, : _OptionButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _OptionButtonEvents_Event, : _OptionButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _OptionButtonEvents_Event, : _OptionButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _OptionButtonEvents_Event, : _OptionButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _OptionButtonEvents_Event, : _OptionButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _OptionButtonEvents_Event, : _OptionButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _OptionButtonEvents_Event, : _OptionButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _OptionButtonEvents_Event, : _OptionButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _OptionButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionButtonEvents_ExitEventHandler) -> Int16 """
        ...


class _OptionButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonEvents_GotFocusEventHandler) """
        ...


class _OptionButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _OptionButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _OptionButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _OptionButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class _OptionButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _OptionButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _OptionButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonEvents_LostFocusEventHandler) """
        ...


class _OptionButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonEvents_SinkHelper(_OptionButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _OptionButtonInOption(_OptionButton, DispOptionButtonEvents_Event): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _OptionButtonInOptionClass(_OptionButtonInOptionEvents_Event, _OptionButtonInOption, __ComObject): # skipped bases: <type 'DispOptionButtonEvents_Event'>, <type 'IAccessible'>, <type '_OptionButton'>, <type 'object'>
    """ _OptionButtonInOptionClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: _OptionButtonInOptionClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: _OptionButtonInOptionClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: _OptionButtonInOptionClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: _OptionButtonInOptionClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _OptionButtonInOptionClass) -> bool
        Set: AddColon(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _OptionButtonInOptionClass) -> str
        Set: AfterUpdate(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _OptionButtonInOptionClass) -> str
        Set: AfterUpdateMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _OptionButtonInOptionClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _OptionButtonInOptionClass) -> bool
        Set: AutoLabel(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _OptionButtonInOptionClass) -> str
        Set: BeforeUpdate(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _OptionButtonInOptionClass) -> str
        Set: BeforeUpdateMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _OptionButtonInOptionClass) -> int
        Set: BorderColor(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderLineStyle(self) -> Byte:
        """
        Get: BorderLineStyle(self: _OptionButtonInOptionClass) -> Byte
        Set: BorderLineStyle(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _OptionButtonInOptionClass) -> Single
        Set: BorderShade(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _OptionButtonInOptionClass) -> Byte
        Set: BorderStyle(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _OptionButtonInOptionClass) -> int
        Set: BorderThemeColorIndex(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _OptionButtonInOptionClass) -> Single
        Set: BorderTint(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _OptionButtonInOptionClass) -> Byte
        Set: BorderWidth(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _OptionButtonInOptionClass) -> Int16
        Set: BottomPadding(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _OptionButtonInOptionClass) -> bool
        Set: ColumnHidden(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _OptionButtonInOptionClass) -> Int16
        Set: ColumnOrder(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _OptionButtonInOptionClass) -> Int16
        Set: ColumnWidth(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _OptionButtonInOptionClass) -> str
        Set: ControlName(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _OptionButtonInOptionClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _OptionButtonInOptionClass) -> str
        Set: ControlSource(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _OptionButtonInOptionClass) -> str
        Set: ControlTipText(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _OptionButtonInOptionClass) -> Byte
        Set: ControlType(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _OptionButtonInOptionClass) -> str
        Set: DefaultValue(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _OptionButtonInOptionClass) -> Byte
        Set: DisplayWhen(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _OptionButtonInOptionClass) -> bool
        Set: Enabled(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _OptionButtonInOptionClass) -> str
        Set: EventProcPrefix(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _OptionButtonInOptionClass) -> int
        Set: GridlineColor(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _OptionButtonInOptionClass) -> Single
        Set: GridlineShade(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineStyleBottom(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineStyleLeft(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineStyleRight(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineStyleTop(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _OptionButtonInOptionClass) -> int
        Set: GridlineThemeColorIndex(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _OptionButtonInOptionClass) -> Single
        Set: GridlineTint(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineWidthBottom(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineWidthLeft(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineWidthRight(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _OptionButtonInOptionClass) -> Byte
        Set: GridlineWidthTop(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _OptionButtonInOptionClass) -> Int16
        Set: Height(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _OptionButtonInOptionClass) -> int
        Set: HelpContextId(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _OptionButtonInOptionClass) -> bool
        Set: HideDuplicates(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _OptionButtonInOptionClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _OptionButtonInOptionClass) -> bool
        Set: InSelection(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _OptionButtonInOptionClass) -> bool
        Set: IsVisible(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _OptionButtonInOptionClass) -> Byte
        Set: LabelAlign(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _OptionButtonInOptionClass) -> Int16
        Set: LabelX(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _OptionButtonInOptionClass) -> Int16
        Set: LabelY(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _OptionButtonInOptionClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _OptionButtonInOptionClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _OptionButtonInOptionClass) -> Int16
        Set: Left(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _OptionButtonInOptionClass) -> Int16
        Set: LeftPadding(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _OptionButtonInOptionClass) -> bool
        Set: Locked(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _OptionButtonInOptionClass) -> str
        Set: Name(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OldBorderStyle(self) -> Byte:
        """
        Get: OldBorderStyle(self: _OptionButtonInOptionClass) -> Byte
        Set: OldBorderStyle(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _OptionButtonInOptionClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _OptionButtonInOptionClass) -> str
        Set: OnClick(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnClickMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _OptionButtonInOptionClass) -> str
        Set: OnDblClick(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnDblClickMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _OptionButtonInOptionClass) -> str
        Set: OnEnter(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnEnterMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _OptionButtonInOptionClass) -> str
        Set: OnExit(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnExitMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _OptionButtonInOptionClass) -> str
        Set: OnGotFocus(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnGotFocusMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyDown(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyDownMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyPress(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyPressMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyUp(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnKeyUpMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _OptionButtonInOptionClass) -> str
        Set: OnLostFocus(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnLostFocusMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseDown(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseDownMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseMove(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseMoveMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseUp(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _OptionButtonInOptionClass) -> str
        Set: OnMouseUpMacro(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _OptionButtonInOptionClass) -> int
        Set: OptionValue(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _OptionButtonInOptionClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _OptionButtonInOptionClass) -> Properties """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _OptionButtonInOptionClass) -> Byte
        Set: ReadingOrder(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _OptionButtonInOptionClass) -> Int16
        Set: RightPadding(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _OptionButtonInOptionClass) -> Int16
        Set: Section(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _OptionButtonInOptionClass) -> str
        Set: ShortcutMenuBar(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _OptionButtonInOptionClass) -> Byte
        Set: SpecialEffect(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _OptionButtonInOptionClass) -> str
        Set: StatusBarText(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _OptionButtonInOptionClass) -> Int16
        Set: TabIndex(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _OptionButtonInOptionClass) -> bool
        Set: TabStop(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _OptionButtonInOptionClass) -> str
        Set: Tag(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _OptionButtonInOptionClass) -> Int16
        Set: Top(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _OptionButtonInOptionClass) -> Int16
        Set: TopPadding(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _OptionButtonInOptionClass) -> bool
        Set: TripleState(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _OptionButtonInOptionClass) -> str
        Set: ValidationRule(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _OptionButtonInOptionClass) -> str
        Set: ValidationText(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _OptionButtonInOptionClass) -> object
        Set: Value(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _OptionButtonInOptionClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _OptionButtonInOptionClass) -> bool
        Set: Visible(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _OptionButtonInOptionClass) -> Int16
        Set: Width(self: _OptionButtonInOptionClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _OptionButtonInOptionClass) -> str
        Set: _Name(self: _OptionButtonInOptionClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: _OptionButtonInOptionClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: _OptionButtonInOptionClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: _OptionButtonInOptionClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: _OptionButtonInOptionClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: _OptionButtonInOptionClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_ExitEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _OptionButtonInOptionClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _OptionButtonInOptionClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _OptionButtonInOptionClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _OptionButtonInOptionClass, : DispOptionButtonEvents_ExitEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _OptionButtonInOptionClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _OptionButtonInOptionClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _OptionButtonInOptionClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _OptionButtonInOptionClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _OptionButtonInOptionEvents_Event_add_GotFocus(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_GotFocus(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_KeyDown(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_KeyDown(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_KeyPress(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_KeyPress(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_KeyUp(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_KeyUp(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_LostFocus(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_LostFocus(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_MouseDown(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_MouseDown(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_MouseMove(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_MouseMove(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_add_MouseUp(self): # -> 
        """ _OptionButtonInOptionEvents_Event_add_MouseUp(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_GotFocus(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_GotFocus(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_KeyDown(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_KeyDown(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_KeyPress(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_KeyPress(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_KeyUp(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_KeyUp(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_LostFocus(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_LostFocus(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_MouseDown(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_MouseDown(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_MouseMove(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_MouseMove(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def _OptionButtonInOptionEvents_Event_remove_MouseUp(self): # -> 
        """ _OptionButtonInOptionEvents_Event_remove_MouseUp(self: _OptionButtonInOptionClass, : _OptionButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispOptionButtonEvents_Event_AfterUpdate = ...
    DispOptionButtonEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _OptionButtonInOptionEvents_Event_GotFocus = ...
    _OptionButtonInOptionEvents_Event_KeyDown = ...
    _OptionButtonInOptionEvents_Event_KeyPress = ...
    _OptionButtonInOptionEvents_Event_KeyUp = ...
    _OptionButtonInOptionEvents_Event_LostFocus = ...
    _OptionButtonInOptionEvents_Event_MouseDown = ...
    _OptionButtonInOptionEvents_Event_MouseMove = ...
    _OptionButtonInOptionEvents_Event_MouseUp = ...


class _OptionButtonInOptionEvents: # skipped bases: <type 'object'>
    """ no doc """
    def GotFocus(self): # -> 
        """ GotFocus(self: _OptionButtonInOptionEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _OptionButtonInOptionEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _OptionButtonInOptionEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _OptionButtonInOptionEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _OptionButtonInOptionEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _OptionButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _OptionButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _OptionButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonInOptionEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _OptionButtonInOptionEvents_Event, : _OptionButtonInOptionEvents_MouseUpEventHandler) """
        ...

    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _OptionButtonInOptionEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonInOptionEvents_GotFocusEventHandler) """
        ...


class _OptionButtonInOptionEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _OptionButtonInOptionEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _OptionButtonInOptionEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _OptionButtonInOptionEvents_KeyPressEventHandler) -> Int16 """
        ...


class _OptionButtonInOptionEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _OptionButtonInOptionEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _OptionButtonInOptionEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionButtonInOptionEvents_LostFocusEventHandler) """
        ...


class _OptionButtonInOptionEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonInOptionEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonInOptionEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonInOptionEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonInOptionEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionButtonInOptionEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionButtonInOptionEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionButtonInOptionEvents_SinkHelper(_OptionButtonInOptionEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _OptionGroupEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _OptionGroupEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _OptionGroupEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _OptionGroupEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _OptionGroupEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _OptionGroupEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _OptionGroupEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _OptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _OptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _OptionGroupEvents) -> (Int16, Int16, Single, Single) """
        ...


class _OptionGroupEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionGroupEvents_AfterUpdateEventHandler) """
        ...


class _OptionGroupEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionGroupEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _OptionGroupEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionGroupEvents_ClickEventHandler) """
        ...


class _OptionGroupEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionGroupEvents_DblClickEventHandler) -> Int16 """
        ...


class _OptionGroupEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _OptionGroupEvents_EnterEventHandler) """
        ...


class _OptionGroupEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _OptionGroupEvents_Event, : _OptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _OptionGroupEvents_Event, : _OptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _OptionGroupEvents_Event, : _OptionGroupEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _OptionGroupEvents_Event, : _OptionGroupEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _OptionGroupEvents_Event, : _OptionGroupEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _OptionGroupEvents_Event, : _OptionGroupEvents_ExitEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _OptionGroupEvents_Event, : _OptionGroupEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _OptionGroupEvents_Event, : _OptionGroupEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _OptionGroupEvents_Event, : _OptionGroupEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _OptionGroupEvents_Event, : _OptionGroupEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _OptionGroupEvents_Event, : _OptionGroupEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _OptionGroupEvents_Event, : _OptionGroupEvents_ExitEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _OptionGroupEvents_Event, : _OptionGroupEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _OptionGroupEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _OptionGroupEvents_ExitEventHandler) -> Int16 """
        ...


class _OptionGroupEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionGroupEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionGroupEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionGroupEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionGroupEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _OptionGroupEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _OptionGroupEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _OptionGroupEvents_SinkHelper(_OptionGroupEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _PageBreakEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _PageBreakEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class _PageBreakEvents_SinkHelper(_PageBreakEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class _PageEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _PageEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _PageEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _PageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _PageEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _PageEvents) -> (Int16, Int16, Single, Single) """
        ...


class _PageEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PageEvents_ClickEventHandler) """
        ...


class _PageEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _PageEvents_DblClickEventHandler) -> Int16 """
        ...


class _PageEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _PageEvents_Event, : _PageEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _PageEvents_Event, : _PageEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _PageEvents_Event, : _PageEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _PageEvents_Event, : _PageEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _PageEvents_Event, : _PageEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _PageEvents_Event, : _PageEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _PageEvents_Event, : _PageEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _PageEvents_Event, : _PageEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _PageEvents_Event, : _PageEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _PageEvents_Event, : _PageEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _PageEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageEvents_SinkHelper(_PageEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _PageHdrFtrInReport(DispPageHdrFtrInReportEvents_Event, _Section): # skipped bases: <type 'object'>
    """ no doc """
    pass

class _PageHdrFtrInReportClass(_PageHdrFtrInReportEvents_Event, __ComObject, _PageHdrFtrInReport): # skipped bases: <type 'DispPageHdrFtrInReportEvents_Event'>, <type '_Section'>, <type 'object'>
    """ _PageHdrFtrInReportClass() """
    @property
    def AlternateBackColor(self) -> int:
        """
        Get: AlternateBackColor(self: _PageHdrFtrInReportClass) -> int
        Set: AlternateBackColor(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def AlternateBackShade(self) -> Single:
        """
        Get: AlternateBackShade(self: _PageHdrFtrInReportClass) -> Single
        Set: AlternateBackShade(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def AlternateBackThemeColorIndex(self) -> int:
        """
        Get: AlternateBackThemeColorIndex(self: _PageHdrFtrInReportClass) -> int
        Set: AlternateBackThemeColorIndex(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def AlternateBackTint(self) -> Single:
        """
        Get: AlternateBackTint(self: _PageHdrFtrInReportClass) -> Single
        Set: AlternateBackTint(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _PageHdrFtrInReportClass) -> Application """
        ...

    @property
    def AutoHeight(self) -> bool:
        """
        Get: AutoHeight(self: _PageHdrFtrInReportClass) -> bool
        Set: AutoHeight(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _PageHdrFtrInReportClass) -> int
        Set: BackColor(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _PageHdrFtrInReportClass) -> Single
        Set: BackShade(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _PageHdrFtrInReportClass) -> int
        Set: BackThemeColorIndex(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _PageHdrFtrInReportClass) -> Single
        Set: BackTint(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _PageHdrFtrInReportClass) -> bool
        Set: CanGrow(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _PageHdrFtrInReportClass) -> bool
        Set: CanShrink(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _PageHdrFtrInReportClass) -> Children """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _PageHdrFtrInReportClass) -> Byte
        Set: DisplayWhen(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _PageHdrFtrInReportClass) -> str
        Set: EventProcPrefix(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def ForceNewPage(self) -> Byte:
        """
        Get: ForceNewPage(self: _PageHdrFtrInReportClass) -> Byte
        Set: ForceNewPage(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def HasContinued(self) -> bool:
        """
        Get: HasContinued(self: _PageHdrFtrInReportClass) -> bool
        Set: HasContinued(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _PageHdrFtrInReportClass) -> Int16
        Set: Height(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _PageHdrFtrInReportClass) -> bool
        Set: InSelection(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def KeepTogether(self) -> bool:
        """
        Get: KeepTogether(self: _PageHdrFtrInReportClass) -> bool
        Set: KeepTogether(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _PageHdrFtrInReportClass) -> str
        Set: Name(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def NewRowOrCol(self) -> Byte:
        """
        Get: NewRowOrCol(self: _PageHdrFtrInReportClass) -> Byte
        Set: NewRowOrCol(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _PageHdrFtrInReportClass) -> str
        Set: OnClick(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnClickMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _PageHdrFtrInReportClass) -> str
        Set: OnDblClick(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnDblClickMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnFormat(self) -> str:
        """
        Get: OnFormat(self: _PageHdrFtrInReportClass) -> str
        Set: OnFormat(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnFormatMacro(self) -> str:
        """
        Get: OnFormatMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnFormatMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseDown(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseDownMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseMove(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseMoveMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseUp(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnMouseUpMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnPaint(self) -> str:
        """
        Get: OnPaint(self: _PageHdrFtrInReportClass) -> str
        Set: OnPaint(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnPaintMacro(self) -> str:
        """
        Get: OnPaintMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnPaintMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnPrint(self) -> str:
        """
        Get: OnPrint(self: _PageHdrFtrInReportClass) -> str
        Set: OnPrint(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnPrintMacro(self) -> str:
        """
        Get: OnPrintMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnPrintMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnRetreat(self) -> str:
        """
        Get: OnRetreat(self: _PageHdrFtrInReportClass) -> str
        Set: OnRetreat(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def OnRetreatMacro(self) -> str:
        """
        Get: OnRetreatMacro(self: _PageHdrFtrInReportClass) -> str
        Set: OnRetreatMacro(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _PageHdrFtrInReportClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _PageHdrFtrInReportClass) -> Properties """
        ...

    @property
    def RepeatSection(self) -> bool:
        """
        Get: RepeatSection(self: _PageHdrFtrInReportClass) -> bool
        Set: RepeatSection(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _PageHdrFtrInReportClass) -> Byte
        Set: SpecialEffect(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _PageHdrFtrInReportClass) -> str
        Set: Tag(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _PageHdrFtrInReportClass) -> bool
        Set: Visible(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def WillContinue(self) -> bool:
        """
        Get: WillContinue(self: _PageHdrFtrInReportClass) -> bool
        Set: WillContinue(self: _PageHdrFtrInReportClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _PageHdrFtrInReportClass) -> str
        Set: _Name(self: _PageHdrFtrInReportClass) = value
        """
        ...


    def add_Paint(self): # -> 
        """ add_Paint(self: _PageHdrFtrInReportClass, : DispPageHdrFtrInReportEvents_PaintEventHandler) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _PageHdrFtrInReportClass, dispid: int) -> bool """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: _PageHdrFtrInReportClass, : DispPageHdrFtrInReportEvents_PaintEventHandler) """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: _PageHdrFtrInReportClass) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_Click(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_Click(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_DblClick(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_DblClick(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_Format(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_Format(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_MouseDown(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_MouseDown(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_MouseMove(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_MouseMove(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_MouseUp(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_MouseUp(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_add_Print(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_add_Print(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_Click(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_Click(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_DblClick(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_DblClick(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_Format(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_Format(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_MouseDown(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_MouseDown(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_MouseMove(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_MouseMove(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_MouseUp(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_MouseUp(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def _PageHdrFtrInReportEvents_Event_remove_Print(self): # -> 
        """ _PageHdrFtrInReportEvents_Event_remove_Print(self: _PageHdrFtrInReportClass, : _PageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    Print = ...
    _PageHdrFtrInReportEvents_Event_Click = ...
    _PageHdrFtrInReportEvents_Event_DblClick = ...
    _PageHdrFtrInReportEvents_Event_Format = ...
    _PageHdrFtrInReportEvents_Event_MouseDown = ...
    _PageHdrFtrInReportEvents_Event_MouseMove = ...
    _PageHdrFtrInReportEvents_Event_MouseUp = ...
    _PageHdrFtrInReportEvents_Event_Print = ...


class _PageHdrFtrInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _PageHdrFtrInReportEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _PageHdrFtrInReportEvents) -> Int16 """
        ...

    def Format(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Format(self: _PageHdrFtrInReportEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _PageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _PageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _PageHdrFtrInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Print(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Print(self: _PageHdrFtrInReportEvents) -> (Int16, Int16) """
        ...


class _PageHdrFtrInReportEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PageHdrFtrInReportEvents_ClickEventHandler) """
        ...


class _PageHdrFtrInReportEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _PageHdrFtrInReportEvents_DblClickEventHandler) -> Int16 """
        ...


class _PageHdrFtrInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def add_Format(self): # -> 
        """ add_Format(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def add_Print(self): # -> 
        """ add_Print(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_DblClickEventHandler) """
        ...

    def remove_Format(self): # -> 
        """ remove_Format(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_FormatEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_MouseUpEventHandler) """
        ...

    def remove_Print(self): # -> 
        """ remove_Print(self: _PageHdrFtrInReportEvents_Event, : _PageHdrFtrInReportEvents_PrintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Print = ...


class _PageHdrFtrInReportEvents_FormatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_FormatEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _PageHdrFtrInReportEvents_FormatEventHandler) -> (Int16, Int16) """
        ...


class _PageHdrFtrInReportEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageHdrFtrInReportEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageHdrFtrInReportEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageHdrFtrInReportEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageHdrFtrInReportEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PageHdrFtrInReportEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PageHdrFtrInReportEvents_PrintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PageHdrFtrInReportEvents_PrintEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _PageHdrFtrInReportEvents_PrintEventHandler) -> (Int16, Int16) """
        ...


class _PageHdrFtrInReportEvents_SinkHelper(_PageHdrFtrInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_FormatDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PrintDelegate = ...


class _PaletteButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _PaletteButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _PaletteButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _PaletteButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _PaletteButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _PaletteButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _PaletteButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _PaletteButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _PaletteButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _PaletteButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _PaletteButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _PaletteButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _PaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _PaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _PaletteButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class _PaletteButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PaletteButtonEvents_AfterUpdateEventHandler) """
        ...


class _PaletteButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _PaletteButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _PaletteButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PaletteButtonEvents_ClickEventHandler) """
        ...


class _PaletteButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _PaletteButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class _PaletteButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PaletteButtonEvents_EnterEventHandler) """
        ...


class _PaletteButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _PaletteButtonEvents_Event, : _PaletteButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _PaletteButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _PaletteButtonEvents_ExitEventHandler) -> Int16 """
        ...


class _PaletteButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PaletteButtonEvents_GotFocusEventHandler) """
        ...


class _PaletteButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _PaletteButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _PaletteButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _PaletteButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class _PaletteButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _PaletteButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _PaletteButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _PaletteButtonEvents_LostFocusEventHandler) """
        ...


class _PaletteButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PaletteButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PaletteButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PaletteButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PaletteButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _PaletteButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _PaletteButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _PaletteButtonEvents_SinkHelper(_PaletteButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _RecordsetEvents: # skipped bases: <type 'object'>
    """ no doc """
    def EndOfRecordset(self, fMoreData, adStatus, pRecordset): # -> Tuple_[Int16, EventStatusEnum]
        """ EndOfRecordset(self: _RecordsetEvents, pRecordset: object) -> (Int16, EventStatusEnum) """
        ...

    def FetchComplete(self, pError, adStatus, pRecordset): # -> EventStatusEnum
        """ FetchComplete(self: _RecordsetEvents, pError: object, pRecordset: object) -> EventStatusEnum """
        ...

    def FetchProgress(self, Progress, MaxProgress, adStatus, pRecordset): # -> EventStatusEnum
        """ FetchProgress(self: _RecordsetEvents, Progress: int, MaxProgress: int, pRecordset: object) -> EventStatusEnum """
        ...

    def FieldChangeComplete(self, cFields, Fields, pError, adStatus, pRecordset): # -> EventStatusEnum
        """ FieldChangeComplete(self: _RecordsetEvents, cFields: int, Fields: object, pError: object, pRecordset: object) -> EventStatusEnum """
        ...

    def MoveComplete(self, adReason, pError, adStatus, pRecordset): # -> EventStatusEnum
        """ MoveComplete(self: _RecordsetEvents, adReason: EventReasonEnum, pError: object, pRecordset: object) -> EventStatusEnum """
        ...

    def RecordChangeComplete(self, adReason, cRecords, pError, adStatus, pRecordset): # -> EventStatusEnum
        """ RecordChangeComplete(self: _RecordsetEvents, adReason: EventReasonEnum, cRecords: int, pError: object, pRecordset: object) -> EventStatusEnum """
        ...

    def RecordsetChangeComplete(self, adReason, pError, adStatus, pRecordset): # -> EventStatusEnum
        """ RecordsetChangeComplete(self: _RecordsetEvents, adReason: EventReasonEnum, pError: object, pRecordset: object) -> EventStatusEnum """
        ...

    def WillChangeField(self, cFields, Fields, adStatus, pRecordset): # -> EventStatusEnum
        """ WillChangeField(self: _RecordsetEvents, cFields: int, Fields: object, pRecordset: object) -> EventStatusEnum """
        ...

    def WillChangeRecord(self, adReason, cRecords, adStatus, pRecordset): # -> EventStatusEnum
        """ WillChangeRecord(self: _RecordsetEvents, adReason: EventReasonEnum, cRecords: int, pRecordset: object) -> EventStatusEnum """
        ...

    def WillChangeRecordset(self, adReason, adStatus, pRecordset): # -> EventStatusEnum
        """ WillChangeRecordset(self: _RecordsetEvents, adReason: EventReasonEnum, pRecordset: object) -> EventStatusEnum """
        ...

    def WillMove(self, adReason, adStatus, pRecordset): # -> EventStatusEnum
        """ WillMove(self: _RecordsetEvents, adReason: EventReasonEnum, pRecordset: object) -> EventStatusEnum """
        ...


class _RectangleEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _RectangleEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _RectangleEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _RectangleEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _RectangleEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _RectangleEvents) -> (Int16, Int16, Single, Single) """
        ...


class _RectangleEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _RectangleEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _RectangleEvents_ClickEventHandler) """
        ...


class _RectangleEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _RectangleEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _RectangleEvents_DblClickEventHandler) -> Int16 """
        ...


class _RectangleEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _RectangleEvents_Event, : _RectangleEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _RectangleEvents_Event, : _RectangleEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _RectangleEvents_Event, : _RectangleEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _RectangleEvents_Event, : _RectangleEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _RectangleEvents_Event, : _RectangleEvents_MouseUpEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _RectangleEvents_Event, : _RectangleEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _RectangleEvents_Event, : _RectangleEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _RectangleEvents_Event, : _RectangleEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _RectangleEvents_Event, : _RectangleEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _RectangleEvents_Event, : _RectangleEvents_MouseUpEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _RectangleEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _RectangleEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _RectangleEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _RectangleEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _RectangleEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _RectangleEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _RectangleEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _RectangleEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _RectangleEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _RectangleEvents_SinkHelper(_RectangleEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _References_Events: # skipped bases: <type 'object'>
    """ no doc """
    def ItemAdded(self, Reference:Reference): # -> 
        """ ItemAdded(self: _References_Events, Reference: Reference) """
        ...

    def ItemRemoved(self, Reference:Reference): # -> 
        """ ItemRemoved(self: _References_Events, Reference: Reference) """
        ...


class _References_Events_ItemAddedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _References_Events_ItemAddedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reference:Reference): # -> 
        """ Invoke(self: _References_Events_ItemAddedEventHandler, Reference: Reference) """
        ...


class _References_Events_ItemRemovedEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _References_Events_ItemRemovedEventHandler(: object, : UIntPtr) """
    def Invoke(self, Reference:Reference): # -> 
        """ Invoke(self: _References_Events_ItemRemovedEventHandler, Reference: Reference) """
        ...


class _References_Events_SinkHelper(_References_Events): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_ItemAddedDelegate = ...
    m_ItemRemovedDelegate = ...


class _ReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Activate(self): # -> 
        """ Activate(self: _ReportEvents) """
        ...

    def ApplyFilter(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ ApplyFilter(self: _ReportEvents) -> (Int16, Int16) """
        ...

    def Click(self): # -> 
        """ Click(self: _ReportEvents) """
        ...

    def Close(self): # -> 
        """ Close(self: _ReportEvents) """
        ...

    def Current(self): # -> 
        """ Current(self: _ReportEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ReportEvents) -> Int16 """
        ...

    def Deactivate(self): # -> 
        """ Deactivate(self: _ReportEvents) """
        ...

    def Error(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Error(self: _ReportEvents) -> (Int16, Int16) """
        ...

    def Filter(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Filter(self: _ReportEvents) -> (Int16, Int16) """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _ReportEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _ReportEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _ReportEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _ReportEvents) -> (Int16, Int16) """
        ...

    def Load(self): # -> 
        """ Load(self: _ReportEvents) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ReportEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseWheel(self, Page:bool, Count:int): # -> 
        """ MouseWheel(self: _ReportEvents, Page: bool, Count: int) """
        ...

    def NoData(self, Cancel) -> Int16:
        """ NoData(self: _ReportEvents) -> Int16 """
        ...

    def Open(self, Cancel) -> Int16:
        """ Open(self: _ReportEvents) -> Int16 """
        ...

    def Page(self): # -> 
        """ Page(self: _ReportEvents) """
        ...

    def Resize(self): # -> 
        """ Resize(self: _ReportEvents) """
        ...

    def Timer(self): # -> 
        """ Timer(self: _ReportEvents) """
        ...

    def Unload(self, Cancel) -> Int16:
        """ Unload(self: _ReportEvents) -> Int16 """
        ...


class _ReportEventsOld: # skipped bases: <type 'object'>
    """ no doc """
    def Activate(self): # -> 
        """ Activate(self: _ReportEventsOld) """
        ...

    def Close(self): # -> 
        """ Close(self: _ReportEventsOld) """
        ...

    def Deactivate(self): # -> 
        """ Deactivate(self: _ReportEventsOld) """
        ...

    def Error(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Error(self: _ReportEventsOld) -> (Int16, Int16) """
        ...

    def NoData(self, Cancel) -> Int16:
        """ NoData(self: _ReportEventsOld) -> Int16 """
        ...

    def Open(self, Cancel) -> Int16:
        """ Open(self: _ReportEventsOld) -> Int16 """
        ...

    def Page(self): # -> 
        """ Page(self: _ReportEventsOld) """
        ...


class _ReportEventsOld_ActivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_ActivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEventsOld_ActivateEventHandler) """
        ...


class _ReportEventsOld_CloseEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_CloseEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEventsOld_CloseEventHandler) """
        ...


class _ReportEventsOld_DeactivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_DeactivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEventsOld_DeactivateEventHandler) """
        ...


class _ReportEventsOld_ErrorEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_ErrorEventHandler(: object, : UIntPtr) """
    def Invoke(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEventsOld_ErrorEventHandler) -> (Int16, Int16) """
        ...


class _ReportEventsOld_NoDataEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_NoDataEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEventsOld_NoDataEventHandler) -> Int16 """
        ...


class _ReportEventsOld_OpenEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_OpenEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEventsOld_OpenEventHandler) -> Int16 """
        ...


class _ReportEventsOld_PageEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEventsOld_PageEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEventsOld_PageEventHandler) """
        ...


class _ReportEventsOld_SinkHelper(_ReportEventsOld): # skipped bases: <type 'object'>
    """ no doc """
    m_ActivateDelegate = ...
    m_CloseDelegate = ...
    m_DeactivateDelegate = ...
    m_dwCookie = ...
    m_ErrorDelegate = ...
    m_NoDataDelegate = ...
    m_OpenDelegate = ...
    m_PageDelegate = ...


class _ReportEvents_ActivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_ActivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_ActivateEventHandler) """
        ...


class _ReportEvents_ApplyFilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_ApplyFilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, ApplyType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEvents_ApplyFilterEventHandler) -> (Int16, Int16) """
        ...


class _ReportEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_ClickEventHandler) """
        ...


class _ReportEvents_CloseEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_CloseEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_CloseEventHandler) """
        ...


class _ReportEvents_CurrentEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_CurrentEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_CurrentEventHandler) """
        ...


class _ReportEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEvents_DblClickEventHandler) -> Int16 """
        ...


class _ReportEvents_DeactivateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_DeactivateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_DeactivateEventHandler) """
        ...


class _ReportEvents_ErrorEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_ErrorEventHandler(: object, : UIntPtr) """
    def Invoke(self, DataErr, Response) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEvents_ErrorEventHandler) -> (Int16, Int16) """
        ...


class _ReportEvents_FilterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_FilterEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FilterType) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEvents_FilterEventHandler) -> (Int16, Int16) """
        ...


class _ReportEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_GotFocusEventHandler) """
        ...


class _ReportEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _ReportEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _ReportEvents_KeyPressEventHandler) -> Int16 """
        ...


class _ReportEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ReportEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _ReportEvents_LoadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_LoadEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_LoadEventHandler) """
        ...


class _ReportEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_LostFocusEventHandler) """
        ...


class _ReportEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ReportEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ReportEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ReportEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ReportEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ReportEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ReportEvents_MouseWheelEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_MouseWheelEventHandler(: object, : UIntPtr) """
    def Invoke(self, Page:bool, Count:int): # -> 
        """ Invoke(self: _ReportEvents_MouseWheelEventHandler, Page: bool, Count: int) """
        ...


class _ReportEvents_NoDataEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_NoDataEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEvents_NoDataEventHandler) -> Int16 """
        ...


class _ReportEvents_OpenEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_OpenEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEvents_OpenEventHandler) -> Int16 """
        ...


class _ReportEvents_PageEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_PageEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_PageEventHandler) """
        ...


class _ReportEvents_ResizeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_ResizeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_ResizeEventHandler) """
        ...


class _ReportEvents_SinkHelper(_ReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ActivateDelegate = ...
    m_ApplyFilterDelegate = ...
    m_ClickDelegate = ...
    m_CloseDelegate = ...
    m_CurrentDelegate = ...
    m_DblClickDelegate = ...
    m_DeactivateDelegate = ...
    m_dwCookie = ...
    m_ErrorDelegate = ...
    m_FilterDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LoadDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_MouseWheelDelegate = ...
    m_NoDataDelegate = ...
    m_OpenDelegate = ...
    m_PageDelegate = ...
    m_ResizeDelegate = ...
    m_TimerDelegate = ...
    m_UnloadDelegate = ...


class _ReportEvents_TimerEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_TimerEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ReportEvents_TimerEventHandler) """
        ...


class _ReportEvents_UnloadEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ReportEvents_UnloadEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ReportEvents_UnloadEventHandler) -> Int16 """
        ...


class _SectionEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _SectionEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _SectionEvents) -> Int16 """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _SectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _SectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _SectionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Paint(self): # -> 
        """ Paint(self: _SectionEvents) """
        ...


class _SectionEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SectionEvents_ClickEventHandler) """
        ...


class _SectionEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _SectionEvents_DblClickEventHandler) -> Int16 """
        ...


class _SectionEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _SectionEvents_Event, : _SectionEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _SectionEvents_Event, : _SectionEvents_DblClickEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _SectionEvents_Event, : _SectionEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _SectionEvents_Event, : _SectionEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _SectionEvents_Event, : _SectionEvents_MouseUpEventHandler) """
        ...

    def add_Paint(self): # -> 
        """ add_Paint(self: _SectionEvents_Event, : _SectionEvents_PaintEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _SectionEvents_Event, : _SectionEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _SectionEvents_Event, : _SectionEvents_DblClickEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _SectionEvents_Event, : _SectionEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _SectionEvents_Event, : _SectionEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _SectionEvents_Event, : _SectionEvents_MouseUpEventHandler) """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: _SectionEvents_Event, : _SectionEvents_PaintEventHandler) """
        ...

    Click = ...
    DblClick = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...


class _SectionEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionEvents_PaintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionEvents_PaintEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SectionEvents_PaintEventHandler) """
        ...


class _SectionEvents_SinkHelper(_SectionEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PaintDelegate = ...


class _SectionInReport(DispSectionInReportEvents_Event, _Section): # skipped bases: <type 'object'>
    """ no doc """
    pass

class _SectionInReportClass(_SectionInReportEvents_Event, __ComObject, _SectionInReport): # skipped bases: <type 'DispSectionInReportEvents_Event'>, <type '_Section'>, <type 'object'>
    """ _SectionInReportClass() """
    @property
    def AlternateBackColor(self) -> int:
        """
        Get: AlternateBackColor(self: _SectionInReportClass) -> int
        Set: AlternateBackColor(self: _SectionInReportClass) = value
        """
        ...

    @property
    def AlternateBackShade(self) -> Single:
        """
        Get: AlternateBackShade(self: _SectionInReportClass) -> Single
        Set: AlternateBackShade(self: _SectionInReportClass) = value
        """
        ...

    @property
    def AlternateBackThemeColorIndex(self) -> int:
        """
        Get: AlternateBackThemeColorIndex(self: _SectionInReportClass) -> int
        Set: AlternateBackThemeColorIndex(self: _SectionInReportClass) = value
        """
        ...

    @property
    def AlternateBackTint(self) -> Single:
        """
        Get: AlternateBackTint(self: _SectionInReportClass) -> Single
        Set: AlternateBackTint(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _SectionInReportClass) -> Application """
        ...

    @property
    def AutoHeight(self) -> bool:
        """
        Get: AutoHeight(self: _SectionInReportClass) -> bool
        Set: AutoHeight(self: _SectionInReportClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _SectionInReportClass) -> int
        Set: BackColor(self: _SectionInReportClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _SectionInReportClass) -> Single
        Set: BackShade(self: _SectionInReportClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _SectionInReportClass) -> int
        Set: BackThemeColorIndex(self: _SectionInReportClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _SectionInReportClass) -> Single
        Set: BackTint(self: _SectionInReportClass) = value
        """
        ...

    @property
    def CanGrow(self) -> bool:
        """
        Get: CanGrow(self: _SectionInReportClass) -> bool
        Set: CanGrow(self: _SectionInReportClass) = value
        """
        ...

    @property
    def CanShrink(self) -> bool:
        """
        Get: CanShrink(self: _SectionInReportClass) -> bool
        Set: CanShrink(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _SectionInReportClass) -> Children """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _SectionInReportClass) -> Byte
        Set: DisplayWhen(self: _SectionInReportClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _SectionInReportClass) -> str
        Set: EventProcPrefix(self: _SectionInReportClass) = value
        """
        ...

    @property
    def ForceNewPage(self) -> Byte:
        """
        Get: ForceNewPage(self: _SectionInReportClass) -> Byte
        Set: ForceNewPage(self: _SectionInReportClass) = value
        """
        ...

    @property
    def HasContinued(self) -> bool:
        """
        Get: HasContinued(self: _SectionInReportClass) -> bool
        Set: HasContinued(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _SectionInReportClass) -> Int16
        Set: Height(self: _SectionInReportClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _SectionInReportClass) -> bool
        Set: InSelection(self: _SectionInReportClass) = value
        """
        ...

    @property
    def KeepTogether(self) -> bool:
        """
        Get: KeepTogether(self: _SectionInReportClass) -> bool
        Set: KeepTogether(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _SectionInReportClass) -> str
        Set: Name(self: _SectionInReportClass) = value
        """
        ...

    @property
    def NewRowOrCol(self) -> Byte:
        """
        Get: NewRowOrCol(self: _SectionInReportClass) -> Byte
        Set: NewRowOrCol(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _SectionInReportClass) -> str
        Set: OnClick(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _SectionInReportClass) -> str
        Set: OnClickMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _SectionInReportClass) -> str
        Set: OnDblClick(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _SectionInReportClass) -> str
        Set: OnDblClickMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnFormat(self) -> str:
        """
        Get: OnFormat(self: _SectionInReportClass) -> str
        Set: OnFormat(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnFormatMacro(self) -> str:
        """
        Get: OnFormatMacro(self: _SectionInReportClass) -> str
        Set: OnFormatMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _SectionInReportClass) -> str
        Set: OnMouseDown(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _SectionInReportClass) -> str
        Set: OnMouseDownMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _SectionInReportClass) -> str
        Set: OnMouseMove(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _SectionInReportClass) -> str
        Set: OnMouseMoveMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _SectionInReportClass) -> str
        Set: OnMouseUp(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _SectionInReportClass) -> str
        Set: OnMouseUpMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnPaint(self) -> str:
        """
        Get: OnPaint(self: _SectionInReportClass) -> str
        Set: OnPaint(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnPaintMacro(self) -> str:
        """
        Get: OnPaintMacro(self: _SectionInReportClass) -> str
        Set: OnPaintMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnPrint(self) -> str:
        """
        Get: OnPrint(self: _SectionInReportClass) -> str
        Set: OnPrint(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnPrintMacro(self) -> str:
        """
        Get: OnPrintMacro(self: _SectionInReportClass) -> str
        Set: OnPrintMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnRetreat(self) -> str:
        """
        Get: OnRetreat(self: _SectionInReportClass) -> str
        Set: OnRetreat(self: _SectionInReportClass) = value
        """
        ...

    @property
    def OnRetreatMacro(self) -> str:
        """
        Get: OnRetreatMacro(self: _SectionInReportClass) -> str
        Set: OnRetreatMacro(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _SectionInReportClass) -> object """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _SectionInReportClass) -> Properties """
        ...

    @property
    def RepeatSection(self) -> bool:
        """
        Get: RepeatSection(self: _SectionInReportClass) -> bool
        Set: RepeatSection(self: _SectionInReportClass) = value
        """
        ...

    @property
    def SpecialEffect(self) -> Byte:
        """
        Get: SpecialEffect(self: _SectionInReportClass) -> Byte
        Set: SpecialEffect(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _SectionInReportClass) -> str
        Set: Tag(self: _SectionInReportClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _SectionInReportClass) -> bool
        Set: Visible(self: _SectionInReportClass) = value
        """
        ...

    @property
    def WillContinue(self) -> bool:
        """
        Get: WillContinue(self: _SectionInReportClass) -> bool
        Set: WillContinue(self: _SectionInReportClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _SectionInReportClass) -> str
        Set: _Name(self: _SectionInReportClass) = value
        """
        ...


    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _SectionInReportClass, dispid: int) -> bool """
        ...

    def SetTabOrder(self): # -> 
        """ SetTabOrder(self: _SectionInReportClass) """
        ...

    def _SectionInReportEvents_Event_add_Click(self): # -> 
        """ _SectionInReportEvents_Event_add_Click(self: _SectionInReportClass, : _SectionInReportEvents_ClickEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_DblClick(self): # -> 
        """ _SectionInReportEvents_Event_add_DblClick(self: _SectionInReportClass, : _SectionInReportEvents_DblClickEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_Format(self): # -> 
        """ _SectionInReportEvents_Event_add_Format(self: _SectionInReportClass, : _SectionInReportEvents_FormatEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_MouseDown(self): # -> 
        """ _SectionInReportEvents_Event_add_MouseDown(self: _SectionInReportClass, : _SectionInReportEvents_MouseDownEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_MouseMove(self): # -> 
        """ _SectionInReportEvents_Event_add_MouseMove(self: _SectionInReportClass, : _SectionInReportEvents_MouseMoveEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_MouseUp(self): # -> 
        """ _SectionInReportEvents_Event_add_MouseUp(self: _SectionInReportClass, : _SectionInReportEvents_MouseUpEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_Paint(self): # -> 
        """ _SectionInReportEvents_Event_add_Paint(self: _SectionInReportClass, : _SectionInReportEvents_PaintEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_Print(self): # -> 
        """ _SectionInReportEvents_Event_add_Print(self: _SectionInReportClass, : _SectionInReportEvents_PrintEventHandler) """
        ...

    def _SectionInReportEvents_Event_add_Retreat(self): # -> 
        """ _SectionInReportEvents_Event_add_Retreat(self: _SectionInReportClass, : _SectionInReportEvents_RetreatEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_Click(self): # -> 
        """ _SectionInReportEvents_Event_remove_Click(self: _SectionInReportClass, : _SectionInReportEvents_ClickEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_DblClick(self): # -> 
        """ _SectionInReportEvents_Event_remove_DblClick(self: _SectionInReportClass, : _SectionInReportEvents_DblClickEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_Format(self): # -> 
        """ _SectionInReportEvents_Event_remove_Format(self: _SectionInReportClass, : _SectionInReportEvents_FormatEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_MouseDown(self): # -> 
        """ _SectionInReportEvents_Event_remove_MouseDown(self: _SectionInReportClass, : _SectionInReportEvents_MouseDownEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_MouseMove(self): # -> 
        """ _SectionInReportEvents_Event_remove_MouseMove(self: _SectionInReportClass, : _SectionInReportEvents_MouseMoveEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_MouseUp(self): # -> 
        """ _SectionInReportEvents_Event_remove_MouseUp(self: _SectionInReportClass, : _SectionInReportEvents_MouseUpEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_Paint(self): # -> 
        """ _SectionInReportEvents_Event_remove_Paint(self: _SectionInReportClass, : _SectionInReportEvents_PaintEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_Print(self): # -> 
        """ _SectionInReportEvents_Event_remove_Print(self: _SectionInReportClass, : _SectionInReportEvents_PrintEventHandler) """
        ...

    def _SectionInReportEvents_Event_remove_Retreat(self): # -> 
        """ _SectionInReportEvents_Event_remove_Retreat(self: _SectionInReportClass, : _SectionInReportEvents_RetreatEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    Print = ...
    Retreat = ...
    _SectionInReportEvents_Event_Click = ...
    _SectionInReportEvents_Event_DblClick = ...
    _SectionInReportEvents_Event_Format = ...
    _SectionInReportEvents_Event_MouseDown = ...
    _SectionInReportEvents_Event_MouseMove = ...
    _SectionInReportEvents_Event_MouseUp = ...
    _SectionInReportEvents_Event_Paint = ...
    _SectionInReportEvents_Event_Print = ...
    _SectionInReportEvents_Event_Retreat = ...


class _SectionInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Click(self): # -> 
        """ Click(self: _SectionInReportEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _SectionInReportEvents) -> Int16 """
        ...

    def Format(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Format(self: _SectionInReportEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _SectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _SectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _SectionInReportEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Paint(self): # -> 
        """ Paint(self: _SectionInReportEvents) """
        ...

    def Print(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Print(self: _SectionInReportEvents) -> (Int16, Int16) """
        ...

    def Retreat(self): # -> 
        """ Retreat(self: _SectionInReportEvents) """
        ...


class _SectionInReportEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SectionInReportEvents_ClickEventHandler) """
        ...


class _SectionInReportEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _SectionInReportEvents_DblClickEventHandler) -> Int16 """
        ...


class _SectionInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Click(self): # -> 
        """ add_Click(self: _SectionInReportEvents_Event, : _SectionInReportEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _SectionInReportEvents_Event, : _SectionInReportEvents_DblClickEventHandler) """
        ...

    def add_Format(self): # -> 
        """ add_Format(self: _SectionInReportEvents_Event, : _SectionInReportEvents_FormatEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseUpEventHandler) """
        ...

    def add_Paint(self): # -> 
        """ add_Paint(self: _SectionInReportEvents_Event, : _SectionInReportEvents_PaintEventHandler) """
        ...

    def add_Print(self): # -> 
        """ add_Print(self: _SectionInReportEvents_Event, : _SectionInReportEvents_PrintEventHandler) """
        ...

    def add_Retreat(self): # -> 
        """ add_Retreat(self: _SectionInReportEvents_Event, : _SectionInReportEvents_RetreatEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _SectionInReportEvents_Event, : _SectionInReportEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _SectionInReportEvents_Event, : _SectionInReportEvents_DblClickEventHandler) """
        ...

    def remove_Format(self): # -> 
        """ remove_Format(self: _SectionInReportEvents_Event, : _SectionInReportEvents_FormatEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _SectionInReportEvents_Event, : _SectionInReportEvents_MouseUpEventHandler) """
        ...

    def remove_Paint(self): # -> 
        """ remove_Paint(self: _SectionInReportEvents_Event, : _SectionInReportEvents_PaintEventHandler) """
        ...

    def remove_Print(self): # -> 
        """ remove_Print(self: _SectionInReportEvents_Event, : _SectionInReportEvents_PrintEventHandler) """
        ...

    def remove_Retreat(self): # -> 
        """ remove_Retreat(self: _SectionInReportEvents_Event, : _SectionInReportEvents_RetreatEventHandler) """
        ...

    Click = ...
    DblClick = ...
    Format = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Paint = ...
    Print = ...
    Retreat = ...


class _SectionInReportEvents_FormatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_FormatEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, FormatCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _SectionInReportEvents_FormatEventHandler) -> (Int16, Int16) """
        ...


class _SectionInReportEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionInReportEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionInReportEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionInReportEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionInReportEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _SectionInReportEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _SectionInReportEvents_PaintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_PaintEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SectionInReportEvents_PaintEventHandler) """
        ...


class _SectionInReportEvents_PrintEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_PrintEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel, PrintCount) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _SectionInReportEvents_PrintEventHandler) -> (Int16, Int16) """
        ...


class _SectionInReportEvents_RetreatEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SectionInReportEvents_RetreatEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SectionInReportEvents_RetreatEventHandler) """
        ...


class _SectionInReportEvents_SinkHelper(_SectionInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_FormatDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_PaintDelegate = ...
    m_PrintDelegate = ...
    m_RetreatDelegate = ...


class _SqmProxyReceiver: # skipped bases: <type 'object'>
    """ no doc """
    def AddStreamData1(self, id:UInt32, dw1:UInt32): # -> 
        """ AddStreamData1(self: _SqmProxyReceiver, id: UInt32, dw1: UInt32) """
        ...

    def AddStreamData2(self, id:UInt32, dw1:UInt32, dw2:UInt32): # -> 
        """ AddStreamData2(self: _SqmProxyReceiver, id: UInt32, dw1: UInt32, dw2: UInt32) """
        ...

    def AddStreamData8(self, id:UInt32, dw1:UInt32, dw2:UInt32, dw3:UInt32, dw4:UInt32, dw5:UInt32, dw6:UInt32, dw7:UInt32, dw8:UInt32): # -> 
        """ AddStreamData8(self: _SqmProxyReceiver, id: UInt32, dw1: UInt32, dw2: UInt32, dw3: UInt32, dw4: UInt32, dw5: UInt32, dw6: UInt32, dw7: UInt32, dw8: UInt32) """
        ...

    def CreateStream(self, id:UInt32, Type:UInt32, Width:UInt32, maxRows:UInt32): # -> 
        """ CreateStream(self: _SqmProxyReceiver, id: UInt32, Type: UInt32, Width: UInt32, maxRows: UInt32) """
        ...

    def SetDataPoint(self, id:UInt32, dwValue:UInt32): # -> 
        """ SetDataPoint(self: _SqmProxyReceiver, id: UInt32, dwValue: UInt32) """
        ...

    def SetDataPointMax(self, id:UInt32, dwValue:UInt32): # -> 
        """ SetDataPointMax(self: _SqmProxyReceiver, id: UInt32, dwValue: UInt32) """
        ...

    def SetDataPointMin(self, id:UInt32, dwValue:UInt32): # -> 
        """ SetDataPointMin(self: _SqmProxyReceiver, id: UInt32, dwValue: UInt32) """
        ...


class _SubFormEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: _SubFormEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _SubFormEvents) -> Int16 """
        ...


class _SubFormEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SubFormEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SubFormEvents_EnterEventHandler) """
        ...


class _SubFormEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: _SubFormEvents_Event, : _SubFormEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _SubFormEvents_Event, : _SubFormEvents_ExitEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _SubFormEvents_Event, : _SubFormEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _SubFormEvents_Event, : _SubFormEvents_ExitEventHandler) """
        ...

    Enter = ...
    Exit = ...


class _SubFormEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SubFormEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _SubFormEvents_ExitEventHandler) -> Int16 """
        ...


class _SubFormEvents_SinkHelper(_SubFormEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...


class _SubReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Enter(self): # -> 
        """ Enter(self: _SubReportEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _SubReportEvents) -> Int16 """
        ...


class _SubReportEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SubReportEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _SubReportEvents_EnterEventHandler) """
        ...


class _SubReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Enter(self): # -> 
        """ add_Enter(self: _SubReportEvents_Event, : _SubReportEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _SubReportEvents_Event, : _SubReportEvents_ExitEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _SubReportEvents_Event, : _SubReportEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _SubReportEvents_Event, : _SubReportEvents_ExitEventHandler) """
        ...

    Enter = ...
    Exit = ...


class _SubReportEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _SubReportEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _SubReportEvents_ExitEventHandler) -> Int16 """
        ...


class _SubReportEvents_SinkHelper(_SubReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...


class _TabControlEvents: # skipped bases: <type 'object'>
    """ no doc """
    def Change(self): # -> 
        """ Change(self: _TabControlEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: _TabControlEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _TabControlEvents) -> Int16 """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _TabControlEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _TabControlEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _TabControlEvents) -> (Int16, Int16) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _TabControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _TabControlEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _TabControlEvents) -> (Int16, Int16, Single, Single) """
        ...


class _TabControlEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TabControlEvents_ChangeEventHandler) """
        ...


class _TabControlEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TabControlEvents_ClickEventHandler) """
        ...


class _TabControlEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TabControlEvents_DblClickEventHandler) -> Int16 """
        ...


class _TabControlEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_Change(self): # -> 
        """ add_Change(self: _TabControlEvents_Event, : _TabControlEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _TabControlEvents_Event, : _TabControlEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _TabControlEvents_Event, : _TabControlEvents_DblClickEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _TabControlEvents_Event, : _TabControlEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _TabControlEvents_Event, : _TabControlEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _TabControlEvents_Event, : _TabControlEvents_KeyUpEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _TabControlEvents_Event, : _TabControlEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _TabControlEvents_Event, : _TabControlEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _TabControlEvents_Event, : _TabControlEvents_MouseUpEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: _TabControlEvents_Event, : _TabControlEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _TabControlEvents_Event, : _TabControlEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _TabControlEvents_Event, : _TabControlEvents_DblClickEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _TabControlEvents_Event, : _TabControlEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _TabControlEvents_Event, : _TabControlEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _TabControlEvents_Event, : _TabControlEvents_KeyUpEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _TabControlEvents_Event, : _TabControlEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _TabControlEvents_Event, : _TabControlEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _TabControlEvents_Event, : _TabControlEvents_MouseUpEventHandler) """
        ...

    Change = ...
    Click = ...
    DblClick = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _TabControlEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _TabControlEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _TabControlEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _TabControlEvents_KeyPressEventHandler) -> Int16 """
        ...


class _TabControlEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _TabControlEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _TabControlEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TabControlEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TabControlEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TabControlEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TabControlEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TabControlEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TabControlEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TabControlEvents_SinkHelper(_TabControlEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _TextBoxEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _TextBoxEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _TextBoxEvents) -> Int16 """
        ...

    def Change(self): # -> 
        """ Change(self: _TextBoxEvents) """
        ...

    def Click(self): # -> 
        """ Click(self: _TextBoxEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _TextBoxEvents) -> Int16 """
        ...

    def Dirty(self, Cancel) -> Int16:
        """ Dirty(self: _TextBoxEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _TextBoxEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _TextBoxEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _TextBoxEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _TextBoxEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _TextBoxEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _TextBoxEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _TextBoxEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _TextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _TextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _TextBoxEvents) -> (Int16, Int16, Single, Single) """
        ...

    def Undo(self, Cancel) -> Int16:
        """ Undo(self: _TextBoxEvents) -> Int16 """
        ...


class _TextBoxEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_AfterUpdateEventHandler) """
        ...


class _TextBoxEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TextBoxEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _TextBoxEvents_ChangeEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_ChangeEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_ChangeEventHandler) """
        ...


class _TextBoxEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_ClickEventHandler) """
        ...


class _TextBoxEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TextBoxEvents_DblClickEventHandler) -> Int16 """
        ...


class _TextBoxEvents_DirtyEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_DirtyEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TextBoxEvents_DirtyEventHandler) -> Int16 """
        ...


class _TextBoxEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_EnterEventHandler) """
        ...


class _TextBoxEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _TextBoxEvents_Event, : _TextBoxEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _TextBoxEvents_Event, : _TextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def add_Change(self): # -> 
        """ add_Change(self: _TextBoxEvents_Event, : _TextBoxEvents_ChangeEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _TextBoxEvents_Event, : _TextBoxEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _TextBoxEvents_Event, : _TextBoxEvents_DblClickEventHandler) """
        ...

    def add_Dirty(self): # -> 
        """ add_Dirty(self: _TextBoxEvents_Event, : _TextBoxEvents_DirtyEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _TextBoxEvents_Event, : _TextBoxEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _TextBoxEvents_Event, : _TextBoxEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _TextBoxEvents_Event, : _TextBoxEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _TextBoxEvents_Event, : _TextBoxEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseUpEventHandler) """
        ...

    def add_Undo(self): # -> 
        """ add_Undo(self: _TextBoxEvents_Event, : _TextBoxEvents_UndoEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _TextBoxEvents_Event, : _TextBoxEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _TextBoxEvents_Event, : _TextBoxEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Change(self): # -> 
        """ remove_Change(self: _TextBoxEvents_Event, : _TextBoxEvents_ChangeEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _TextBoxEvents_Event, : _TextBoxEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _TextBoxEvents_Event, : _TextBoxEvents_DblClickEventHandler) """
        ...

    def remove_Dirty(self): # -> 
        """ remove_Dirty(self: _TextBoxEvents_Event, : _TextBoxEvents_DirtyEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _TextBoxEvents_Event, : _TextBoxEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _TextBoxEvents_Event, : _TextBoxEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _TextBoxEvents_Event, : _TextBoxEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _TextBoxEvents_Event, : _TextBoxEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _TextBoxEvents_Event, : _TextBoxEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _TextBoxEvents_Event, : _TextBoxEvents_MouseUpEventHandler) """
        ...

    def remove_Undo(self): # -> 
        """ remove_Undo(self: _TextBoxEvents_Event, : _TextBoxEvents_UndoEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Change = ...
    Click = ...
    DblClick = ...
    Dirty = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    Undo = ...


class _TextBoxEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TextBoxEvents_ExitEventHandler) -> Int16 """
        ...


class _TextBoxEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_GotFocusEventHandler) """
        ...


class _TextBoxEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _TextBoxEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _TextBoxEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _TextBoxEvents_KeyPressEventHandler) -> Int16 """
        ...


class _TextBoxEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _TextBoxEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _TextBoxEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _TextBoxEvents_LostFocusEventHandler) """
        ...


class _TextBoxEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TextBoxEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TextBoxEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TextBoxEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TextBoxEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _TextBoxEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _TextBoxEvents_SinkHelper(_TextBoxEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ChangeDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_DirtyDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...
    m_UndoDelegate = ...


class _TextBoxEvents_UndoEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _TextBoxEvents_UndoEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _TextBoxEvents_UndoEventHandler) -> Int16 """
        ...


class _ToggleButtonEvents: # skipped bases: <type 'object'>
    """ no doc """
    def AfterUpdate(self): # -> 
        """ AfterUpdate(self: _ToggleButtonEvents) """
        ...

    def BeforeUpdate(self, Cancel) -> Int16:
        """ BeforeUpdate(self: _ToggleButtonEvents) -> Int16 """
        ...

    def Click(self): # -> 
        """ Click(self: _ToggleButtonEvents) """
        ...

    def DblClick(self, Cancel) -> Int16:
        """ DblClick(self: _ToggleButtonEvents) -> Int16 """
        ...

    def Enter(self): # -> 
        """ Enter(self: _ToggleButtonEvents) """
        ...

    def Exit(self, Cancel) -> Int16:
        """ Exit(self: _ToggleButtonEvents) -> Int16 """
        ...

    def GotFocus(self): # -> 
        """ GotFocus(self: _ToggleButtonEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _ToggleButtonEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _ToggleButtonEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _ToggleButtonEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ToggleButtonEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ToggleButtonEvents) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonEvents_AfterUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_AfterUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonEvents_AfterUpdateEventHandler) """
        ...


class _ToggleButtonEvents_BeforeUpdateEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_BeforeUpdateEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ToggleButtonEvents_BeforeUpdateEventHandler) -> Int16 """
        ...


class _ToggleButtonEvents_ClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_ClickEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonEvents_ClickEventHandler) """
        ...


class _ToggleButtonEvents_DblClickEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_DblClickEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ToggleButtonEvents_DblClickEventHandler) -> Int16 """
        ...


class _ToggleButtonEvents_EnterEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_EnterEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonEvents_EnterEventHandler) """
        ...


class _ToggleButtonEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_ExitEventHandler) """
        ...

    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseUpEventHandler) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_ExitEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ToggleButtonEvents_Event, : _ToggleButtonEvents_MouseUpEventHandler) """
        ...

    AfterUpdate = ...
    BeforeUpdate = ...
    Click = ...
    DblClick = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _ToggleButtonEvents_ExitEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_ExitEventHandler(: object, : UIntPtr) """
    def Invoke(self, Cancel) -> Int16:
        """ Invoke(self: _ToggleButtonEvents_ExitEventHandler) -> Int16 """
        ...


class _ToggleButtonEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonEvents_GotFocusEventHandler) """
        ...


class _ToggleButtonEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ToggleButtonEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _ToggleButtonEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _ToggleButtonEvents_KeyPressEventHandler) -> Int16 """
        ...


class _ToggleButtonEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ToggleButtonEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _ToggleButtonEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonEvents_LostFocusEventHandler) """
        ...


class _ToggleButtonEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonEvents_SinkHelper(_ToggleButtonEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_AfterUpdateDelegate = ...
    m_BeforeUpdateDelegate = ...
    m_ClickDelegate = ...
    m_DblClickDelegate = ...
    m_dwCookie = ...
    m_EnterDelegate = ...
    m_ExitDelegate = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class _ToggleButtonInOption(DispToggleButtonEvents_Event, _ToggleButton): # skipped bases: <type 'IAccessible'>, <type 'object'>
    """ no doc """
    pass

class _ToggleButtonInOptionClass(_ToggleButtonInOptionEvents_Event, __ComObject, _ToggleButtonInOption): # skipped bases: <type 'DispToggleButtonEvents_Event'>, <type '_ToggleButton'>, <type 'IAccessible'>, <type 'object'>
    """ _ToggleButtonInOptionClass() """
    @property
    def accChildCount(self) -> int:
        """ Get: accChildCount(self: _ToggleButtonInOptionClass) -> int """
        ...

    @property
    def accFocus(self) -> object:
        """ Get: accFocus(self: _ToggleButtonInOptionClass) -> object """
        ...

    @property
    def accParent(self) -> object:
        """ Get: accParent(self: _ToggleButtonInOptionClass) -> object """
        ...

    @property
    def accSelection(self) -> object:
        """ Get: accSelection(self: _ToggleButtonInOptionClass) -> object """
        ...

    @property
    def AddColon(self) -> bool:
        """
        Get: AddColon(self: _ToggleButtonInOptionClass) -> bool
        Set: AddColon(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def AfterUpdate(self) -> str:
        """
        Get: AfterUpdate(self: _ToggleButtonInOptionClass) -> str
        Set: AfterUpdate(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def AfterUpdateMacro(self) -> str:
        """
        Get: AfterUpdateMacro(self: _ToggleButtonInOptionClass) -> str
        Set: AfterUpdateMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Application(self) -> Application:
        """ Get: Application(self: _ToggleButtonInOptionClass) -> Application """
        ...

    @property
    def AutoLabel(self) -> bool:
        """
        Get: AutoLabel(self: _ToggleButtonInOptionClass) -> bool
        Set: AutoLabel(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BackColor(self) -> int:
        """
        Get: BackColor(self: _ToggleButtonInOptionClass) -> int
        Set: BackColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BackShade(self) -> Single:
        """
        Get: BackShade(self: _ToggleButtonInOptionClass) -> Single
        Set: BackShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BackThemeColorIndex(self) -> int:
        """
        Get: BackThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: BackThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BackTint(self) -> Single:
        """
        Get: BackTint(self: _ToggleButtonInOptionClass) -> Single
        Set: BackTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdate(self) -> str:
        """
        Get: BeforeUpdate(self: _ToggleButtonInOptionClass) -> str
        Set: BeforeUpdate(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BeforeUpdateMacro(self) -> str:
        """
        Get: BeforeUpdateMacro(self: _ToggleButtonInOptionClass) -> str
        Set: BeforeUpdateMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Bevel(self) -> int:
        """
        Get: Bevel(self: _ToggleButtonInOptionClass) -> int
        Set: Bevel(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderColor(self) -> int:
        """
        Get: BorderColor(self: _ToggleButtonInOptionClass) -> int
        Set: BorderColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderShade(self) -> Single:
        """
        Get: BorderShade(self: _ToggleButtonInOptionClass) -> Single
        Set: BorderShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderStyle(self) -> Byte:
        """
        Get: BorderStyle(self: _ToggleButtonInOptionClass) -> Byte
        Set: BorderStyle(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderThemeColorIndex(self) -> int:
        """
        Get: BorderThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: BorderThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderTint(self) -> Single:
        """
        Get: BorderTint(self: _ToggleButtonInOptionClass) -> Single
        Set: BorderTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BorderWidth(self) -> Byte:
        """
        Get: BorderWidth(self: _ToggleButtonInOptionClass) -> Byte
        Set: BorderWidth(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def BottomPadding(self) -> Int16:
        """
        Get: BottomPadding(self: _ToggleButtonInOptionClass) -> Int16
        Set: BottomPadding(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Caption(self) -> str:
        """
        Get: Caption(self: _ToggleButtonInOptionClass) -> str
        Set: Caption(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnHidden(self) -> bool:
        """
        Get: ColumnHidden(self: _ToggleButtonInOptionClass) -> bool
        Set: ColumnHidden(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnOrder(self) -> Int16:
        """
        Get: ColumnOrder(self: _ToggleButtonInOptionClass) -> Int16
        Set: ColumnOrder(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ColumnWidth(self) -> Int16:
        """
        Get: ColumnWidth(self: _ToggleButtonInOptionClass) -> Int16
        Set: ColumnWidth(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ControlName(self) -> str:
        """
        Get: ControlName(self: _ToggleButtonInOptionClass) -> str
        Set: ControlName(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Controls(self) -> Children:
        """ Get: Controls(self: _ToggleButtonInOptionClass) -> Children """
        ...

    @property
    def ControlSource(self) -> str:
        """
        Get: ControlSource(self: _ToggleButtonInOptionClass) -> str
        Set: ControlSource(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ControlTipText(self) -> str:
        """
        Get: ControlTipText(self: _ToggleButtonInOptionClass) -> str
        Set: ControlTipText(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ControlType(self) -> Byte:
        """
        Get: ControlType(self: _ToggleButtonInOptionClass) -> Byte
        Set: ControlType(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def DefaultValue(self) -> str:
        """
        Get: DefaultValue(self: _ToggleButtonInOptionClass) -> str
        Set: DefaultValue(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def DisplayWhen(self) -> Byte:
        """
        Get: DisplayWhen(self: _ToggleButtonInOptionClass) -> Byte
        Set: DisplayWhen(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Enabled(self) -> bool:
        """
        Get: Enabled(self: _ToggleButtonInOptionClass) -> bool
        Set: Enabled(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def EventProcPrefix(self) -> str:
        """
        Get: EventProcPrefix(self: _ToggleButtonInOptionClass) -> str
        Set: EventProcPrefix(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontBold(self) -> Int16:
        """
        Get: FontBold(self: _ToggleButtonInOptionClass) -> Int16
        Set: FontBold(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontItalic(self) -> bool:
        """
        Get: FontItalic(self: _ToggleButtonInOptionClass) -> bool
        Set: FontItalic(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontName(self) -> str:
        """
        Get: FontName(self: _ToggleButtonInOptionClass) -> str
        Set: FontName(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontSize(self) -> Int16:
        """
        Get: FontSize(self: _ToggleButtonInOptionClass) -> Int16
        Set: FontSize(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontUnderline(self) -> bool:
        """
        Get: FontUnderline(self: _ToggleButtonInOptionClass) -> bool
        Set: FontUnderline(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def FontWeight(self) -> Int16:
        """
        Get: FontWeight(self: _ToggleButtonInOptionClass) -> Int16
        Set: FontWeight(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ForeColor(self) -> int:
        """
        Get: ForeColor(self: _ToggleButtonInOptionClass) -> int
        Set: ForeColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ForeShade(self) -> Single:
        """
        Get: ForeShade(self: _ToggleButtonInOptionClass) -> Single
        Set: ForeShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ForeThemeColorIndex(self) -> int:
        """
        Get: ForeThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: ForeThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ForeTint(self) -> Single:
        """
        Get: ForeTint(self: _ToggleButtonInOptionClass) -> Single
        Set: ForeTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Glow(self) -> int:
        """
        Get: Glow(self: _ToggleButtonInOptionClass) -> int
        Set: Glow(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Gradient(self) -> int:
        """
        Get: Gradient(self: _ToggleButtonInOptionClass) -> int
        Set: Gradient(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineColor(self) -> int:
        """
        Get: GridlineColor(self: _ToggleButtonInOptionClass) -> int
        Set: GridlineColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineShade(self) -> Single:
        """
        Get: GridlineShade(self: _ToggleButtonInOptionClass) -> Single
        Set: GridlineShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleBottom(self) -> Byte:
        """
        Get: GridlineStyleBottom(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineStyleBottom(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleLeft(self) -> Byte:
        """
        Get: GridlineStyleLeft(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineStyleLeft(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleRight(self) -> Byte:
        """
        Get: GridlineStyleRight(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineStyleRight(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineStyleTop(self) -> Byte:
        """
        Get: GridlineStyleTop(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineStyleTop(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineThemeColorIndex(self) -> int:
        """
        Get: GridlineThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: GridlineThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineTint(self) -> Single:
        """
        Get: GridlineTint(self: _ToggleButtonInOptionClass) -> Single
        Set: GridlineTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthBottom(self) -> Byte:
        """
        Get: GridlineWidthBottom(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineWidthBottom(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthLeft(self) -> Byte:
        """
        Get: GridlineWidthLeft(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineWidthLeft(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthRight(self) -> Byte:
        """
        Get: GridlineWidthRight(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineWidthRight(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def GridlineWidthTop(self) -> Byte:
        """
        Get: GridlineWidthTop(self: _ToggleButtonInOptionClass) -> Byte
        Set: GridlineWidthTop(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Height(self) -> Int16:
        """
        Get: Height(self: _ToggleButtonInOptionClass) -> Int16
        Set: Height(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HelpContextId(self) -> int:
        """
        Get: HelpContextId(self: _ToggleButtonInOptionClass) -> int
        Set: HelpContextId(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HideDuplicates(self) -> bool:
        """
        Get: HideDuplicates(self: _ToggleButtonInOptionClass) -> bool
        Set: HideDuplicates(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HorizontalAnchor(self) -> AcHorizontalAnchor:
        """
        Get: HorizontalAnchor(self: _ToggleButtonInOptionClass) -> AcHorizontalAnchor
        Set: HorizontalAnchor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverColor(self) -> int:
        """
        Get: HoverColor(self: _ToggleButtonInOptionClass) -> int
        Set: HoverColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverForeColor(self) -> int:
        """
        Get: HoverForeColor(self: _ToggleButtonInOptionClass) -> int
        Set: HoverForeColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverForeShade(self) -> Single:
        """
        Get: HoverForeShade(self: _ToggleButtonInOptionClass) -> Single
        Set: HoverForeShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverForeThemeColorIndex(self) -> int:
        """
        Get: HoverForeThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: HoverForeThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverForeTint(self) -> Single:
        """
        Get: HoverForeTint(self: _ToggleButtonInOptionClass) -> Single
        Set: HoverForeTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverShade(self) -> Single:
        """
        Get: HoverShade(self: _ToggleButtonInOptionClass) -> Single
        Set: HoverShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverThemeColorIndex(self) -> int:
        """
        Get: HoverThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: HoverThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def HoverTint(self) -> Single:
        """
        Get: HoverTint(self: _ToggleButtonInOptionClass) -> Single
        Set: HoverTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def InSelection(self) -> bool:
        """
        Get: InSelection(self: _ToggleButtonInOptionClass) -> bool
        Set: InSelection(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def IsVisible(self) -> bool:
        """
        Get: IsVisible(self: _ToggleButtonInOptionClass) -> bool
        Set: IsVisible(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def LabelAlign(self) -> Byte:
        """
        Get: LabelAlign(self: _ToggleButtonInOptionClass) -> Byte
        Set: LabelAlign(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def LabelX(self) -> Int16:
        """
        Get: LabelX(self: _ToggleButtonInOptionClass) -> Int16
        Set: LabelX(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def LabelY(self) -> Int16:
        """
        Get: LabelY(self: _ToggleButtonInOptionClass) -> Int16
        Set: LabelY(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Layout(self) -> AcLayoutType:
        """ Get: Layout(self: _ToggleButtonInOptionClass) -> AcLayoutType """
        ...

    @property
    def LayoutID(self) -> int:
        """ Get: LayoutID(self: _ToggleButtonInOptionClass) -> int """
        ...

    @property
    def Left(self) -> Int16:
        """
        Get: Left(self: _ToggleButtonInOptionClass) -> Int16
        Set: Left(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def LeftPadding(self) -> Int16:
        """
        Get: LeftPadding(self: _ToggleButtonInOptionClass) -> Int16
        Set: LeftPadding(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Locked(self) -> bool:
        """
        Get: Locked(self: _ToggleButtonInOptionClass) -> bool
        Set: Locked(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Get: Name(self: _ToggleButtonInOptionClass) -> str
        Set: Name(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ObjectPalette(self) -> object:
        """
        Get: ObjectPalette(self: _ToggleButtonInOptionClass) -> object
        Set: ObjectPalette(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OldValue(self) -> object:
        """ Get: OldValue(self: _ToggleButtonInOptionClass) -> object """
        ...

    @property
    def OnClick(self) -> str:
        """
        Get: OnClick(self: _ToggleButtonInOptionClass) -> str
        Set: OnClick(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnClickMacro(self) -> str:
        """
        Get: OnClickMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnClickMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnDblClick(self) -> str:
        """
        Get: OnDblClick(self: _ToggleButtonInOptionClass) -> str
        Set: OnDblClick(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnDblClickMacro(self) -> str:
        """
        Get: OnDblClickMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnDblClickMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnEnter(self) -> str:
        """
        Get: OnEnter(self: _ToggleButtonInOptionClass) -> str
        Set: OnEnter(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnEnterMacro(self) -> str:
        """
        Get: OnEnterMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnEnterMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnExit(self) -> str:
        """
        Get: OnExit(self: _ToggleButtonInOptionClass) -> str
        Set: OnExit(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnExitMacro(self) -> str:
        """
        Get: OnExitMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnExitMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnGotFocus(self) -> str:
        """
        Get: OnGotFocus(self: _ToggleButtonInOptionClass) -> str
        Set: OnGotFocus(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnGotFocusMacro(self) -> str:
        """
        Get: OnGotFocusMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnGotFocusMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyDown(self) -> str:
        """
        Get: OnKeyDown(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyDown(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyDownMacro(self) -> str:
        """
        Get: OnKeyDownMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyDownMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyPress(self) -> str:
        """
        Get: OnKeyPress(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyPress(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyPressMacro(self) -> str:
        """
        Get: OnKeyPressMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyPressMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyUp(self) -> str:
        """
        Get: OnKeyUp(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyUp(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnKeyUpMacro(self) -> str:
        """
        Get: OnKeyUpMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnKeyUpMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnLostFocus(self) -> str:
        """
        Get: OnLostFocus(self: _ToggleButtonInOptionClass) -> str
        Set: OnLostFocus(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnLostFocusMacro(self) -> str:
        """
        Get: OnLostFocusMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnLostFocusMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseDown(self) -> str:
        """
        Get: OnMouseDown(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseDown(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseDownMacro(self) -> str:
        """
        Get: OnMouseDownMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseDownMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseMove(self) -> str:
        """
        Get: OnMouseMove(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseMove(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseMoveMacro(self) -> str:
        """
        Get: OnMouseMoveMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseMoveMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseUp(self) -> str:
        """
        Get: OnMouseUp(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseUp(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OnMouseUpMacro(self) -> str:
        """
        Get: OnMouseUpMacro(self: _ToggleButtonInOptionClass) -> str
        Set: OnMouseUpMacro(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def OptionValue(self) -> int:
        """
        Get: OptionValue(self: _ToggleButtonInOptionClass) -> int
        Set: OptionValue(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Parent(self) -> object:
        """ Get: Parent(self: _ToggleButtonInOptionClass) -> object """
        ...

    @property
    def Picture(self) -> str:
        """
        Get: Picture(self: _ToggleButtonInOptionClass) -> str
        Set: Picture(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PictureData(self) -> object:
        """
        Get: PictureData(self: _ToggleButtonInOptionClass) -> object
        Set: PictureData(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PictureType(self) -> Byte:
        """
        Get: PictureType(self: _ToggleButtonInOptionClass) -> Byte
        Set: PictureType(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedColor(self) -> int:
        """
        Get: PressedColor(self: _ToggleButtonInOptionClass) -> int
        Set: PressedColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedForeColor(self) -> int:
        """
        Get: PressedForeColor(self: _ToggleButtonInOptionClass) -> int
        Set: PressedForeColor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedForeShade(self) -> Single:
        """
        Get: PressedForeShade(self: _ToggleButtonInOptionClass) -> Single
        Set: PressedForeShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedForeThemeColorIndex(self) -> int:
        """
        Get: PressedForeThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: PressedForeThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedForeTint(self) -> Single:
        """
        Get: PressedForeTint(self: _ToggleButtonInOptionClass) -> Single
        Set: PressedForeTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedShade(self) -> Single:
        """
        Get: PressedShade(self: _ToggleButtonInOptionClass) -> Single
        Set: PressedShade(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedThemeColorIndex(self) -> int:
        """
        Get: PressedThemeColorIndex(self: _ToggleButtonInOptionClass) -> int
        Set: PressedThemeColorIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def PressedTint(self) -> Single:
        """
        Get: PressedTint(self: _ToggleButtonInOptionClass) -> Single
        Set: PressedTint(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Properties(self) -> Properties:
        """ Get: Properties(self: _ToggleButtonInOptionClass) -> Properties """
        ...

    @property
    def QuickStyle(self) -> int:
        """
        Get: QuickStyle(self: _ToggleButtonInOptionClass) -> int
        Set: QuickStyle(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def QuickStyleMask(self) -> int:
        """
        Get: QuickStyleMask(self: _ToggleButtonInOptionClass) -> int
        Set: QuickStyleMask(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ReadingOrder(self) -> Byte:
        """
        Get: ReadingOrder(self: _ToggleButtonInOptionClass) -> Byte
        Set: ReadingOrder(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def RightPadding(self) -> Int16:
        """
        Get: RightPadding(self: _ToggleButtonInOptionClass) -> Int16
        Set: RightPadding(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Section(self) -> Int16:
        """
        Get: Section(self: _ToggleButtonInOptionClass) -> Int16
        Set: Section(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Shadow(self) -> int:
        """
        Get: Shadow(self: _ToggleButtonInOptionClass) -> int
        Set: Shadow(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Shape(self) -> int:
        """
        Get: Shape(self: _ToggleButtonInOptionClass) -> int
        Set: Shape(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ShortcutMenuBar(self) -> str:
        """
        Get: ShortcutMenuBar(self: _ToggleButtonInOptionClass) -> str
        Set: ShortcutMenuBar(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def SoftEdges(self) -> int:
        """
        Get: SoftEdges(self: _ToggleButtonInOptionClass) -> int
        Set: SoftEdges(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def StatusBarText(self) -> str:
        """
        Get: StatusBarText(self: _ToggleButtonInOptionClass) -> str
        Set: StatusBarText(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def TabIndex(self) -> Int16:
        """
        Get: TabIndex(self: _ToggleButtonInOptionClass) -> Int16
        Set: TabIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def TabStop(self) -> bool:
        """
        Get: TabStop(self: _ToggleButtonInOptionClass) -> bool
        Set: TabStop(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Tag(self) -> str:
        """
        Get: Tag(self: _ToggleButtonInOptionClass) -> str
        Set: Tag(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def TextFontCharSet(self) -> Byte:
        """
        Get: TextFontCharSet(self: _ToggleButtonInOptionClass) -> Byte
        Set: TextFontCharSet(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ThemeFontIndex(self) -> int:
        """
        Get: ThemeFontIndex(self: _ToggleButtonInOptionClass) -> int
        Set: ThemeFontIndex(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Top(self) -> Int16:
        """
        Get: Top(self: _ToggleButtonInOptionClass) -> Int16
        Set: Top(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def TopPadding(self) -> Int16:
        """
        Get: TopPadding(self: _ToggleButtonInOptionClass) -> Int16
        Set: TopPadding(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def TripleState(self) -> bool:
        """
        Get: TripleState(self: _ToggleButtonInOptionClass) -> bool
        Set: TripleState(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def UseTheme(self) -> bool:
        """
        Get: UseTheme(self: _ToggleButtonInOptionClass) -> bool
        Set: UseTheme(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ValidationRule(self) -> str:
        """
        Get: ValidationRule(self: _ToggleButtonInOptionClass) -> str
        Set: ValidationRule(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def ValidationText(self) -> str:
        """
        Get: ValidationText(self: _ToggleButtonInOptionClass) -> str
        Set: ValidationText(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Value(self) -> object:
        """
        Get: Value(self: _ToggleButtonInOptionClass) -> object
        Set: Value(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def VerticalAnchor(self) -> AcVerticalAnchor:
        """
        Get: VerticalAnchor(self: _ToggleButtonInOptionClass) -> AcVerticalAnchor
        Set: VerticalAnchor(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Visible(self) -> bool:
        """
        Get: Visible(self: _ToggleButtonInOptionClass) -> bool
        Set: Visible(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def Width(self) -> Int16:
        """
        Get: Width(self: _ToggleButtonInOptionClass) -> Int16
        Set: Width(self: _ToggleButtonInOptionClass) = value
        """
        ...

    @property
    def _Name(self) -> str:
        """
        Get: _Name(self: _ToggleButtonInOptionClass) -> str
        Set: _Name(self: _ToggleButtonInOptionClass) = value
        """
        ...


    def accDoDefaultAction(self, varChild:object): # -> 
        """ accDoDefaultAction(self: _ToggleButtonInOptionClass, varChild: object) """
        ...

    def accHitTest(self, xLeft:int, yTop:int) -> object:
        """ accHitTest(self: _ToggleButtonInOptionClass, xLeft: int, yTop: int) -> object """
        ...

    def accLocation(self, pxLeft, pyTop, pcxWidth, pcyHeight, varChild) -> Tuple_[int, int, int, int]:
        """ accLocation(self: _ToggleButtonInOptionClass, varChild: object) -> (int, int, int, int) """
        ...

    def accNavigate(self, navDir:int, varStart:object) -> object:
        """ accNavigate(self: _ToggleButtonInOptionClass, navDir: int, varStart: object) -> object """
        ...

    def accSelect(self, flagsSelect:int, varChild:object): # -> 
        """ accSelect(self: _ToggleButtonInOptionClass, flagsSelect: int, varChild: object) """
        ...

    def add_AfterUpdate(self): # -> 
        """ add_AfterUpdate(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def add_BeforeUpdate(self): # -> 
        """ add_BeforeUpdate(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def add_Click(self): # -> 
        """ add_Click(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_ClickEventHandler) """
        ...

    def add_DblClick(self): # -> 
        """ add_DblClick(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_DblClickEventHandler) """
        ...

    def add_Enter(self): # -> 
        """ add_Enter(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_EnterEventHandler) """
        ...

    def add_Exit(self): # -> 
        """ add_Exit(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_ExitEventHandler) """
        ...

    def Goto(self): # -> 
        """ Goto(self: _ToggleButtonInOptionClass) """
        ...

    def IsMemberSafe(self, dispid:int) -> bool:
        """ IsMemberSafe(self: _ToggleButtonInOptionClass, dispid: int) -> bool """
        ...

    def Move(self, Left:object, Top:object, Width:object, Height:object): # -> 
        """ Move(self: _ToggleButtonInOptionClass, Left: object, Top: object, Width: object, Height: object) """
        ...

    def remove_AfterUpdate(self): # -> 
        """ remove_AfterUpdate(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_AfterUpdateEventHandler) """
        ...

    def remove_BeforeUpdate(self): # -> 
        """ remove_BeforeUpdate(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_BeforeUpdateEventHandler) """
        ...

    def remove_Click(self): # -> 
        """ remove_Click(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_ClickEventHandler) """
        ...

    def remove_DblClick(self): # -> 
        """ remove_DblClick(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_DblClickEventHandler) """
        ...

    def remove_Enter(self): # -> 
        """ remove_Enter(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_EnterEventHandler) """
        ...

    def remove_Exit(self): # -> 
        """ remove_Exit(self: _ToggleButtonInOptionClass, : DispToggleButtonEvents_ExitEventHandler) """
        ...

    def Requery(self): # -> 
        """ Requery(self: _ToggleButtonInOptionClass) """
        ...

    def SetFocus(self): # -> 
        """ SetFocus(self: _ToggleButtonInOptionClass) """
        ...

    def SizeToFit(self): # -> 
        """ SizeToFit(self: _ToggleButtonInOptionClass) """
        ...

    def Undo(self): # -> 
        """ Undo(self: _ToggleButtonInOptionClass) """
        ...

    def _Evaluate(self, bstrExpr:str, ppsa:Array) -> Tuple_[object, Array]:
        """ _Evaluate(self: _ToggleButtonInOptionClass, bstrExpr: str, *ppsa: Array[object]) -> (object, Array[object]) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_GotFocus(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_GotFocus(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_KeyDown(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_KeyDown(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_KeyPress(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_KeyPress(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_KeyUp(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_KeyUp(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_LostFocus(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_LostFocus(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_MouseDown(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_MouseDown(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_MouseMove(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_MouseMove(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_add_MouseUp(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_add_MouseUp(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_GotFocus(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_GotFocus(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_KeyDown(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_KeyDown(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_KeyPress(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_KeyPress(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_KeyUp(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_KeyUp(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_LostFocus(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_LostFocus(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_MouseDown(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_MouseDown(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_MouseMove(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_MouseMove(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def _ToggleButtonInOptionEvents_Event_remove_MouseUp(self): # -> 
        """ _ToggleButtonInOptionEvents_Event_remove_MouseUp(self: _ToggleButtonInOptionClass, : _ToggleButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def __getitem__(self, *args): #cannot find CLR method
        """ x.__getitem__(y) <==> x[y] """
        ...

    def __setitem__(self, *args): #cannot find CLR method
        """ x.__setitem__(i, y) <==> x[i]= """
        ...

    Click = ...
    DblClick = ...
    DispToggleButtonEvents_Event_AfterUpdate = ...
    DispToggleButtonEvents_Event_BeforeUpdate = ...
    Enter = ...
    Exit = ...
    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...
    _ToggleButtonInOptionEvents_Event_GotFocus = ...
    _ToggleButtonInOptionEvents_Event_KeyDown = ...
    _ToggleButtonInOptionEvents_Event_KeyPress = ...
    _ToggleButtonInOptionEvents_Event_KeyUp = ...
    _ToggleButtonInOptionEvents_Event_LostFocus = ...
    _ToggleButtonInOptionEvents_Event_MouseDown = ...
    _ToggleButtonInOptionEvents_Event_MouseMove = ...
    _ToggleButtonInOptionEvents_Event_MouseUp = ...


class _ToggleButtonInOptionEvents: # skipped bases: <type 'object'>
    """ no doc """
    def GotFocus(self): # -> 
        """ GotFocus(self: _ToggleButtonInOptionEvents) """
        ...

    def KeyDown(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyDown(self: _ToggleButtonInOptionEvents) -> (Int16, Int16) """
        ...

    def KeyPress(self, KeyAscii) -> Int16:
        """ KeyPress(self: _ToggleButtonInOptionEvents) -> Int16 """
        ...

    def KeyUp(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ KeyUp(self: _ToggleButtonInOptionEvents) -> (Int16, Int16) """
        ...

    def LostFocus(self): # -> 
        """ LostFocus(self: _ToggleButtonInOptionEvents) """
        ...

    def MouseDown(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseDown(self: _ToggleButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseMove(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseMove(self: _ToggleButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...

    def MouseUp(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ MouseUp(self: _ToggleButtonInOptionEvents) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonInOptionEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    def add_GotFocus(self): # -> 
        """ add_GotFocus(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def add_KeyDown(self): # -> 
        """ add_KeyDown(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def add_KeyPress(self): # -> 
        """ add_KeyPress(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def add_KeyUp(self): # -> 
        """ add_KeyUp(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def add_LostFocus(self): # -> 
        """ add_LostFocus(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def add_MouseDown(self): # -> 
        """ add_MouseDown(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def add_MouseMove(self): # -> 
        """ add_MouseMove(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def add_MouseUp(self): # -> 
        """ add_MouseUp(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseUpEventHandler) """
        ...

    def remove_GotFocus(self): # -> 
        """ remove_GotFocus(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_GotFocusEventHandler) """
        ...

    def remove_KeyDown(self): # -> 
        """ remove_KeyDown(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyDownEventHandler) """
        ...

    def remove_KeyPress(self): # -> 
        """ remove_KeyPress(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyPressEventHandler) """
        ...

    def remove_KeyUp(self): # -> 
        """ remove_KeyUp(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_KeyUpEventHandler) """
        ...

    def remove_LostFocus(self): # -> 
        """ remove_LostFocus(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_LostFocusEventHandler) """
        ...

    def remove_MouseDown(self): # -> 
        """ remove_MouseDown(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseDownEventHandler) """
        ...

    def remove_MouseMove(self): # -> 
        """ remove_MouseMove(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseMoveEventHandler) """
        ...

    def remove_MouseUp(self): # -> 
        """ remove_MouseUp(self: _ToggleButtonInOptionEvents_Event, : _ToggleButtonInOptionEvents_MouseUpEventHandler) """
        ...

    GotFocus = ...
    KeyDown = ...
    KeyPress = ...
    KeyUp = ...
    LostFocus = ...
    MouseDown = ...
    MouseMove = ...
    MouseUp = ...


class _ToggleButtonInOptionEvents_GotFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_GotFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonInOptionEvents_GotFocusEventHandler) """
        ...


class _ToggleButtonInOptionEvents_KeyDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_KeyDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ToggleButtonInOptionEvents_KeyDownEventHandler) -> (Int16, Int16) """
        ...


class _ToggleButtonInOptionEvents_KeyPressEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_KeyPressEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyAscii) -> Int16:
        """ Invoke(self: _ToggleButtonInOptionEvents_KeyPressEventHandler) -> Int16 """
        ...


class _ToggleButtonInOptionEvents_KeyUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_KeyUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, KeyCode, Shift) -> Tuple_[Int16, Int16]:
        """ Invoke(self: _ToggleButtonInOptionEvents_KeyUpEventHandler) -> (Int16, Int16) """
        ...


class _ToggleButtonInOptionEvents_LostFocusEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_LostFocusEventHandler(: object, : UIntPtr) """
    def Invoke(self): # -> 
        """ Invoke(self: _ToggleButtonInOptionEvents_LostFocusEventHandler) """
        ...


class _ToggleButtonInOptionEvents_MouseDownEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_MouseDownEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonInOptionEvents_MouseDownEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonInOptionEvents_MouseMoveEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_MouseMoveEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonInOptionEvents_MouseMoveEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonInOptionEvents_MouseUpEventHandler(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ _ToggleButtonInOptionEvents_MouseUpEventHandler(: object, : UIntPtr) """
    def Invoke(self, Button, Shift, X, Y) -> Tuple_[Int16, Int16, Single, Single]:
        """ Invoke(self: _ToggleButtonInOptionEvents_MouseUpEventHandler) -> (Int16, Int16, Single, Single) """
        ...


class _ToggleButtonInOptionEvents_SinkHelper(_ToggleButtonInOptionEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...
    m_GotFocusDelegate = ...
    m_KeyDownDelegate = ...
    m_KeyPressDelegate = ...
    m_KeyUpDelegate = ...
    m_LostFocusDelegate = ...
    m_MouseDownDelegate = ...
    m_MouseMoveDelegate = ...
    m_MouseUpDelegate = ...


class __ControlInReportEvents: # skipped bases: <type 'object'>
    """ no doc """
    pass

class __ControlInReportEvents_Event: # skipped bases: <type 'object'>
    """ no doc """
    pass

class __ControlInReportEvents_SinkHelper(__ControlInReportEvents): # skipped bases: <type 'object'>
    """ no doc """
    m_dwCookie = ...


class __Help: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AllowBreakIntoCode(self) -> object:
        """
        Get: AllowBreakIntoCode(self: __Help) -> object
        Set: AllowBreakIntoCode(self: __Help) = value
        """
        ...

    @property
    def AllowBuiltInToolbars(self) -> object:
        """
        Get: AllowBuiltInToolbars(self: __Help) -> object
        Set: AllowBuiltInToolbars(self: __Help) = value
        """
        ...

    @property
    def AllowBypassKey(self) -> object:
        """
        Get: AllowBypassKey(self: __Help) -> object
        Set: AllowBypassKey(self: __Help) = value
        """
        ...

    @property
    def AllowFullMenus(self) -> object:
        """
        Get: AllowFullMenus(self: __Help) -> object
        Set: AllowFullMenus(self: __Help) = value
        """
        ...

    @property
    def AllowSpecialKeys(self) -> object:
        """
        Get: AllowSpecialKeys(self: __Help) -> object
        Set: AllowSpecialKeys(self: __Help) = value
        """
        ...

    @property
    def AllowToolbarChanges(self) -> object:
        """
        Get: AllowToolbarChanges(self: __Help) -> object
        Set: AllowToolbarChanges(self: __Help) = value
        """
        ...

    @property
    def AllowZeroLength(self) -> object:
        """
        Get: AllowZeroLength(self: __Help) -> object
        Set: AllowZeroLength(self: __Help) = value
        """
        ...

    @property
    def AppIcon(self) -> object:
        """
        Get: AppIcon(self: __Help) -> object
        Set: AppIcon(self: __Help) = value
        """
        ...

    @property
    def AppTitle(self) -> object:
        """
        Get: AppTitle(self: __Help) -> object
        Set: AppTitle(self: __Help) = value
        """
        ...

    @property
    def DataType(self) -> object:
        """
        Get: DataType(self: __Help) -> object
        Set: DataType(self: __Help) = value
        """
        ...

    @property
    def Description(self) -> object:
        """
        Get: Description(self: __Help) -> object
        Set: Description(self: __Help) = value
        """
        ...

    @property
    def DisplayControl(self) -> object:
        """
        Get: DisplayControl(self: __Help) -> object
        Set: DisplayControl(self: __Help) = value
        """
        ...

    @property
    def FieldName(self) -> object:
        """
        Get: FieldName(self: __Help) -> object
        Set: FieldName(self: __Help) = value
        """
        ...

    @property
    def FieldSize(self) -> object:
        """
        Get: FieldSize(self: __Help) -> object
        Set: FieldSize(self: __Help) = value
        """
        ...

    @property
    def Indexed(self) -> object:
        """
        Get: Indexed(self: __Help) -> object
        Set: Indexed(self: __Help) = value
        """
        ...

    @property
    def LogMessages(self) -> object:
        """
        Get: LogMessages(self: __Help) -> object
        Set: LogMessages(self: __Help) = value
        """
        ...

    @property
    def MDE(self) -> object:
        """
        Get: MDE(self: __Help) -> object
        Set: MDE(self: __Help) = value
        """
        ...

    @property
    def NewValues(self) -> object:
        """
        Get: NewValues(self: __Help) -> object
        Set: NewValues(self: __Help) = value
        """
        ...

    @property
    def ODBCConnectStr(self) -> object:
        """
        Get: ODBCConnectStr(self: __Help) -> object
        Set: ODBCConnectStr(self: __Help) = value
        """
        ...

    @property
    def ProjectName(self) -> object:
        """
        Get: ProjectName(self: __Help) -> object
        Set: ProjectName(self: __Help) = value
        """
        ...

    @property
    def ReplicationConflictFunction(self) -> object:
        """
        Get: ReplicationConflictFunction(self: __Help) -> object
        Set: ReplicationConflictFunction(self: __Help) = value
        """
        ...

    @property
    def Required(self) -> object:
        """
        Get: Required(self: __Help) -> object
        Set: Required(self: __Help) = value
        """
        ...

    @property
    def StartUpForm(self) -> object:
        """
        Get: StartUpForm(self: __Help) -> object
        Set: StartUpForm(self: __Help) = value
        """
        ...

    @property
    def StartUpMenuBar(self) -> object:
        """
        Get: StartUpMenuBar(self: __Help) -> object
        Set: StartUpMenuBar(self: __Help) = value
        """
        ...

    @property
    def StartUpShortcutMenuBar(self) -> object:
        """
        Get: StartUpShortcutMenuBar(self: __Help) -> object
        Set: StartUpShortcutMenuBar(self: __Help) = value
        """
        ...

    @property
    def StartUpShowDBWindow(self) -> object:
        """
        Get: StartUpShowDBWindow(self: __Help) -> object
        Set: StartUpShowDBWindow(self: __Help) = value
        """
        ...

    @property
    def StartUpShowStatusBar(self) -> object:
        """
        Get: StartUpShowStatusBar(self: __Help) -> object
        Set: StartUpShowStatusBar(self: __Help) = value
        """
        ...



# variables with complex values

