# encoding: utf-8
# module Microsoft.SqlServer.Management.SqlParser.Binder calls itself Binder
# from Microsoft.SqlServer.Management.SqlParser, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91
# by generator 1.145
""" no doc """
from __future__ import annotations
from Microsoft.SqlServer.Management.SqlParser.Metadata import (
    IMetadataObject, IServer)

from Microsoft.SqlServer.Management.SqlParser.MetadataProvider import (
    IMetadataProvider)

from System import Enum

from System.Collections import IEnumerable

from System.Data.Common.EntitySql import ParseResult

"""The following names are not found in the module: field#
"""

# no functions
# classes

class BinderProvider: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    @staticmethod
    def CreateBinder(metadataProvider:IMetadataProvider) -> IBinder:
        """ CreateBinder(metadataProvider: IMetadataProvider) -> IBinder """
        ...

    __all__: list = ...


class BindMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum BindMode, values: Batch (0), Build (1) """
    Batch: BindMode = ...
    Build: BindMode = ...
    value__ = ...


class CompletionContext(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum (flags) CompletionContext, values: AllBuiltins (24576), BuiltinFunctions (16384), ColumnAliases (16), Columns (4), ConnectedDatabaseAsymmetricKeys (262144), ConnectedDatabaseCertificates (1048576), Credentials (65536), DatabaseQualifiedScalarValuedFunctions (6152), DatabaseQualifiedStoredProcedures (7168), DatabaseQualifiedTables (6208), DatabaseQualifiedTableValuedFunctions (6176), DatabaseQualifiedViews (6272), Databases (2048), Datepart (32768), GlobalVariables (8192), LocalTableExpressionsOnly (1), Logins (2097152), None (0), Scalar (30730), ScalarPlusAliases (30974), ScalarValuedFunctions (8), ScalarVariables (2), Schemas (4096), SelectScalar (30958), SelectTabular (6624), ServerAsymmetricKeys (131072), ServerCertificates (524288), StoredProcedures (1024), SynyonymBaseObjects (232), SystemDataTypes (8388608), Tables (64), TablesExpressions (1504), TablesOrViews (192), TableValuedFunctions (32), TableVariables (256), Users (4194304), Views (128) """
    AllBuiltins: CompletionContext = ...
    BuiltinFunctions: CompletionContext = ...
    ColumnAliases: CompletionContext = ...
    Columns: CompletionContext = ...
    ConnectedDatabaseAsymmetricKeys: CompletionContext = ...
    ConnectedDatabaseCertificates: CompletionContext = ...
    Credentials: CompletionContext = ...
    DatabaseQualifiedScalarValuedFunctions: CompletionContext = ...
    DatabaseQualifiedStoredProcedures: CompletionContext = ...
    DatabaseQualifiedTables: CompletionContext = ...
    DatabaseQualifiedTableValuedFunctions: CompletionContext = ...
    DatabaseQualifiedViews: CompletionContext = ...
    Databases: CompletionContext = ...
    Datepart: CompletionContext = ...
    GlobalVariables: CompletionContext = ...
    LocalTableExpressionsOnly: CompletionContext = ...
    Logins: CompletionContext = ...
    Scalar: CompletionContext = ...
    ScalarPlusAliases: CompletionContext = ...
    ScalarValuedFunctions: CompletionContext = ...
    ScalarVariables: CompletionContext = ...
    Schemas: CompletionContext = ...
    SelectScalar: CompletionContext = ...
    SelectTabular: CompletionContext = ...
    ServerAsymmetricKeys: CompletionContext = ...
    ServerCertificates: CompletionContext = ...
    StoredProcedures: CompletionContext = ...
    SynyonymBaseObjects: CompletionContext = ...
    SystemDataTypes: CompletionContext = ...
    Tables: CompletionContext = ...
    TablesExpressions: CompletionContext = ...
    TablesOrViews: CompletionContext = ...
    TableValuedFunctions: CompletionContext = ...
    TableVariables: CompletionContext = ...
    Users: CompletionContext = ...
    value__ = ...
    Views: CompletionContext = ...


class CteBindMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum (flags) CteBindMode, values: Anchor (1), AnchorOrRecursive (3), None (0), Recursive (2) """
    Anchor: CteBindMode = ...
    AnchorOrRecursive: CteBindMode = ...
    Recursive: CteBindMode = ...
    value__ = ...


class CteQueryFlags(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum (flags) CteQueryFlags, values: HasSelfReference (2), HasUnionAll (1), None (0) """
    HasSelfReference: CteQueryFlags = ...
    HasUnionAll: CteQueryFlags = ...
    value__ = ...


class DependencyDiscoveryResult: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    @property
    def Dependencies(self) -> IEnumerable:
        """ Get: Dependencies(self: DependencyDiscoveryResult) -> IEnumerable[ObjectDependency] """
        ...

    @property
    def Errors(self) -> IEnumerable:
        """ Get: Errors(self: DependencyDiscoveryResult) -> IEnumerable[Error] """
        ...

    @property
    def References(self) -> IEnumerable:
        """ Get: References(self: DependencyDiscoveryResult) -> IEnumerable[IMetadataObject] """
        ...



class DependencyDiscoveryUtils: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    @staticmethod
    def FindDependencies(parseResult:ParseResult) -> DependencyDiscoveryResult:
        """ FindDependencies(parseResult: ParseResult) -> DependencyDiscoveryResult """
        ...

    __all__: list = ...


class DependencyType(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum DependencyType, values: CreateTime (2), ExecuteTime (1), RegularPreventsAnyChange (4), RegularPreventsDrop (3), Unknown (0) """
    CreateTime: DependencyType = ...
    ExecuteTime: DependencyType = ...
    RegularPreventsAnyChange: DependencyType = ...
    RegularPreventsDrop: DependencyType = ...
    Unknown: DependencyType = ...
    value__ = ...


class IBinder: # skipped bases: <type 'object'>
    """ no doc """
    def Bind(self, parseResults:IEnumerable, contextDatabaseName:str, bindMode:BindMode) -> IServer:
        """ Bind(self: IBinder, parseResults: IEnumerable[ParseResult], contextDatabaseName: str, bindMode: BindMode) -> IServer """
        ...


class ObjectDependency: # skipped bases: <type 'object'>, <type 'object'>
    """ ObjectDependency(targetObject: IMetadataObject, dependencyType: DependencyType) """
    @property
    def DependencyType(self) -> DependencyType:
        """ Get: DependencyType(self: ObjectDependency) -> DependencyType """
        ...

    @property
    def TargetObject(self) -> IMetadataObject:
        """ Get: TargetObject(self: ObjectDependency) -> IMetadataObject """
        ...


    def Equals(self, *__args:object) -> bool:
        """
        Equals(self: ObjectDependency, obj: object) -> bool
        Equals(self: ObjectDependency, other: ObjectDependency) -> bool
        """
        ...

    def GetHashCode(self) -> int:
        """ GetHashCode(self: ObjectDependency) -> int """
        ...

    def __eq__(self, *args): #cannot find CLR method
        """ x.__eq__(y) <==> x==yx.__eq__(y) <==> x==y """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class TemporaryBindMode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum TemporaryBindMode, values: ColumnAssignmentTarget (1), MergeActionSource (2), MergeActionTarget (3), None (0) """
    ColumnAssignmentTarget: TemporaryBindMode = ...
    MergeActionSource: TemporaryBindMode = ...
    MergeActionTarget: TemporaryBindMode = ...
    value__ = ...


