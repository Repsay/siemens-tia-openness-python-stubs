# encoding: utf-8
# module Siemens.Engineering.HW calls itself HW
# from Siemens.Engineering, Version=15.1.0.0, Culture=neutral, PublicKeyToken=d29ec89bac048f84
# by generator 1.145
""" no doc """
from __future__ import annotations
from Siemens.Engineering import (IEngineeringAssociation,
    IEngineeringComposition, IEngineeringObject, IEngineeringServiceProvider)

from Siemens.Engineering.Compare import CompareResult

from Siemens.Engineering.HW.Features import (AddressControllerAssociation,
    HwIdentifierControllerAssociation)

from Siemens.Engineering.Library.MasterCopies import (IMasterCopySource,
    IMasterCopyTarget, MasterCopy)

from Siemens.Engineering.SW.Blocks import OB

from System import Enum, IEquatable, Int64

from System.Collections import IList

"""The following names are not found in the module: (
    IInternalAssociationAccess, IInternalCompositionAccess,
    IInternalObjectAccess, field#)
"""

from Siemens import IInternalAssociationAccess, IInternalCompositionAccess, IInternalObjectAccess

# no functions
# classes

class Address(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ The object holding the address data """
    @property
    def AddressControllers(self) -> AddressControllerAssociation:
        """
        Address's associated AddressControllers

        Get: AddressControllers(self: Address) -> AddressControllerAssociation
        """
        ...

    @property
    def IoType(self) -> AddressIoType:
        """
        The IO type of the address

        Get: IoType(self: Address) -> AddressIoType
        """
        ...

    @property
    def Length(self) -> int:
        """
        Length of the address

        Get: Length(self: Address) -> int

        Set: Length(self: Address) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: Address) -> IEngineeringObject
        """
        ...

    @property
    def StartAddress(self) -> int:
        """
        The start address of this address

        Get: StartAddress(self: Address) -> int

        Set: StartAddress(self: Address) = value
        """
        ...


    def AssignProcessImageToOrganizationBlock(self, organizationBlock:OB): # ->
        """
        AssignProcessImageToOrganizationBlock(self: Address, organizationBlock: OB)

            Assign the current process image to the OB.

            organizationBlock: The organizational block to assign.
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: Address) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: Address) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class AddressAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated addresses """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: AddressAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: AddressAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: AddressAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Address](enumerable: IEnumerable[Address], value: Address) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class AddressComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of Addresses """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: AddressComposition) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: AddressComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: AddressComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Address](enumerable: IEnumerable[Address], value: Address) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class AddressContext(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    AddressContext of an address

    enum AddressContext, values: Device (1), Head (2), None (0)
    """
    Device: AddressContext = ...
    Head: AddressContext = ...
    value__ = ...


class AddressIoType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Address IO type

    enum AddressIoType, values: Diagnosis (64), Input (1), None (0), Output (2), Substitute (16)
    """
    Diagnosis: AddressIoType = ...
    Input: AddressIoType = ...
    Output: AddressIoType = ...
    Substitute: AddressIoType = ...
    value__ = ...


class ApplicationControlFunction(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ApplicationControlFunction

    enum ApplicationControlFunction, values: DahlanderReversingStarter (49), DahlanderStarter (48), DirectStarter (16), MoldedCaseCircuitBreaker (18), OverloadRelay (0), PoleChangingReversingStarter (65), PoleChangingStarter (64), Positioner1 (96), Positioner2 (97), Positioner3 (98), Positioner4 (99), Positioner5 (100), ReversingStarter (17), SoftStarter (112), SoftStarterWithReversingContactor (113), SolenoidValve (80), StarDeltaReversingStarter (33), StarDeltaStarter (32)
    """
    DahlanderReversingStarter: ApplicationControlFunction = ...
    DahlanderStarter: ApplicationControlFunction = ...
    DirectStarter: ApplicationControlFunction = ...
    MoldedCaseCircuitBreaker: ApplicationControlFunction = ...
    OverloadRelay: ApplicationControlFunction = ...
    PoleChangingReversingStarter: ApplicationControlFunction = ...
    PoleChangingStarter: ApplicationControlFunction = ...
    Positioner1: ApplicationControlFunction = ...
    Positioner2: ApplicationControlFunction = ...
    Positioner3: ApplicationControlFunction = ...
    Positioner4: ApplicationControlFunction = ...
    Positioner5: ApplicationControlFunction = ...
    ReversingStarter: ApplicationControlFunction = ...
    SoftStarter: ApplicationControlFunction = ...
    SoftStarterWithReversingContactor: ApplicationControlFunction = ...
    SolenoidValve: ApplicationControlFunction = ...
    StarDeltaReversingStarter: ApplicationControlFunction = ...
    StarDeltaStarter: ApplicationControlFunction = ...
    value__ = ...


class BasicType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property BasicType

    enum BasicType, values: None (0), Value1 (1), Value2 (2), Value3 (3)
    """
    Value1: BasicType = ...
    Value2: BasicType = ...
    Value3: BasicType = ...
    value__ = ...


class BaudRate(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Devices baud rate

    enum BaudRate, values: Baud12000000 (10), Baud1500000 (7), Baud187500 (5), Baud19200 (2), Baud3000000 (8), Baud45450 (3), Baud500000 (6), Baud6000000 (9), Baud93750 (4), Baud9600 (1), None (0)
    """
    Baud12000000: BaudRate = ...
    Baud1500000: BaudRate = ...
    Baud187500: BaudRate = ...
    Baud19200: BaudRate = ...
    Baud3000000: BaudRate = ...
    Baud45450: BaudRate = ...
    Baud500000: BaudRate = ...
    Baud6000000: BaudRate = ...
    Baud93750: BaudRate = ...
    Baud9600: BaudRate = ...
    value__ = ...


class BusProfile(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    BusProfile

    enum BusProfile, values: Dp (1), None (0), Standard (2), Universal (3), UserDefined (4)
    """
    Dp: BusProfile = ...
    Standard: BusProfile = ...
    Universal: BusProfile = ...
    UserDefined: BusProfile = ...
    value__ = ...


class CableLength(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property CableLength

    enum CableLength, values: Length1000m (6000), Length100m (600), Length20m (120), Length3000m (18000), Length50m (300), None (0)
    """
    Length1000m: CableLength = ...
    Length100m: CableLength = ...
    Length20m: CableLength = ...
    Length3000m: CableLength = ...
    Length50m: CableLength = ...
    value__ = ...


class CableName(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Cable Name

    enum CableName, values: Flexible_FO_Cable_62_5 (12884901890), Flexible_FO_Cable_9 (4294967298), FO_Ground_Cable (8589934595), FO_Standard_Cable_62_5 (12884901889), FO_Standard_Cable_9 (4294967297), FO_Standard_Cable_GP_50 (8589934593), FO_Trailing_Cable_GP (8589934594), GI_PCF_Standard_Cable (34359738369), GI_PCF_Trailing_Cable (34359738370), GI_POF_Standard_Cable (30064771073), GI_POF_Trailing_Cable (30064771074), None (0), PCF_Standard_Cable_GP (21474836481), PCF_Trailing_Cable_GP (21474836482), POF_Standard_Cable_GP (17179869185), POF_Trailing_Cable (17179869186)
    """
    Flexible_FO_Cable_62_5: CableName = ...
    Flexible_FO_Cable_9: CableName = ...
    FO_Ground_Cable: CableName = ...
    FO_Standard_Cable_62_5: CableName = ...
    FO_Standard_Cable_9: CableName = ...
    FO_Standard_Cable_GP_50: CableName = ...
    FO_Trailing_Cable_GP: CableName = ...
    GI_PCF_Standard_Cable: CableName = ...
    GI_PCF_Trailing_Cable: CableName = ...
    GI_POF_Standard_Cable: CableName = ...
    GI_POF_Trailing_Cable: CableName = ...
    PCF_Standard_Cable_GP: CableName = ...
    PCF_Trailing_Cable_GP: CableName = ...
    POF_Standard_Cable_GP: CableName = ...
    POF_Trailing_Cable: CableName = ...
    value__ = ...


class Channel(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Class representing a channel """
    @property
    def IoType(self) -> ChannelIoType:
        """
        The IO type of the channel

        Get: IoType(self: Channel) -> ChannelIoType
        """
        ...

    @property
    def Number(self) -> int:
        """
        The number of this channel

        Get: Number(self: Channel) -> int
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: Channel) -> IEngineeringObject
        """
        ...

    @property
    def Type(self) -> ChannelType:
        """
        The type of this channel

        Get: Type(self: Channel) -> ChannelType
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: Channel) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: Channel) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class ChannelComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of Channels """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: ChannelComposition) -> IEngineeringObject
        """
        ...


    def Find(self, type:ChannelType, ioType:ChannelIoType, number:int) -> Channel:
        """
        Find(self: ChannelComposition, type: ChannelType, ioType: ChannelIoType, number: int) -> Channel

            Finds a given channel

            type: Type to find

            ioType: IoType to find

            number: Number to find

            Returns: Siemens.Engineering.HW.Channel
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: ChannelComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: ChannelComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Channel](enumerable: IEnumerable[Channel], value: Channel) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class ChannelIoType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Channel IO type

    enum ChannelIoType, values: Complex (3), Input (1), None (0), Output (2)
    """
    Complex: ChannelIoType = ...
    Input: ChannelIoType = ...
    Output: ChannelIoType = ...
    value__ = ...


class ChannelType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Channel type

    enum ChannelType, values: Analog (1), Digital (2), None (0), Technology (3)
    """
    Analog: ChannelType = ...
    Digital: ChannelType = ...
    Technology: ChannelType = ...
    value__ = ...


class Classification(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Classification

    enum Classification, values: CPU (1), HM (2), None (0)
    """
    CPU: Classification = ...
    HM: Classification = ...
    value__ = ...


class CommunicationLoad(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Profibus Communication Load

    enum CommunicationLoad, values: High (3), Low (1), Medium (2), None (0)
    """
    High: CommunicationLoad = ...
    Low: CommunicationLoad = ...
    Medium: CommunicationLoad = ...
    value__ = ...


class ConfigurationDQOrDIGroup2(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ConfigurationDQOrDIGroup2

    enum ConfigurationDQOrDIGroup2, values: IncrementalEncoderABPhaseShifted (2), TimerDi2WithEnableInputDi3 (1), TimerDq2WithEnableInputDi2 (3), TimerDqWithEnableInput (4), UseInputOrOutputIndividually (0)
    """
    IncrementalEncoderABPhaseShifted: ConfigurationDQOrDIGroup2 = ...
    TimerDi2WithEnableInputDi3: ConfigurationDQOrDIGroup2 = ...
    TimerDq2WithEnableInputDi2: ConfigurationDQOrDIGroup2 = ...
    TimerDqWithEnableInput: ConfigurationDQOrDIGroup2 = ...
    UseInputOrOutputIndividually: ConfigurationDQOrDIGroup2 = ...
    value__ = ...


class ControlFunctionCurrentMeasuringModuleInstalled(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionCurrentMeasuringModuleInstalled

    enum ControlFunctionCurrentMeasuringModuleInstalled, values: Delta (0), IncomingCable (1)
    """
    Delta: ControlFunctionCurrentMeasuringModuleInstalled = ...
    IncomingCable: ControlFunctionCurrentMeasuringModuleInstalled = ...
    value__ = ...


class ControlFunctionFeedbackCLOSEDFC(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionFeedbackCLOSEDFC

    enum ControlFunctionFeedbackCLOSEDFC, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit01: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit02: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit03: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit04: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit05: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit06: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit07: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit10: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit11: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit12: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit13: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit14: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit15: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit16: ControlFunctionFeedbackCLOSEDFC = ...
    AcyclicReceiveBit17: ControlFunctionFeedbackCLOSEDFC = ...
    BUInput1: ControlFunctionFeedbackCLOSEDFC = ...
    BUInput2: ControlFunctionFeedbackCLOSEDFC = ...
    BUInput3: ControlFunctionFeedbackCLOSEDFC = ...
    BUInput4: ControlFunctionFeedbackCLOSEDFC = ...
    BUTestResetButton: ControlFunctionFeedbackCLOSEDFC = ...
    ContactorControl1QE1: ControlFunctionFeedbackCLOSEDFC = ...
    ContactorControl2QE2: ControlFunctionFeedbackCLOSEDFC = ...
    ContactorControl3QE3: ControlFunctionFeedbackCLOSEDFC = ...
    ContactorControl4QE4: ControlFunctionFeedbackCLOSEDFC = ...
    ContactorControl5QE5: ControlFunctionFeedbackCLOSEDFC = ...
    Counter1Output: ControlFunctionFeedbackCLOSEDFC = ...
    Counter2Output: ControlFunctionFeedbackCLOSEDFC = ...
    Counter3Output: ControlFunctionFeedbackCLOSEDFC = ...
    Counter4Output: ControlFunctionFeedbackCLOSEDFC = ...
    Counter5Output: ControlFunctionFeedbackCLOSEDFC = ...
    Counter6Output: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit00: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit01: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit02: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit03: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit04: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit05: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit06: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit07: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit10: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit11: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit12: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit13: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit14: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit15: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit16: ControlFunctionFeedbackCLOSEDFC = ...
    CyclicReceiveBit17: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLAOff: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLEForward: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLEForwardFast: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLEReverse: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLEReverseFast: ControlFunctionFeedbackCLOSEDFC = ...
    DisplayQLSFault: ControlFunctionFeedbackCLOSEDFC = ...
    DM1Input1: ControlFunctionFeedbackCLOSEDFC = ...
    DM1Input2: ControlFunctionFeedbackCLOSEDFC = ...
    DM1Input3: ControlFunctionFeedbackCLOSEDFC = ...
    DM1Input4: ControlFunctionFeedbackCLOSEDFC = ...
    DM1SensorChannel1: ControlFunctionFeedbackCLOSEDFC = ...
    DM1SensorChannel2: ControlFunctionFeedbackCLOSEDFC = ...
    DM2Input1: ControlFunctionFeedbackCLOSEDFC = ...
    DM2Input2: ControlFunctionFeedbackCLOSEDFC = ...
    DM2Input3: ControlFunctionFeedbackCLOSEDFC = ...
    DM2Input4: ControlFunctionFeedbackCLOSEDFC = ...
    EnabledControlCommandOff: ControlFunctionFeedbackCLOSEDFC = ...
    EnabledControlCommandOnForward: ControlFunctionFeedbackCLOSEDFC = ...
    EnabledControlCommandOnForwardFast: ControlFunctionFeedbackCLOSEDFC = ...
    EnabledControlCommandOnReverse: ControlFunctionFeedbackCLOSEDFC = ...
    EnabledControlCommandOnReverseFast: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM1OpenCircuit: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM1TripLevel0420mAGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM1TripLevel0420mALt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM1WarningLevel0420mALt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM2OpenCircuit: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM2TripLevel0420mAGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM2TripLevel0420mALt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventAM2WarningLevel0420mALt: ControlFunctionFeedbackCLOSEDFC = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionFeedbackCLOSEDFC = ...
    EventDMFLOCALOk: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault1: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault2: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault3: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault4: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault5: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalFault6: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalGroundFault: ControlFunctionFeedbackCLOSEDFC = ...
    EventExternalGroundFaultWarning: ControlFunctionFeedbackCLOSEDFC = ...
    EventInternalGroundFault: ControlFunctionFeedbackCLOSEDFC = ...
    EventJustOneStartPossible: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor1: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor2: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor3: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor4: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor5: ControlFunctionFeedbackCLOSEDFC = ...
    EventLimitMonitor6: ControlFunctionFeedbackCLOSEDFC = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionFeedbackCLOSEDFC = ...
    EventMotorOperatingHoursGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventNoStartPermitted: ControlFunctionFeedbackCLOSEDFC = ...
    EventNumberOfStartsGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventOverload: ControlFunctionFeedbackCLOSEDFC = ...
    EventOverloadAndPhaseFailure: ControlFunctionFeedbackCLOSEDFC = ...
    EventPrewarningOverload: ControlFunctionFeedbackCLOSEDFC = ...
    EventPROFIsafeActive: ControlFunctionFeedbackCLOSEDFC = ...
    EventSafetyrelatedTripping: ControlFunctionFeedbackCLOSEDFC = ...
    EventStalledRotor: ControlFunctionFeedbackCLOSEDFC = ...
    EventStopTimeGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventThermistorOpenCircuit: ControlFunctionFeedbackCLOSEDFC = ...
    EventThermistorShortCircuit: ControlFunctionFeedbackCLOSEDFC = ...
    EventThermistorTripLevel: ControlFunctionFeedbackCLOSEDFC = ...
    EventTimestampfctActiveAndOk: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM1OutOfRange: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM1SensorFault: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM1TripLevelTGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM1WarningLevelTGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM2OutOfRange: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM2SensorFault: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM2TripLevelTGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTM2WarningLevelTGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelCosPhiLt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelIGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelILt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelPGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelPLt: ControlFunctionFeedbackCLOSEDFC = ...
    EventTripLevelULt: ControlFunctionFeedbackCLOSEDFC = ...
    EventUnbalance: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelCosPhiLt: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelIGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelILt: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelPGt: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelPLt: ControlFunctionFeedbackCLOSEDFC = ...
    EventWarningLevelULt: ControlFunctionFeedbackCLOSEDFC = ...
    FaultAntivalence: ControlFunctionFeedbackCLOSEDFC = ...
    FaultBus: ControlFunctionFeedbackCLOSEDFC = ...
    FaultConfigurationError: ControlFunctionFeedbackCLOSEDFC = ...
    FaultDouble0: ControlFunctionFeedbackCLOSEDFC = ...
    FaultDouble1: ControlFunctionFeedbackCLOSEDFC = ...
    FaultEndPosition: ControlFunctionFeedbackCLOSEDFC = ...
    FaultExecutionOnCommand: ControlFunctionFeedbackCLOSEDFC = ...
    FaultExecutionSTOPCommand: ControlFunctionFeedbackCLOSEDFC = ...
    FaultFeedbackOff: ControlFunctionFeedbackCLOSEDFC = ...
    FaultFeedbackOn: ControlFunctionFeedbackCLOSEDFC = ...
    FaultHardwareFaultBasicUnit: ControlFunctionFeedbackCLOSEDFC = ...
    FaultModuleFault: ControlFunctionFeedbackCLOSEDFC = ...
    FaultOperationalProtectionOff: ControlFunctionFeedbackCLOSEDFC = ...
    FaultParameterization: ControlFunctionFeedbackCLOSEDFC = ...
    FaultPLCPCS: ControlFunctionFeedbackCLOSEDFC = ...
    FaultPowerFailure: ControlFunctionFeedbackCLOSEDFC = ...
    FaultStalledPositioner: ControlFunctionFeedbackCLOSEDFC = ...
    FaultTemporaryComponents: ControlFunctionFeedbackCLOSEDFC = ...
    FaultTestPositionFeedback: ControlFunctionFeedbackCLOSEDFC = ...
    FixedLevel0: ControlFunctionFeedbackCLOSEDFC = ...
    FixedLevel1: ControlFunctionFeedbackCLOSEDFC = ...
    Flashing1Output: ControlFunctionFeedbackCLOSEDFC = ...
    Flashing2Output: ControlFunctionFeedbackCLOSEDFC = ...
    Flashing3Output: ControlFunctionFeedbackCLOSEDFC = ...
    Flicker1Output: ControlFunctionFeedbackCLOSEDFC = ...
    Flicker2Output: ControlFunctionFeedbackCLOSEDFC = ...
    Flicker3Output: ControlFunctionFeedbackCLOSEDFC = ...
    NonvolatileElement1Output: ControlFunctionFeedbackCLOSEDFC = ...
    NonvolatileElement2Output: ControlFunctionFeedbackCLOSEDFC = ...
    NonvolatileElement3Output: ControlFunctionFeedbackCLOSEDFC = ...
    NonvolatileElement4Output: ControlFunctionFeedbackCLOSEDFC = ...
    NotConnected: ControlFunctionFeedbackCLOSEDFC = ...
    OPButton1: ControlFunctionFeedbackCLOSEDFC = ...
    OPButton2: ControlFunctionFeedbackCLOSEDFC = ...
    OPButton3: ControlFunctionFeedbackCLOSEDFC = ...
    OPButton4: ControlFunctionFeedbackCLOSEDFC = ...
    OPTestResetButton: ControlFunctionFeedbackCLOSEDFC = ...
    PWMOutput: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning1Output: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning2Output: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning3Output: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning4Output: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning5Output: ControlFunctionFeedbackCLOSEDFC = ...
    SignalConditioning6Output: ControlFunctionFeedbackCLOSEDFC = ...
    StatusBusOk: ControlFunctionFeedbackCLOSEDFC = ...
    StatusChangeoverPauseActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusCoolingDownPeriodActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusCurrentFlowing: ControlFunctionFeedbackCLOSEDFC = ...
    StatusDeviceOk: ControlFunctionFeedbackCLOSEDFC = ...
    StatusDeviceTestActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusEmergencyStartExecuted: ControlFunctionFeedbackCLOSEDFC = ...
    StatusEnablingCircuitClosed: ControlFunctionFeedbackCLOSEDFC = ...
    StatusFeedbackCLOSED: ControlFunctionFeedbackCLOSEDFC = ...
    StatusFeedbackOPEN: ControlFunctionFeedbackCLOSEDFC = ...
    StatusGroupFault: ControlFunctionFeedbackCLOSEDFC = ...
    StatusGroupWarning: ControlFunctionFeedbackCLOSEDFC = ...
    StatusInterlockingTimeActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOff: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOnForward: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOnForwardFast: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOnReverse: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOnReverseFast: ControlFunctionFeedbackCLOSEDFC = ...
    StatusOperationalProtectionOff: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPauseTimeActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPhaseSequence123: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPhaseSequence321: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPLCPCSInRun: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionFeedbackCLOSEDFC = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionFeedbackCLOSEDFC = ...
    StatusRemoteMode: ControlFunctionFeedbackCLOSEDFC = ...
    StatusStartActive: ControlFunctionFeedbackCLOSEDFC = ...
    StatusTestPosition: ControlFunctionFeedbackCLOSEDFC = ...
    StatusTorqueCLOSED: ControlFunctionFeedbackCLOSEDFC = ...
    StatusTorqueOPEN: ControlFunctionFeedbackCLOSEDFC = ...
    Timer1Output: ControlFunctionFeedbackCLOSEDFC = ...
    Timer2Output: ControlFunctionFeedbackCLOSEDFC = ...
    Timer3Output: ControlFunctionFeedbackCLOSEDFC = ...
    Timer4Output: ControlFunctionFeedbackCLOSEDFC = ...
    Timer5Output: ControlFunctionFeedbackCLOSEDFC = ...
    Timer6Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable10Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable11Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable1Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable2Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable3Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable4Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable5Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable6Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable7Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable8Output: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable9Output1: ControlFunctionFeedbackCLOSEDFC = ...
    TruthTable9Output2: ControlFunctionFeedbackCLOSEDFC = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionFeedbackCLOSEDFC = ...
    WarningSimultaneity: ControlFunctionFeedbackCLOSEDFC = ...


class ControlFunctionFeedbackON(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionFeedbackON

    enum ControlFunctionFeedbackON, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit01: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit02: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit03: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit04: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit05: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit06: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit07: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit10: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit11: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit12: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit13: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit14: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit15: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit16: ControlFunctionFeedbackON = ...
    AcyclicReceiveBit17: ControlFunctionFeedbackON = ...
    BUInput1: ControlFunctionFeedbackON = ...
    BUInput2: ControlFunctionFeedbackON = ...
    BUInput3: ControlFunctionFeedbackON = ...
    BUInput4: ControlFunctionFeedbackON = ...
    BUTestResetButton: ControlFunctionFeedbackON = ...
    ContactorControl1QE1: ControlFunctionFeedbackON = ...
    ContactorControl2QE2: ControlFunctionFeedbackON = ...
    ContactorControl3QE3: ControlFunctionFeedbackON = ...
    ContactorControl4QE4: ControlFunctionFeedbackON = ...
    ContactorControl5QE5: ControlFunctionFeedbackON = ...
    Counter1Output: ControlFunctionFeedbackON = ...
    Counter2Output: ControlFunctionFeedbackON = ...
    Counter3Output: ControlFunctionFeedbackON = ...
    Counter4Output: ControlFunctionFeedbackON = ...
    Counter5Output: ControlFunctionFeedbackON = ...
    Counter6Output: ControlFunctionFeedbackON = ...
    CyclicReceiveBit00: ControlFunctionFeedbackON = ...
    CyclicReceiveBit01: ControlFunctionFeedbackON = ...
    CyclicReceiveBit02: ControlFunctionFeedbackON = ...
    CyclicReceiveBit03: ControlFunctionFeedbackON = ...
    CyclicReceiveBit04: ControlFunctionFeedbackON = ...
    CyclicReceiveBit05: ControlFunctionFeedbackON = ...
    CyclicReceiveBit06: ControlFunctionFeedbackON = ...
    CyclicReceiveBit07: ControlFunctionFeedbackON = ...
    CyclicReceiveBit10: ControlFunctionFeedbackON = ...
    CyclicReceiveBit11: ControlFunctionFeedbackON = ...
    CyclicReceiveBit12: ControlFunctionFeedbackON = ...
    CyclicReceiveBit13: ControlFunctionFeedbackON = ...
    CyclicReceiveBit14: ControlFunctionFeedbackON = ...
    CyclicReceiveBit15: ControlFunctionFeedbackON = ...
    CyclicReceiveBit16: ControlFunctionFeedbackON = ...
    CyclicReceiveBit17: ControlFunctionFeedbackON = ...
    DisplayQLAOff: ControlFunctionFeedbackON = ...
    DisplayQLEForward: ControlFunctionFeedbackON = ...
    DisplayQLEForwardFast: ControlFunctionFeedbackON = ...
    DisplayQLEReverse: ControlFunctionFeedbackON = ...
    DisplayQLEReverseFast: ControlFunctionFeedbackON = ...
    DisplayQLSFault: ControlFunctionFeedbackON = ...
    DM1Input1: ControlFunctionFeedbackON = ...
    DM1Input2: ControlFunctionFeedbackON = ...
    DM1Input3: ControlFunctionFeedbackON = ...
    DM1Input4: ControlFunctionFeedbackON = ...
    DM1SensorChannel1: ControlFunctionFeedbackON = ...
    DM1SensorChannel2: ControlFunctionFeedbackON = ...
    DM2Input1: ControlFunctionFeedbackON = ...
    DM2Input2: ControlFunctionFeedbackON = ...
    DM2Input3: ControlFunctionFeedbackON = ...
    DM2Input4: ControlFunctionFeedbackON = ...
    EnabledControlCommandOff: ControlFunctionFeedbackON = ...
    EnabledControlCommandOnForward: ControlFunctionFeedbackON = ...
    EnabledControlCommandOnForwardFast: ControlFunctionFeedbackON = ...
    EnabledControlCommandOnReverse: ControlFunctionFeedbackON = ...
    EnabledControlCommandOnReverseFast: ControlFunctionFeedbackON = ...
    EventAM1OpenCircuit: ControlFunctionFeedbackON = ...
    EventAM1TripLevel0420mAGt: ControlFunctionFeedbackON = ...
    EventAM1TripLevel0420mALt: ControlFunctionFeedbackON = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionFeedbackON = ...
    EventAM1WarningLevel0420mALt: ControlFunctionFeedbackON = ...
    EventAM2OpenCircuit: ControlFunctionFeedbackON = ...
    EventAM2TripLevel0420mAGt: ControlFunctionFeedbackON = ...
    EventAM2TripLevel0420mALt: ControlFunctionFeedbackON = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionFeedbackON = ...
    EventAM2WarningLevel0420mALt: ControlFunctionFeedbackON = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionFeedbackON = ...
    EventDMFLOCALOk: ControlFunctionFeedbackON = ...
    EventExternalFault1: ControlFunctionFeedbackON = ...
    EventExternalFault2: ControlFunctionFeedbackON = ...
    EventExternalFault3: ControlFunctionFeedbackON = ...
    EventExternalFault4: ControlFunctionFeedbackON = ...
    EventExternalFault5: ControlFunctionFeedbackON = ...
    EventExternalFault6: ControlFunctionFeedbackON = ...
    EventExternalGroundFault: ControlFunctionFeedbackON = ...
    EventExternalGroundFaultWarning: ControlFunctionFeedbackON = ...
    EventInternalGroundFault: ControlFunctionFeedbackON = ...
    EventJustOneStartPossible: ControlFunctionFeedbackON = ...
    EventLimitMonitor1: ControlFunctionFeedbackON = ...
    EventLimitMonitor2: ControlFunctionFeedbackON = ...
    EventLimitMonitor3: ControlFunctionFeedbackON = ...
    EventLimitMonitor4: ControlFunctionFeedbackON = ...
    EventLimitMonitor5: ControlFunctionFeedbackON = ...
    EventLimitMonitor6: ControlFunctionFeedbackON = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionFeedbackON = ...
    EventMotorOperatingHoursGt: ControlFunctionFeedbackON = ...
    EventNoStartPermitted: ControlFunctionFeedbackON = ...
    EventNumberOfStartsGt: ControlFunctionFeedbackON = ...
    EventOverload: ControlFunctionFeedbackON = ...
    EventOverloadAndPhaseFailure: ControlFunctionFeedbackON = ...
    EventPrewarningOverload: ControlFunctionFeedbackON = ...
    EventPROFIsafeActive: ControlFunctionFeedbackON = ...
    EventSafetyrelatedTripping: ControlFunctionFeedbackON = ...
    EventStalledRotor: ControlFunctionFeedbackON = ...
    EventStopTimeGt: ControlFunctionFeedbackON = ...
    EventThermistorOpenCircuit: ControlFunctionFeedbackON = ...
    EventThermistorShortCircuit: ControlFunctionFeedbackON = ...
    EventThermistorTripLevel: ControlFunctionFeedbackON = ...
    EventTimestampfctActiveAndOk: ControlFunctionFeedbackON = ...
    EventTM1OutOfRange: ControlFunctionFeedbackON = ...
    EventTM1SensorFault: ControlFunctionFeedbackON = ...
    EventTM1TripLevelTGt: ControlFunctionFeedbackON = ...
    EventTM1WarningLevelTGt: ControlFunctionFeedbackON = ...
    EventTM2OutOfRange: ControlFunctionFeedbackON = ...
    EventTM2SensorFault: ControlFunctionFeedbackON = ...
    EventTM2TripLevelTGt: ControlFunctionFeedbackON = ...
    EventTM2WarningLevelTGt: ControlFunctionFeedbackON = ...
    EventTripLevelCosPhiLt: ControlFunctionFeedbackON = ...
    EventTripLevelIGt: ControlFunctionFeedbackON = ...
    EventTripLevelILt: ControlFunctionFeedbackON = ...
    EventTripLevelPGt: ControlFunctionFeedbackON = ...
    EventTripLevelPLt: ControlFunctionFeedbackON = ...
    EventTripLevelULt: ControlFunctionFeedbackON = ...
    EventUnbalance: ControlFunctionFeedbackON = ...
    EventWarningLevelCosPhiLt: ControlFunctionFeedbackON = ...
    EventWarningLevelIGt: ControlFunctionFeedbackON = ...
    EventWarningLevelILt: ControlFunctionFeedbackON = ...
    EventWarningLevelPGt: ControlFunctionFeedbackON = ...
    EventWarningLevelPLt: ControlFunctionFeedbackON = ...
    EventWarningLevelULt: ControlFunctionFeedbackON = ...
    FaultAntivalence: ControlFunctionFeedbackON = ...
    FaultBus: ControlFunctionFeedbackON = ...
    FaultConfigurationError: ControlFunctionFeedbackON = ...
    FaultDouble0: ControlFunctionFeedbackON = ...
    FaultDouble1: ControlFunctionFeedbackON = ...
    FaultEndPosition: ControlFunctionFeedbackON = ...
    FaultExecutionOnCommand: ControlFunctionFeedbackON = ...
    FaultExecutionSTOPCommand: ControlFunctionFeedbackON = ...
    FaultFeedbackOff: ControlFunctionFeedbackON = ...
    FaultFeedbackOn: ControlFunctionFeedbackON = ...
    FaultHardwareFaultBasicUnit: ControlFunctionFeedbackON = ...
    FaultModuleFault: ControlFunctionFeedbackON = ...
    FaultOperationalProtectionOff: ControlFunctionFeedbackON = ...
    FaultParameterization: ControlFunctionFeedbackON = ...
    FaultPLCPCS: ControlFunctionFeedbackON = ...
    FaultPowerFailure: ControlFunctionFeedbackON = ...
    FaultStalledPositioner: ControlFunctionFeedbackON = ...
    FaultTemporaryComponents: ControlFunctionFeedbackON = ...
    FaultTestPositionFeedback: ControlFunctionFeedbackON = ...
    FixedLevel0: ControlFunctionFeedbackON = ...
    FixedLevel1: ControlFunctionFeedbackON = ...
    Flashing1Output: ControlFunctionFeedbackON = ...
    Flashing2Output: ControlFunctionFeedbackON = ...
    Flashing3Output: ControlFunctionFeedbackON = ...
    Flicker1Output: ControlFunctionFeedbackON = ...
    Flicker2Output: ControlFunctionFeedbackON = ...
    Flicker3Output: ControlFunctionFeedbackON = ...
    NonvolatileElement1Output: ControlFunctionFeedbackON = ...
    NonvolatileElement2Output: ControlFunctionFeedbackON = ...
    NonvolatileElement3Output: ControlFunctionFeedbackON = ...
    NonvolatileElement4Output: ControlFunctionFeedbackON = ...
    NotConnected: ControlFunctionFeedbackON = ...
    OPButton1: ControlFunctionFeedbackON = ...
    OPButton2: ControlFunctionFeedbackON = ...
    OPButton3: ControlFunctionFeedbackON = ...
    OPButton4: ControlFunctionFeedbackON = ...
    OPTestResetButton: ControlFunctionFeedbackON = ...
    PWMOutput: ControlFunctionFeedbackON = ...
    SignalConditioning1Output: ControlFunctionFeedbackON = ...
    SignalConditioning2Output: ControlFunctionFeedbackON = ...
    SignalConditioning3Output: ControlFunctionFeedbackON = ...
    SignalConditioning4Output: ControlFunctionFeedbackON = ...
    SignalConditioning5Output: ControlFunctionFeedbackON = ...
    SignalConditioning6Output: ControlFunctionFeedbackON = ...
    StatusBusOk: ControlFunctionFeedbackON = ...
    StatusChangeoverPauseActive: ControlFunctionFeedbackON = ...
    StatusCoolingDownPeriodActive: ControlFunctionFeedbackON = ...
    StatusCurrentFlowing: ControlFunctionFeedbackON = ...
    StatusDeviceOk: ControlFunctionFeedbackON = ...
    StatusDeviceTestActive: ControlFunctionFeedbackON = ...
    StatusEmergencyStartExecuted: ControlFunctionFeedbackON = ...
    StatusEnablingCircuitClosed: ControlFunctionFeedbackON = ...
    StatusFeedbackCLOSED: ControlFunctionFeedbackON = ...
    StatusFeedbackOPEN: ControlFunctionFeedbackON = ...
    StatusGroupFault: ControlFunctionFeedbackON = ...
    StatusGroupWarning: ControlFunctionFeedbackON = ...
    StatusInterlockingTimeActive: ControlFunctionFeedbackON = ...
    StatusOff: ControlFunctionFeedbackON = ...
    StatusOnForward: ControlFunctionFeedbackON = ...
    StatusOnForwardFast: ControlFunctionFeedbackON = ...
    StatusOnReverse: ControlFunctionFeedbackON = ...
    StatusOnReverseFast: ControlFunctionFeedbackON = ...
    StatusOperationalProtectionOff: ControlFunctionFeedbackON = ...
    StatusPauseTimeActive: ControlFunctionFeedbackON = ...
    StatusPhaseSequence123: ControlFunctionFeedbackON = ...
    StatusPhaseSequence321: ControlFunctionFeedbackON = ...
    StatusPLCPCSInRun: ControlFunctionFeedbackON = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionFeedbackON = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionFeedbackON = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionFeedbackON = ...
    StatusRemoteMode: ControlFunctionFeedbackON = ...
    StatusStartActive: ControlFunctionFeedbackON = ...
    StatusTestPosition: ControlFunctionFeedbackON = ...
    StatusTorqueCLOSED: ControlFunctionFeedbackON = ...
    StatusTorqueOPEN: ControlFunctionFeedbackON = ...
    Timer1Output: ControlFunctionFeedbackON = ...
    Timer2Output: ControlFunctionFeedbackON = ...
    Timer3Output: ControlFunctionFeedbackON = ...
    Timer4Output: ControlFunctionFeedbackON = ...
    Timer5Output: ControlFunctionFeedbackON = ...
    Timer6Output: ControlFunctionFeedbackON = ...
    TruthTable10Output: ControlFunctionFeedbackON = ...
    TruthTable11Output: ControlFunctionFeedbackON = ...
    TruthTable1Output: ControlFunctionFeedbackON = ...
    TruthTable2Output: ControlFunctionFeedbackON = ...
    TruthTable3Output: ControlFunctionFeedbackON = ...
    TruthTable4Output: ControlFunctionFeedbackON = ...
    TruthTable5Output: ControlFunctionFeedbackON = ...
    TruthTable6Output: ControlFunctionFeedbackON = ...
    TruthTable7Output: ControlFunctionFeedbackON = ...
    TruthTable8Output: ControlFunctionFeedbackON = ...
    TruthTable9Output1: ControlFunctionFeedbackON = ...
    TruthTable9Output2: ControlFunctionFeedbackON = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionFeedbackON = ...
    WarningSimultaneity: ControlFunctionFeedbackON = ...


class ControlFunctionFeedbackOPENFO(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionFeedbackOPENFO

    enum ControlFunctionFeedbackOPENFO, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit01: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit02: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit03: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit04: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit05: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit06: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit07: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit10: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit11: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit12: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit13: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit14: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit15: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit16: ControlFunctionFeedbackOPENFO = ...
    AcyclicReceiveBit17: ControlFunctionFeedbackOPENFO = ...
    BUInput1: ControlFunctionFeedbackOPENFO = ...
    BUInput2: ControlFunctionFeedbackOPENFO = ...
    BUInput3: ControlFunctionFeedbackOPENFO = ...
    BUInput4: ControlFunctionFeedbackOPENFO = ...
    BUTestResetButton: ControlFunctionFeedbackOPENFO = ...
    ContactorControl1QE1: ControlFunctionFeedbackOPENFO = ...
    ContactorControl2QE2: ControlFunctionFeedbackOPENFO = ...
    ContactorControl3QE3: ControlFunctionFeedbackOPENFO = ...
    ContactorControl4QE4: ControlFunctionFeedbackOPENFO = ...
    ContactorControl5QE5: ControlFunctionFeedbackOPENFO = ...
    Counter1Output: ControlFunctionFeedbackOPENFO = ...
    Counter2Output: ControlFunctionFeedbackOPENFO = ...
    Counter3Output: ControlFunctionFeedbackOPENFO = ...
    Counter4Output: ControlFunctionFeedbackOPENFO = ...
    Counter5Output: ControlFunctionFeedbackOPENFO = ...
    Counter6Output: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit00: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit01: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit02: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit03: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit04: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit05: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit06: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit07: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit10: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit11: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit12: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit13: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit14: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit15: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit16: ControlFunctionFeedbackOPENFO = ...
    CyclicReceiveBit17: ControlFunctionFeedbackOPENFO = ...
    DisplayQLAOff: ControlFunctionFeedbackOPENFO = ...
    DisplayQLEForward: ControlFunctionFeedbackOPENFO = ...
    DisplayQLEForwardFast: ControlFunctionFeedbackOPENFO = ...
    DisplayQLEReverse: ControlFunctionFeedbackOPENFO = ...
    DisplayQLEReverseFast: ControlFunctionFeedbackOPENFO = ...
    DisplayQLSFault: ControlFunctionFeedbackOPENFO = ...
    DM1Input1: ControlFunctionFeedbackOPENFO = ...
    DM1Input2: ControlFunctionFeedbackOPENFO = ...
    DM1Input3: ControlFunctionFeedbackOPENFO = ...
    DM1Input4: ControlFunctionFeedbackOPENFO = ...
    DM1SensorChannel1: ControlFunctionFeedbackOPENFO = ...
    DM1SensorChannel2: ControlFunctionFeedbackOPENFO = ...
    DM2Input1: ControlFunctionFeedbackOPENFO = ...
    DM2Input2: ControlFunctionFeedbackOPENFO = ...
    DM2Input3: ControlFunctionFeedbackOPENFO = ...
    DM2Input4: ControlFunctionFeedbackOPENFO = ...
    EnabledControlCommandOff: ControlFunctionFeedbackOPENFO = ...
    EnabledControlCommandOnForward: ControlFunctionFeedbackOPENFO = ...
    EnabledControlCommandOnForwardFast: ControlFunctionFeedbackOPENFO = ...
    EnabledControlCommandOnReverse: ControlFunctionFeedbackOPENFO = ...
    EnabledControlCommandOnReverseFast: ControlFunctionFeedbackOPENFO = ...
    EventAM1OpenCircuit: ControlFunctionFeedbackOPENFO = ...
    EventAM1TripLevel0420mAGt: ControlFunctionFeedbackOPENFO = ...
    EventAM1TripLevel0420mALt: ControlFunctionFeedbackOPENFO = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionFeedbackOPENFO = ...
    EventAM1WarningLevel0420mALt: ControlFunctionFeedbackOPENFO = ...
    EventAM2OpenCircuit: ControlFunctionFeedbackOPENFO = ...
    EventAM2TripLevel0420mAGt: ControlFunctionFeedbackOPENFO = ...
    EventAM2TripLevel0420mALt: ControlFunctionFeedbackOPENFO = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionFeedbackOPENFO = ...
    EventAM2WarningLevel0420mALt: ControlFunctionFeedbackOPENFO = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionFeedbackOPENFO = ...
    EventDMFLOCALOk: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault1: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault2: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault3: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault4: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault5: ControlFunctionFeedbackOPENFO = ...
    EventExternalFault6: ControlFunctionFeedbackOPENFO = ...
    EventExternalGroundFault: ControlFunctionFeedbackOPENFO = ...
    EventExternalGroundFaultWarning: ControlFunctionFeedbackOPENFO = ...
    EventInternalGroundFault: ControlFunctionFeedbackOPENFO = ...
    EventJustOneStartPossible: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor1: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor2: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor3: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor4: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor5: ControlFunctionFeedbackOPENFO = ...
    EventLimitMonitor6: ControlFunctionFeedbackOPENFO = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionFeedbackOPENFO = ...
    EventMotorOperatingHoursGt: ControlFunctionFeedbackOPENFO = ...
    EventNoStartPermitted: ControlFunctionFeedbackOPENFO = ...
    EventNumberOfStartsGt: ControlFunctionFeedbackOPENFO = ...
    EventOverload: ControlFunctionFeedbackOPENFO = ...
    EventOverloadAndPhaseFailure: ControlFunctionFeedbackOPENFO = ...
    EventPrewarningOverload: ControlFunctionFeedbackOPENFO = ...
    EventPROFIsafeActive: ControlFunctionFeedbackOPENFO = ...
    EventSafetyrelatedTripping: ControlFunctionFeedbackOPENFO = ...
    EventStalledRotor: ControlFunctionFeedbackOPENFO = ...
    EventStopTimeGt: ControlFunctionFeedbackOPENFO = ...
    EventThermistorOpenCircuit: ControlFunctionFeedbackOPENFO = ...
    EventThermistorShortCircuit: ControlFunctionFeedbackOPENFO = ...
    EventThermistorTripLevel: ControlFunctionFeedbackOPENFO = ...
    EventTimestampfctActiveAndOk: ControlFunctionFeedbackOPENFO = ...
    EventTM1OutOfRange: ControlFunctionFeedbackOPENFO = ...
    EventTM1SensorFault: ControlFunctionFeedbackOPENFO = ...
    EventTM1TripLevelTGt: ControlFunctionFeedbackOPENFO = ...
    EventTM1WarningLevelTGt: ControlFunctionFeedbackOPENFO = ...
    EventTM2OutOfRange: ControlFunctionFeedbackOPENFO = ...
    EventTM2SensorFault: ControlFunctionFeedbackOPENFO = ...
    EventTM2TripLevelTGt: ControlFunctionFeedbackOPENFO = ...
    EventTM2WarningLevelTGt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelCosPhiLt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelIGt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelILt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelPGt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelPLt: ControlFunctionFeedbackOPENFO = ...
    EventTripLevelULt: ControlFunctionFeedbackOPENFO = ...
    EventUnbalance: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelCosPhiLt: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelIGt: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelILt: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelPGt: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelPLt: ControlFunctionFeedbackOPENFO = ...
    EventWarningLevelULt: ControlFunctionFeedbackOPENFO = ...
    FaultAntivalence: ControlFunctionFeedbackOPENFO = ...
    FaultBus: ControlFunctionFeedbackOPENFO = ...
    FaultConfigurationError: ControlFunctionFeedbackOPENFO = ...
    FaultDouble0: ControlFunctionFeedbackOPENFO = ...
    FaultDouble1: ControlFunctionFeedbackOPENFO = ...
    FaultEndPosition: ControlFunctionFeedbackOPENFO = ...
    FaultExecutionOnCommand: ControlFunctionFeedbackOPENFO = ...
    FaultExecutionSTOPCommand: ControlFunctionFeedbackOPENFO = ...
    FaultFeedbackOff: ControlFunctionFeedbackOPENFO = ...
    FaultFeedbackOn: ControlFunctionFeedbackOPENFO = ...
    FaultHardwareFaultBasicUnit: ControlFunctionFeedbackOPENFO = ...
    FaultModuleFault: ControlFunctionFeedbackOPENFO = ...
    FaultOperationalProtectionOff: ControlFunctionFeedbackOPENFO = ...
    FaultParameterization: ControlFunctionFeedbackOPENFO = ...
    FaultPLCPCS: ControlFunctionFeedbackOPENFO = ...
    FaultPowerFailure: ControlFunctionFeedbackOPENFO = ...
    FaultStalledPositioner: ControlFunctionFeedbackOPENFO = ...
    FaultTemporaryComponents: ControlFunctionFeedbackOPENFO = ...
    FaultTestPositionFeedback: ControlFunctionFeedbackOPENFO = ...
    FixedLevel0: ControlFunctionFeedbackOPENFO = ...
    FixedLevel1: ControlFunctionFeedbackOPENFO = ...
    Flashing1Output: ControlFunctionFeedbackOPENFO = ...
    Flashing2Output: ControlFunctionFeedbackOPENFO = ...
    Flashing3Output: ControlFunctionFeedbackOPENFO = ...
    Flicker1Output: ControlFunctionFeedbackOPENFO = ...
    Flicker2Output: ControlFunctionFeedbackOPENFO = ...
    Flicker3Output: ControlFunctionFeedbackOPENFO = ...
    NonvolatileElement1Output: ControlFunctionFeedbackOPENFO = ...
    NonvolatileElement2Output: ControlFunctionFeedbackOPENFO = ...
    NonvolatileElement3Output: ControlFunctionFeedbackOPENFO = ...
    NonvolatileElement4Output: ControlFunctionFeedbackOPENFO = ...
    NotConnected: ControlFunctionFeedbackOPENFO = ...
    OPButton1: ControlFunctionFeedbackOPENFO = ...
    OPButton2: ControlFunctionFeedbackOPENFO = ...
    OPButton3: ControlFunctionFeedbackOPENFO = ...
    OPButton4: ControlFunctionFeedbackOPENFO = ...
    OPTestResetButton: ControlFunctionFeedbackOPENFO = ...
    PWMOutput: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning1Output: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning2Output: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning3Output: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning4Output: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning5Output: ControlFunctionFeedbackOPENFO = ...
    SignalConditioning6Output: ControlFunctionFeedbackOPENFO = ...
    StatusBusOk: ControlFunctionFeedbackOPENFO = ...
    StatusChangeoverPauseActive: ControlFunctionFeedbackOPENFO = ...
    StatusCoolingDownPeriodActive: ControlFunctionFeedbackOPENFO = ...
    StatusCurrentFlowing: ControlFunctionFeedbackOPENFO = ...
    StatusDeviceOk: ControlFunctionFeedbackOPENFO = ...
    StatusDeviceTestActive: ControlFunctionFeedbackOPENFO = ...
    StatusEmergencyStartExecuted: ControlFunctionFeedbackOPENFO = ...
    StatusEnablingCircuitClosed: ControlFunctionFeedbackOPENFO = ...
    StatusFeedbackCLOSED: ControlFunctionFeedbackOPENFO = ...
    StatusFeedbackOPEN: ControlFunctionFeedbackOPENFO = ...
    StatusGroupFault: ControlFunctionFeedbackOPENFO = ...
    StatusGroupWarning: ControlFunctionFeedbackOPENFO = ...
    StatusInterlockingTimeActive: ControlFunctionFeedbackOPENFO = ...
    StatusOff: ControlFunctionFeedbackOPENFO = ...
    StatusOnForward: ControlFunctionFeedbackOPENFO = ...
    StatusOnForwardFast: ControlFunctionFeedbackOPENFO = ...
    StatusOnReverse: ControlFunctionFeedbackOPENFO = ...
    StatusOnReverseFast: ControlFunctionFeedbackOPENFO = ...
    StatusOperationalProtectionOff: ControlFunctionFeedbackOPENFO = ...
    StatusPauseTimeActive: ControlFunctionFeedbackOPENFO = ...
    StatusPhaseSequence123: ControlFunctionFeedbackOPENFO = ...
    StatusPhaseSequence321: ControlFunctionFeedbackOPENFO = ...
    StatusPLCPCSInRun: ControlFunctionFeedbackOPENFO = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionFeedbackOPENFO = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionFeedbackOPENFO = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionFeedbackOPENFO = ...
    StatusRemoteMode: ControlFunctionFeedbackOPENFO = ...
    StatusStartActive: ControlFunctionFeedbackOPENFO = ...
    StatusTestPosition: ControlFunctionFeedbackOPENFO = ...
    StatusTorqueCLOSED: ControlFunctionFeedbackOPENFO = ...
    StatusTorqueOPEN: ControlFunctionFeedbackOPENFO = ...
    Timer1Output: ControlFunctionFeedbackOPENFO = ...
    Timer2Output: ControlFunctionFeedbackOPENFO = ...
    Timer3Output: ControlFunctionFeedbackOPENFO = ...
    Timer4Output: ControlFunctionFeedbackOPENFO = ...
    Timer5Output: ControlFunctionFeedbackOPENFO = ...
    Timer6Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable10Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable11Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable1Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable2Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable3Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable4Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable5Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable6Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable7Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable8Output: ControlFunctionFeedbackOPENFO = ...
    TruthTable9Output1: ControlFunctionFeedbackOPENFO = ...
    TruthTable9Output2: ControlFunctionFeedbackOPENFO = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionFeedbackOPENFO = ...
    WarningSimultaneity: ControlFunctionFeedbackOPENFO = ...


class ControlFunctionForward(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionForward

    enum ControlFunctionForward, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionForward = ...
    AcyclicReceiveBit01: ControlFunctionForward = ...
    AcyclicReceiveBit02: ControlFunctionForward = ...
    AcyclicReceiveBit03: ControlFunctionForward = ...
    AcyclicReceiveBit04: ControlFunctionForward = ...
    AcyclicReceiveBit05: ControlFunctionForward = ...
    AcyclicReceiveBit06: ControlFunctionForward = ...
    AcyclicReceiveBit07: ControlFunctionForward = ...
    AcyclicReceiveBit10: ControlFunctionForward = ...
    AcyclicReceiveBit11: ControlFunctionForward = ...
    AcyclicReceiveBit12: ControlFunctionForward = ...
    AcyclicReceiveBit13: ControlFunctionForward = ...
    AcyclicReceiveBit14: ControlFunctionForward = ...
    AcyclicReceiveBit15: ControlFunctionForward = ...
    AcyclicReceiveBit16: ControlFunctionForward = ...
    AcyclicReceiveBit17: ControlFunctionForward = ...
    BUInput1: ControlFunctionForward = ...
    BUInput2: ControlFunctionForward = ...
    BUInput3: ControlFunctionForward = ...
    BUInput4: ControlFunctionForward = ...
    BUTestResetButton: ControlFunctionForward = ...
    ContactorControl1QE1: ControlFunctionForward = ...
    ContactorControl2QE2: ControlFunctionForward = ...
    ContactorControl3QE3: ControlFunctionForward = ...
    ContactorControl4QE4: ControlFunctionForward = ...
    ContactorControl5QE5: ControlFunctionForward = ...
    Counter1Output: ControlFunctionForward = ...
    Counter2Output: ControlFunctionForward = ...
    Counter3Output: ControlFunctionForward = ...
    Counter4Output: ControlFunctionForward = ...
    Counter5Output: ControlFunctionForward = ...
    Counter6Output: ControlFunctionForward = ...
    CyclicReceiveBit00: ControlFunctionForward = ...
    CyclicReceiveBit01: ControlFunctionForward = ...
    CyclicReceiveBit02: ControlFunctionForward = ...
    CyclicReceiveBit03: ControlFunctionForward = ...
    CyclicReceiveBit04: ControlFunctionForward = ...
    CyclicReceiveBit05: ControlFunctionForward = ...
    CyclicReceiveBit06: ControlFunctionForward = ...
    CyclicReceiveBit07: ControlFunctionForward = ...
    CyclicReceiveBit10: ControlFunctionForward = ...
    CyclicReceiveBit11: ControlFunctionForward = ...
    CyclicReceiveBit12: ControlFunctionForward = ...
    CyclicReceiveBit13: ControlFunctionForward = ...
    CyclicReceiveBit14: ControlFunctionForward = ...
    CyclicReceiveBit15: ControlFunctionForward = ...
    CyclicReceiveBit16: ControlFunctionForward = ...
    CyclicReceiveBit17: ControlFunctionForward = ...
    DisplayQLAOff: ControlFunctionForward = ...
    DisplayQLEForward: ControlFunctionForward = ...
    DisplayQLEForwardFast: ControlFunctionForward = ...
    DisplayQLEReverse: ControlFunctionForward = ...
    DisplayQLEReverseFast: ControlFunctionForward = ...
    DisplayQLSFault: ControlFunctionForward = ...
    DM1Input1: ControlFunctionForward = ...
    DM1Input2: ControlFunctionForward = ...
    DM1Input3: ControlFunctionForward = ...
    DM1Input4: ControlFunctionForward = ...
    DM1SensorChannel1: ControlFunctionForward = ...
    DM1SensorChannel2: ControlFunctionForward = ...
    DM2Input1: ControlFunctionForward = ...
    DM2Input2: ControlFunctionForward = ...
    DM2Input3: ControlFunctionForward = ...
    DM2Input4: ControlFunctionForward = ...
    EnabledControlCommandOff: ControlFunctionForward = ...
    EnabledControlCommandOnForward: ControlFunctionForward = ...
    EnabledControlCommandOnForwardFast: ControlFunctionForward = ...
    EnabledControlCommandOnReverse: ControlFunctionForward = ...
    EnabledControlCommandOnReverseFast: ControlFunctionForward = ...
    EventAM1OpenCircuit: ControlFunctionForward = ...
    EventAM1TripLevel0420mAGt: ControlFunctionForward = ...
    EventAM1TripLevel0420mALt: ControlFunctionForward = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionForward = ...
    EventAM1WarningLevel0420mALt: ControlFunctionForward = ...
    EventAM2OpenCircuit: ControlFunctionForward = ...
    EventAM2TripLevel0420mAGt: ControlFunctionForward = ...
    EventAM2TripLevel0420mALt: ControlFunctionForward = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionForward = ...
    EventAM2WarningLevel0420mALt: ControlFunctionForward = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionForward = ...
    EventDMFLOCALOk: ControlFunctionForward = ...
    EventExternalFault1: ControlFunctionForward = ...
    EventExternalFault2: ControlFunctionForward = ...
    EventExternalFault3: ControlFunctionForward = ...
    EventExternalFault4: ControlFunctionForward = ...
    EventExternalFault5: ControlFunctionForward = ...
    EventExternalFault6: ControlFunctionForward = ...
    EventExternalGroundFault: ControlFunctionForward = ...
    EventExternalGroundFaultWarning: ControlFunctionForward = ...
    EventInternalGroundFault: ControlFunctionForward = ...
    EventJustOneStartPossible: ControlFunctionForward = ...
    EventLimitMonitor1: ControlFunctionForward = ...
    EventLimitMonitor2: ControlFunctionForward = ...
    EventLimitMonitor3: ControlFunctionForward = ...
    EventLimitMonitor4: ControlFunctionForward = ...
    EventLimitMonitor5: ControlFunctionForward = ...
    EventLimitMonitor6: ControlFunctionForward = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionForward = ...
    EventMotorOperatingHoursGt: ControlFunctionForward = ...
    EventNoStartPermitted: ControlFunctionForward = ...
    EventNumberOfStartsGt: ControlFunctionForward = ...
    EventOverload: ControlFunctionForward = ...
    EventOverloadAndPhaseFailure: ControlFunctionForward = ...
    EventPrewarningOverload: ControlFunctionForward = ...
    EventPROFIsafeActive: ControlFunctionForward = ...
    EventSafetyrelatedTripping: ControlFunctionForward = ...
    EventStalledRotor: ControlFunctionForward = ...
    EventStopTimeGt: ControlFunctionForward = ...
    EventThermistorOpenCircuit: ControlFunctionForward = ...
    EventThermistorShortCircuit: ControlFunctionForward = ...
    EventThermistorTripLevel: ControlFunctionForward = ...
    EventTimestampfctActiveAndOk: ControlFunctionForward = ...
    EventTM1OutOfRange: ControlFunctionForward = ...
    EventTM1SensorFault: ControlFunctionForward = ...
    EventTM1TripLevelTGt: ControlFunctionForward = ...
    EventTM1WarningLevelTGt: ControlFunctionForward = ...
    EventTM2OutOfRange: ControlFunctionForward = ...
    EventTM2SensorFault: ControlFunctionForward = ...
    EventTM2TripLevelTGt: ControlFunctionForward = ...
    EventTM2WarningLevelTGt: ControlFunctionForward = ...
    EventTripLevelCosPhiLt: ControlFunctionForward = ...
    EventTripLevelIGt: ControlFunctionForward = ...
    EventTripLevelILt: ControlFunctionForward = ...
    EventTripLevelPGt: ControlFunctionForward = ...
    EventTripLevelPLt: ControlFunctionForward = ...
    EventTripLevelULt: ControlFunctionForward = ...
    EventUnbalance: ControlFunctionForward = ...
    EventWarningLevelCosPhiLt: ControlFunctionForward = ...
    EventWarningLevelIGt: ControlFunctionForward = ...
    EventWarningLevelILt: ControlFunctionForward = ...
    EventWarningLevelPGt: ControlFunctionForward = ...
    EventWarningLevelPLt: ControlFunctionForward = ...
    EventWarningLevelULt: ControlFunctionForward = ...
    FaultAntivalence: ControlFunctionForward = ...
    FaultBus: ControlFunctionForward = ...
    FaultConfigurationError: ControlFunctionForward = ...
    FaultDouble0: ControlFunctionForward = ...
    FaultDouble1: ControlFunctionForward = ...
    FaultEndPosition: ControlFunctionForward = ...
    FaultExecutionOnCommand: ControlFunctionForward = ...
    FaultExecutionSTOPCommand: ControlFunctionForward = ...
    FaultFeedbackOff: ControlFunctionForward = ...
    FaultFeedbackOn: ControlFunctionForward = ...
    FaultHardwareFaultBasicUnit: ControlFunctionForward = ...
    FaultModuleFault: ControlFunctionForward = ...
    FaultOperationalProtectionOff: ControlFunctionForward = ...
    FaultParameterization: ControlFunctionForward = ...
    FaultPLCPCS: ControlFunctionForward = ...
    FaultPowerFailure: ControlFunctionForward = ...
    FaultStalledPositioner: ControlFunctionForward = ...
    FaultTemporaryComponents: ControlFunctionForward = ...
    FaultTestPositionFeedback: ControlFunctionForward = ...
    FixedLevel0: ControlFunctionForward = ...
    FixedLevel1: ControlFunctionForward = ...
    Flashing1Output: ControlFunctionForward = ...
    Flashing2Output: ControlFunctionForward = ...
    Flashing3Output: ControlFunctionForward = ...
    Flicker1Output: ControlFunctionForward = ...
    Flicker2Output: ControlFunctionForward = ...
    Flicker3Output: ControlFunctionForward = ...
    NonvolatileElement1Output: ControlFunctionForward = ...
    NonvolatileElement2Output: ControlFunctionForward = ...
    NonvolatileElement3Output: ControlFunctionForward = ...
    NonvolatileElement4Output: ControlFunctionForward = ...
    NotConnected: ControlFunctionForward = ...
    OPButton1: ControlFunctionForward = ...
    OPButton2: ControlFunctionForward = ...
    OPButton3: ControlFunctionForward = ...
    OPButton4: ControlFunctionForward = ...
    OPTestResetButton: ControlFunctionForward = ...
    PWMOutput: ControlFunctionForward = ...
    SignalConditioning1Output: ControlFunctionForward = ...
    SignalConditioning2Output: ControlFunctionForward = ...
    SignalConditioning3Output: ControlFunctionForward = ...
    SignalConditioning4Output: ControlFunctionForward = ...
    SignalConditioning5Output: ControlFunctionForward = ...
    SignalConditioning6Output: ControlFunctionForward = ...
    StatusBusOk: ControlFunctionForward = ...
    StatusChangeoverPauseActive: ControlFunctionForward = ...
    StatusCoolingDownPeriodActive: ControlFunctionForward = ...
    StatusCurrentFlowing: ControlFunctionForward = ...
    StatusDeviceOk: ControlFunctionForward = ...
    StatusDeviceTestActive: ControlFunctionForward = ...
    StatusEmergencyStartExecuted: ControlFunctionForward = ...
    StatusEnablingCircuitClosed: ControlFunctionForward = ...
    StatusFeedbackCLOSED: ControlFunctionForward = ...
    StatusFeedbackOPEN: ControlFunctionForward = ...
    StatusGroupFault: ControlFunctionForward = ...
    StatusGroupWarning: ControlFunctionForward = ...
    StatusInterlockingTimeActive: ControlFunctionForward = ...
    StatusOff: ControlFunctionForward = ...
    StatusOnForward: ControlFunctionForward = ...
    StatusOnForwardFast: ControlFunctionForward = ...
    StatusOnReverse: ControlFunctionForward = ...
    StatusOnReverseFast: ControlFunctionForward = ...
    StatusOperationalProtectionOff: ControlFunctionForward = ...
    StatusPauseTimeActive: ControlFunctionForward = ...
    StatusPhaseSequence123: ControlFunctionForward = ...
    StatusPhaseSequence321: ControlFunctionForward = ...
    StatusPLCPCSInRun: ControlFunctionForward = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionForward = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionForward = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionForward = ...
    StatusRemoteMode: ControlFunctionForward = ...
    StatusStartActive: ControlFunctionForward = ...
    StatusTestPosition: ControlFunctionForward = ...
    StatusTorqueCLOSED: ControlFunctionForward = ...
    StatusTorqueOPEN: ControlFunctionForward = ...
    Timer1Output: ControlFunctionForward = ...
    Timer2Output: ControlFunctionForward = ...
    Timer3Output: ControlFunctionForward = ...
    Timer4Output: ControlFunctionForward = ...
    Timer5Output: ControlFunctionForward = ...
    Timer6Output: ControlFunctionForward = ...
    TruthTable10Output: ControlFunctionForward = ...
    TruthTable11Output: ControlFunctionForward = ...
    TruthTable1Output: ControlFunctionForward = ...
    TruthTable2Output: ControlFunctionForward = ...
    TruthTable3Output: ControlFunctionForward = ...
    TruthTable4Output: ControlFunctionForward = ...
    TruthTable5Output: ControlFunctionForward = ...
    TruthTable6Output: ControlFunctionForward = ...
    TruthTable7Output: ControlFunctionForward = ...
    TruthTable8Output: ControlFunctionForward = ...
    TruthTable9Output1: ControlFunctionForward = ...
    TruthTable9Output2: ControlFunctionForward = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionForward = ...
    WarningSimultaneity: ControlFunctionForward = ...


class ControlFunctionForwardFast(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionForwardFast

    enum ControlFunctionForwardFast, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionForwardFast = ...
    AcyclicReceiveBit01: ControlFunctionForwardFast = ...
    AcyclicReceiveBit02: ControlFunctionForwardFast = ...
    AcyclicReceiveBit03: ControlFunctionForwardFast = ...
    AcyclicReceiveBit04: ControlFunctionForwardFast = ...
    AcyclicReceiveBit05: ControlFunctionForwardFast = ...
    AcyclicReceiveBit06: ControlFunctionForwardFast = ...
    AcyclicReceiveBit07: ControlFunctionForwardFast = ...
    AcyclicReceiveBit10: ControlFunctionForwardFast = ...
    AcyclicReceiveBit11: ControlFunctionForwardFast = ...
    AcyclicReceiveBit12: ControlFunctionForwardFast = ...
    AcyclicReceiveBit13: ControlFunctionForwardFast = ...
    AcyclicReceiveBit14: ControlFunctionForwardFast = ...
    AcyclicReceiveBit15: ControlFunctionForwardFast = ...
    AcyclicReceiveBit16: ControlFunctionForwardFast = ...
    AcyclicReceiveBit17: ControlFunctionForwardFast = ...
    BUInput1: ControlFunctionForwardFast = ...
    BUInput2: ControlFunctionForwardFast = ...
    BUInput3: ControlFunctionForwardFast = ...
    BUInput4: ControlFunctionForwardFast = ...
    BUTestResetButton: ControlFunctionForwardFast = ...
    ContactorControl1QE1: ControlFunctionForwardFast = ...
    ContactorControl2QE2: ControlFunctionForwardFast = ...
    ContactorControl3QE3: ControlFunctionForwardFast = ...
    ContactorControl4QE4: ControlFunctionForwardFast = ...
    ContactorControl5QE5: ControlFunctionForwardFast = ...
    Counter1Output: ControlFunctionForwardFast = ...
    Counter2Output: ControlFunctionForwardFast = ...
    Counter3Output: ControlFunctionForwardFast = ...
    Counter4Output: ControlFunctionForwardFast = ...
    Counter5Output: ControlFunctionForwardFast = ...
    Counter6Output: ControlFunctionForwardFast = ...
    CyclicReceiveBit00: ControlFunctionForwardFast = ...
    CyclicReceiveBit01: ControlFunctionForwardFast = ...
    CyclicReceiveBit02: ControlFunctionForwardFast = ...
    CyclicReceiveBit03: ControlFunctionForwardFast = ...
    CyclicReceiveBit04: ControlFunctionForwardFast = ...
    CyclicReceiveBit05: ControlFunctionForwardFast = ...
    CyclicReceiveBit06: ControlFunctionForwardFast = ...
    CyclicReceiveBit07: ControlFunctionForwardFast = ...
    CyclicReceiveBit10: ControlFunctionForwardFast = ...
    CyclicReceiveBit11: ControlFunctionForwardFast = ...
    CyclicReceiveBit12: ControlFunctionForwardFast = ...
    CyclicReceiveBit13: ControlFunctionForwardFast = ...
    CyclicReceiveBit14: ControlFunctionForwardFast = ...
    CyclicReceiveBit15: ControlFunctionForwardFast = ...
    CyclicReceiveBit16: ControlFunctionForwardFast = ...
    CyclicReceiveBit17: ControlFunctionForwardFast = ...
    DisplayQLAOff: ControlFunctionForwardFast = ...
    DisplayQLEForward: ControlFunctionForwardFast = ...
    DisplayQLEForwardFast: ControlFunctionForwardFast = ...
    DisplayQLEReverse: ControlFunctionForwardFast = ...
    DisplayQLEReverseFast: ControlFunctionForwardFast = ...
    DisplayQLSFault: ControlFunctionForwardFast = ...
    DM1Input1: ControlFunctionForwardFast = ...
    DM1Input2: ControlFunctionForwardFast = ...
    DM1Input3: ControlFunctionForwardFast = ...
    DM1Input4: ControlFunctionForwardFast = ...
    DM1SensorChannel1: ControlFunctionForwardFast = ...
    DM1SensorChannel2: ControlFunctionForwardFast = ...
    DM2Input1: ControlFunctionForwardFast = ...
    DM2Input2: ControlFunctionForwardFast = ...
    DM2Input3: ControlFunctionForwardFast = ...
    DM2Input4: ControlFunctionForwardFast = ...
    EnabledControlCommandOff: ControlFunctionForwardFast = ...
    EnabledControlCommandOnForward: ControlFunctionForwardFast = ...
    EnabledControlCommandOnForwardFast: ControlFunctionForwardFast = ...
    EnabledControlCommandOnReverse: ControlFunctionForwardFast = ...
    EnabledControlCommandOnReverseFast: ControlFunctionForwardFast = ...
    EventAM1OpenCircuit: ControlFunctionForwardFast = ...
    EventAM1TripLevel0420mAGt: ControlFunctionForwardFast = ...
    EventAM1TripLevel0420mALt: ControlFunctionForwardFast = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionForwardFast = ...
    EventAM1WarningLevel0420mALt: ControlFunctionForwardFast = ...
    EventAM2OpenCircuit: ControlFunctionForwardFast = ...
    EventAM2TripLevel0420mAGt: ControlFunctionForwardFast = ...
    EventAM2TripLevel0420mALt: ControlFunctionForwardFast = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionForwardFast = ...
    EventAM2WarningLevel0420mALt: ControlFunctionForwardFast = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionForwardFast = ...
    EventDMFLOCALOk: ControlFunctionForwardFast = ...
    EventExternalFault1: ControlFunctionForwardFast = ...
    EventExternalFault2: ControlFunctionForwardFast = ...
    EventExternalFault3: ControlFunctionForwardFast = ...
    EventExternalFault4: ControlFunctionForwardFast = ...
    EventExternalFault5: ControlFunctionForwardFast = ...
    EventExternalFault6: ControlFunctionForwardFast = ...
    EventExternalGroundFault: ControlFunctionForwardFast = ...
    EventExternalGroundFaultWarning: ControlFunctionForwardFast = ...
    EventInternalGroundFault: ControlFunctionForwardFast = ...
    EventJustOneStartPossible: ControlFunctionForwardFast = ...
    EventLimitMonitor1: ControlFunctionForwardFast = ...
    EventLimitMonitor2: ControlFunctionForwardFast = ...
    EventLimitMonitor3: ControlFunctionForwardFast = ...
    EventLimitMonitor4: ControlFunctionForwardFast = ...
    EventLimitMonitor5: ControlFunctionForwardFast = ...
    EventLimitMonitor6: ControlFunctionForwardFast = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionForwardFast = ...
    EventMotorOperatingHoursGt: ControlFunctionForwardFast = ...
    EventNoStartPermitted: ControlFunctionForwardFast = ...
    EventNumberOfStartsGt: ControlFunctionForwardFast = ...
    EventOverload: ControlFunctionForwardFast = ...
    EventOverloadAndPhaseFailure: ControlFunctionForwardFast = ...
    EventPrewarningOverload: ControlFunctionForwardFast = ...
    EventPROFIsafeActive: ControlFunctionForwardFast = ...
    EventSafetyrelatedTripping: ControlFunctionForwardFast = ...
    EventStalledRotor: ControlFunctionForwardFast = ...
    EventStopTimeGt: ControlFunctionForwardFast = ...
    EventThermistorOpenCircuit: ControlFunctionForwardFast = ...
    EventThermistorShortCircuit: ControlFunctionForwardFast = ...
    EventThermistorTripLevel: ControlFunctionForwardFast = ...
    EventTimestampfctActiveAndOk: ControlFunctionForwardFast = ...
    EventTM1OutOfRange: ControlFunctionForwardFast = ...
    EventTM1SensorFault: ControlFunctionForwardFast = ...
    EventTM1TripLevelTGt: ControlFunctionForwardFast = ...
    EventTM1WarningLevelTGt: ControlFunctionForwardFast = ...
    EventTM2OutOfRange: ControlFunctionForwardFast = ...
    EventTM2SensorFault: ControlFunctionForwardFast = ...
    EventTM2TripLevelTGt: ControlFunctionForwardFast = ...
    EventTM2WarningLevelTGt: ControlFunctionForwardFast = ...
    EventTripLevelCosPhiLt: ControlFunctionForwardFast = ...
    EventTripLevelIGt: ControlFunctionForwardFast = ...
    EventTripLevelILt: ControlFunctionForwardFast = ...
    EventTripLevelPGt: ControlFunctionForwardFast = ...
    EventTripLevelPLt: ControlFunctionForwardFast = ...
    EventTripLevelULt: ControlFunctionForwardFast = ...
    EventUnbalance: ControlFunctionForwardFast = ...
    EventWarningLevelCosPhiLt: ControlFunctionForwardFast = ...
    EventWarningLevelIGt: ControlFunctionForwardFast = ...
    EventWarningLevelILt: ControlFunctionForwardFast = ...
    EventWarningLevelPGt: ControlFunctionForwardFast = ...
    EventWarningLevelPLt: ControlFunctionForwardFast = ...
    EventWarningLevelULt: ControlFunctionForwardFast = ...
    FaultAntivalence: ControlFunctionForwardFast = ...
    FaultBus: ControlFunctionForwardFast = ...
    FaultConfigurationError: ControlFunctionForwardFast = ...
    FaultDouble0: ControlFunctionForwardFast = ...
    FaultDouble1: ControlFunctionForwardFast = ...
    FaultEndPosition: ControlFunctionForwardFast = ...
    FaultExecutionOnCommand: ControlFunctionForwardFast = ...
    FaultExecutionSTOPCommand: ControlFunctionForwardFast = ...
    FaultFeedbackOff: ControlFunctionForwardFast = ...
    FaultFeedbackOn: ControlFunctionForwardFast = ...
    FaultHardwareFaultBasicUnit: ControlFunctionForwardFast = ...
    FaultModuleFault: ControlFunctionForwardFast = ...
    FaultOperationalProtectionOff: ControlFunctionForwardFast = ...
    FaultParameterization: ControlFunctionForwardFast = ...
    FaultPLCPCS: ControlFunctionForwardFast = ...
    FaultPowerFailure: ControlFunctionForwardFast = ...
    FaultStalledPositioner: ControlFunctionForwardFast = ...
    FaultTemporaryComponents: ControlFunctionForwardFast = ...
    FaultTestPositionFeedback: ControlFunctionForwardFast = ...
    FixedLevel0: ControlFunctionForwardFast = ...
    FixedLevel1: ControlFunctionForwardFast = ...
    Flashing1Output: ControlFunctionForwardFast = ...
    Flashing2Output: ControlFunctionForwardFast = ...
    Flashing3Output: ControlFunctionForwardFast = ...
    Flicker1Output: ControlFunctionForwardFast = ...
    Flicker2Output: ControlFunctionForwardFast = ...
    Flicker3Output: ControlFunctionForwardFast = ...
    NonvolatileElement1Output: ControlFunctionForwardFast = ...
    NonvolatileElement2Output: ControlFunctionForwardFast = ...
    NonvolatileElement3Output: ControlFunctionForwardFast = ...
    NonvolatileElement4Output: ControlFunctionForwardFast = ...
    NotConnected: ControlFunctionForwardFast = ...
    OPButton1: ControlFunctionForwardFast = ...
    OPButton2: ControlFunctionForwardFast = ...
    OPButton3: ControlFunctionForwardFast = ...
    OPButton4: ControlFunctionForwardFast = ...
    OPTestResetButton: ControlFunctionForwardFast = ...
    PWMOutput: ControlFunctionForwardFast = ...
    SignalConditioning1Output: ControlFunctionForwardFast = ...
    SignalConditioning2Output: ControlFunctionForwardFast = ...
    SignalConditioning3Output: ControlFunctionForwardFast = ...
    SignalConditioning4Output: ControlFunctionForwardFast = ...
    SignalConditioning5Output: ControlFunctionForwardFast = ...
    SignalConditioning6Output: ControlFunctionForwardFast = ...
    StatusBusOk: ControlFunctionForwardFast = ...
    StatusChangeoverPauseActive: ControlFunctionForwardFast = ...
    StatusCoolingDownPeriodActive: ControlFunctionForwardFast = ...
    StatusCurrentFlowing: ControlFunctionForwardFast = ...
    StatusDeviceOk: ControlFunctionForwardFast = ...
    StatusDeviceTestActive: ControlFunctionForwardFast = ...
    StatusEmergencyStartExecuted: ControlFunctionForwardFast = ...
    StatusEnablingCircuitClosed: ControlFunctionForwardFast = ...
    StatusFeedbackCLOSED: ControlFunctionForwardFast = ...
    StatusFeedbackOPEN: ControlFunctionForwardFast = ...
    StatusGroupFault: ControlFunctionForwardFast = ...
    StatusGroupWarning: ControlFunctionForwardFast = ...
    StatusInterlockingTimeActive: ControlFunctionForwardFast = ...
    StatusOff: ControlFunctionForwardFast = ...
    StatusOnForward: ControlFunctionForwardFast = ...
    StatusOnForwardFast: ControlFunctionForwardFast = ...
    StatusOnReverse: ControlFunctionForwardFast = ...
    StatusOnReverseFast: ControlFunctionForwardFast = ...
    StatusOperationalProtectionOff: ControlFunctionForwardFast = ...
    StatusPauseTimeActive: ControlFunctionForwardFast = ...
    StatusPhaseSequence123: ControlFunctionForwardFast = ...
    StatusPhaseSequence321: ControlFunctionForwardFast = ...
    StatusPLCPCSInRun: ControlFunctionForwardFast = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionForwardFast = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionForwardFast = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionForwardFast = ...
    StatusRemoteMode: ControlFunctionForwardFast = ...
    StatusStartActive: ControlFunctionForwardFast = ...
    StatusTestPosition: ControlFunctionForwardFast = ...
    StatusTorqueCLOSED: ControlFunctionForwardFast = ...
    StatusTorqueOPEN: ControlFunctionForwardFast = ...
    Timer1Output: ControlFunctionForwardFast = ...
    Timer2Output: ControlFunctionForwardFast = ...
    Timer3Output: ControlFunctionForwardFast = ...
    Timer4Output: ControlFunctionForwardFast = ...
    Timer5Output: ControlFunctionForwardFast = ...
    Timer6Output: ControlFunctionForwardFast = ...
    TruthTable10Output: ControlFunctionForwardFast = ...
    TruthTable11Output: ControlFunctionForwardFast = ...
    TruthTable1Output: ControlFunctionForwardFast = ...
    TruthTable2Output: ControlFunctionForwardFast = ...
    TruthTable3Output: ControlFunctionForwardFast = ...
    TruthTable4Output: ControlFunctionForwardFast = ...
    TruthTable5Output: ControlFunctionForwardFast = ...
    TruthTable6Output: ControlFunctionForwardFast = ...
    TruthTable7Output: ControlFunctionForwardFast = ...
    TruthTable8Output: ControlFunctionForwardFast = ...
    TruthTable9Output1: ControlFunctionForwardFast = ...
    TruthTable9Output2: ControlFunctionForwardFast = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionForwardFast = ...
    WarningSimultaneity: ControlFunctionForwardFast = ...


class ControlFunctionOFF(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionOFF

    enum ControlFunctionOFF, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionOFF = ...
    AcyclicReceiveBit01: ControlFunctionOFF = ...
    AcyclicReceiveBit02: ControlFunctionOFF = ...
    AcyclicReceiveBit03: ControlFunctionOFF = ...
    AcyclicReceiveBit04: ControlFunctionOFF = ...
    AcyclicReceiveBit05: ControlFunctionOFF = ...
    AcyclicReceiveBit06: ControlFunctionOFF = ...
    AcyclicReceiveBit07: ControlFunctionOFF = ...
    AcyclicReceiveBit10: ControlFunctionOFF = ...
    AcyclicReceiveBit11: ControlFunctionOFF = ...
    AcyclicReceiveBit12: ControlFunctionOFF = ...
    AcyclicReceiveBit13: ControlFunctionOFF = ...
    AcyclicReceiveBit14: ControlFunctionOFF = ...
    AcyclicReceiveBit15: ControlFunctionOFF = ...
    AcyclicReceiveBit16: ControlFunctionOFF = ...
    AcyclicReceiveBit17: ControlFunctionOFF = ...
    BUInput1: ControlFunctionOFF = ...
    BUInput2: ControlFunctionOFF = ...
    BUInput3: ControlFunctionOFF = ...
    BUInput4: ControlFunctionOFF = ...
    BUTestResetButton: ControlFunctionOFF = ...
    ContactorControl1QE1: ControlFunctionOFF = ...
    ContactorControl2QE2: ControlFunctionOFF = ...
    ContactorControl3QE3: ControlFunctionOFF = ...
    ContactorControl4QE4: ControlFunctionOFF = ...
    ContactorControl5QE5: ControlFunctionOFF = ...
    Counter1Output: ControlFunctionOFF = ...
    Counter2Output: ControlFunctionOFF = ...
    Counter3Output: ControlFunctionOFF = ...
    Counter4Output: ControlFunctionOFF = ...
    Counter5Output: ControlFunctionOFF = ...
    Counter6Output: ControlFunctionOFF = ...
    CyclicReceiveBit00: ControlFunctionOFF = ...
    CyclicReceiveBit01: ControlFunctionOFF = ...
    CyclicReceiveBit02: ControlFunctionOFF = ...
    CyclicReceiveBit03: ControlFunctionOFF = ...
    CyclicReceiveBit04: ControlFunctionOFF = ...
    CyclicReceiveBit05: ControlFunctionOFF = ...
    CyclicReceiveBit06: ControlFunctionOFF = ...
    CyclicReceiveBit07: ControlFunctionOFF = ...
    CyclicReceiveBit10: ControlFunctionOFF = ...
    CyclicReceiveBit11: ControlFunctionOFF = ...
    CyclicReceiveBit12: ControlFunctionOFF = ...
    CyclicReceiveBit13: ControlFunctionOFF = ...
    CyclicReceiveBit14: ControlFunctionOFF = ...
    CyclicReceiveBit15: ControlFunctionOFF = ...
    CyclicReceiveBit16: ControlFunctionOFF = ...
    CyclicReceiveBit17: ControlFunctionOFF = ...
    DisplayQLAOff: ControlFunctionOFF = ...
    DisplayQLEForward: ControlFunctionOFF = ...
    DisplayQLEForwardFast: ControlFunctionOFF = ...
    DisplayQLEReverse: ControlFunctionOFF = ...
    DisplayQLEReverseFast: ControlFunctionOFF = ...
    DisplayQLSFault: ControlFunctionOFF = ...
    DM1Input1: ControlFunctionOFF = ...
    DM1Input2: ControlFunctionOFF = ...
    DM1Input3: ControlFunctionOFF = ...
    DM1Input4: ControlFunctionOFF = ...
    DM1SensorChannel1: ControlFunctionOFF = ...
    DM1SensorChannel2: ControlFunctionOFF = ...
    DM2Input1: ControlFunctionOFF = ...
    DM2Input2: ControlFunctionOFF = ...
    DM2Input3: ControlFunctionOFF = ...
    DM2Input4: ControlFunctionOFF = ...
    EnabledControlCommandOff: ControlFunctionOFF = ...
    EnabledControlCommandOnForward: ControlFunctionOFF = ...
    EnabledControlCommandOnForwardFast: ControlFunctionOFF = ...
    EnabledControlCommandOnReverse: ControlFunctionOFF = ...
    EnabledControlCommandOnReverseFast: ControlFunctionOFF = ...
    EventAM1OpenCircuit: ControlFunctionOFF = ...
    EventAM1TripLevel0420mAGt: ControlFunctionOFF = ...
    EventAM1TripLevel0420mALt: ControlFunctionOFF = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionOFF = ...
    EventAM1WarningLevel0420mALt: ControlFunctionOFF = ...
    EventAM2OpenCircuit: ControlFunctionOFF = ...
    EventAM2TripLevel0420mAGt: ControlFunctionOFF = ...
    EventAM2TripLevel0420mALt: ControlFunctionOFF = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionOFF = ...
    EventAM2WarningLevel0420mALt: ControlFunctionOFF = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionOFF = ...
    EventDMFLOCALOk: ControlFunctionOFF = ...
    EventExternalFault1: ControlFunctionOFF = ...
    EventExternalFault2: ControlFunctionOFF = ...
    EventExternalFault3: ControlFunctionOFF = ...
    EventExternalFault4: ControlFunctionOFF = ...
    EventExternalFault5: ControlFunctionOFF = ...
    EventExternalFault6: ControlFunctionOFF = ...
    EventExternalGroundFault: ControlFunctionOFF = ...
    EventExternalGroundFaultWarning: ControlFunctionOFF = ...
    EventInternalGroundFault: ControlFunctionOFF = ...
    EventJustOneStartPossible: ControlFunctionOFF = ...
    EventLimitMonitor1: ControlFunctionOFF = ...
    EventLimitMonitor2: ControlFunctionOFF = ...
    EventLimitMonitor3: ControlFunctionOFF = ...
    EventLimitMonitor4: ControlFunctionOFF = ...
    EventLimitMonitor5: ControlFunctionOFF = ...
    EventLimitMonitor6: ControlFunctionOFF = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionOFF = ...
    EventMotorOperatingHoursGt: ControlFunctionOFF = ...
    EventNoStartPermitted: ControlFunctionOFF = ...
    EventNumberOfStartsGt: ControlFunctionOFF = ...
    EventOverload: ControlFunctionOFF = ...
    EventOverloadAndPhaseFailure: ControlFunctionOFF = ...
    EventPrewarningOverload: ControlFunctionOFF = ...
    EventPROFIsafeActive: ControlFunctionOFF = ...
    EventSafetyrelatedTripping: ControlFunctionOFF = ...
    EventStalledRotor: ControlFunctionOFF = ...
    EventStopTimeGt: ControlFunctionOFF = ...
    EventThermistorOpenCircuit: ControlFunctionOFF = ...
    EventThermistorShortCircuit: ControlFunctionOFF = ...
    EventThermistorTripLevel: ControlFunctionOFF = ...
    EventTimestampfctActiveAndOk: ControlFunctionOFF = ...
    EventTM1OutOfRange: ControlFunctionOFF = ...
    EventTM1SensorFault: ControlFunctionOFF = ...
    EventTM1TripLevelTGt: ControlFunctionOFF = ...
    EventTM1WarningLevelTGt: ControlFunctionOFF = ...
    EventTM2OutOfRange: ControlFunctionOFF = ...
    EventTM2SensorFault: ControlFunctionOFF = ...
    EventTM2TripLevelTGt: ControlFunctionOFF = ...
    EventTM2WarningLevelTGt: ControlFunctionOFF = ...
    EventTripLevelCosPhiLt: ControlFunctionOFF = ...
    EventTripLevelIGt: ControlFunctionOFF = ...
    EventTripLevelILt: ControlFunctionOFF = ...
    EventTripLevelPGt: ControlFunctionOFF = ...
    EventTripLevelPLt: ControlFunctionOFF = ...
    EventTripLevelULt: ControlFunctionOFF = ...
    EventUnbalance: ControlFunctionOFF = ...
    EventWarningLevelCosPhiLt: ControlFunctionOFF = ...
    EventWarningLevelIGt: ControlFunctionOFF = ...
    EventWarningLevelILt: ControlFunctionOFF = ...
    EventWarningLevelPGt: ControlFunctionOFF = ...
    EventWarningLevelPLt: ControlFunctionOFF = ...
    EventWarningLevelULt: ControlFunctionOFF = ...
    FaultAntivalence: ControlFunctionOFF = ...
    FaultBus: ControlFunctionOFF = ...
    FaultConfigurationError: ControlFunctionOFF = ...
    FaultDouble0: ControlFunctionOFF = ...
    FaultDouble1: ControlFunctionOFF = ...
    FaultEndPosition: ControlFunctionOFF = ...
    FaultExecutionOnCommand: ControlFunctionOFF = ...
    FaultExecutionSTOPCommand: ControlFunctionOFF = ...
    FaultFeedbackOff: ControlFunctionOFF = ...
    FaultFeedbackOn: ControlFunctionOFF = ...
    FaultHardwareFaultBasicUnit: ControlFunctionOFF = ...
    FaultModuleFault: ControlFunctionOFF = ...
    FaultOperationalProtectionOff: ControlFunctionOFF = ...
    FaultParameterization: ControlFunctionOFF = ...
    FaultPLCPCS: ControlFunctionOFF = ...
    FaultPowerFailure: ControlFunctionOFF = ...
    FaultStalledPositioner: ControlFunctionOFF = ...
    FaultTemporaryComponents: ControlFunctionOFF = ...
    FaultTestPositionFeedback: ControlFunctionOFF = ...
    FixedLevel0: ControlFunctionOFF = ...
    FixedLevel1: ControlFunctionOFF = ...
    Flashing1Output: ControlFunctionOFF = ...
    Flashing2Output: ControlFunctionOFF = ...
    Flashing3Output: ControlFunctionOFF = ...
    Flicker1Output: ControlFunctionOFF = ...
    Flicker2Output: ControlFunctionOFF = ...
    Flicker3Output: ControlFunctionOFF = ...
    NonvolatileElement1Output: ControlFunctionOFF = ...
    NonvolatileElement2Output: ControlFunctionOFF = ...
    NonvolatileElement3Output: ControlFunctionOFF = ...
    NonvolatileElement4Output: ControlFunctionOFF = ...
    NotConnected: ControlFunctionOFF = ...
    OPButton1: ControlFunctionOFF = ...
    OPButton2: ControlFunctionOFF = ...
    OPButton3: ControlFunctionOFF = ...
    OPButton4: ControlFunctionOFF = ...
    OPTestResetButton: ControlFunctionOFF = ...
    PWMOutput: ControlFunctionOFF = ...
    SignalConditioning1Output: ControlFunctionOFF = ...
    SignalConditioning2Output: ControlFunctionOFF = ...
    SignalConditioning3Output: ControlFunctionOFF = ...
    SignalConditioning4Output: ControlFunctionOFF = ...
    SignalConditioning5Output: ControlFunctionOFF = ...
    SignalConditioning6Output: ControlFunctionOFF = ...
    StatusBusOk: ControlFunctionOFF = ...
    StatusChangeoverPauseActive: ControlFunctionOFF = ...
    StatusCoolingDownPeriodActive: ControlFunctionOFF = ...
    StatusCurrentFlowing: ControlFunctionOFF = ...
    StatusDeviceOk: ControlFunctionOFF = ...
    StatusDeviceTestActive: ControlFunctionOFF = ...
    StatusEmergencyStartExecuted: ControlFunctionOFF = ...
    StatusEnablingCircuitClosed: ControlFunctionOFF = ...
    StatusFeedbackCLOSED: ControlFunctionOFF = ...
    StatusFeedbackOPEN: ControlFunctionOFF = ...
    StatusGroupFault: ControlFunctionOFF = ...
    StatusGroupWarning: ControlFunctionOFF = ...
    StatusInterlockingTimeActive: ControlFunctionOFF = ...
    StatusOff: ControlFunctionOFF = ...
    StatusOnForward: ControlFunctionOFF = ...
    StatusOnForwardFast: ControlFunctionOFF = ...
    StatusOnReverse: ControlFunctionOFF = ...
    StatusOnReverseFast: ControlFunctionOFF = ...
    StatusOperationalProtectionOff: ControlFunctionOFF = ...
    StatusPauseTimeActive: ControlFunctionOFF = ...
    StatusPhaseSequence123: ControlFunctionOFF = ...
    StatusPhaseSequence321: ControlFunctionOFF = ...
    StatusPLCPCSInRun: ControlFunctionOFF = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionOFF = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionOFF = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionOFF = ...
    StatusRemoteMode: ControlFunctionOFF = ...
    StatusStartActive: ControlFunctionOFF = ...
    StatusTestPosition: ControlFunctionOFF = ...
    StatusTorqueCLOSED: ControlFunctionOFF = ...
    StatusTorqueOPEN: ControlFunctionOFF = ...
    Timer1Output: ControlFunctionOFF = ...
    Timer2Output: ControlFunctionOFF = ...
    Timer3Output: ControlFunctionOFF = ...
    Timer4Output: ControlFunctionOFF = ...
    Timer5Output: ControlFunctionOFF = ...
    Timer6Output: ControlFunctionOFF = ...
    TruthTable10Output: ControlFunctionOFF = ...
    TruthTable11Output: ControlFunctionOFF = ...
    TruthTable1Output: ControlFunctionOFF = ...
    TruthTable2Output: ControlFunctionOFF = ...
    TruthTable3Output: ControlFunctionOFF = ...
    TruthTable4Output: ControlFunctionOFF = ...
    TruthTable5Output: ControlFunctionOFF = ...
    TruthTable6Output: ControlFunctionOFF = ...
    TruthTable7Output: ControlFunctionOFF = ...
    TruthTable8Output: ControlFunctionOFF = ...
    TruthTable9Output1: ControlFunctionOFF = ...
    TruthTable9Output2: ControlFunctionOFF = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionOFF = ...
    WarningSimultaneity: ControlFunctionOFF = ...


class ControlFunctionReverse(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionReverse

    enum ControlFunctionReverse, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionReverse = ...
    AcyclicReceiveBit01: ControlFunctionReverse = ...
    AcyclicReceiveBit02: ControlFunctionReverse = ...
    AcyclicReceiveBit03: ControlFunctionReverse = ...
    AcyclicReceiveBit04: ControlFunctionReverse = ...
    AcyclicReceiveBit05: ControlFunctionReverse = ...
    AcyclicReceiveBit06: ControlFunctionReverse = ...
    AcyclicReceiveBit07: ControlFunctionReverse = ...
    AcyclicReceiveBit10: ControlFunctionReverse = ...
    AcyclicReceiveBit11: ControlFunctionReverse = ...
    AcyclicReceiveBit12: ControlFunctionReverse = ...
    AcyclicReceiveBit13: ControlFunctionReverse = ...
    AcyclicReceiveBit14: ControlFunctionReverse = ...
    AcyclicReceiveBit15: ControlFunctionReverse = ...
    AcyclicReceiveBit16: ControlFunctionReverse = ...
    AcyclicReceiveBit17: ControlFunctionReverse = ...
    BUInput1: ControlFunctionReverse = ...
    BUInput2: ControlFunctionReverse = ...
    BUInput3: ControlFunctionReverse = ...
    BUInput4: ControlFunctionReverse = ...
    BUTestResetButton: ControlFunctionReverse = ...
    ContactorControl1QE1: ControlFunctionReverse = ...
    ContactorControl2QE2: ControlFunctionReverse = ...
    ContactorControl3QE3: ControlFunctionReverse = ...
    ContactorControl4QE4: ControlFunctionReverse = ...
    ContactorControl5QE5: ControlFunctionReverse = ...
    Counter1Output: ControlFunctionReverse = ...
    Counter2Output: ControlFunctionReverse = ...
    Counter3Output: ControlFunctionReverse = ...
    Counter4Output: ControlFunctionReverse = ...
    Counter5Output: ControlFunctionReverse = ...
    Counter6Output: ControlFunctionReverse = ...
    CyclicReceiveBit00: ControlFunctionReverse = ...
    CyclicReceiveBit01: ControlFunctionReverse = ...
    CyclicReceiveBit02: ControlFunctionReverse = ...
    CyclicReceiveBit03: ControlFunctionReverse = ...
    CyclicReceiveBit04: ControlFunctionReverse = ...
    CyclicReceiveBit05: ControlFunctionReverse = ...
    CyclicReceiveBit06: ControlFunctionReverse = ...
    CyclicReceiveBit07: ControlFunctionReverse = ...
    CyclicReceiveBit10: ControlFunctionReverse = ...
    CyclicReceiveBit11: ControlFunctionReverse = ...
    CyclicReceiveBit12: ControlFunctionReverse = ...
    CyclicReceiveBit13: ControlFunctionReverse = ...
    CyclicReceiveBit14: ControlFunctionReverse = ...
    CyclicReceiveBit15: ControlFunctionReverse = ...
    CyclicReceiveBit16: ControlFunctionReverse = ...
    CyclicReceiveBit17: ControlFunctionReverse = ...
    DisplayQLAOff: ControlFunctionReverse = ...
    DisplayQLEForward: ControlFunctionReverse = ...
    DisplayQLEForwardFast: ControlFunctionReverse = ...
    DisplayQLEReverse: ControlFunctionReverse = ...
    DisplayQLEReverseFast: ControlFunctionReverse = ...
    DisplayQLSFault: ControlFunctionReverse = ...
    DM1Input1: ControlFunctionReverse = ...
    DM1Input2: ControlFunctionReverse = ...
    DM1Input3: ControlFunctionReverse = ...
    DM1Input4: ControlFunctionReverse = ...
    DM1SensorChannel1: ControlFunctionReverse = ...
    DM1SensorChannel2: ControlFunctionReverse = ...
    DM2Input1: ControlFunctionReverse = ...
    DM2Input2: ControlFunctionReverse = ...
    DM2Input3: ControlFunctionReverse = ...
    DM2Input4: ControlFunctionReverse = ...
    EnabledControlCommandOff: ControlFunctionReverse = ...
    EnabledControlCommandOnForward: ControlFunctionReverse = ...
    EnabledControlCommandOnForwardFast: ControlFunctionReverse = ...
    EnabledControlCommandOnReverse: ControlFunctionReverse = ...
    EnabledControlCommandOnReverseFast: ControlFunctionReverse = ...
    EventAM1OpenCircuit: ControlFunctionReverse = ...
    EventAM1TripLevel0420mAGt: ControlFunctionReverse = ...
    EventAM1TripLevel0420mALt: ControlFunctionReverse = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionReverse = ...
    EventAM1WarningLevel0420mALt: ControlFunctionReverse = ...
    EventAM2OpenCircuit: ControlFunctionReverse = ...
    EventAM2TripLevel0420mAGt: ControlFunctionReverse = ...
    EventAM2TripLevel0420mALt: ControlFunctionReverse = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionReverse = ...
    EventAM2WarningLevel0420mALt: ControlFunctionReverse = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionReverse = ...
    EventDMFLOCALOk: ControlFunctionReverse = ...
    EventExternalFault1: ControlFunctionReverse = ...
    EventExternalFault2: ControlFunctionReverse = ...
    EventExternalFault3: ControlFunctionReverse = ...
    EventExternalFault4: ControlFunctionReverse = ...
    EventExternalFault5: ControlFunctionReverse = ...
    EventExternalFault6: ControlFunctionReverse = ...
    EventExternalGroundFault: ControlFunctionReverse = ...
    EventExternalGroundFaultWarning: ControlFunctionReverse = ...
    EventInternalGroundFault: ControlFunctionReverse = ...
    EventJustOneStartPossible: ControlFunctionReverse = ...
    EventLimitMonitor1: ControlFunctionReverse = ...
    EventLimitMonitor2: ControlFunctionReverse = ...
    EventLimitMonitor3: ControlFunctionReverse = ...
    EventLimitMonitor4: ControlFunctionReverse = ...
    EventLimitMonitor5: ControlFunctionReverse = ...
    EventLimitMonitor6: ControlFunctionReverse = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionReverse = ...
    EventMotorOperatingHoursGt: ControlFunctionReverse = ...
    EventNoStartPermitted: ControlFunctionReverse = ...
    EventNumberOfStartsGt: ControlFunctionReverse = ...
    EventOverload: ControlFunctionReverse = ...
    EventOverloadAndPhaseFailure: ControlFunctionReverse = ...
    EventPrewarningOverload: ControlFunctionReverse = ...
    EventPROFIsafeActive: ControlFunctionReverse = ...
    EventSafetyrelatedTripping: ControlFunctionReverse = ...
    EventStalledRotor: ControlFunctionReverse = ...
    EventStopTimeGt: ControlFunctionReverse = ...
    EventThermistorOpenCircuit: ControlFunctionReverse = ...
    EventThermistorShortCircuit: ControlFunctionReverse = ...
    EventThermistorTripLevel: ControlFunctionReverse = ...
    EventTimestampfctActiveAndOk: ControlFunctionReverse = ...
    EventTM1OutOfRange: ControlFunctionReverse = ...
    EventTM1SensorFault: ControlFunctionReverse = ...
    EventTM1TripLevelTGt: ControlFunctionReverse = ...
    EventTM1WarningLevelTGt: ControlFunctionReverse = ...
    EventTM2OutOfRange: ControlFunctionReverse = ...
    EventTM2SensorFault: ControlFunctionReverse = ...
    EventTM2TripLevelTGt: ControlFunctionReverse = ...
    EventTM2WarningLevelTGt: ControlFunctionReverse = ...
    EventTripLevelCosPhiLt: ControlFunctionReverse = ...
    EventTripLevelIGt: ControlFunctionReverse = ...
    EventTripLevelILt: ControlFunctionReverse = ...
    EventTripLevelPGt: ControlFunctionReverse = ...
    EventTripLevelPLt: ControlFunctionReverse = ...
    EventTripLevelULt: ControlFunctionReverse = ...
    EventUnbalance: ControlFunctionReverse = ...
    EventWarningLevelCosPhiLt: ControlFunctionReverse = ...
    EventWarningLevelIGt: ControlFunctionReverse = ...
    EventWarningLevelILt: ControlFunctionReverse = ...
    EventWarningLevelPGt: ControlFunctionReverse = ...
    EventWarningLevelPLt: ControlFunctionReverse = ...
    EventWarningLevelULt: ControlFunctionReverse = ...
    FaultAntivalence: ControlFunctionReverse = ...
    FaultBus: ControlFunctionReverse = ...
    FaultConfigurationError: ControlFunctionReverse = ...
    FaultDouble0: ControlFunctionReverse = ...
    FaultDouble1: ControlFunctionReverse = ...
    FaultEndPosition: ControlFunctionReverse = ...
    FaultExecutionOnCommand: ControlFunctionReverse = ...
    FaultExecutionSTOPCommand: ControlFunctionReverse = ...
    FaultFeedbackOff: ControlFunctionReverse = ...
    FaultFeedbackOn: ControlFunctionReverse = ...
    FaultHardwareFaultBasicUnit: ControlFunctionReverse = ...
    FaultModuleFault: ControlFunctionReverse = ...
    FaultOperationalProtectionOff: ControlFunctionReverse = ...
    FaultParameterization: ControlFunctionReverse = ...
    FaultPLCPCS: ControlFunctionReverse = ...
    FaultPowerFailure: ControlFunctionReverse = ...
    FaultStalledPositioner: ControlFunctionReverse = ...
    FaultTemporaryComponents: ControlFunctionReverse = ...
    FaultTestPositionFeedback: ControlFunctionReverse = ...
    FixedLevel0: ControlFunctionReverse = ...
    FixedLevel1: ControlFunctionReverse = ...
    Flashing1Output: ControlFunctionReverse = ...
    Flashing2Output: ControlFunctionReverse = ...
    Flashing3Output: ControlFunctionReverse = ...
    Flicker1Output: ControlFunctionReverse = ...
    Flicker2Output: ControlFunctionReverse = ...
    Flicker3Output: ControlFunctionReverse = ...
    NonvolatileElement1Output: ControlFunctionReverse = ...
    NonvolatileElement2Output: ControlFunctionReverse = ...
    NonvolatileElement3Output: ControlFunctionReverse = ...
    NonvolatileElement4Output: ControlFunctionReverse = ...
    NotConnected: ControlFunctionReverse = ...
    OPButton1: ControlFunctionReverse = ...
    OPButton2: ControlFunctionReverse = ...
    OPButton3: ControlFunctionReverse = ...
    OPButton4: ControlFunctionReverse = ...
    OPTestResetButton: ControlFunctionReverse = ...
    PWMOutput: ControlFunctionReverse = ...
    SignalConditioning1Output: ControlFunctionReverse = ...
    SignalConditioning2Output: ControlFunctionReverse = ...
    SignalConditioning3Output: ControlFunctionReverse = ...
    SignalConditioning4Output: ControlFunctionReverse = ...
    SignalConditioning5Output: ControlFunctionReverse = ...
    SignalConditioning6Output: ControlFunctionReverse = ...
    StatusBusOk: ControlFunctionReverse = ...
    StatusChangeoverPauseActive: ControlFunctionReverse = ...
    StatusCoolingDownPeriodActive: ControlFunctionReverse = ...
    StatusCurrentFlowing: ControlFunctionReverse = ...
    StatusDeviceOk: ControlFunctionReverse = ...
    StatusDeviceTestActive: ControlFunctionReverse = ...
    StatusEmergencyStartExecuted: ControlFunctionReverse = ...
    StatusEnablingCircuitClosed: ControlFunctionReverse = ...
    StatusFeedbackCLOSED: ControlFunctionReverse = ...
    StatusFeedbackOPEN: ControlFunctionReverse = ...
    StatusGroupFault: ControlFunctionReverse = ...
    StatusGroupWarning: ControlFunctionReverse = ...
    StatusInterlockingTimeActive: ControlFunctionReverse = ...
    StatusOff: ControlFunctionReverse = ...
    StatusOnForward: ControlFunctionReverse = ...
    StatusOnForwardFast: ControlFunctionReverse = ...
    StatusOnReverse: ControlFunctionReverse = ...
    StatusOnReverseFast: ControlFunctionReverse = ...
    StatusOperationalProtectionOff: ControlFunctionReverse = ...
    StatusPauseTimeActive: ControlFunctionReverse = ...
    StatusPhaseSequence123: ControlFunctionReverse = ...
    StatusPhaseSequence321: ControlFunctionReverse = ...
    StatusPLCPCSInRun: ControlFunctionReverse = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionReverse = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionReverse = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionReverse = ...
    StatusRemoteMode: ControlFunctionReverse = ...
    StatusStartActive: ControlFunctionReverse = ...
    StatusTestPosition: ControlFunctionReverse = ...
    StatusTorqueCLOSED: ControlFunctionReverse = ...
    StatusTorqueOPEN: ControlFunctionReverse = ...
    Timer1Output: ControlFunctionReverse = ...
    Timer2Output: ControlFunctionReverse = ...
    Timer3Output: ControlFunctionReverse = ...
    Timer4Output: ControlFunctionReverse = ...
    Timer5Output: ControlFunctionReverse = ...
    Timer6Output: ControlFunctionReverse = ...
    TruthTable10Output: ControlFunctionReverse = ...
    TruthTable11Output: ControlFunctionReverse = ...
    TruthTable1Output: ControlFunctionReverse = ...
    TruthTable2Output: ControlFunctionReverse = ...
    TruthTable3Output: ControlFunctionReverse = ...
    TruthTable4Output: ControlFunctionReverse = ...
    TruthTable5Output: ControlFunctionReverse = ...
    TruthTable6Output: ControlFunctionReverse = ...
    TruthTable7Output: ControlFunctionReverse = ...
    TruthTable8Output: ControlFunctionReverse = ...
    TruthTable9Output1: ControlFunctionReverse = ...
    TruthTable9Output2: ControlFunctionReverse = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionReverse = ...
    WarningSimultaneity: ControlFunctionReverse = ...


class ControlFunctionReverseFast(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionReverseFast

    enum ControlFunctionReverseFast, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionReverseFast = ...
    AcyclicReceiveBit01: ControlFunctionReverseFast = ...
    AcyclicReceiveBit02: ControlFunctionReverseFast = ...
    AcyclicReceiveBit03: ControlFunctionReverseFast = ...
    AcyclicReceiveBit04: ControlFunctionReverseFast = ...
    AcyclicReceiveBit05: ControlFunctionReverseFast = ...
    AcyclicReceiveBit06: ControlFunctionReverseFast = ...
    AcyclicReceiveBit07: ControlFunctionReverseFast = ...
    AcyclicReceiveBit10: ControlFunctionReverseFast = ...
    AcyclicReceiveBit11: ControlFunctionReverseFast = ...
    AcyclicReceiveBit12: ControlFunctionReverseFast = ...
    AcyclicReceiveBit13: ControlFunctionReverseFast = ...
    AcyclicReceiveBit14: ControlFunctionReverseFast = ...
    AcyclicReceiveBit15: ControlFunctionReverseFast = ...
    AcyclicReceiveBit16: ControlFunctionReverseFast = ...
    AcyclicReceiveBit17: ControlFunctionReverseFast = ...
    BUInput1: ControlFunctionReverseFast = ...
    BUInput2: ControlFunctionReverseFast = ...
    BUInput3: ControlFunctionReverseFast = ...
    BUInput4: ControlFunctionReverseFast = ...
    BUTestResetButton: ControlFunctionReverseFast = ...
    ContactorControl1QE1: ControlFunctionReverseFast = ...
    ContactorControl2QE2: ControlFunctionReverseFast = ...
    ContactorControl3QE3: ControlFunctionReverseFast = ...
    ContactorControl4QE4: ControlFunctionReverseFast = ...
    ContactorControl5QE5: ControlFunctionReverseFast = ...
    Counter1Output: ControlFunctionReverseFast = ...
    Counter2Output: ControlFunctionReverseFast = ...
    Counter3Output: ControlFunctionReverseFast = ...
    Counter4Output: ControlFunctionReverseFast = ...
    Counter5Output: ControlFunctionReverseFast = ...
    Counter6Output: ControlFunctionReverseFast = ...
    CyclicReceiveBit00: ControlFunctionReverseFast = ...
    CyclicReceiveBit01: ControlFunctionReverseFast = ...
    CyclicReceiveBit02: ControlFunctionReverseFast = ...
    CyclicReceiveBit03: ControlFunctionReverseFast = ...
    CyclicReceiveBit04: ControlFunctionReverseFast = ...
    CyclicReceiveBit05: ControlFunctionReverseFast = ...
    CyclicReceiveBit06: ControlFunctionReverseFast = ...
    CyclicReceiveBit07: ControlFunctionReverseFast = ...
    CyclicReceiveBit10: ControlFunctionReverseFast = ...
    CyclicReceiveBit11: ControlFunctionReverseFast = ...
    CyclicReceiveBit12: ControlFunctionReverseFast = ...
    CyclicReceiveBit13: ControlFunctionReverseFast = ...
    CyclicReceiveBit14: ControlFunctionReverseFast = ...
    CyclicReceiveBit15: ControlFunctionReverseFast = ...
    CyclicReceiveBit16: ControlFunctionReverseFast = ...
    CyclicReceiveBit17: ControlFunctionReverseFast = ...
    DisplayQLAOff: ControlFunctionReverseFast = ...
    DisplayQLEForward: ControlFunctionReverseFast = ...
    DisplayQLEForwardFast: ControlFunctionReverseFast = ...
    DisplayQLEReverse: ControlFunctionReverseFast = ...
    DisplayQLEReverseFast: ControlFunctionReverseFast = ...
    DisplayQLSFault: ControlFunctionReverseFast = ...
    DM1Input1: ControlFunctionReverseFast = ...
    DM1Input2: ControlFunctionReverseFast = ...
    DM1Input3: ControlFunctionReverseFast = ...
    DM1Input4: ControlFunctionReverseFast = ...
    DM1SensorChannel1: ControlFunctionReverseFast = ...
    DM1SensorChannel2: ControlFunctionReverseFast = ...
    DM2Input1: ControlFunctionReverseFast = ...
    DM2Input2: ControlFunctionReverseFast = ...
    DM2Input3: ControlFunctionReverseFast = ...
    DM2Input4: ControlFunctionReverseFast = ...
    EnabledControlCommandOff: ControlFunctionReverseFast = ...
    EnabledControlCommandOnForward: ControlFunctionReverseFast = ...
    EnabledControlCommandOnForwardFast: ControlFunctionReverseFast = ...
    EnabledControlCommandOnReverse: ControlFunctionReverseFast = ...
    EnabledControlCommandOnReverseFast: ControlFunctionReverseFast = ...
    EventAM1OpenCircuit: ControlFunctionReverseFast = ...
    EventAM1TripLevel0420mAGt: ControlFunctionReverseFast = ...
    EventAM1TripLevel0420mALt: ControlFunctionReverseFast = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionReverseFast = ...
    EventAM1WarningLevel0420mALt: ControlFunctionReverseFast = ...
    EventAM2OpenCircuit: ControlFunctionReverseFast = ...
    EventAM2TripLevel0420mAGt: ControlFunctionReverseFast = ...
    EventAM2TripLevel0420mALt: ControlFunctionReverseFast = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionReverseFast = ...
    EventAM2WarningLevel0420mALt: ControlFunctionReverseFast = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionReverseFast = ...
    EventDMFLOCALOk: ControlFunctionReverseFast = ...
    EventExternalFault1: ControlFunctionReverseFast = ...
    EventExternalFault2: ControlFunctionReverseFast = ...
    EventExternalFault3: ControlFunctionReverseFast = ...
    EventExternalFault4: ControlFunctionReverseFast = ...
    EventExternalFault5: ControlFunctionReverseFast = ...
    EventExternalFault6: ControlFunctionReverseFast = ...
    EventExternalGroundFault: ControlFunctionReverseFast = ...
    EventExternalGroundFaultWarning: ControlFunctionReverseFast = ...
    EventInternalGroundFault: ControlFunctionReverseFast = ...
    EventJustOneStartPossible: ControlFunctionReverseFast = ...
    EventLimitMonitor1: ControlFunctionReverseFast = ...
    EventLimitMonitor2: ControlFunctionReverseFast = ...
    EventLimitMonitor3: ControlFunctionReverseFast = ...
    EventLimitMonitor4: ControlFunctionReverseFast = ...
    EventLimitMonitor5: ControlFunctionReverseFast = ...
    EventLimitMonitor6: ControlFunctionReverseFast = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionReverseFast = ...
    EventMotorOperatingHoursGt: ControlFunctionReverseFast = ...
    EventNoStartPermitted: ControlFunctionReverseFast = ...
    EventNumberOfStartsGt: ControlFunctionReverseFast = ...
    EventOverload: ControlFunctionReverseFast = ...
    EventOverloadAndPhaseFailure: ControlFunctionReverseFast = ...
    EventPrewarningOverload: ControlFunctionReverseFast = ...
    EventPROFIsafeActive: ControlFunctionReverseFast = ...
    EventSafetyrelatedTripping: ControlFunctionReverseFast = ...
    EventStalledRotor: ControlFunctionReverseFast = ...
    EventStopTimeGt: ControlFunctionReverseFast = ...
    EventThermistorOpenCircuit: ControlFunctionReverseFast = ...
    EventThermistorShortCircuit: ControlFunctionReverseFast = ...
    EventThermistorTripLevel: ControlFunctionReverseFast = ...
    EventTimestampfctActiveAndOk: ControlFunctionReverseFast = ...
    EventTM1OutOfRange: ControlFunctionReverseFast = ...
    EventTM1SensorFault: ControlFunctionReverseFast = ...
    EventTM1TripLevelTGt: ControlFunctionReverseFast = ...
    EventTM1WarningLevelTGt: ControlFunctionReverseFast = ...
    EventTM2OutOfRange: ControlFunctionReverseFast = ...
    EventTM2SensorFault: ControlFunctionReverseFast = ...
    EventTM2TripLevelTGt: ControlFunctionReverseFast = ...
    EventTM2WarningLevelTGt: ControlFunctionReverseFast = ...
    EventTripLevelCosPhiLt: ControlFunctionReverseFast = ...
    EventTripLevelIGt: ControlFunctionReverseFast = ...
    EventTripLevelILt: ControlFunctionReverseFast = ...
    EventTripLevelPGt: ControlFunctionReverseFast = ...
    EventTripLevelPLt: ControlFunctionReverseFast = ...
    EventTripLevelULt: ControlFunctionReverseFast = ...
    EventUnbalance: ControlFunctionReverseFast = ...
    EventWarningLevelCosPhiLt: ControlFunctionReverseFast = ...
    EventWarningLevelIGt: ControlFunctionReverseFast = ...
    EventWarningLevelILt: ControlFunctionReverseFast = ...
    EventWarningLevelPGt: ControlFunctionReverseFast = ...
    EventWarningLevelPLt: ControlFunctionReverseFast = ...
    EventWarningLevelULt: ControlFunctionReverseFast = ...
    FaultAntivalence: ControlFunctionReverseFast = ...
    FaultBus: ControlFunctionReverseFast = ...
    FaultConfigurationError: ControlFunctionReverseFast = ...
    FaultDouble0: ControlFunctionReverseFast = ...
    FaultDouble1: ControlFunctionReverseFast = ...
    FaultEndPosition: ControlFunctionReverseFast = ...
    FaultExecutionOnCommand: ControlFunctionReverseFast = ...
    FaultExecutionSTOPCommand: ControlFunctionReverseFast = ...
    FaultFeedbackOff: ControlFunctionReverseFast = ...
    FaultFeedbackOn: ControlFunctionReverseFast = ...
    FaultHardwareFaultBasicUnit: ControlFunctionReverseFast = ...
    FaultModuleFault: ControlFunctionReverseFast = ...
    FaultOperationalProtectionOff: ControlFunctionReverseFast = ...
    FaultParameterization: ControlFunctionReverseFast = ...
    FaultPLCPCS: ControlFunctionReverseFast = ...
    FaultPowerFailure: ControlFunctionReverseFast = ...
    FaultStalledPositioner: ControlFunctionReverseFast = ...
    FaultTemporaryComponents: ControlFunctionReverseFast = ...
    FaultTestPositionFeedback: ControlFunctionReverseFast = ...
    FixedLevel0: ControlFunctionReverseFast = ...
    FixedLevel1: ControlFunctionReverseFast = ...
    Flashing1Output: ControlFunctionReverseFast = ...
    Flashing2Output: ControlFunctionReverseFast = ...
    Flashing3Output: ControlFunctionReverseFast = ...
    Flicker1Output: ControlFunctionReverseFast = ...
    Flicker2Output: ControlFunctionReverseFast = ...
    Flicker3Output: ControlFunctionReverseFast = ...
    NonvolatileElement1Output: ControlFunctionReverseFast = ...
    NonvolatileElement2Output: ControlFunctionReverseFast = ...
    NonvolatileElement3Output: ControlFunctionReverseFast = ...
    NonvolatileElement4Output: ControlFunctionReverseFast = ...
    NotConnected: ControlFunctionReverseFast = ...
    OPButton1: ControlFunctionReverseFast = ...
    OPButton2: ControlFunctionReverseFast = ...
    OPButton3: ControlFunctionReverseFast = ...
    OPButton4: ControlFunctionReverseFast = ...
    OPTestResetButton: ControlFunctionReverseFast = ...
    PWMOutput: ControlFunctionReverseFast = ...
    SignalConditioning1Output: ControlFunctionReverseFast = ...
    SignalConditioning2Output: ControlFunctionReverseFast = ...
    SignalConditioning3Output: ControlFunctionReverseFast = ...
    SignalConditioning4Output: ControlFunctionReverseFast = ...
    SignalConditioning5Output: ControlFunctionReverseFast = ...
    SignalConditioning6Output: ControlFunctionReverseFast = ...
    StatusBusOk: ControlFunctionReverseFast = ...
    StatusChangeoverPauseActive: ControlFunctionReverseFast = ...
    StatusCoolingDownPeriodActive: ControlFunctionReverseFast = ...
    StatusCurrentFlowing: ControlFunctionReverseFast = ...
    StatusDeviceOk: ControlFunctionReverseFast = ...
    StatusDeviceTestActive: ControlFunctionReverseFast = ...
    StatusEmergencyStartExecuted: ControlFunctionReverseFast = ...
    StatusEnablingCircuitClosed: ControlFunctionReverseFast = ...
    StatusFeedbackCLOSED: ControlFunctionReverseFast = ...
    StatusFeedbackOPEN: ControlFunctionReverseFast = ...
    StatusGroupFault: ControlFunctionReverseFast = ...
    StatusGroupWarning: ControlFunctionReverseFast = ...
    StatusInterlockingTimeActive: ControlFunctionReverseFast = ...
    StatusOff: ControlFunctionReverseFast = ...
    StatusOnForward: ControlFunctionReverseFast = ...
    StatusOnForwardFast: ControlFunctionReverseFast = ...
    StatusOnReverse: ControlFunctionReverseFast = ...
    StatusOnReverseFast: ControlFunctionReverseFast = ...
    StatusOperationalProtectionOff: ControlFunctionReverseFast = ...
    StatusPauseTimeActive: ControlFunctionReverseFast = ...
    StatusPhaseSequence123: ControlFunctionReverseFast = ...
    StatusPhaseSequence321: ControlFunctionReverseFast = ...
    StatusPLCPCSInRun: ControlFunctionReverseFast = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionReverseFast = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionReverseFast = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionReverseFast = ...
    StatusRemoteMode: ControlFunctionReverseFast = ...
    StatusStartActive: ControlFunctionReverseFast = ...
    StatusTestPosition: ControlFunctionReverseFast = ...
    StatusTorqueCLOSED: ControlFunctionReverseFast = ...
    StatusTorqueOPEN: ControlFunctionReverseFast = ...
    Timer1Output: ControlFunctionReverseFast = ...
    Timer2Output: ControlFunctionReverseFast = ...
    Timer3Output: ControlFunctionReverseFast = ...
    Timer4Output: ControlFunctionReverseFast = ...
    Timer5Output: ControlFunctionReverseFast = ...
    Timer6Output: ControlFunctionReverseFast = ...
    TruthTable10Output: ControlFunctionReverseFast = ...
    TruthTable11Output: ControlFunctionReverseFast = ...
    TruthTable1Output: ControlFunctionReverseFast = ...
    TruthTable2Output: ControlFunctionReverseFast = ...
    TruthTable3Output: ControlFunctionReverseFast = ...
    TruthTable4Output: ControlFunctionReverseFast = ...
    TruthTable5Output: ControlFunctionReverseFast = ...
    TruthTable6Output: ControlFunctionReverseFast = ...
    TruthTable7Output: ControlFunctionReverseFast = ...
    TruthTable8Output: ControlFunctionReverseFast = ...
    TruthTable9Output1: ControlFunctionReverseFast = ...
    TruthTable9Output2: ControlFunctionReverseFast = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionReverseFast = ...
    WarningSimultaneity: ControlFunctionReverseFast = ...


class ControlFunctionTorqueCLOSEDTC(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionTorqueCLOSEDTC

    enum ControlFunctionTorqueCLOSEDTC, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit01: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit02: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit03: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit04: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit05: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit06: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit07: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit10: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit11: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit12: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit13: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit14: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit15: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit16: ControlFunctionTorqueCLOSEDTC = ...
    AcyclicReceiveBit17: ControlFunctionTorqueCLOSEDTC = ...
    BUInput1: ControlFunctionTorqueCLOSEDTC = ...
    BUInput2: ControlFunctionTorqueCLOSEDTC = ...
    BUInput3: ControlFunctionTorqueCLOSEDTC = ...
    BUInput4: ControlFunctionTorqueCLOSEDTC = ...
    BUTestResetButton: ControlFunctionTorqueCLOSEDTC = ...
    ContactorControl1QE1: ControlFunctionTorqueCLOSEDTC = ...
    ContactorControl2QE2: ControlFunctionTorqueCLOSEDTC = ...
    ContactorControl3QE3: ControlFunctionTorqueCLOSEDTC = ...
    ContactorControl4QE4: ControlFunctionTorqueCLOSEDTC = ...
    ContactorControl5QE5: ControlFunctionTorqueCLOSEDTC = ...
    Counter1Output: ControlFunctionTorqueCLOSEDTC = ...
    Counter2Output: ControlFunctionTorqueCLOSEDTC = ...
    Counter3Output: ControlFunctionTorqueCLOSEDTC = ...
    Counter4Output: ControlFunctionTorqueCLOSEDTC = ...
    Counter5Output: ControlFunctionTorqueCLOSEDTC = ...
    Counter6Output: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit00: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit01: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit02: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit03: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit04: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit05: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit06: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit07: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit10: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit11: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit12: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit13: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit14: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit15: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit16: ControlFunctionTorqueCLOSEDTC = ...
    CyclicReceiveBit17: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLAOff: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLEForward: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLEForwardFast: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLEReverse: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLEReverseFast: ControlFunctionTorqueCLOSEDTC = ...
    DisplayQLSFault: ControlFunctionTorqueCLOSEDTC = ...
    DM1Input1: ControlFunctionTorqueCLOSEDTC = ...
    DM1Input2: ControlFunctionTorqueCLOSEDTC = ...
    DM1Input3: ControlFunctionTorqueCLOSEDTC = ...
    DM1Input4: ControlFunctionTorqueCLOSEDTC = ...
    DM1SensorChannel1: ControlFunctionTorqueCLOSEDTC = ...
    DM1SensorChannel2: ControlFunctionTorqueCLOSEDTC = ...
    DM2Input1: ControlFunctionTorqueCLOSEDTC = ...
    DM2Input2: ControlFunctionTorqueCLOSEDTC = ...
    DM2Input3: ControlFunctionTorqueCLOSEDTC = ...
    DM2Input4: ControlFunctionTorqueCLOSEDTC = ...
    EnabledControlCommandOff: ControlFunctionTorqueCLOSEDTC = ...
    EnabledControlCommandOnForward: ControlFunctionTorqueCLOSEDTC = ...
    EnabledControlCommandOnForwardFast: ControlFunctionTorqueCLOSEDTC = ...
    EnabledControlCommandOnReverse: ControlFunctionTorqueCLOSEDTC = ...
    EnabledControlCommandOnReverseFast: ControlFunctionTorqueCLOSEDTC = ...
    EventAM1OpenCircuit: ControlFunctionTorqueCLOSEDTC = ...
    EventAM1TripLevel0420mAGt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM1TripLevel0420mALt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM1WarningLevel0420mALt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM2OpenCircuit: ControlFunctionTorqueCLOSEDTC = ...
    EventAM2TripLevel0420mAGt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM2TripLevel0420mALt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionTorqueCLOSEDTC = ...
    EventAM2WarningLevel0420mALt: ControlFunctionTorqueCLOSEDTC = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionTorqueCLOSEDTC = ...
    EventDMFLOCALOk: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault1: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault2: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault3: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault4: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault5: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalFault6: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalGroundFault: ControlFunctionTorqueCLOSEDTC = ...
    EventExternalGroundFaultWarning: ControlFunctionTorqueCLOSEDTC = ...
    EventInternalGroundFault: ControlFunctionTorqueCLOSEDTC = ...
    EventJustOneStartPossible: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor1: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor2: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor3: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor4: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor5: ControlFunctionTorqueCLOSEDTC = ...
    EventLimitMonitor6: ControlFunctionTorqueCLOSEDTC = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionTorqueCLOSEDTC = ...
    EventMotorOperatingHoursGt: ControlFunctionTorqueCLOSEDTC = ...
    EventNoStartPermitted: ControlFunctionTorqueCLOSEDTC = ...
    EventNumberOfStartsGt: ControlFunctionTorqueCLOSEDTC = ...
    EventOverload: ControlFunctionTorqueCLOSEDTC = ...
    EventOverloadAndPhaseFailure: ControlFunctionTorqueCLOSEDTC = ...
    EventPrewarningOverload: ControlFunctionTorqueCLOSEDTC = ...
    EventPROFIsafeActive: ControlFunctionTorqueCLOSEDTC = ...
    EventSafetyrelatedTripping: ControlFunctionTorqueCLOSEDTC = ...
    EventStalledRotor: ControlFunctionTorqueCLOSEDTC = ...
    EventStopTimeGt: ControlFunctionTorqueCLOSEDTC = ...
    EventThermistorOpenCircuit: ControlFunctionTorqueCLOSEDTC = ...
    EventThermistorShortCircuit: ControlFunctionTorqueCLOSEDTC = ...
    EventThermistorTripLevel: ControlFunctionTorqueCLOSEDTC = ...
    EventTimestampfctActiveAndOk: ControlFunctionTorqueCLOSEDTC = ...
    EventTM1OutOfRange: ControlFunctionTorqueCLOSEDTC = ...
    EventTM1SensorFault: ControlFunctionTorqueCLOSEDTC = ...
    EventTM1TripLevelTGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTM1WarningLevelTGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTM2OutOfRange: ControlFunctionTorqueCLOSEDTC = ...
    EventTM2SensorFault: ControlFunctionTorqueCLOSEDTC = ...
    EventTM2TripLevelTGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTM2WarningLevelTGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelCosPhiLt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelIGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelILt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelPGt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelPLt: ControlFunctionTorqueCLOSEDTC = ...
    EventTripLevelULt: ControlFunctionTorqueCLOSEDTC = ...
    EventUnbalance: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelCosPhiLt: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelIGt: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelILt: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelPGt: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelPLt: ControlFunctionTorqueCLOSEDTC = ...
    EventWarningLevelULt: ControlFunctionTorqueCLOSEDTC = ...
    FaultAntivalence: ControlFunctionTorqueCLOSEDTC = ...
    FaultBus: ControlFunctionTorqueCLOSEDTC = ...
    FaultConfigurationError: ControlFunctionTorqueCLOSEDTC = ...
    FaultDouble0: ControlFunctionTorqueCLOSEDTC = ...
    FaultDouble1: ControlFunctionTorqueCLOSEDTC = ...
    FaultEndPosition: ControlFunctionTorqueCLOSEDTC = ...
    FaultExecutionOnCommand: ControlFunctionTorqueCLOSEDTC = ...
    FaultExecutionSTOPCommand: ControlFunctionTorqueCLOSEDTC = ...
    FaultFeedbackOff: ControlFunctionTorqueCLOSEDTC = ...
    FaultFeedbackOn: ControlFunctionTorqueCLOSEDTC = ...
    FaultHardwareFaultBasicUnit: ControlFunctionTorqueCLOSEDTC = ...
    FaultModuleFault: ControlFunctionTorqueCLOSEDTC = ...
    FaultOperationalProtectionOff: ControlFunctionTorqueCLOSEDTC = ...
    FaultParameterization: ControlFunctionTorqueCLOSEDTC = ...
    FaultPLCPCS: ControlFunctionTorqueCLOSEDTC = ...
    FaultPowerFailure: ControlFunctionTorqueCLOSEDTC = ...
    FaultStalledPositioner: ControlFunctionTorqueCLOSEDTC = ...
    FaultTemporaryComponents: ControlFunctionTorqueCLOSEDTC = ...
    FaultTestPositionFeedback: ControlFunctionTorqueCLOSEDTC = ...
    FixedLevel0: ControlFunctionTorqueCLOSEDTC = ...
    FixedLevel1: ControlFunctionTorqueCLOSEDTC = ...
    Flashing1Output: ControlFunctionTorqueCLOSEDTC = ...
    Flashing2Output: ControlFunctionTorqueCLOSEDTC = ...
    Flashing3Output: ControlFunctionTorqueCLOSEDTC = ...
    Flicker1Output: ControlFunctionTorqueCLOSEDTC = ...
    Flicker2Output: ControlFunctionTorqueCLOSEDTC = ...
    Flicker3Output: ControlFunctionTorqueCLOSEDTC = ...
    NonvolatileElement1Output: ControlFunctionTorqueCLOSEDTC = ...
    NonvolatileElement2Output: ControlFunctionTorqueCLOSEDTC = ...
    NonvolatileElement3Output: ControlFunctionTorqueCLOSEDTC = ...
    NonvolatileElement4Output: ControlFunctionTorqueCLOSEDTC = ...
    NotConnected: ControlFunctionTorqueCLOSEDTC = ...
    OPButton1: ControlFunctionTorqueCLOSEDTC = ...
    OPButton2: ControlFunctionTorqueCLOSEDTC = ...
    OPButton3: ControlFunctionTorqueCLOSEDTC = ...
    OPButton4: ControlFunctionTorqueCLOSEDTC = ...
    OPTestResetButton: ControlFunctionTorqueCLOSEDTC = ...
    PWMOutput: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning1Output: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning2Output: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning3Output: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning4Output: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning5Output: ControlFunctionTorqueCLOSEDTC = ...
    SignalConditioning6Output: ControlFunctionTorqueCLOSEDTC = ...
    StatusBusOk: ControlFunctionTorqueCLOSEDTC = ...
    StatusChangeoverPauseActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusCoolingDownPeriodActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusCurrentFlowing: ControlFunctionTorqueCLOSEDTC = ...
    StatusDeviceOk: ControlFunctionTorqueCLOSEDTC = ...
    StatusDeviceTestActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusEmergencyStartExecuted: ControlFunctionTorqueCLOSEDTC = ...
    StatusEnablingCircuitClosed: ControlFunctionTorqueCLOSEDTC = ...
    StatusFeedbackCLOSED: ControlFunctionTorqueCLOSEDTC = ...
    StatusFeedbackOPEN: ControlFunctionTorqueCLOSEDTC = ...
    StatusGroupFault: ControlFunctionTorqueCLOSEDTC = ...
    StatusGroupWarning: ControlFunctionTorqueCLOSEDTC = ...
    StatusInterlockingTimeActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusOff: ControlFunctionTorqueCLOSEDTC = ...
    StatusOnForward: ControlFunctionTorqueCLOSEDTC = ...
    StatusOnForwardFast: ControlFunctionTorqueCLOSEDTC = ...
    StatusOnReverse: ControlFunctionTorqueCLOSEDTC = ...
    StatusOnReverseFast: ControlFunctionTorqueCLOSEDTC = ...
    StatusOperationalProtectionOff: ControlFunctionTorqueCLOSEDTC = ...
    StatusPauseTimeActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusPhaseSequence123: ControlFunctionTorqueCLOSEDTC = ...
    StatusPhaseSequence321: ControlFunctionTorqueCLOSEDTC = ...
    StatusPLCPCSInRun: ControlFunctionTorqueCLOSEDTC = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionTorqueCLOSEDTC = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionTorqueCLOSEDTC = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionTorqueCLOSEDTC = ...
    StatusRemoteMode: ControlFunctionTorqueCLOSEDTC = ...
    StatusStartActive: ControlFunctionTorqueCLOSEDTC = ...
    StatusTestPosition: ControlFunctionTorqueCLOSEDTC = ...
    StatusTorqueCLOSED: ControlFunctionTorqueCLOSEDTC = ...
    StatusTorqueOPEN: ControlFunctionTorqueCLOSEDTC = ...
    Timer1Output: ControlFunctionTorqueCLOSEDTC = ...
    Timer2Output: ControlFunctionTorqueCLOSEDTC = ...
    Timer3Output: ControlFunctionTorqueCLOSEDTC = ...
    Timer4Output: ControlFunctionTorqueCLOSEDTC = ...
    Timer5Output: ControlFunctionTorqueCLOSEDTC = ...
    Timer6Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable10Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable11Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable1Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable2Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable3Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable4Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable5Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable6Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable7Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable8Output: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable9Output1: ControlFunctionTorqueCLOSEDTC = ...
    TruthTable9Output2: ControlFunctionTorqueCLOSEDTC = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionTorqueCLOSEDTC = ...
    WarningSimultaneity: ControlFunctionTorqueCLOSEDTC = ...


class ControlFunctionTorqueOPENTO(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlFunctionTorqueOPENTO

    enum ControlFunctionTorqueOPENTO, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit01: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit02: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit03: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit04: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit05: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit06: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit07: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit10: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit11: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit12: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit13: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit14: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit15: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit16: ControlFunctionTorqueOPENTO = ...
    AcyclicReceiveBit17: ControlFunctionTorqueOPENTO = ...
    BUInput1: ControlFunctionTorqueOPENTO = ...
    BUInput2: ControlFunctionTorqueOPENTO = ...
    BUInput3: ControlFunctionTorqueOPENTO = ...
    BUInput4: ControlFunctionTorqueOPENTO = ...
    BUTestResetButton: ControlFunctionTorqueOPENTO = ...
    ContactorControl1QE1: ControlFunctionTorqueOPENTO = ...
    ContactorControl2QE2: ControlFunctionTorqueOPENTO = ...
    ContactorControl3QE3: ControlFunctionTorqueOPENTO = ...
    ContactorControl4QE4: ControlFunctionTorqueOPENTO = ...
    ContactorControl5QE5: ControlFunctionTorqueOPENTO = ...
    Counter1Output: ControlFunctionTorqueOPENTO = ...
    Counter2Output: ControlFunctionTorqueOPENTO = ...
    Counter3Output: ControlFunctionTorqueOPENTO = ...
    Counter4Output: ControlFunctionTorqueOPENTO = ...
    Counter5Output: ControlFunctionTorqueOPENTO = ...
    Counter6Output: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit00: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit01: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit02: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit03: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit04: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit05: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit06: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit07: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit10: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit11: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit12: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit13: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit14: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit15: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit16: ControlFunctionTorqueOPENTO = ...
    CyclicReceiveBit17: ControlFunctionTorqueOPENTO = ...
    DisplayQLAOff: ControlFunctionTorqueOPENTO = ...
    DisplayQLEForward: ControlFunctionTorqueOPENTO = ...
    DisplayQLEForwardFast: ControlFunctionTorqueOPENTO = ...
    DisplayQLEReverse: ControlFunctionTorqueOPENTO = ...
    DisplayQLEReverseFast: ControlFunctionTorqueOPENTO = ...
    DisplayQLSFault: ControlFunctionTorqueOPENTO = ...
    DM1Input1: ControlFunctionTorqueOPENTO = ...
    DM1Input2: ControlFunctionTorqueOPENTO = ...
    DM1Input3: ControlFunctionTorqueOPENTO = ...
    DM1Input4: ControlFunctionTorqueOPENTO = ...
    DM1SensorChannel1: ControlFunctionTorqueOPENTO = ...
    DM1SensorChannel2: ControlFunctionTorqueOPENTO = ...
    DM2Input1: ControlFunctionTorqueOPENTO = ...
    DM2Input2: ControlFunctionTorqueOPENTO = ...
    DM2Input3: ControlFunctionTorqueOPENTO = ...
    DM2Input4: ControlFunctionTorqueOPENTO = ...
    EnabledControlCommandOff: ControlFunctionTorqueOPENTO = ...
    EnabledControlCommandOnForward: ControlFunctionTorqueOPENTO = ...
    EnabledControlCommandOnForwardFast: ControlFunctionTorqueOPENTO = ...
    EnabledControlCommandOnReverse: ControlFunctionTorqueOPENTO = ...
    EnabledControlCommandOnReverseFast: ControlFunctionTorqueOPENTO = ...
    EventAM1OpenCircuit: ControlFunctionTorqueOPENTO = ...
    EventAM1TripLevel0420mAGt: ControlFunctionTorqueOPENTO = ...
    EventAM1TripLevel0420mALt: ControlFunctionTorqueOPENTO = ...
    EventAM1WarningLevel0420mAGt: ControlFunctionTorqueOPENTO = ...
    EventAM1WarningLevel0420mALt: ControlFunctionTorqueOPENTO = ...
    EventAM2OpenCircuit: ControlFunctionTorqueOPENTO = ...
    EventAM2TripLevel0420mAGt: ControlFunctionTorqueOPENTO = ...
    EventAM2TripLevel0420mALt: ControlFunctionTorqueOPENTO = ...
    EventAM2WarningLevel0420mAGt: ControlFunctionTorqueOPENTO = ...
    EventAM2WarningLevel0420mALt: ControlFunctionTorqueOPENTO = ...
    EventConfiguredOperatorPanelMissing: ControlFunctionTorqueOPENTO = ...
    EventDMFLOCALOk: ControlFunctionTorqueOPENTO = ...
    EventExternalFault1: ControlFunctionTorqueOPENTO = ...
    EventExternalFault2: ControlFunctionTorqueOPENTO = ...
    EventExternalFault3: ControlFunctionTorqueOPENTO = ...
    EventExternalFault4: ControlFunctionTorqueOPENTO = ...
    EventExternalFault5: ControlFunctionTorqueOPENTO = ...
    EventExternalFault6: ControlFunctionTorqueOPENTO = ...
    EventExternalGroundFault: ControlFunctionTorqueOPENTO = ...
    EventExternalGroundFaultWarning: ControlFunctionTorqueOPENTO = ...
    EventInternalGroundFault: ControlFunctionTorqueOPENTO = ...
    EventJustOneStartPossible: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor1: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor2: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor3: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor4: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor5: ControlFunctionTorqueOPENTO = ...
    EventLimitMonitor6: ControlFunctionTorqueOPENTO = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlFunctionTorqueOPENTO = ...
    EventMotorOperatingHoursGt: ControlFunctionTorqueOPENTO = ...
    EventNoStartPermitted: ControlFunctionTorqueOPENTO = ...
    EventNumberOfStartsGt: ControlFunctionTorqueOPENTO = ...
    EventOverload: ControlFunctionTorqueOPENTO = ...
    EventOverloadAndPhaseFailure: ControlFunctionTorqueOPENTO = ...
    EventPrewarningOverload: ControlFunctionTorqueOPENTO = ...
    EventPROFIsafeActive: ControlFunctionTorqueOPENTO = ...
    EventSafetyrelatedTripping: ControlFunctionTorqueOPENTO = ...
    EventStalledRotor: ControlFunctionTorqueOPENTO = ...
    EventStopTimeGt: ControlFunctionTorqueOPENTO = ...
    EventThermistorOpenCircuit: ControlFunctionTorqueOPENTO = ...
    EventThermistorShortCircuit: ControlFunctionTorqueOPENTO = ...
    EventThermistorTripLevel: ControlFunctionTorqueOPENTO = ...
    EventTimestampfctActiveAndOk: ControlFunctionTorqueOPENTO = ...
    EventTM1OutOfRange: ControlFunctionTorqueOPENTO = ...
    EventTM1SensorFault: ControlFunctionTorqueOPENTO = ...
    EventTM1TripLevelTGt: ControlFunctionTorqueOPENTO = ...
    EventTM1WarningLevelTGt: ControlFunctionTorqueOPENTO = ...
    EventTM2OutOfRange: ControlFunctionTorqueOPENTO = ...
    EventTM2SensorFault: ControlFunctionTorqueOPENTO = ...
    EventTM2TripLevelTGt: ControlFunctionTorqueOPENTO = ...
    EventTM2WarningLevelTGt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelCosPhiLt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelIGt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelILt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelPGt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelPLt: ControlFunctionTorqueOPENTO = ...
    EventTripLevelULt: ControlFunctionTorqueOPENTO = ...
    EventUnbalance: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelCosPhiLt: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelIGt: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelILt: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelPGt: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelPLt: ControlFunctionTorqueOPENTO = ...
    EventWarningLevelULt: ControlFunctionTorqueOPENTO = ...
    FaultAntivalence: ControlFunctionTorqueOPENTO = ...
    FaultBus: ControlFunctionTorqueOPENTO = ...
    FaultConfigurationError: ControlFunctionTorqueOPENTO = ...
    FaultDouble0: ControlFunctionTorqueOPENTO = ...
    FaultDouble1: ControlFunctionTorqueOPENTO = ...
    FaultEndPosition: ControlFunctionTorqueOPENTO = ...
    FaultExecutionOnCommand: ControlFunctionTorqueOPENTO = ...
    FaultExecutionSTOPCommand: ControlFunctionTorqueOPENTO = ...
    FaultFeedbackOff: ControlFunctionTorqueOPENTO = ...
    FaultFeedbackOn: ControlFunctionTorqueOPENTO = ...
    FaultHardwareFaultBasicUnit: ControlFunctionTorqueOPENTO = ...
    FaultModuleFault: ControlFunctionTorqueOPENTO = ...
    FaultOperationalProtectionOff: ControlFunctionTorqueOPENTO = ...
    FaultParameterization: ControlFunctionTorqueOPENTO = ...
    FaultPLCPCS: ControlFunctionTorqueOPENTO = ...
    FaultPowerFailure: ControlFunctionTorqueOPENTO = ...
    FaultStalledPositioner: ControlFunctionTorqueOPENTO = ...
    FaultTemporaryComponents: ControlFunctionTorqueOPENTO = ...
    FaultTestPositionFeedback: ControlFunctionTorqueOPENTO = ...
    FixedLevel0: ControlFunctionTorqueOPENTO = ...
    FixedLevel1: ControlFunctionTorqueOPENTO = ...
    Flashing1Output: ControlFunctionTorqueOPENTO = ...
    Flashing2Output: ControlFunctionTorqueOPENTO = ...
    Flashing3Output: ControlFunctionTorqueOPENTO = ...
    Flicker1Output: ControlFunctionTorqueOPENTO = ...
    Flicker2Output: ControlFunctionTorqueOPENTO = ...
    Flicker3Output: ControlFunctionTorqueOPENTO = ...
    NonvolatileElement1Output: ControlFunctionTorqueOPENTO = ...
    NonvolatileElement2Output: ControlFunctionTorqueOPENTO = ...
    NonvolatileElement3Output: ControlFunctionTorqueOPENTO = ...
    NonvolatileElement4Output: ControlFunctionTorqueOPENTO = ...
    NotConnected: ControlFunctionTorqueOPENTO = ...
    OPButton1: ControlFunctionTorqueOPENTO = ...
    OPButton2: ControlFunctionTorqueOPENTO = ...
    OPButton3: ControlFunctionTorqueOPENTO = ...
    OPButton4: ControlFunctionTorqueOPENTO = ...
    OPTestResetButton: ControlFunctionTorqueOPENTO = ...
    PWMOutput: ControlFunctionTorqueOPENTO = ...
    SignalConditioning1Output: ControlFunctionTorqueOPENTO = ...
    SignalConditioning2Output: ControlFunctionTorqueOPENTO = ...
    SignalConditioning3Output: ControlFunctionTorqueOPENTO = ...
    SignalConditioning4Output: ControlFunctionTorqueOPENTO = ...
    SignalConditioning5Output: ControlFunctionTorqueOPENTO = ...
    SignalConditioning6Output: ControlFunctionTorqueOPENTO = ...
    StatusBusOk: ControlFunctionTorqueOPENTO = ...
    StatusChangeoverPauseActive: ControlFunctionTorqueOPENTO = ...
    StatusCoolingDownPeriodActive: ControlFunctionTorqueOPENTO = ...
    StatusCurrentFlowing: ControlFunctionTorqueOPENTO = ...
    StatusDeviceOk: ControlFunctionTorqueOPENTO = ...
    StatusDeviceTestActive: ControlFunctionTorqueOPENTO = ...
    StatusEmergencyStartExecuted: ControlFunctionTorqueOPENTO = ...
    StatusEnablingCircuitClosed: ControlFunctionTorqueOPENTO = ...
    StatusFeedbackCLOSED: ControlFunctionTorqueOPENTO = ...
    StatusFeedbackOPEN: ControlFunctionTorqueOPENTO = ...
    StatusGroupFault: ControlFunctionTorqueOPENTO = ...
    StatusGroupWarning: ControlFunctionTorqueOPENTO = ...
    StatusInterlockingTimeActive: ControlFunctionTorqueOPENTO = ...
    StatusOff: ControlFunctionTorqueOPENTO = ...
    StatusOnForward: ControlFunctionTorqueOPENTO = ...
    StatusOnForwardFast: ControlFunctionTorqueOPENTO = ...
    StatusOnReverse: ControlFunctionTorqueOPENTO = ...
    StatusOnReverseFast: ControlFunctionTorqueOPENTO = ...
    StatusOperationalProtectionOff: ControlFunctionTorqueOPENTO = ...
    StatusPauseTimeActive: ControlFunctionTorqueOPENTO = ...
    StatusPhaseSequence123: ControlFunctionTorqueOPENTO = ...
    StatusPhaseSequence321: ControlFunctionTorqueOPENTO = ...
    StatusPLCPCSInRun: ControlFunctionTorqueOPENTO = ...
    StatusPositionerRunsInCLOSEDDirection: ControlFunctionTorqueOPENTO = ...
    StatusPositionerRunsInOPENDirection: ControlFunctionTorqueOPENTO = ...
    StatusPROFIenergyCommandStartPausePending: ControlFunctionTorqueOPENTO = ...
    StatusRemoteMode: ControlFunctionTorqueOPENTO = ...
    StatusStartActive: ControlFunctionTorqueOPENTO = ...
    StatusTestPosition: ControlFunctionTorqueOPENTO = ...
    StatusTorqueCLOSED: ControlFunctionTorqueOPENTO = ...
    StatusTorqueOPEN: ControlFunctionTorqueOPENTO = ...
    Timer1Output: ControlFunctionTorqueOPENTO = ...
    Timer2Output: ControlFunctionTorqueOPENTO = ...
    Timer3Output: ControlFunctionTorqueOPENTO = ...
    Timer4Output: ControlFunctionTorqueOPENTO = ...
    Timer5Output: ControlFunctionTorqueOPENTO = ...
    Timer6Output: ControlFunctionTorqueOPENTO = ...
    TruthTable10Output: ControlFunctionTorqueOPENTO = ...
    TruthTable11Output: ControlFunctionTorqueOPENTO = ...
    TruthTable1Output: ControlFunctionTorqueOPENTO = ...
    TruthTable2Output: ControlFunctionTorqueOPENTO = ...
    TruthTable3Output: ControlFunctionTorqueOPENTO = ...
    TruthTable4Output: ControlFunctionTorqueOPENTO = ...
    TruthTable5Output: ControlFunctionTorqueOPENTO = ...
    TruthTable6Output: ControlFunctionTorqueOPENTO = ...
    TruthTable7Output: ControlFunctionTorqueOPENTO = ...
    TruthTable8Output: ControlFunctionTorqueOPENTO = ...
    TruthTable9Output1: ControlFunctionTorqueOPENTO = ...
    TruthTable9Output2: ControlFunctionTorqueOPENTO = ...
    value__ = ...
    WarningFeedbackCircuit: ControlFunctionTorqueOPENTO = ...
    WarningSimultaneity: ControlFunctionTorqueOPENTO = ...


class ControlStationModeSelectorS1(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlStationModeSelectorS1

    enum ControlStationModeSelectorS1, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit01: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit02: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit03: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit04: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit05: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit06: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit07: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit10: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit11: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit12: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit13: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit14: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit15: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit16: ControlStationModeSelectorS1 = ...
    AcyclicReceiveBit17: ControlStationModeSelectorS1 = ...
    BUInput1: ControlStationModeSelectorS1 = ...
    BUInput2: ControlStationModeSelectorS1 = ...
    BUInput3: ControlStationModeSelectorS1 = ...
    BUInput4: ControlStationModeSelectorS1 = ...
    BUTestResetButton: ControlStationModeSelectorS1 = ...
    ContactorControl1QE1: ControlStationModeSelectorS1 = ...
    ContactorControl2QE2: ControlStationModeSelectorS1 = ...
    ContactorControl3QE3: ControlStationModeSelectorS1 = ...
    ContactorControl4QE4: ControlStationModeSelectorS1 = ...
    ContactorControl5QE5: ControlStationModeSelectorS1 = ...
    Counter1Output: ControlStationModeSelectorS1 = ...
    Counter2Output: ControlStationModeSelectorS1 = ...
    Counter3Output: ControlStationModeSelectorS1 = ...
    Counter4Output: ControlStationModeSelectorS1 = ...
    Counter5Output: ControlStationModeSelectorS1 = ...
    Counter6Output: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit00: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit01: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit02: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit03: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit04: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit05: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit06: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit07: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit10: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit11: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit12: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit13: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit14: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit15: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit16: ControlStationModeSelectorS1 = ...
    CyclicReceiveBit17: ControlStationModeSelectorS1 = ...
    DisplayQLAOff: ControlStationModeSelectorS1 = ...
    DisplayQLEForward: ControlStationModeSelectorS1 = ...
    DisplayQLEForwardFast: ControlStationModeSelectorS1 = ...
    DisplayQLEReverse: ControlStationModeSelectorS1 = ...
    DisplayQLEReverseFast: ControlStationModeSelectorS1 = ...
    DisplayQLSFault: ControlStationModeSelectorS1 = ...
    DM1Input1: ControlStationModeSelectorS1 = ...
    DM1Input2: ControlStationModeSelectorS1 = ...
    DM1Input3: ControlStationModeSelectorS1 = ...
    DM1Input4: ControlStationModeSelectorS1 = ...
    DM1SensorChannel1: ControlStationModeSelectorS1 = ...
    DM1SensorChannel2: ControlStationModeSelectorS1 = ...
    DM2Input1: ControlStationModeSelectorS1 = ...
    DM2Input2: ControlStationModeSelectorS1 = ...
    DM2Input3: ControlStationModeSelectorS1 = ...
    DM2Input4: ControlStationModeSelectorS1 = ...
    EnabledControlCommandOff: ControlStationModeSelectorS1 = ...
    EnabledControlCommandOnForward: ControlStationModeSelectorS1 = ...
    EnabledControlCommandOnForwardFast: ControlStationModeSelectorS1 = ...
    EnabledControlCommandOnReverse: ControlStationModeSelectorS1 = ...
    EnabledControlCommandOnReverseFast: ControlStationModeSelectorS1 = ...
    EventAM1OpenCircuit: ControlStationModeSelectorS1 = ...
    EventAM1TripLevel0420mAGt: ControlStationModeSelectorS1 = ...
    EventAM1TripLevel0420mALt: ControlStationModeSelectorS1 = ...
    EventAM1WarningLevel0420mAGt: ControlStationModeSelectorS1 = ...
    EventAM1WarningLevel0420mALt: ControlStationModeSelectorS1 = ...
    EventAM2OpenCircuit: ControlStationModeSelectorS1 = ...
    EventAM2TripLevel0420mAGt: ControlStationModeSelectorS1 = ...
    EventAM2TripLevel0420mALt: ControlStationModeSelectorS1 = ...
    EventAM2WarningLevel0420mAGt: ControlStationModeSelectorS1 = ...
    EventAM2WarningLevel0420mALt: ControlStationModeSelectorS1 = ...
    EventConfiguredOperatorPanelMissing: ControlStationModeSelectorS1 = ...
    EventDMFLOCALOk: ControlStationModeSelectorS1 = ...
    EventExternalFault1: ControlStationModeSelectorS1 = ...
    EventExternalFault2: ControlStationModeSelectorS1 = ...
    EventExternalFault3: ControlStationModeSelectorS1 = ...
    EventExternalFault4: ControlStationModeSelectorS1 = ...
    EventExternalFault5: ControlStationModeSelectorS1 = ...
    EventExternalFault6: ControlStationModeSelectorS1 = ...
    EventExternalGroundFault: ControlStationModeSelectorS1 = ...
    EventExternalGroundFaultWarning: ControlStationModeSelectorS1 = ...
    EventInternalGroundFault: ControlStationModeSelectorS1 = ...
    EventJustOneStartPossible: ControlStationModeSelectorS1 = ...
    EventLimitMonitor1: ControlStationModeSelectorS1 = ...
    EventLimitMonitor2: ControlStationModeSelectorS1 = ...
    EventLimitMonitor3: ControlStationModeSelectorS1 = ...
    EventLimitMonitor4: ControlStationModeSelectorS1 = ...
    EventLimitMonitor5: ControlStationModeSelectorS1 = ...
    EventLimitMonitor6: ControlStationModeSelectorS1 = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlStationModeSelectorS1 = ...
    EventMotorOperatingHoursGt: ControlStationModeSelectorS1 = ...
    EventNoStartPermitted: ControlStationModeSelectorS1 = ...
    EventNumberOfStartsGt: ControlStationModeSelectorS1 = ...
    EventOverload: ControlStationModeSelectorS1 = ...
    EventOverloadAndPhaseFailure: ControlStationModeSelectorS1 = ...
    EventPrewarningOverload: ControlStationModeSelectorS1 = ...
    EventPROFIsafeActive: ControlStationModeSelectorS1 = ...
    EventSafetyrelatedTripping: ControlStationModeSelectorS1 = ...
    EventStalledRotor: ControlStationModeSelectorS1 = ...
    EventStopTimeGt: ControlStationModeSelectorS1 = ...
    EventThermistorOpenCircuit: ControlStationModeSelectorS1 = ...
    EventThermistorShortCircuit: ControlStationModeSelectorS1 = ...
    EventThermistorTripLevel: ControlStationModeSelectorS1 = ...
    EventTimestampfctActiveAndOk: ControlStationModeSelectorS1 = ...
    EventTM1OutOfRange: ControlStationModeSelectorS1 = ...
    EventTM1SensorFault: ControlStationModeSelectorS1 = ...
    EventTM1TripLevelTGt: ControlStationModeSelectorS1 = ...
    EventTM1WarningLevelTGt: ControlStationModeSelectorS1 = ...
    EventTM2OutOfRange: ControlStationModeSelectorS1 = ...
    EventTM2SensorFault: ControlStationModeSelectorS1 = ...
    EventTM2TripLevelTGt: ControlStationModeSelectorS1 = ...
    EventTM2WarningLevelTGt: ControlStationModeSelectorS1 = ...
    EventTripLevelCosPhiLt: ControlStationModeSelectorS1 = ...
    EventTripLevelIGt: ControlStationModeSelectorS1 = ...
    EventTripLevelILt: ControlStationModeSelectorS1 = ...
    EventTripLevelPGt: ControlStationModeSelectorS1 = ...
    EventTripLevelPLt: ControlStationModeSelectorS1 = ...
    EventTripLevelULt: ControlStationModeSelectorS1 = ...
    EventUnbalance: ControlStationModeSelectorS1 = ...
    EventWarningLevelCosPhiLt: ControlStationModeSelectorS1 = ...
    EventWarningLevelIGt: ControlStationModeSelectorS1 = ...
    EventWarningLevelILt: ControlStationModeSelectorS1 = ...
    EventWarningLevelPGt: ControlStationModeSelectorS1 = ...
    EventWarningLevelPLt: ControlStationModeSelectorS1 = ...
    EventWarningLevelULt: ControlStationModeSelectorS1 = ...
    FaultAntivalence: ControlStationModeSelectorS1 = ...
    FaultBus: ControlStationModeSelectorS1 = ...
    FaultConfigurationError: ControlStationModeSelectorS1 = ...
    FaultDouble0: ControlStationModeSelectorS1 = ...
    FaultDouble1: ControlStationModeSelectorS1 = ...
    FaultEndPosition: ControlStationModeSelectorS1 = ...
    FaultExecutionOnCommand: ControlStationModeSelectorS1 = ...
    FaultExecutionSTOPCommand: ControlStationModeSelectorS1 = ...
    FaultFeedbackOff: ControlStationModeSelectorS1 = ...
    FaultFeedbackOn: ControlStationModeSelectorS1 = ...
    FaultHardwareFaultBasicUnit: ControlStationModeSelectorS1 = ...
    FaultModuleFault: ControlStationModeSelectorS1 = ...
    FaultOperationalProtectionOff: ControlStationModeSelectorS1 = ...
    FaultParameterization: ControlStationModeSelectorS1 = ...
    FaultPLCPCS: ControlStationModeSelectorS1 = ...
    FaultPowerFailure: ControlStationModeSelectorS1 = ...
    FaultStalledPositioner: ControlStationModeSelectorS1 = ...
    FaultTemporaryComponents: ControlStationModeSelectorS1 = ...
    FaultTestPositionFeedback: ControlStationModeSelectorS1 = ...
    FixedLevel0: ControlStationModeSelectorS1 = ...
    FixedLevel1: ControlStationModeSelectorS1 = ...
    Flashing1Output: ControlStationModeSelectorS1 = ...
    Flashing2Output: ControlStationModeSelectorS1 = ...
    Flashing3Output: ControlStationModeSelectorS1 = ...
    Flicker1Output: ControlStationModeSelectorS1 = ...
    Flicker2Output: ControlStationModeSelectorS1 = ...
    Flicker3Output: ControlStationModeSelectorS1 = ...
    NonvolatileElement1Output: ControlStationModeSelectorS1 = ...
    NonvolatileElement2Output: ControlStationModeSelectorS1 = ...
    NonvolatileElement3Output: ControlStationModeSelectorS1 = ...
    NonvolatileElement4Output: ControlStationModeSelectorS1 = ...
    NotConnected: ControlStationModeSelectorS1 = ...
    OPButton1: ControlStationModeSelectorS1 = ...
    OPButton2: ControlStationModeSelectorS1 = ...
    OPButton3: ControlStationModeSelectorS1 = ...
    OPButton4: ControlStationModeSelectorS1 = ...
    OPTestResetButton: ControlStationModeSelectorS1 = ...
    PWMOutput: ControlStationModeSelectorS1 = ...
    SignalConditioning1Output: ControlStationModeSelectorS1 = ...
    SignalConditioning2Output: ControlStationModeSelectorS1 = ...
    SignalConditioning3Output: ControlStationModeSelectorS1 = ...
    SignalConditioning4Output: ControlStationModeSelectorS1 = ...
    SignalConditioning5Output: ControlStationModeSelectorS1 = ...
    SignalConditioning6Output: ControlStationModeSelectorS1 = ...
    StatusBusOk: ControlStationModeSelectorS1 = ...
    StatusChangeoverPauseActive: ControlStationModeSelectorS1 = ...
    StatusCoolingDownPeriodActive: ControlStationModeSelectorS1 = ...
    StatusCurrentFlowing: ControlStationModeSelectorS1 = ...
    StatusDeviceOk: ControlStationModeSelectorS1 = ...
    StatusDeviceTestActive: ControlStationModeSelectorS1 = ...
    StatusEmergencyStartExecuted: ControlStationModeSelectorS1 = ...
    StatusEnablingCircuitClosed: ControlStationModeSelectorS1 = ...
    StatusFeedbackCLOSED: ControlStationModeSelectorS1 = ...
    StatusFeedbackOPEN: ControlStationModeSelectorS1 = ...
    StatusGroupFault: ControlStationModeSelectorS1 = ...
    StatusGroupWarning: ControlStationModeSelectorS1 = ...
    StatusInterlockingTimeActive: ControlStationModeSelectorS1 = ...
    StatusOff: ControlStationModeSelectorS1 = ...
    StatusOnForward: ControlStationModeSelectorS1 = ...
    StatusOnForwardFast: ControlStationModeSelectorS1 = ...
    StatusOnReverse: ControlStationModeSelectorS1 = ...
    StatusOnReverseFast: ControlStationModeSelectorS1 = ...
    StatusOperationalProtectionOff: ControlStationModeSelectorS1 = ...
    StatusPauseTimeActive: ControlStationModeSelectorS1 = ...
    StatusPhaseSequence123: ControlStationModeSelectorS1 = ...
    StatusPhaseSequence321: ControlStationModeSelectorS1 = ...
    StatusPLCPCSInRun: ControlStationModeSelectorS1 = ...
    StatusPositionerRunsInCLOSEDDirection: ControlStationModeSelectorS1 = ...
    StatusPositionerRunsInOPENDirection: ControlStationModeSelectorS1 = ...
    StatusPROFIenergyCommandStartPausePending: ControlStationModeSelectorS1 = ...
    StatusRemoteMode: ControlStationModeSelectorS1 = ...
    StatusStartActive: ControlStationModeSelectorS1 = ...
    StatusTestPosition: ControlStationModeSelectorS1 = ...
    StatusTorqueCLOSED: ControlStationModeSelectorS1 = ...
    StatusTorqueOPEN: ControlStationModeSelectorS1 = ...
    Timer1Output: ControlStationModeSelectorS1 = ...
    Timer2Output: ControlStationModeSelectorS1 = ...
    Timer3Output: ControlStationModeSelectorS1 = ...
    Timer4Output: ControlStationModeSelectorS1 = ...
    Timer5Output: ControlStationModeSelectorS1 = ...
    Timer6Output: ControlStationModeSelectorS1 = ...
    TruthTable10Output: ControlStationModeSelectorS1 = ...
    TruthTable11Output: ControlStationModeSelectorS1 = ...
    TruthTable1Output: ControlStationModeSelectorS1 = ...
    TruthTable2Output: ControlStationModeSelectorS1 = ...
    TruthTable3Output: ControlStationModeSelectorS1 = ...
    TruthTable4Output: ControlStationModeSelectorS1 = ...
    TruthTable5Output: ControlStationModeSelectorS1 = ...
    TruthTable6Output: ControlStationModeSelectorS1 = ...
    TruthTable7Output: ControlStationModeSelectorS1 = ...
    TruthTable8Output: ControlStationModeSelectorS1 = ...
    TruthTable9Output1: ControlStationModeSelectorS1 = ...
    TruthTable9Output2: ControlStationModeSelectorS1 = ...
    value__ = ...
    WarningFeedbackCircuit: ControlStationModeSelectorS1 = ...
    WarningSimultaneity: ControlStationModeSelectorS1 = ...


class ControlStationModeSelectorS2(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ControlStationModeSelectorS2

    enum ControlStationModeSelectorS2, values: AcyclicReceiveBit00 (40), AcyclicReceiveBit01 (41), AcyclicReceiveBit02 (42), AcyclicReceiveBit03 (43), AcyclicReceiveBit04 (44), AcyclicReceiveBit05 (45), AcyclicReceiveBit06 (46), AcyclicReceiveBit07 (47), AcyclicReceiveBit10 (48), AcyclicReceiveBit11 (49), AcyclicReceiveBit12 (50), AcyclicReceiveBit13 (51), AcyclicReceiveBit14 (52), AcyclicReceiveBit15 (53), AcyclicReceiveBit16 (54), AcyclicReceiveBit17 (55), BUInput1 (9), BUInput2 (10), BUInput3 (11), BUInput4 (12), BUTestResetButton (8), ContactorControl1QE1 (80), ContactorControl2QE2 (81), ContactorControl3QE3 (82), ContactorControl4QE4 (83), ContactorControl5QE5 (84), Counter1Output (236), Counter2Output (237), Counter3Output (238), Counter4Output (239), Counter5Output (228), Counter6Output (229), CyclicReceiveBit00 (56), CyclicReceiveBit01 (57), CyclicReceiveBit02 (58), CyclicReceiveBit03 (59), CyclicReceiveBit04 (60), CyclicReceiveBit05 (61), CyclicReceiveBit06 (62), CyclicReceiveBit07 (63), CyclicReceiveBit10 (64), CyclicReceiveBit11 (65), CyclicReceiveBit12 (66), CyclicReceiveBit13 (67), CyclicReceiveBit14 (68), CyclicReceiveBit15 (69), CyclicReceiveBit16 (70), CyclicReceiveBit17 (71), DisplayQLAOff (90), DisplayQLEForward (91), DisplayQLEForwardFast (92), DisplayQLEReverse (89), DisplayQLEReverseFast (88), DisplayQLSFault (93), DM1Input1 (16), DM1Input2 (17), DM1Input3 (18), DM1Input4 (19), DM1SensorChannel1 (24), DM1SensorChannel2 (25), DM2Input1 (20), DM2Input2 (21), DM2Input3 (22), DM2Input4 (23), EnabledControlCommandOff (74), EnabledControlCommandOnForward (75), EnabledControlCommandOnForwardFast (76), EnabledControlCommandOnReverse (73), EnabledControlCommandOnReverseFast (72), EventAM1OpenCircuit (180), EventAM1TripLevel0420mAGt (158), EventAM1TripLevel0420mALt (159), EventAM1WarningLevel0420mAGt (150), EventAM1WarningLevel0420mALt (151), EventAM2OpenCircuit (179), EventAM2TripLevel0420mAGt (6), EventAM2TripLevel0420mALt (7), EventAM2WarningLevel0420mAGt (4), EventAM2WarningLevel0420mALt (5), EventConfiguredOperatorPanelMissing (188), EventDMFLOCALOk (186), EventExternalFault1 (172), EventExternalFault2 (173), EventExternalFault3 (174), EventExternalFault4 (175), EventExternalFault5 (176), EventExternalFault6 (177), EventExternalGroundFault (133), EventExternalGroundFaultWarning (134), EventInternalGroundFault (132), EventJustOneStartPossible (165), EventLimitMonitor1 (168), EventLimitMonitor2 (169), EventLimitMonitor3 (170), EventLimitMonitor4 (171), EventLimitMonitor5 (38), EventLimitMonitor6 (39), EventMonitoringPeriodForMandatoryTestingTestRequirement (182), EventMotorOperatingHoursGt (166), EventNoStartPermitted (163), EventNumberOfStartsGt (164), EventOverload (130), EventOverloadAndPhaseFailure (131), EventPrewarningOverload (128), EventPROFIsafeActive (187), EventSafetyrelatedTripping (181), EventStalledRotor (160), EventStopTimeGt (167), EventThermistorOpenCircuit (137), EventThermistorShortCircuit (136), EventThermistorTripLevel (135), EventTimestampfctActiveAndOk (184), EventTM1OutOfRange (141), EventTM1SensorFault (140), EventTM1TripLevelTGt (139), EventTM1WarningLevelTGt (138), EventTM2OutOfRange (29), EventTM2SensorFault (28), EventTM2TripLevelTGt (31), EventTM2WarningLevelTGt (30), EventTripLevelCosPhiLt (156), EventTripLevelIGt (152), EventTripLevelILt (153), EventTripLevelPGt (154), EventTripLevelPLt (155), EventTripLevelULt (157), EventUnbalance (129), EventWarningLevelCosPhiLt (148), EventWarningLevelIGt (144), EventWarningLevelILt (145), EventWarningLevelPGt (146), EventWarningLevelPLt (147), EventWarningLevelULt (149), FaultAntivalence (208), FaultBus (197), FaultConfigurationError (195), FaultDouble0 (205), FaultDouble1 (206), FaultEndPosition (207), FaultExecutionOnCommand (200), FaultExecutionSTOPCommand (201), FaultFeedbackOff (203), FaultFeedbackOn (202), FaultHardwareFaultBasicUnit (192), FaultModuleFault (193), FaultOperationalProtectionOff (211), FaultParameterization (196), FaultPLCPCS (198), FaultPowerFailure (210), FaultStalledPositioner (204), FaultTemporaryComponents (194), FaultTestPositionFeedback (209), FixedLevel0 (1), FixedLevel1 (2), Flashing1Output (248), Flashing2Output (249), Flashing3Output (250), Flicker1Output (251), Flicker2Output (252), Flicker3Output (253), NonvolatileElement1Output (244), NonvolatileElement2Output (245), NonvolatileElement3Output (246), NonvolatileElement4Output (247), NotConnected (0), OPButton1 (33), OPButton2 (34), OPButton3 (35), OPButton4 (36), OPTestResetButton (32), PWMOutput (254), SignalConditioning1Output (240), SignalConditioning2Output (241), SignalConditioning3Output (242), SignalConditioning4Output (243), SignalConditioning5Output (214), SignalConditioning6Output (215), StatusBusOk (99), StatusChangeoverPauseActive (111), StatusCoolingDownPeriodActive (122), StatusCurrentFlowing (101), StatusDeviceOk (98), StatusDeviceTestActive (124), StatusEmergencyStartExecuted (121), StatusEnablingCircuitClosed (127), StatusFeedbackCLOSED (114), StatusFeedbackOPEN (115), StatusGroupFault (96), StatusGroupWarning (97), StatusInterlockingTimeActive (110), StatusOff (106), StatusOnForward (107), StatusOnForwardFast (108), StatusOnReverse (105), StatusOnReverseFast (104), StatusOperationalProtectionOff (119), StatusPauseTimeActive (123), StatusPhaseSequence123 (125), StatusPhaseSequence321 (126), StatusPLCPCSInRun (100), StatusPositionerRunsInCLOSEDDirection (113), StatusPositionerRunsInOPENDirection (112), StatusPROFIenergyCommandStartPausePending (102), StatusRemoteMode (120), StatusStartActive (109), StatusTestPosition (118), StatusTorqueCLOSED (116), StatusTorqueOPEN (117), Timer1Output (232), Timer2Output (233), Timer3Output (234), Timer4Output (235), Timer5Output (230), Timer6Output (231), TruthTable10Output (226), TruthTable11Output (227), TruthTable1Output (216), TruthTable2Output (217), TruthTable3Output (218), TruthTable4Output (219), TruthTable5Output (220), TruthTable6Output (221), TruthTable7Output (222), TruthTable8Output (223), TruthTable9Output1 (224), TruthTable9Output2 (225), WarningFeedbackCircuit (190), WarningSimultaneity (191)
    """
    AcyclicReceiveBit00: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit01: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit02: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit03: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit04: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit05: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit06: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit07: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit10: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit11: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit12: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit13: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit14: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit15: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit16: ControlStationModeSelectorS2 = ...
    AcyclicReceiveBit17: ControlStationModeSelectorS2 = ...
    BUInput1: ControlStationModeSelectorS2 = ...
    BUInput2: ControlStationModeSelectorS2 = ...
    BUInput3: ControlStationModeSelectorS2 = ...
    BUInput4: ControlStationModeSelectorS2 = ...
    BUTestResetButton: ControlStationModeSelectorS2 = ...
    ContactorControl1QE1: ControlStationModeSelectorS2 = ...
    ContactorControl2QE2: ControlStationModeSelectorS2 = ...
    ContactorControl3QE3: ControlStationModeSelectorS2 = ...
    ContactorControl4QE4: ControlStationModeSelectorS2 = ...
    ContactorControl5QE5: ControlStationModeSelectorS2 = ...
    Counter1Output: ControlStationModeSelectorS2 = ...
    Counter2Output: ControlStationModeSelectorS2 = ...
    Counter3Output: ControlStationModeSelectorS2 = ...
    Counter4Output: ControlStationModeSelectorS2 = ...
    Counter5Output: ControlStationModeSelectorS2 = ...
    Counter6Output: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit00: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit01: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit02: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit03: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit04: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit05: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit06: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit07: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit10: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit11: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit12: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit13: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit14: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit15: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit16: ControlStationModeSelectorS2 = ...
    CyclicReceiveBit17: ControlStationModeSelectorS2 = ...
    DisplayQLAOff: ControlStationModeSelectorS2 = ...
    DisplayQLEForward: ControlStationModeSelectorS2 = ...
    DisplayQLEForwardFast: ControlStationModeSelectorS2 = ...
    DisplayQLEReverse: ControlStationModeSelectorS2 = ...
    DisplayQLEReverseFast: ControlStationModeSelectorS2 = ...
    DisplayQLSFault: ControlStationModeSelectorS2 = ...
    DM1Input1: ControlStationModeSelectorS2 = ...
    DM1Input2: ControlStationModeSelectorS2 = ...
    DM1Input3: ControlStationModeSelectorS2 = ...
    DM1Input4: ControlStationModeSelectorS2 = ...
    DM1SensorChannel1: ControlStationModeSelectorS2 = ...
    DM1SensorChannel2: ControlStationModeSelectorS2 = ...
    DM2Input1: ControlStationModeSelectorS2 = ...
    DM2Input2: ControlStationModeSelectorS2 = ...
    DM2Input3: ControlStationModeSelectorS2 = ...
    DM2Input4: ControlStationModeSelectorS2 = ...
    EnabledControlCommandOff: ControlStationModeSelectorS2 = ...
    EnabledControlCommandOnForward: ControlStationModeSelectorS2 = ...
    EnabledControlCommandOnForwardFast: ControlStationModeSelectorS2 = ...
    EnabledControlCommandOnReverse: ControlStationModeSelectorS2 = ...
    EnabledControlCommandOnReverseFast: ControlStationModeSelectorS2 = ...
    EventAM1OpenCircuit: ControlStationModeSelectorS2 = ...
    EventAM1TripLevel0420mAGt: ControlStationModeSelectorS2 = ...
    EventAM1TripLevel0420mALt: ControlStationModeSelectorS2 = ...
    EventAM1WarningLevel0420mAGt: ControlStationModeSelectorS2 = ...
    EventAM1WarningLevel0420mALt: ControlStationModeSelectorS2 = ...
    EventAM2OpenCircuit: ControlStationModeSelectorS2 = ...
    EventAM2TripLevel0420mAGt: ControlStationModeSelectorS2 = ...
    EventAM2TripLevel0420mALt: ControlStationModeSelectorS2 = ...
    EventAM2WarningLevel0420mAGt: ControlStationModeSelectorS2 = ...
    EventAM2WarningLevel0420mALt: ControlStationModeSelectorS2 = ...
    EventConfiguredOperatorPanelMissing: ControlStationModeSelectorS2 = ...
    EventDMFLOCALOk: ControlStationModeSelectorS2 = ...
    EventExternalFault1: ControlStationModeSelectorS2 = ...
    EventExternalFault2: ControlStationModeSelectorS2 = ...
    EventExternalFault3: ControlStationModeSelectorS2 = ...
    EventExternalFault4: ControlStationModeSelectorS2 = ...
    EventExternalFault5: ControlStationModeSelectorS2 = ...
    EventExternalFault6: ControlStationModeSelectorS2 = ...
    EventExternalGroundFault: ControlStationModeSelectorS2 = ...
    EventExternalGroundFaultWarning: ControlStationModeSelectorS2 = ...
    EventInternalGroundFault: ControlStationModeSelectorS2 = ...
    EventJustOneStartPossible: ControlStationModeSelectorS2 = ...
    EventLimitMonitor1: ControlStationModeSelectorS2 = ...
    EventLimitMonitor2: ControlStationModeSelectorS2 = ...
    EventLimitMonitor3: ControlStationModeSelectorS2 = ...
    EventLimitMonitor4: ControlStationModeSelectorS2 = ...
    EventLimitMonitor5: ControlStationModeSelectorS2 = ...
    EventLimitMonitor6: ControlStationModeSelectorS2 = ...
    EventMonitoringPeriodForMandatoryTestingTestRequirement: ControlStationModeSelectorS2 = ...
    EventMotorOperatingHoursGt: ControlStationModeSelectorS2 = ...
    EventNoStartPermitted: ControlStationModeSelectorS2 = ...
    EventNumberOfStartsGt: ControlStationModeSelectorS2 = ...
    EventOverload: ControlStationModeSelectorS2 = ...
    EventOverloadAndPhaseFailure: ControlStationModeSelectorS2 = ...
    EventPrewarningOverload: ControlStationModeSelectorS2 = ...
    EventPROFIsafeActive: ControlStationModeSelectorS2 = ...
    EventSafetyrelatedTripping: ControlStationModeSelectorS2 = ...
    EventStalledRotor: ControlStationModeSelectorS2 = ...
    EventStopTimeGt: ControlStationModeSelectorS2 = ...
    EventThermistorOpenCircuit: ControlStationModeSelectorS2 = ...
    EventThermistorShortCircuit: ControlStationModeSelectorS2 = ...
    EventThermistorTripLevel: ControlStationModeSelectorS2 = ...
    EventTimestampfctActiveAndOk: ControlStationModeSelectorS2 = ...
    EventTM1OutOfRange: ControlStationModeSelectorS2 = ...
    EventTM1SensorFault: ControlStationModeSelectorS2 = ...
    EventTM1TripLevelTGt: ControlStationModeSelectorS2 = ...
    EventTM1WarningLevelTGt: ControlStationModeSelectorS2 = ...
    EventTM2OutOfRange: ControlStationModeSelectorS2 = ...
    EventTM2SensorFault: ControlStationModeSelectorS2 = ...
    EventTM2TripLevelTGt: ControlStationModeSelectorS2 = ...
    EventTM2WarningLevelTGt: ControlStationModeSelectorS2 = ...
    EventTripLevelCosPhiLt: ControlStationModeSelectorS2 = ...
    EventTripLevelIGt: ControlStationModeSelectorS2 = ...
    EventTripLevelILt: ControlStationModeSelectorS2 = ...
    EventTripLevelPGt: ControlStationModeSelectorS2 = ...
    EventTripLevelPLt: ControlStationModeSelectorS2 = ...
    EventTripLevelULt: ControlStationModeSelectorS2 = ...
    EventUnbalance: ControlStationModeSelectorS2 = ...
    EventWarningLevelCosPhiLt: ControlStationModeSelectorS2 = ...
    EventWarningLevelIGt: ControlStationModeSelectorS2 = ...
    EventWarningLevelILt: ControlStationModeSelectorS2 = ...
    EventWarningLevelPGt: ControlStationModeSelectorS2 = ...
    EventWarningLevelPLt: ControlStationModeSelectorS2 = ...
    EventWarningLevelULt: ControlStationModeSelectorS2 = ...
    FaultAntivalence: ControlStationModeSelectorS2 = ...
    FaultBus: ControlStationModeSelectorS2 = ...
    FaultConfigurationError: ControlStationModeSelectorS2 = ...
    FaultDouble0: ControlStationModeSelectorS2 = ...
    FaultDouble1: ControlStationModeSelectorS2 = ...
    FaultEndPosition: ControlStationModeSelectorS2 = ...
    FaultExecutionOnCommand: ControlStationModeSelectorS2 = ...
    FaultExecutionSTOPCommand: ControlStationModeSelectorS2 = ...
    FaultFeedbackOff: ControlStationModeSelectorS2 = ...
    FaultFeedbackOn: ControlStationModeSelectorS2 = ...
    FaultHardwareFaultBasicUnit: ControlStationModeSelectorS2 = ...
    FaultModuleFault: ControlStationModeSelectorS2 = ...
    FaultOperationalProtectionOff: ControlStationModeSelectorS2 = ...
    FaultParameterization: ControlStationModeSelectorS2 = ...
    FaultPLCPCS: ControlStationModeSelectorS2 = ...
    FaultPowerFailure: ControlStationModeSelectorS2 = ...
    FaultStalledPositioner: ControlStationModeSelectorS2 = ...
    FaultTemporaryComponents: ControlStationModeSelectorS2 = ...
    FaultTestPositionFeedback: ControlStationModeSelectorS2 = ...
    FixedLevel0: ControlStationModeSelectorS2 = ...
    FixedLevel1: ControlStationModeSelectorS2 = ...
    Flashing1Output: ControlStationModeSelectorS2 = ...
    Flashing2Output: ControlStationModeSelectorS2 = ...
    Flashing3Output: ControlStationModeSelectorS2 = ...
    Flicker1Output: ControlStationModeSelectorS2 = ...
    Flicker2Output: ControlStationModeSelectorS2 = ...
    Flicker3Output: ControlStationModeSelectorS2 = ...
    NonvolatileElement1Output: ControlStationModeSelectorS2 = ...
    NonvolatileElement2Output: ControlStationModeSelectorS2 = ...
    NonvolatileElement3Output: ControlStationModeSelectorS2 = ...
    NonvolatileElement4Output: ControlStationModeSelectorS2 = ...
    NotConnected: ControlStationModeSelectorS2 = ...
    OPButton1: ControlStationModeSelectorS2 = ...
    OPButton2: ControlStationModeSelectorS2 = ...
    OPButton3: ControlStationModeSelectorS2 = ...
    OPButton4: ControlStationModeSelectorS2 = ...
    OPTestResetButton: ControlStationModeSelectorS2 = ...
    PWMOutput: ControlStationModeSelectorS2 = ...
    SignalConditioning1Output: ControlStationModeSelectorS2 = ...
    SignalConditioning2Output: ControlStationModeSelectorS2 = ...
    SignalConditioning3Output: ControlStationModeSelectorS2 = ...
    SignalConditioning4Output: ControlStationModeSelectorS2 = ...
    SignalConditioning5Output: ControlStationModeSelectorS2 = ...
    SignalConditioning6Output: ControlStationModeSelectorS2 = ...
    StatusBusOk: ControlStationModeSelectorS2 = ...
    StatusChangeoverPauseActive: ControlStationModeSelectorS2 = ...
    StatusCoolingDownPeriodActive: ControlStationModeSelectorS2 = ...
    StatusCurrentFlowing: ControlStationModeSelectorS2 = ...
    StatusDeviceOk: ControlStationModeSelectorS2 = ...
    StatusDeviceTestActive: ControlStationModeSelectorS2 = ...
    StatusEmergencyStartExecuted: ControlStationModeSelectorS2 = ...
    StatusEnablingCircuitClosed: ControlStationModeSelectorS2 = ...
    StatusFeedbackCLOSED: ControlStationModeSelectorS2 = ...
    StatusFeedbackOPEN: ControlStationModeSelectorS2 = ...
    StatusGroupFault: ControlStationModeSelectorS2 = ...
    StatusGroupWarning: ControlStationModeSelectorS2 = ...
    StatusInterlockingTimeActive: ControlStationModeSelectorS2 = ...
    StatusOff: ControlStationModeSelectorS2 = ...
    StatusOnForward: ControlStationModeSelectorS2 = ...
    StatusOnForwardFast: ControlStationModeSelectorS2 = ...
    StatusOnReverse: ControlStationModeSelectorS2 = ...
    StatusOnReverseFast: ControlStationModeSelectorS2 = ...
    StatusOperationalProtectionOff: ControlStationModeSelectorS2 = ...
    StatusPauseTimeActive: ControlStationModeSelectorS2 = ...
    StatusPhaseSequence123: ControlStationModeSelectorS2 = ...
    StatusPhaseSequence321: ControlStationModeSelectorS2 = ...
    StatusPLCPCSInRun: ControlStationModeSelectorS2 = ...
    StatusPositionerRunsInCLOSEDDirection: ControlStationModeSelectorS2 = ...
    StatusPositionerRunsInOPENDirection: ControlStationModeSelectorS2 = ...
    StatusPROFIenergyCommandStartPausePending: ControlStationModeSelectorS2 = ...
    StatusRemoteMode: ControlStationModeSelectorS2 = ...
    StatusStartActive: ControlStationModeSelectorS2 = ...
    StatusTestPosition: ControlStationModeSelectorS2 = ...
    StatusTorqueCLOSED: ControlStationModeSelectorS2 = ...
    StatusTorqueOPEN: ControlStationModeSelectorS2 = ...
    Timer1Output: ControlStationModeSelectorS2 = ...
    Timer2Output: ControlStationModeSelectorS2 = ...
    Timer3Output: ControlStationModeSelectorS2 = ...
    Timer4Output: ControlStationModeSelectorS2 = ...
    Timer5Output: ControlStationModeSelectorS2 = ...
    Timer6Output: ControlStationModeSelectorS2 = ...
    TruthTable10Output: ControlStationModeSelectorS2 = ...
    TruthTable11Output: ControlStationModeSelectorS2 = ...
    TruthTable1Output: ControlStationModeSelectorS2 = ...
    TruthTable2Output: ControlStationModeSelectorS2 = ...
    TruthTable3Output: ControlStationModeSelectorS2 = ...
    TruthTable4Output: ControlStationModeSelectorS2 = ...
    TruthTable5Output: ControlStationModeSelectorS2 = ...
    TruthTable6Output: ControlStationModeSelectorS2 = ...
    TruthTable7Output: ControlStationModeSelectorS2 = ...
    TruthTable8Output: ControlStationModeSelectorS2 = ...
    TruthTable9Output1: ControlStationModeSelectorS2 = ...
    TruthTable9Output2: ControlStationModeSelectorS2 = ...
    value__ = ...
    WarningFeedbackCircuit: ControlStationModeSelectorS2 = ...
    WarningSimultaneity: ControlStationModeSelectorS2 = ...


class CounterMode(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property CounterMode

    enum CounterMode, values: CascadingFunction (2), ContinuouslyCountFunction (4), NormalCountFunction (1), OnceCountFunction (3), PeriodicCountFunction (0)
    """
    CascadingFunction: CounterMode = ...
    ContinuouslyCountFunction: CounterMode = ...
    NormalCountFunction: CounterMode = ...
    OnceCountFunction: CounterMode = ...
    PeriodicCountFunction: CounterMode = ...
    value__ = ...


class IHardwareCompareTarget: # skipped bases: <type 'object'>
    """ Access to the device/device item in a HW compare scenario """
    pass

class HardwareObject(IEquatable, IEngineeringObject, IHardwareCompareTarget, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ The base for hardware modules like devices or device items """
    @property
    def DeviceItems(self) -> DeviceItemComposition:
        """
        Composition of device items

        Get: DeviceItems(self: HardwareObject) -> DeviceItemComposition
        """
        ...

    @property
    def HwIdentifiers(self) -> HwIdentifierComposition:
        """
        Composition of HW identifiers

        Get: HwIdentifiers(self: HardwareObject) -> HwIdentifierComposition
        """
        ...

    @property
    def Items(self) -> DeviceItemAssociation:
        """
        Associated device items for this device

        Get: Items(self: HardwareObject) -> DeviceItemAssociation
        """
        ...

    @property
    def Name(self) -> str:
        """
        The name of the device

        Get: Name(self: HardwareObject) -> str

        Set: Name(self: HardwareObject) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: HardwareObject) -> IEngineeringObject
        """
        ...

    @property
    def TypeIdentifier(self) -> str:
        """
        The type identifier of this device

        Get: TypeIdentifier(self: HardwareObject) -> str
        """
        ...


    def CanPlugCopy(self, deviceItem:DeviceItem, positionNumber:int) -> bool:
        """
        CanPlugCopy(self: HardwareObject, deviceItem: DeviceItem, positionNumber: int) -> bool

            Determines if plug can be copied

            deviceItem: Device for which the Plug will be moved

            positionNumber: The position number where to create the plug

            Returns: System.Boolean
        """
        ...

    def CanPlugMove(self, deviceItem:DeviceItem, positionNumber:int) -> bool:
        """
        CanPlugMove(self: HardwareObject, deviceItem: DeviceItem, positionNumber: int) -> bool

            Determines if plug can be moved

            deviceItem: Device for which the Plug will be moved

            positionNumber: The position number where to create the plug

            Returns: System.Boolean
        """
        ...

    def CanPlugNew(self, typeIdentifier:str, name:str, positionNumber:int) -> bool:
        """
        CanPlugNew(self: HardwareObject, typeIdentifier: str, name: str, positionNumber: int) -> bool

            Determines if plug can be created

            typeIdentifier: The type identifier to use to create the plug

            name: The name of the plug to create

            positionNumber: The position number where to create the plug

            Returns: System.Boolean
        """
        ...

    def CompareTo(self, compareTarget:IHardwareCompareTarget) -> CompareResult:
        """
        CompareTo(self: HardwareObject, compareTarget: IHardwareCompareTarget) -> CompareResult

            Compare the hardware object vs the given target

            compareTarget: The target to compare to the hardware object

            Returns: Siemens.Engineering.Compare.CompareResult
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: HardwareObject) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def GetPlugLocations(self) -> IList:
        """
        GetPlugLocations(self: HardwareObject) -> IList[PlugLocation]

            Determine some information about free slots.

            Returns: System.Collections.Generic.IList<Siemens.Engineering.HW.Extensions.PlugLocation>
        """
        ...

    def PlugCopy(self, deviceItem:DeviceItem, positionNumber:int) -> DeviceItem:
        """
        PlugCopy(self: HardwareObject, deviceItem: DeviceItem, positionNumber: int) -> DeviceItem

            Copies a plug to a given device

            deviceItem: Device for which the Plug will be moved

            positionNumber: The position number where to create the plug

            Returns: Siemens.Engineering.HW.DeviceItem
        """
        ...

    def PlugMove(self, deviceItem:DeviceItem, positionNumber:int) -> DeviceItem:
        """
        PlugMove(self: HardwareObject, deviceItem: DeviceItem, positionNumber: int) -> DeviceItem

            Moves a plug to a given device

            deviceItem: Device for which the Plug will be moved

            positionNumber: The position number where to create the plug

            Returns: Siemens.Engineering.HW.DeviceItem
        """
        ...

    def PlugNew(self, typeIdentifier:str, name:str, positionNumber:int) -> DeviceItem:
        """
        PlugNew(self: HardwareObject, typeIdentifier: str, name: str, positionNumber: int) -> DeviceItem

            Creates and plugs a device item in a given hardware object.

            typeIdentifier: The type identifier of the device item to create.

            name: The name of the device item to create.

            positionNumber: The position number where to plug the created device item

            Returns: Siemens.Engineering.HW.DeviceItem
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: HardwareObject) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class Device(IEngineeringServiceProvider, IMasterCopySource, IMasterCopyTarget, HardwareObject): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IServiceProvider'>, <type 'IEngineeringObject'>, <type 'IInternalObjectAccess'>, <type 'IHardwareCompareTarget'>, <type 'IEquatable[object]'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Device as an container for DeviceItems """
    @property
    def IsGsd(self) -> bool:
        """
        Indicates if this device is a Gsd device

        Get: IsGsd(self: Device) -> bool
        """
        ...

    @property
    def UnpluggedItems(self) -> DeviceItemAssociation:
        """
        Associate unplugged items

        Get: UnpluggedItems(self: Device) -> DeviceItemAssociation
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: Device)

            Deletes this instance.
        """
        ...

    def ShowInEditor(self, view:View): # ->
        """
        ShowInEditor(self: Device, view: View)

            Show the indicated item in the HW editor

            view: Which view of the HW editor to show
        """
        ...


class DeviceComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of Devices """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: DeviceComposition) -> IEngineeringObject
        """
        ...


    def CreateFrom(self, masterCopy:MasterCopy) -> Device:
        """
        CreateFrom(self: DeviceComposition, masterCopy: MasterCopy) -> Device

            Create device from MasterCopy

            masterCopy: The source master copy

            Returns: Siemens.Engineering.HW.Device
        """
        ...

    def CreateWithItem(self, typeIdentifier:str, name:str, deviceName:str) -> Device:
        """
        CreateWithItem(self: DeviceComposition, typeIdentifier: str, name: str, deviceName: str) -> Device

            Create a device with subcomponents

            typeIdentifier: Type identifier of the device to be created with sub items

            name: Name of the device to be created with sub items

            deviceName: The name of the device to create with subcomponents

            Returns: Siemens.Engineering.HW.Device
        """
        ...

    def Find(self, name:str) -> Device:
        """
        Find(self: DeviceComposition, name: str) -> Device

            Finds a given device

            name: Name to find

            Returns: Siemens.Engineering.HW.Device
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: DeviceComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: DeviceComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Device](enumerable: IEnumerable[Device], value: Device) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class DeviceGroup(IEquatable, IEngineeringObject, IEngineeringServiceProvider, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IServiceProvider'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Group containing devices """
    @property
    def Devices(self) -> DeviceComposition:
        """
        Composition of devices

        Get: Devices(self: DeviceGroup) -> DeviceComposition
        """
        ...

    @property
    def Name(self) -> str:
        """
        The name of the device group

        Get: Name(self: DeviceGroup) -> str
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: DeviceGroup) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: DeviceGroup) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: DeviceGroup) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class DeviceItem(IEngineeringServiceProvider, IMasterCopySource, HardwareObject): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IServiceProvider'>, <type 'IEngineeringObject'>, <type 'IInternalObjectAccess'>, <type 'IHardwareCompareTarget'>, <type 'IEquatable[object]'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ DeviceItem object as representation of a hardware module """
    @property
    def Addresses(self) -> AddressComposition:
        """
        Composition of addresses

        Get: Addresses(self: DeviceItem) -> AddressComposition
        """
        ...

    @property
    def Channels(self) -> ChannelComposition:
        """
        Composition of channels

        Get: Channels(self: DeviceItem) -> ChannelComposition
        """
        ...

    @property
    def Classification(self) -> DeviceItemClassifications:
        """
        The classifications a device item can belong to; Flags-enum

        Get: Classification(self: DeviceItem) -> DeviceItemClassifications
        """
        ...

    @property
    def Container(self) -> HardwareObject:
        """
        This is the object where other DeviceItems are placed

        Get: Container(self: DeviceItem) -> HardwareObject
        """
        ...

    @property
    def IsBuiltIn(self) -> bool:
        """
        Indicates if the device item is built into the device

        Get: IsBuiltIn(self: DeviceItem) -> bool
        """
        ...

    @property
    def IsPlugged(self) -> bool:
        """
        Indicates if this device item is plugged into a device

        Get: IsPlugged(self: DeviceItem) -> bool
        """
        ...

    @property
    def PositionNumber(self) -> int:
        """
        Position number of this device item

        Get: PositionNumber(self: DeviceItem) -> int
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: DeviceItem)

            Deletes this instance.
        """
        ...


class DeviceItemAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated device items """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: DeviceItemAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: DeviceItemAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: DeviceItemAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[DeviceItem](enumerable: IEnumerable[DeviceItem], value: DeviceItem) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class DeviceItemClassifications(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    The classifications a device item can belong to; Flags-enum.

    enum (flags) DeviceItemClassifications, values: CPU (1), HM (2), None (0)
    """
    CPU: DeviceItemClassifications = ...
    HM: DeviceItemClassifications = ...
    value__ = ...


class DeviceItemComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of DeviceItems """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: DeviceItemComposition) -> IEngineeringObject
        """
        ...


    def CreateFrom(self, masterCopy:MasterCopy) -> DeviceItem:
        """
        CreateFrom(self: DeviceItemComposition, masterCopy: MasterCopy) -> DeviceItem

            Create device item from MasterCopy

            masterCopy: The source MasterCopy

            Returns: Siemens.Engineering.HW.DeviceItem
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: DeviceItemComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: DeviceItemComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[DeviceItem](enumerable: IEnumerable[DeviceItem], value: DeviceItem) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class DeviceSystemGroup(DeviceGroup): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringServiceProvider'>, <type 'IEngineeringInstance'>, <type 'IServiceProvider'>, <type 'IEngineeringObject'>, <type 'IInternalObjectAccess'>, <type 'IEquatable[object]'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents a device system group (e.g. ungrouped devices group) """
    pass

class DeviceUserGroup(DeviceGroup, IMasterCopySource, IMasterCopyTarget): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringServiceProvider'>, <type 'IEngineeringInstance'>, <type 'IServiceProvider'>, <type 'IEngineeringObject'>, <type 'IInternalObjectAccess'>, <type 'IEquatable[object]'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Group containing the devices """
    @property
    def Groups(self) -> DeviceUserGroupComposition:
        """
        Composition of device user groups

        Get: Groups(self: DeviceUserGroup) -> DeviceUserGroupComposition
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: DeviceUserGroup)

            Deletes this instance.
        """
        ...


class DeviceUserGroupComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of DeviceUserGroups """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: DeviceUserGroupComposition) -> IEngineeringObject
        """
        ...


    def CreateFrom(self, masterCopy:MasterCopy) -> DeviceUserGroup:
        """
        CreateFrom(self: DeviceUserGroupComposition, masterCopy: MasterCopy) -> DeviceUserGroup

            Create device user group from MasterCopy

            masterCopy: The source MasterCopy

            Returns: Siemens.Engineering.HW.DeviceUserGroup
        """
        ...

    def Find(self, name:str) -> DeviceUserGroup:
        """
        Find(self: DeviceUserGroupComposition, name: str) -> DeviceUserGroup

            Finds a given device user group

            name: Name to find

            Returns: Siemens.Engineering.HW.DeviceUserGroup
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: DeviceUserGroupComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: DeviceUserGroupComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[DeviceUserGroup](enumerable: IEnumerable[DeviceUserGroup], value: DeviceUserGroup) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class Failsafe_BehaviorAfterChannelFault(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_BehaviorAfterChannelFault

    enum Failsafe_BehaviorAfterChannelFault, values: PassivateChannel (1), PassivateTheEntireModule (0)
    """
    PassivateChannel: Failsafe_BehaviorAfterChannelFault = ...
    PassivateTheEntireModule: Failsafe_BehaviorAfterChannelFault = ...
    value__ = ...


class Failsafe_ChannelFailureAcknowledge(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_ChannelFailureAcknowledge

    enum Failsafe_ChannelFailureAcknowledge, values: Automatic (1), Manual (0)
    """
    Automatic: Failsafe_ChannelFailureAcknowledge = ...
    Manual: Failsafe_ChannelFailureAcknowledge = ...
    value__ = ...


class Failsafe_ControlOfOutput(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_ControlOfOutput

    enum Failsafe_ControlOfOutput, values: FCPU (0), FCPUAndOnboardFDI (1)
    """
    FCPU: Failsafe_ControlOfOutput = ...
    FCPUAndOnboardFDI: Failsafe_ControlOfOutput = ...
    value__ = ...


class Failsafe_DiscrepancyBehavior(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_DiscrepancyBehavior

    enum Failsafe_DiscrepancyBehavior, values: SupplyLastValidValue (0), SupplyValue0 (1)
    """
    SupplyLastValidValue: Failsafe_DiscrepancyBehavior = ...
    SupplyValue0: Failsafe_DiscrepancyBehavior = ...
    value__ = ...


class Failsafe_DiscrepancyMonitoring(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_DiscrepancyMonitoring

    enum Failsafe_DiscrepancyMonitoring, values: Active (1), Deactivated (0)
    """
    Active: Failsafe_DiscrepancyMonitoring = ...
    Deactivated: Failsafe_DiscrepancyMonitoring = ...
    value__ = ...


class Failsafe_FCheckiPar(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FCheckiPar

    enum Failsafe_FCheckiPar, values: Check (1), NoCheck (0)
    """
    Check: Failsafe_FCheckiPar = ...
    NoCheck: Failsafe_FCheckiPar = ...
    value__ = ...


class Failsafe_FCheckSeqNr(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FCheckSeqNr

    enum Failsafe_FCheckSeqNr, values: Check (1), NoCheck (0)
    """
    Check: Failsafe_FCheckSeqNr = ...
    NoCheck: Failsafe_FCheckSeqNr = ...
    value__ = ...


class Failsafe_FCRCSeed(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FCRCSeed

    enum Failsafe_FCRCSeed, values: CRCSeed16 (0), CRCSeed32 (1)
    """
    CRCSeed16: Failsafe_FCRCSeed = ...
    CRCSeed32: Failsafe_FCRCSeed = ...
    value__ = ...


class Failsafe_FParVersion(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FParVersion

    enum Failsafe_FParVersion, values: V1mode (0), V2mode (1)
    """
    V1mode: Failsafe_FParVersion = ...
    V2mode: Failsafe_FParVersion = ...
    value__ = ...


class Failsafe_FPassivation(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FPassivation

    enum Failsafe_FPassivation, values: Channel (1), DeviceModule (0)
    """
    Channel: Failsafe_FPassivation = ...
    DeviceModule: Failsafe_FPassivation = ...
    value__ = ...


class Failsafe_FSIL(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_FSIL

    enum Failsafe_FSIL, values: NoSIL (3), SIL1 (0), SIL2 (1), SIL3 (2)
    """
    NoSIL: Failsafe_FSIL = ...
    SIL1: Failsafe_FSIL = ...
    SIL2: Failsafe_FSIL = ...
    SIL3: Failsafe_FSIL = ...
    value__ = ...


class Failsafe_F_CRC_Length(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_F_CRC_Length

    enum Failsafe_F_CRC_Length, values: FourByteCRC (2), ThreeByteCRC (0), TwoByteCRC (1)
    """
    FourByteCRC: Failsafe_F_CRC_Length = ...
    ThreeByteCRC: Failsafe_F_CRC_Length = ...
    TwoByteCRC: Failsafe_F_CRC_Length = ...
    value__ = ...


class Failsafe_InputDelay(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_InputDelay

    enum Failsafe_InputDelay, values: Value0dot4ms (1), Value0dot8ms (2), Value0ms (0), Value100ms (100), Value10ms (10), Value110ms (110), Value120ms (120), Value12dot8ms (12), Value130ms (130), Value140ms (140), Value150ms (150), Value1dot6ms (3), Value20ms (20), Value3dot2ms (4), Value50ms (50), Value60ms (60), Value6dot4ms (6), Value70ms (70), Value80ms (80), Value90ms (90)
    """
    Value0dot4ms: Failsafe_InputDelay = ...
    Value0dot8ms: Failsafe_InputDelay = ...
    Value0ms: Failsafe_InputDelay = ...
    Value100ms: Failsafe_InputDelay = ...
    Value10ms: Failsafe_InputDelay = ...
    Value110ms: Failsafe_InputDelay = ...
    Value120ms: Failsafe_InputDelay = ...
    Value12dot8ms: Failsafe_InputDelay = ...
    Value130ms: Failsafe_InputDelay = ...
    Value140ms: Failsafe_InputDelay = ...
    Value150ms: Failsafe_InputDelay = ...
    Value1dot6ms: Failsafe_InputDelay = ...
    Value20ms: Failsafe_InputDelay = ...
    Value3dot2ms: Failsafe_InputDelay = ...
    Value50ms: Failsafe_InputDelay = ...
    Value60ms: Failsafe_InputDelay = ...
    Value6dot4ms: Failsafe_InputDelay = ...
    Value70ms: Failsafe_InputDelay = ...
    Value80ms: Failsafe_InputDelay = ...
    Value90ms: Failsafe_InputDelay = ...
    value__ = ...


class Failsafe_ManualAssignmentFIODBNumber(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_ManualAssignmentFIODBNumber

    enum Failsafe_ManualAssignmentFIODBNumber, values: Automatic (0), Manual (1)
    """
    Automatic: Failsafe_ManualAssignmentFIODBNumber = ...
    Manual: Failsafe_ManualAssignmentFIODBNumber = ...
    value__ = ...


class Failsafe_MaximumTestPeriod(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_MaximumTestPeriod

    enum Failsafe_MaximumTestPeriod, values: Value1000sec (1), Value100sec (0)
    """
    Value1000sec: Failsafe_MaximumTestPeriod = ...
    Value100sec: Failsafe_MaximumTestPeriod = ...
    value__ = ...


class Failsafe_MaxReadbackTimeLightTestAndDarkTest(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_MaxReadbackTimeLightTestAndDarkTest

    enum Failsafe_MaxReadbackTimeLightTestAndDarkTest, values: Value08Or10ms (0), Value30Or50ms (1)
    """
    Value08Or10ms: Failsafe_MaxReadbackTimeLightTestAndDarkTest = ...
    Value30Or50ms: Failsafe_MaxReadbackTimeLightTestAndDarkTest = ...
    value__ = ...


class Failsafe_OutputType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_OutputType

    enum Failsafe_OutputType, values: PMSwitching (0), PPSwitching (1)
    """
    PMSwitching: Failsafe_OutputType = ...
    PPSwitching: Failsafe_OutputType = ...
    value__ = ...


class Failsafe_ReintegrationAfterChannelFault(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_ReintegrationAfterChannelFault

    enum Failsafe_ReintegrationAfterChannelFault, values: Adjustable (0), AllChannelsAutomatically (1), AllChannelsManually (2)
    """
    Adjustable: Failsafe_ReintegrationAfterChannelFault = ...
    AllChannelsAutomatically: Failsafe_ReintegrationAfterChannelFault = ...
    AllChannelsManually: Failsafe_ReintegrationAfterChannelFault = ...
    value__ = ...


class Failsafe_ReintegrationAfterDiscrepancyError(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_ReintegrationAfterDiscrepancyError

    enum Failsafe_ReintegrationAfterDiscrepancyError, values: Test0SignalNecessary (1), Test0SignalNotNecessary (0)
    """
    Test0SignalNecessary: Failsafe_ReintegrationAfterDiscrepancyError = ...
    Test0SignalNotNecessary: Failsafe_ReintegrationAfterDiscrepancyError = ...
    value__ = ...


class Failsafe_SensorEvaluation(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_SensorEvaluation

    enum Failsafe_SensorEvaluation, values: Value1oo1Evaluation (0), Value1oo2EvaluationEquivalent (1), Value1oo2EvaluationNonEquivalent (2)
    """
    Value1oo1Evaluation: Failsafe_SensorEvaluation = ...
    Value1oo2EvaluationEquivalent: Failsafe_SensorEvaluation = ...
    Value1oo2EvaluationNonEquivalent: Failsafe_SensorEvaluation = ...
    value__ = ...


class Failsafe_SensorSupply(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_SensorSupply

    enum Failsafe_SensorSupply, values: ExternalSensorSupply (8), SensorSupply0 (0), SensorSupply1 (1), SensorSupply2 (2), SensorSupply3 (3), SensorSupply4 (4), SensorSupply5 (5), SensorSupply6 (6), SensorSupply7 (7)
    """
    ExternalSensorSupply: Failsafe_SensorSupply = ...
    SensorSupply0: Failsafe_SensorSupply = ...
    SensorSupply1: Failsafe_SensorSupply = ...
    SensorSupply2: Failsafe_SensorSupply = ...
    SensorSupply3: Failsafe_SensorSupply = ...
    SensorSupply4: Failsafe_SensorSupply = ...
    SensorSupply5: Failsafe_SensorSupply = ...
    SensorSupply6: Failsafe_SensorSupply = ...
    SensorSupply7: Failsafe_SensorSupply = ...
    value__ = ...


class Failsafe_SequenceMonitoring(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property Failsafe_SequenceMonitoring

    enum Failsafe_SequenceMonitoring, values: Deactivated (0), SequenceMonitoringAscending (1), SequenceMonitoringDescending (2)
    """
    Deactivated: Failsafe_SequenceMonitoring = ...
    SequenceMonitoringAscending: Failsafe_SequenceMonitoring = ...
    SequenceMonitoringDescending: Failsafe_SequenceMonitoring = ...
    value__ = ...


class HardwareResource(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Hardware Resources that are assignable for interfaces

    enum HardwareResource, values: Undefined (0), X1 (1), X101 (101), X102 (102), X103 (103), X104 (104), X105 (105), X106 (106), X107 (107), X108 (108), X109 (109), X110 (110), X111 (111), X2 (2), X3 (3), X4 (4)
    """
    Undefined: HardwareResource = ...
    value__ = ...
    X1: HardwareResource = ...
    X101: HardwareResource = ...
    X102: HardwareResource = ...
    X103: HardwareResource = ...
    X104: HardwareResource = ...
    X105: HardwareResource = ...
    X106: HardwareResource = ...
    X107: HardwareResource = ...
    X108: HardwareResource = ...
    X109: HardwareResource = ...
    X110: HardwareResource = ...
    X111: HardwareResource = ...
    X2: HardwareResource = ...
    X3: HardwareResource = ...
    X4: HardwareResource = ...


class HwIdentifier(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents a HW identifier """
    @property
    def HwIdentifierControllers(self) -> HwIdentifierControllerAssociation:
        """
        Associated Hw identifier controllers

        Get: HwIdentifierControllers(self: HwIdentifier) -> HwIdentifierControllerAssociation
        """
        ...

    @property
    def Identifier(self) -> Int64:
        """
        Identifier for this HW identifier

        Get: Identifier(self: HwIdentifier) -> Int64
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: HwIdentifier) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: HwIdentifier) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: HwIdentifier) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class HwIdentifierAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated Hw identifiers """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: HwIdentifierAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: HwIdentifierAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: HwIdentifierAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[HwIdentifier](enumerable: IEnumerable[HwIdentifier], value: HwIdentifier) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class HwIdentifierComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of HwIdentifiers """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: HwIdentifierComposition) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: HwIdentifierComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: HwIdentifierComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[HwIdentifier](enumerable: IEnumerable[HwIdentifier], value: HwIdentifier) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class InterfaceOperatingModes(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property InterfaceOperatingModes

    enum (flags) InterfaceOperatingModes, values: IoController (1), IoDevice (2), None (0)
    """
    IoController: InterfaceOperatingModes = ...
    IoDevice: InterfaceOperatingModes = ...
    value__ = ...


class InterfaceType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property InterfaceType

    enum InterfaceType, values: Asi (4), Ethernet (3), Link (6), Mpi (2), PcInternal (7), Profibus (1), ProfibusIntegrated (8), Ptp (5), Unknown (0)
    """
    Asi: InterfaceType = ...
    Ethernet: InterfaceType = ...
    Link: InterfaceType = ...
    Mpi: InterfaceType = ...
    PcInternal: InterfaceType = ...
    Profibus: InterfaceType = ...
    ProfibusIntegrated: InterfaceType = ...
    Ptp: InterfaceType = ...
    Unknown: InterfaceType = ...
    value__ = ...


class IoConnector(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents an IO connector """
    @property
    def ConnectedToIoSystem(self) -> IoSystem:
        """
        The connected IO system

        Get: ConnectedToIoSystem(self: IoConnector) -> IoSystem
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: IoConnector) -> IEngineeringObject
        """
        ...


    def ConnectToIoSystem(self, ioSystem:IoSystem): # ->
        """
        ConnectToIoSystem(self: IoConnector, ioSystem: IoSystem)

            Connects to the IO System

            ioSystem: The IO system to be connected
        """
        ...

    def DisconnectFromIoSystem(self): # ->
        """
        DisconnectFromIoSystem(self: IoConnector)

            Disconnects a device from the given IO system
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoConnector) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def GetIoController(self) -> IoController:
        """
        GetIoController(self: IoConnector) -> IoController

            Returns the IO controller for this connector

            Returns: Siemens.Engineering.HW.IoController
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoConnector) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoConnectorAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated IO connectors """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: IoConnectorAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoConnectorAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoConnectorAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[IoConnector](enumerable: IEnumerable[IoConnector], value: IoConnector) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoConnectorComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of IoConnectors """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: IoConnectorComposition) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoConnectorComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoConnectorComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[IoConnector](enumerable: IEnumerable[IoConnector], value: IoConnector) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoController(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents an IO controller """
    @property
    def Addresses(self) -> AddressComposition:
        """
        Composition of addresses

        Get: Addresses(self: IoController) -> AddressComposition
        """
        ...

    @property
    def IoSystem(self) -> IoSystem:
        """
        Composition of IO system

        Get: IoSystem(self: IoController) -> IoSystem
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: IoController) -> IEngineeringObject
        """
        ...


    def CreateIoSystem(self, name:str) -> IoSystem:
        """
        CreateIoSystem(self: IoController, name: str) -> IoSystem

            Creates an IO system

            name: The name of the IO system to be created

            Returns: Siemens.Engineering.HW.IoSystem
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoController) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoController) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoControllerComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of IoControllers """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: IoControllerComposition) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoControllerComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoControllerComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[IoController](enumerable: IEnumerable[IoController], value: IoController) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoSystem(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents an IO system """
    @property
    def ConnectedIoDevices(self) -> IoConnectorAssociation:
        """
        The connected IO devices

        Get: ConnectedIoDevices(self: IoSystem) -> IoConnectorAssociation
        """
        ...

    @property
    def HwIdentifiers(self) -> HwIdentifierComposition:
        """
        Composition of HW identifiers

        Get: HwIdentifiers(self: IoSystem) -> HwIdentifierComposition
        """
        ...

    @property
    def Name(self) -> str:
        """
        The name of the IO system

        Get: Name(self: IoSystem) -> str

        Set: Name(self: IoSystem) = value
        """
        ...

    @property
    def Number(self) -> int:
        """
        The number of this IO system

        Get: Number(self: IoSystem) -> int

        Set: Number(self: IoSystem) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: IoSystem) -> IEngineeringObject
        """
        ...

    @property
    def Subnet(self) -> Subnet:
        """
        Associated Subnet

        Get: Subnet(self: IoSystem) -> Subnet
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: IoSystem)

            Deletes this instance.
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoSystem) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoSystem) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IoSystemAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated IO systems """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: IoSystemAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: IoSystemAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: IoSystemAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[IoSystem](enumerable: IEnumerable[IoSystem], value: IoSystem) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class IpProtocolSelection(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    IP protocol selection

    enum IpProtocolSelection, values: Dhcp (1), None (-1), OtherPath (3), Project (0), UserProgram (2), ViaIoController (4)
    """
    Dhcp: IpProtocolSelection = ...
    OtherPath: IpProtocolSelection = ...
    Project: IpProtocolSelection = ...
    UserProgram: IpProtocolSelection = ...
    value__ = ...
    ViaIoController: IpProtocolSelection = ...


class IsochronousTiToCalculationMode(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property IsochronousTiToCalculationMode

    enum IsochronousTiToCalculationMode, values: AutomaticMinimum (3), FromOB (1), FromSubnet (2), Manual (4), None (0)
    """
    AutomaticMinimum: IsochronousTiToCalculationMode = ...
    FromOB: IsochronousTiToCalculationMode = ...
    FromSubnet: IsochronousTiToCalculationMode = ...
    Manual: IsochronousTiToCalculationMode = ...
    value__ = ...


class LengthOfIORange(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property LengthOfIORange

    enum LengthOfIORange, values: None (0), Value128Byte (128), Value12Byte (12), Value160Byte (160), Value16Byte (16), Value192Byte (192), Value20Byte (20), Value224Byte (224), Value24Byte (24), Value256Byte (256), Value288Byte (288), Value28Byte (28), Value32Byte (32), Value4Byte (4), Value64Byte (64), Value8Byte (8), Value96Byte (96)
    """
    Value128Byte: LengthOfIORange = ...
    Value12Byte: LengthOfIORange = ...
    Value160Byte: LengthOfIORange = ...
    Value16Byte: LengthOfIORange = ...
    Value192Byte: LengthOfIORange = ...
    Value20Byte: LengthOfIORange = ...
    Value224Byte: LengthOfIORange = ...
    Value24Byte: LengthOfIORange = ...
    Value256Byte: LengthOfIORange = ...
    Value288Byte: LengthOfIORange = ...
    Value28Byte: LengthOfIORange = ...
    Value32Byte: LengthOfIORange = ...
    Value4Byte: LengthOfIORange = ...
    Value64Byte: LengthOfIORange = ...
    Value8Byte: LengthOfIORange = ...
    Value96Byte: LengthOfIORange = ...
    value__ = ...


class MeasuringTemperatureCoefficient(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MeasuringTemperatureCoefficient

    enum MeasuringTemperatureCoefficient, values: Cu0Dot00426 (17), Cu0Dot00427 (12), Cu0Dot00428 (13), Deactivated (0), LgNi0Dot005 (10), Ni0Dot005000 (16), Ni0Dot006170 (18), Ni0Dot006180 (7), Ni0Dot006720 (8), Pt0Dot003850 (9), Pt0Dot00385055 (6), Pt0Dot003850Its90 (5), Pt0Dot003851 (4), Pt0Dot003902 (2), Pt0Dot003910 (11), Pt0Dot003916 (1), Pt0Dot003920 (3)
    """
    Cu0Dot00426: MeasuringTemperatureCoefficient = ...
    Cu0Dot00427: MeasuringTemperatureCoefficient = ...
    Cu0Dot00428: MeasuringTemperatureCoefficient = ...
    Deactivated: MeasuringTemperatureCoefficient = ...
    LgNi0Dot005: MeasuringTemperatureCoefficient = ...
    Ni0Dot005000: MeasuringTemperatureCoefficient = ...
    Ni0Dot006170: MeasuringTemperatureCoefficient = ...
    Ni0Dot006180: MeasuringTemperatureCoefficient = ...
    Ni0Dot006720: MeasuringTemperatureCoefficient = ...
    Pt0Dot003850: MeasuringTemperatureCoefficient = ...
    Pt0Dot00385055: MeasuringTemperatureCoefficient = ...
    Pt0Dot003850Its90: MeasuringTemperatureCoefficient = ...
    Pt0Dot003851: MeasuringTemperatureCoefficient = ...
    Pt0Dot003902: MeasuringTemperatureCoefficient = ...
    Pt0Dot003910: MeasuringTemperatureCoefficient = ...
    Pt0Dot003916: MeasuringTemperatureCoefficient = ...
    Pt0Dot003920: MeasuringTemperatureCoefficient = ...
    value__ = ...


class MediaRedundancyRole(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Media Redundancy Role

    enum MediaRedundancyRole, values: Client (2), Manager (1), ManagerAuto (3), NotInRing (0)
    """
    Client: MediaRedundancyRole = ...
    Manager: MediaRedundancyRole = ...
    ManagerAuto: MediaRedundancyRole = ...
    NotInRing: MediaRedundancyRole = ...
    value__ = ...


class MediumAttachmentType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MediumAttachmentType

    enum MediumAttachmentType, values: Copper (1), FiberOptic (2), None (0)
    """
    Copper: MediumAttachmentType = ...
    FiberOptic: MediumAttachmentType = ...
    value__ = ...


class MotorProtectionClass(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionClass

    enum MotorProtectionClass, values: None (0), Value10 (10), Value15 (15), Value20 (20), Value25 (25), Value30 (30), Value35 (35), Value40 (40), Value5 (5), Value7 (7)
    """
    Value10: MotorProtectionClass = ...
    Value15: MotorProtectionClass = ...
    Value20: MotorProtectionClass = ...
    Value25: MotorProtectionClass = ...
    Value30: MotorProtectionClass = ...
    Value35: MotorProtectionClass = ...
    Value40: MotorProtectionClass = ...
    Value5: MotorProtectionClass = ...
    Value7: MotorProtectionClass = ...
    value__ = ...


class MotorProtectionReset(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionReset

    enum MotorProtectionReset, values: Auto (1), Manual (0)
    """
    Auto: MotorProtectionReset = ...
    Manual: MotorProtectionReset = ...
    value__ = ...


class MotorProtectionResponseToPrewarning(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionResponseToPrewarning

    enum MotorProtectionResponseToPrewarning, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: MotorProtectionResponseToPrewarning = ...
    Signal: MotorProtectionResponseToPrewarning = ...
    Trip: MotorProtectionResponseToPrewarning = ...
    value__ = ...
    Warn: MotorProtectionResponseToPrewarning = ...


class MotorProtectionResponseToTripLevel(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionResponseToTripLevel

    enum MotorProtectionResponseToTripLevel, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: MotorProtectionResponseToTripLevel = ...
    Signal: MotorProtectionResponseToTripLevel = ...
    Trip: MotorProtectionResponseToTripLevel = ...
    value__ = ...
    Warn: MotorProtectionResponseToTripLevel = ...


class MotorProtectionStalledRotorResponse(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionStalledRotorResponse

    enum MotorProtectionStalledRotorResponse, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: MotorProtectionStalledRotorResponse = ...
    Signal: MotorProtectionStalledRotorResponse = ...
    Trip: MotorProtectionStalledRotorResponse = ...
    value__ = ...
    Warn: MotorProtectionStalledRotorResponse = ...


class MotorProtectionTypeOfLoad(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionTypeOfLoad

    enum MotorProtectionTypeOfLoad, values: OnePhase (1), TriPhase (0)
    """
    OnePhase: MotorProtectionTypeOfLoad = ...
    TriPhase: MotorProtectionTypeOfLoad = ...
    value__ = ...


class MotorProtectionUnbalanceResponse(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property MotorProtectionUnbalanceResponse

    enum MotorProtectionUnbalanceResponse, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: MotorProtectionUnbalanceResponse = ...
    Signal: MotorProtectionUnbalanceResponse = ...
    Trip: MotorProtectionUnbalanceResponse = ...
    value__ = ...
    Warn: MotorProtectionUnbalanceResponse = ...


class NetType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Network type

    enum NetType, values: Asi (4), Ethernet (3), Link (6), Mpi (2), PcInternal (7), Profibus (1), ProfibusIntegrated (8), Ptp (5), Unknown (0), Wan (9)
    """
    Asi: NetType = ...
    Ethernet: NetType = ...
    Link: NetType = ...
    Mpi: NetType = ...
    PcInternal: NetType = ...
    Profibus: NetType = ...
    ProfibusIntegrated: NetType = ...
    Ptp: NetType = ...
    Unknown: NetType = ...
    value__ = ...
    Wan: NetType = ...


class Node(IEquatable, IEngineeringObject, IEngineeringServiceProvider, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IServiceProvider'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Node is an object which is used as an interface from DeviceItem to Subnet """
    @property
    def ConnectedSubnet(self) -> Subnet:
        """
        The connected subnet

        Get: ConnectedSubnet(self: Node) -> Subnet
        """
        ...

    @property
    def Name(self) -> str:
        """
        The name of the node

        Get: Name(self: Node) -> str
        """
        ...

    @property
    def NodeId(self) -> str:
        """
        The id of this node

        Get: NodeId(self: Node) -> str
        """
        ...

    @property
    def NodeType(self) -> NetType:
        """
        Particular type e.g. Industrial Ethernet or Wireless LAN

        Get: NodeType(self: Node) -> NetType

        Set: NodeType(self: Node) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: Node) -> IEngineeringObject
        """
        ...


    def ConnectToSubnet(self, subnet:Subnet): # ->
        """
        ConnectToSubnet(self: Node, subnet: Subnet)

            Connects to the Subnet

            subnet: The subnet to be connected
        """
        ...

    def CreateAndConnectToSubnet(self, name:str) -> Subnet:
        """
        CreateAndConnectToSubnet(self: Node, name: str) -> Subnet

            Create and connect to a subnet

            name: The name of the Subnet to create and connect

            Returns: Siemens.Engineering.HW.Subnet
        """
        ...

    def DisconnectFromSubnet(self): # ->
        """
        DisconnectFromSubnet(self: Node)

            Disconnects a device from the given Subnet
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: Node) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: Node) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class NodeAssociation(IEquatable, IEngineeringAssociation, IInternalAssociationAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalBaseAccess'>, <type 'IInternalCollectionAccess'>, <type 'object'>
    """ Associated nodes """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent..

        Get: Parent(self: NodeAssociation) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: NodeAssociation) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: NodeAssociation) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Node](enumerable: IEnumerable[Node], value: Node) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class NodeComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of Nodes """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: NodeComposition) -> IEngineeringObject
        """
        ...


    def Find(self, name:str) -> Node:
        """
        Find(self: NodeComposition, name: str) -> Node

            Finds a given node

            name: The name of the Node instance to find

            Returns: Siemens.Engineering.HW.Node
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: NodeComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: NodeComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Node](enumerable: IEnumerable[Node], value: Node) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class OpcUaSecurityPolicies(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OpcUaSecurityPolicies

    enum (flags) OpcUaSecurityPolicies, values: None (0), OpcUaSecurityPolicies128RSAS (2), OpcUaSecurityPolicies128RSASE (4), OpcUaSecurityPolicies256S (8), OpcUaSecurityPolicies256SE (16), OpcUaSecurityPolicies256SHAS (32), OpcUaSecurityPolicies256SHASE (64), OpcUaSecurityPoliciesNone (1)
    """
    OpcUaSecurityPolicies128RSAS: OpcUaSecurityPolicies = ...
    OpcUaSecurityPolicies128RSASE: OpcUaSecurityPolicies = ...
    OpcUaSecurityPolicies256S: OpcUaSecurityPolicies = ...
    OpcUaSecurityPolicies256SE: OpcUaSecurityPolicies = ...
    OpcUaSecurityPolicies256SHAS: OpcUaSecurityPolicies = ...
    OpcUaSecurityPolicies256SHASE: OpcUaSecurityPolicies = ...
    OpcUaSecurityPoliciesNone: OpcUaSecurityPolicies = ...
    value__ = ...


class OperatingHoursMonitoringResponse(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OperatingHoursMonitoringResponse

    enum OperatingHoursMonitoringResponse, values: Deactivated (0), Signal (1), Warn (2)
    """
    Deactivated: OperatingHoursMonitoringResponse = ...
    Signal: OperatingHoursMonitoringResponse = ...
    value__ = ...
    Warn: OperatingHoursMonitoringResponse = ...


class OperatingMode(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OperatingMode

    enum OperatingMode, values: AnalogMode (67), Axis (270), ButtonHga (60), CascadingFunction (51), ConstantCurrent (255), Control (54), CountContinuously (2), Counting (23), CountOnce (3), CountPeriodically (4), D (256), Deactivated (281), DigitalInput (52), DigitalOutput (276), DiOversampling (24), DoOversampling (56), DosingMode (33), ElectronicShutdown (68), FastMode (1), FillLevel (62), FrequencyMeasurement (5), FrequencyOutput (266), FullDuplex4WireOperation (19), FullDuplex4WireOperationMultipointMaster (22), FullDuplex4WireOperationMultipointSlave (21), FullDuplex4WireOperationPtPConnection (25), HalfAndFullDuplex (55), HalfDuplex2WireOperation (20), I (257), Id (258), IncrementalEncoderABPhaseShifted (275), ManualOperation (278), Measuring (49), ModularCamControl (75), MotionControl (269), None (9), OnOffDelay (265), Oversampling (10), P (259), Pd (260), PeriodMeasurement (31), Pi (261), Pid (262), PositionFeedback (50), PositioningWithAnalogOutputs (18), PositioningWithDigitalOutputs (17), PulseOutput (264), PulseTrain (263), PulseTrainABphaseshifted (272), PulseTrainABphaseshiftedFourfold (271), PulseTrainAcountupBcountdown (273), PulseTrainApulseBdirection (274), PulseWidthModulation (7), PwmWithDcMotor (267), ReflectionBarrier (64), Reserved2 (61), Reserved6 (65), Reserved7 (66), RotationalSpeedMeasurement (32), Rs232c (268), SlowMode (0), StandardMode (57), TechnologyObject (277), TimerDI (34), TimerDQ (8), Toggle0Dot1Hz (26), Toggle0Dot5Hz (27), Toggle1Hz (6), Toggle2Hz (28), Trace (53), Value2Channels (38), Value4Channels (39), Value4ChannelsHardwareFilter (35), Value8ARo (40), Value8ARoS (48), Value8ChannelsHardwareFilter (36), Value8ChannelsSoftwareFilter (37), Window (63), WriteRead (30), WriteReadNeg (29)
    """
    AnalogMode: OperatingMode = ...
    Axis: OperatingMode = ...
    ButtonHga: OperatingMode = ...
    CascadingFunction: OperatingMode = ...
    ConstantCurrent: OperatingMode = ...
    Control: OperatingMode = ...
    CountContinuously: OperatingMode = ...
    Counting: OperatingMode = ...
    CountOnce: OperatingMode = ...
    CountPeriodically: OperatingMode = ...
    D: OperatingMode = ...
    Deactivated: OperatingMode = ...
    DigitalInput: OperatingMode = ...
    DigitalOutput: OperatingMode = ...
    DiOversampling: OperatingMode = ...
    DoOversampling: OperatingMode = ...
    DosingMode: OperatingMode = ...
    ElectronicShutdown: OperatingMode = ...
    FastMode: OperatingMode = ...
    FillLevel: OperatingMode = ...
    FrequencyMeasurement: OperatingMode = ...
    FrequencyOutput: OperatingMode = ...
    FullDuplex4WireOperation: OperatingMode = ...
    FullDuplex4WireOperationMultipointMaster: OperatingMode = ...
    FullDuplex4WireOperationMultipointSlave: OperatingMode = ...
    FullDuplex4WireOperationPtPConnection: OperatingMode = ...
    HalfAndFullDuplex: OperatingMode = ...
    HalfDuplex2WireOperation: OperatingMode = ...
    I: OperatingMode = ...
    Id: OperatingMode = ...
    IncrementalEncoderABPhaseShifted: OperatingMode = ...
    ManualOperation: OperatingMode = ...
    Measuring: OperatingMode = ...
    ModularCamControl: OperatingMode = ...
    MotionControl: OperatingMode = ...
    OnOffDelay: OperatingMode = ...
    Oversampling: OperatingMode = ...
    P: OperatingMode = ...
    Pd: OperatingMode = ...
    PeriodMeasurement: OperatingMode = ...
    Pi: OperatingMode = ...
    Pid: OperatingMode = ...
    PositionFeedback: OperatingMode = ...
    PositioningWithAnalogOutputs: OperatingMode = ...
    PositioningWithDigitalOutputs: OperatingMode = ...
    PulseOutput: OperatingMode = ...
    PulseTrain: OperatingMode = ...
    PulseTrainABphaseshifted: OperatingMode = ...
    PulseTrainABphaseshiftedFourfold: OperatingMode = ...
    PulseTrainAcountupBcountdown: OperatingMode = ...
    PulseTrainApulseBdirection: OperatingMode = ...
    PulseWidthModulation: OperatingMode = ...
    PwmWithDcMotor: OperatingMode = ...
    ReflectionBarrier: OperatingMode = ...
    Reserved2: OperatingMode = ...
    Reserved6: OperatingMode = ...
    Reserved7: OperatingMode = ...
    RotationalSpeedMeasurement: OperatingMode = ...
    Rs232c: OperatingMode = ...
    SlowMode: OperatingMode = ...
    StandardMode: OperatingMode = ...
    TechnologyObject: OperatingMode = ...
    TimerDI: OperatingMode = ...
    TimerDQ: OperatingMode = ...
    Toggle0Dot1Hz: OperatingMode = ...
    Toggle0Dot5Hz: OperatingMode = ...
    Toggle1Hz: OperatingMode = ...
    Toggle2Hz: OperatingMode = ...
    Trace: OperatingMode = ...
    Value2Channels: OperatingMode = ...
    Value4Channels: OperatingMode = ...
    Value4ChannelsHardwareFilter: OperatingMode = ...
    Value8ARo: OperatingMode = ...
    Value8ARoS: OperatingMode = ...
    Value8ChannelsHardwareFilter: OperatingMode = ...
    Value8ChannelsSoftwareFilter: OperatingMode = ...
    value__ = ...
    Window: OperatingMode = ...
    WriteRead: OperatingMode = ...
    WriteReadNeg: OperatingMode = ...


class OperatingRange(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OperatingRange

    enum OperatingRange, values: Cu100ClimaticRange (95), Cu100GostClimaticRange (78), Cu100GostStandardRange (79), Cu100StandardRange (96), Cu10ClimaticRange (74), Cu10GostClimaticRange (75), Cu10GostStandardRange (76), Cu10StandardRange (77), Cu50ClimaticRange (97), Cu50GostClimaticRange (80), Cu50GostStandardRange (81), Cu50StandardRange (98), Deactivated (0), Kty83slash110Silicon (70), Kty84slash130Silicon (71), LgNi1000ClimaticRange (60), LgNi1000StandardRange (61), Ni1000ClimaticRange (45), Ni1000StandardRange (51), Ni100ClimaticRange (44), Ni100GostClimaticRange (82), Ni100GostStandardRange (35), Ni100StandardRange (50), Ni10ClimaticRange (99), Ni10StandardRange (100), Ni120ClimaticRange (55), Ni120StandardRange (56), Ni200ClimaticRange (57), Ni200StandardRange (58), Ni500ClimaticRange (19), Ni500StandardRange (59), PlusMinus100mV (4), PlusMinus10mA (14), PlusMinus10V (11), PlusMinus1V (7), PlusMinus20mA (17), PlusMinus250mV (5), PlusMinus25mV (1), PlusMinus2dot5V (8), PlusMinus3dot2mA (12), PlusMinus500mV (6), PlusMinus50mV (2), PlusMinus5mA (13), PlusMinus5V (9), PlusMinus80mV (3), Pt1000ClimaticRange (43), Pt1000StandardRange (49), Pt100ClimaticRange (40), Pt100GostClimaticRange (85), Pt100GostStandardRange (86), Pt100StandardRange (46), Pt10ClimaticRange (101), Pt10GostClimaticRange (83), Pt10GostStandardRange (84), Pt10StandardRange (102), Pt200ClimaticRange (41), Pt200StandardRange (47), Pt500ClimaticRange (42), Pt500GostClimaticRange (89), Pt500GostStandardRange (90), Pt500StandardRange (48), Pt50ClimaticRange (103), Pt50GostClimaticRange (87), Pt50GostStandardRange (88), Pt50StandardRange (104), PTC (53), TypeB (20), TypeC (72), TypeE (22), TypeJ (25), TypeK (28), TypeL (26), TypeN (21), TypeR (23), TypeS (24), TypeT (27), TypeTxk (105), TypeTxkOrXkL (94), TypeTxKslashXKL (73), TypeU (29), Value0To10V (52), Value0To20mA (15), Value0To2V (92), Value1000Ohm (93), Value10KiloOhm (91), Value150Ohm (31), Value1To5mA (18), Value1To5V (10), Value300Ohm (32), Value3KiloOhm (54), Value48Ohm (30), Value4To20mA (16), Value600Ohm (33), Value6KiloOhm (34)
    """
    Cu100ClimaticRange: OperatingRange = ...
    Cu100GostClimaticRange: OperatingRange = ...
    Cu100GostStandardRange: OperatingRange = ...
    Cu100StandardRange: OperatingRange = ...
    Cu10ClimaticRange: OperatingRange = ...
    Cu10GostClimaticRange: OperatingRange = ...
    Cu10GostStandardRange: OperatingRange = ...
    Cu10StandardRange: OperatingRange = ...
    Cu50ClimaticRange: OperatingRange = ...
    Cu50GostClimaticRange: OperatingRange = ...
    Cu50GostStandardRange: OperatingRange = ...
    Cu50StandardRange: OperatingRange = ...
    Deactivated: OperatingRange = ...
    Kty83slash110Silicon: OperatingRange = ...
    Kty84slash130Silicon: OperatingRange = ...
    LgNi1000ClimaticRange: OperatingRange = ...
    LgNi1000StandardRange: OperatingRange = ...
    Ni1000ClimaticRange: OperatingRange = ...
    Ni1000StandardRange: OperatingRange = ...
    Ni100ClimaticRange: OperatingRange = ...
    Ni100GostClimaticRange: OperatingRange = ...
    Ni100GostStandardRange: OperatingRange = ...
    Ni100StandardRange: OperatingRange = ...
    Ni10ClimaticRange: OperatingRange = ...
    Ni10StandardRange: OperatingRange = ...
    Ni120ClimaticRange: OperatingRange = ...
    Ni120StandardRange: OperatingRange = ...
    Ni200ClimaticRange: OperatingRange = ...
    Ni200StandardRange: OperatingRange = ...
    Ni500ClimaticRange: OperatingRange = ...
    Ni500StandardRange: OperatingRange = ...
    PlusMinus100mV: OperatingRange = ...
    PlusMinus10mA: OperatingRange = ...
    PlusMinus10V: OperatingRange = ...
    PlusMinus1V: OperatingRange = ...
    PlusMinus20mA: OperatingRange = ...
    PlusMinus250mV: OperatingRange = ...
    PlusMinus25mV: OperatingRange = ...
    PlusMinus2dot5V: OperatingRange = ...
    PlusMinus3dot2mA: OperatingRange = ...
    PlusMinus500mV: OperatingRange = ...
    PlusMinus50mV: OperatingRange = ...
    PlusMinus5mA: OperatingRange = ...
    PlusMinus5V: OperatingRange = ...
    PlusMinus80mV: OperatingRange = ...
    Pt1000ClimaticRange: OperatingRange = ...
    Pt1000StandardRange: OperatingRange = ...
    Pt100ClimaticRange: OperatingRange = ...
    Pt100GostClimaticRange: OperatingRange = ...
    Pt100GostStandardRange: OperatingRange = ...
    Pt100StandardRange: OperatingRange = ...
    Pt10ClimaticRange: OperatingRange = ...
    Pt10GostClimaticRange: OperatingRange = ...
    Pt10GostStandardRange: OperatingRange = ...
    Pt10StandardRange: OperatingRange = ...
    Pt200ClimaticRange: OperatingRange = ...
    Pt200StandardRange: OperatingRange = ...
    Pt500ClimaticRange: OperatingRange = ...
    Pt500GostClimaticRange: OperatingRange = ...
    Pt500GostStandardRange: OperatingRange = ...
    Pt500StandardRange: OperatingRange = ...
    Pt50ClimaticRange: OperatingRange = ...
    Pt50GostClimaticRange: OperatingRange = ...
    Pt50GostStandardRange: OperatingRange = ...
    Pt50StandardRange: OperatingRange = ...
    PTC: OperatingRange = ...
    TypeB: OperatingRange = ...
    TypeC: OperatingRange = ...
    TypeE: OperatingRange = ...
    TypeJ: OperatingRange = ...
    TypeK: OperatingRange = ...
    TypeL: OperatingRange = ...
    TypeN: OperatingRange = ...
    TypeR: OperatingRange = ...
    TypeS: OperatingRange = ...
    TypeT: OperatingRange = ...
    TypeTxk: OperatingRange = ...
    TypeTxkOrXkL: OperatingRange = ...
    TypeTxKslashXKL: OperatingRange = ...
    TypeU: OperatingRange = ...
    Value0To10V: OperatingRange = ...
    Value0To20mA: OperatingRange = ...
    Value0To2V: OperatingRange = ...
    Value1000Ohm: OperatingRange = ...
    Value10KiloOhm: OperatingRange = ...
    Value150Ohm: OperatingRange = ...
    Value1To5mA: OperatingRange = ...
    Value1To5V: OperatingRange = ...
    Value300Ohm: OperatingRange = ...
    Value3KiloOhm: OperatingRange = ...
    Value48Ohm: OperatingRange = ...
    Value4To20mA: OperatingRange = ...
    Value600Ohm: OperatingRange = ...
    Value6KiloOhm: OperatingRange = ...
    value__ = ...


class OperatingType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OperatingType

    enum OperatingType, values: Current (2), Current2WireTransducer (4), Current4WireTransducer (3), Deactivated (0), Hart (24), Resistance (18), Resistor2Wire (7), Resistor3Wire (6), Resistor4Wire (5), RtdThermalResistorLinear (19), ThermalResistor2Wire (25), ThermalResistor3Wire (9), ThermalResistor4Wire (8), Thermocouple (10), Thermocouple0CCompLinear (22), Thermocouple50CCompLinear (23), ThermocoupleExtComp (11), ThermocoupleExtCompLinear (14), ThermocoupleIntComp (21), ThermocoupleIntCompLinear (13), Voltage (1)
    """
    Current: OperatingType = ...
    Current2WireTransducer: OperatingType = ...
    Current4WireTransducer: OperatingType = ...
    Deactivated: OperatingType = ...
    Hart: OperatingType = ...
    Resistance: OperatingType = ...
    Resistor2Wire: OperatingType = ...
    Resistor3Wire: OperatingType = ...
    Resistor4Wire: OperatingType = ...
    RtdThermalResistorLinear: OperatingType = ...
    ThermalResistor2Wire: OperatingType = ...
    ThermalResistor3Wire: OperatingType = ...
    ThermalResistor4Wire: OperatingType = ...
    Thermocouple: OperatingType = ...
    Thermocouple0CCompLinear: OperatingType = ...
    Thermocouple50CCompLinear: OperatingType = ...
    ThermocoupleExtComp: OperatingType = ...
    ThermocoupleExtCompLinear: OperatingType = ...
    ThermocoupleIntComp: OperatingType = ...
    ThermocoupleIntCompLinear: OperatingType = ...
    value__ = ...
    Voltage: OperatingType = ...


class OperatingTypeAndRange(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property OperatingTypeAndRange

    enum OperatingTypeAndRange, values: Current0To20mA (2), Current2WireTransducer4To20mA (3), Current4To20mA (10), Current4WireTransducer4To20mA (20), Current4WireTransducerPlusMinus20mA (4), CurrentPlusMinus20mA (11), Deactivated (0), ThermocoupleTypeB (12), ThermocoupleTypeC (21), ThermocoupleTypeE (13), ThermocoupleTypeJ (14), ThermocoupleTypeK (8), ThermocoupleTypeL (15), ThermocoupleTypeN (16), ThermocoupleTypeR (17), ThermocoupleTypeS (18), ThermocoupleTypeT (19), Voltage1To5V (7), VoltagePlusMinus10V (9), VoltagePlusMinus2dot5V (5), VoltagePlusMinus5V (6), VoltagePlusMinus80mV (1)
    """
    Current0To20mA: OperatingTypeAndRange = ...
    Current2WireTransducer4To20mA: OperatingTypeAndRange = ...
    Current4To20mA: OperatingTypeAndRange = ...
    Current4WireTransducer4To20mA: OperatingTypeAndRange = ...
    Current4WireTransducerPlusMinus20mA: OperatingTypeAndRange = ...
    CurrentPlusMinus20mA: OperatingTypeAndRange = ...
    Deactivated: OperatingTypeAndRange = ...
    ThermocoupleTypeB: OperatingTypeAndRange = ...
    ThermocoupleTypeC: OperatingTypeAndRange = ...
    ThermocoupleTypeE: OperatingTypeAndRange = ...
    ThermocoupleTypeJ: OperatingTypeAndRange = ...
    ThermocoupleTypeK: OperatingTypeAndRange = ...
    ThermocoupleTypeL: OperatingTypeAndRange = ...
    ThermocoupleTypeN: OperatingTypeAndRange = ...
    ThermocoupleTypeR: OperatingTypeAndRange = ...
    ThermocoupleTypeS: OperatingTypeAndRange = ...
    ThermocoupleTypeT: OperatingTypeAndRange = ...
    value__ = ...
    Voltage1To5V: OperatingTypeAndRange = ...
    VoltagePlusMinus10V: OperatingTypeAndRange = ...
    VoltagePlusMinus2dot5V: OperatingTypeAndRange = ...
    VoltagePlusMinus5V: OperatingTypeAndRange = ...
    VoltagePlusMinus80mV: OperatingTypeAndRange = ...


class PcInterfaceAssignmentMode(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Interface assignment type for assignable interfaces

    enum PcInterfaceAssignmentMode, values: None (0), PcStation (1), SoftwarePlc (2)
    """
    PcStation: PcInterfaceAssignmentMode = ...
    SoftwarePlc: PcInterfaceAssignmentMode = ...
    value__ = ...


class PcStationType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property PcStationType

    enum PcStationType, values: NotInstalled (0), PcStationV1Dot0 (1), PcStationV2Dot0 (2), PcStationV2Dot1 (3), PcStationV2Dot2 (4), PcStationV2Dot3 (5), PcStationV2Dot4 (6), PcStationV2Dot7 (7)
    """
    NotInstalled: PcStationType = ...
    PcStationV1Dot0: PcStationType = ...
    PcStationV2Dot0: PcStationType = ...
    PcStationV2Dot1: PcStationType = ...
    PcStationV2Dot2: PcStationType = ...
    PcStationV2Dot3: PcStationType = ...
    PcStationV2Dot4: PcStationType = ...
    PcStationV2Dot7: PcStationType = ...
    value__ = ...


class PlcProtectionAccessLevel(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Access Level entries -enum

    enum (flags) PlcProtectionAccessLevel, values: FullAccess (1), FullAccessIncludingFailsafe (5), HMIAccess (3), NoAccess (4), None (0), ReadAccess (2)
    """
    FullAccess: PlcProtectionAccessLevel = ...
    FullAccessIncludingFailsafe: PlcProtectionAccessLevel = ...
    HMIAccess: PlcProtectionAccessLevel = ...
    NoAccess: PlcProtectionAccessLevel = ...
    ReadAccess: PlcProtectionAccessLevel = ...
    value__ = ...


class ResponseToOvershoot(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ResponseToOvershoot

    enum ResponseToOvershoot, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: ResponseToOvershoot = ...
    Signal: ResponseToOvershoot = ...
    Trip: ResponseToOvershoot = ...
    value__ = ...
    Warn: ResponseToOvershoot = ...


class ResponseToPrewarning(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ResponseToPrewarning

    enum ResponseToPrewarning, values: Deactivated (0), Signal (1), Warn (2)
    """
    Deactivated: ResponseToPrewarning = ...
    Signal: ResponseToPrewarning = ...
    value__ = ...
    Warn: ResponseToPrewarning = ...


class RetentiveDataMemoryUsage(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property RetentiveDataMemoryUsage

    enum RetentiveDataMemoryUsage, values: NvramOfThePcSystem (1), PcMassStorage (0)
    """
    NvramOfThePcSystem: RetentiveDataMemoryUsage = ...
    PcMassStorage: RetentiveDataMemoryUsage = ...
    value__ = ...


class RtClass(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property RtClass

    enum RtClass, values: IRT (2), None (0), RT (1)
    """
    IRT: RtClass = ...
    RT: RtClass = ...
    value__ = ...


class SignalDelaySelection(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property SignalDelaySelection

    enum SignalDelaySelection, values: CableLength (1), None (0), SignalDelayTime (2)
    """
    CableLength: SignalDelaySelection = ...
    SignalDelayTime: SignalDelaySelection = ...
    value__ = ...


class Software(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents a base class of an object containing software components """
    @property
    def Name(self) -> str:
        """
        The name of the software base

        Get: Name(self: Software) -> str
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: Software) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: Software) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: Software) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class StopTimeOperatingHoursMonitoringResponse(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property StopTimeOperatingHoursMonitoringResponse

    enum StopTimeOperatingHoursMonitoringResponse, values: Deactivated (0), Signal (1), Warn (2)
    """
    Deactivated: StopTimeOperatingHoursMonitoringResponse = ...
    Signal: StopTimeOperatingHoursMonitoringResponse = ...
    value__ = ...
    Warn: StopTimeOperatingHoursMonitoringResponse = ...


class Subnet(IEquatable, IEngineeringObject, IEngineeringServiceProvider, IMasterCopySource, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IServiceProvider'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Represents a Subnet, one of the following (SubnetMpi or SubnetIE) represents the net object """
    @property
    def IoSystems(self) -> IoSystemAssociation:
        """
        Associated IO systems

        Get: IoSystems(self: Subnet) -> IoSystemAssociation
        """
        ...

    @property
    def Name(self) -> str:
        """
        The name of the Subnet

        Get: Name(self: Subnet) -> str

        Set: Name(self: Subnet) = value
        """
        ...

    @property
    def NetType(self) -> NetType:
        """
        Particular subnet net type

        Get: NetType(self: Subnet) -> NetType
        """
        ...

    @property
    def Nodes(self) -> NodeAssociation:
        """
        Associated nodes

        Get: Nodes(self: Subnet) -> NodeAssociation
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: Subnet) -> IEngineeringObject
        """
        ...

    @property
    def TypeIdentifier(self) -> str:
        """
        The type identifier of this Subnet

        Get: TypeIdentifier(self: Subnet) -> str
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: Subnet)

            Deletes this instance.
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: Subnet) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: Subnet) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class SubnetComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of Subnets """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: SubnetComposition) -> IEngineeringObject
        """
        ...


    def CreateFrom(self, masterCopy:MasterCopy) -> Subnet:
        """
        CreateFrom(self: SubnetComposition, masterCopy: MasterCopy) -> Subnet

            Create subnet from MasterCopy

            masterCopy: The source MasterCopy

            Returns: Siemens.Engineering.HW.Subnet
        """
        ...

    def Find(self, name:str) -> Subnet:
        """
        Find(self: SubnetComposition, name: str) -> Subnet

            Finds a given Subnet

            name: Name to find

            Returns: Siemens.Engineering.HW.Subnet
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: SubnetComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: SubnetComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[Subnet](enumerable: IEnumerable[Subnet], value: Subnet) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class SyncRole(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property SyncRole

    enum SyncRole, values: NotSynchronized (0), RedundantSyncMaster (4), SyncMaster (1), SyncSlave (2)
    """
    NotSynchronized: SyncRole = ...
    RedundantSyncMaster: SyncRole = ...
    SyncMaster: SyncRole = ...
    SyncSlave: SyncRole = ...
    value__ = ...


class TemperatureUnit(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property TemperatureUnit

    enum TemperatureUnit, values: Deactivated (0), DegreesCelsius (1), DegreesFahrenheit (2), Kelvin (3)
    """
    Deactivated: TemperatureUnit = ...
    DegreesCelsius: TemperatureUnit = ...
    DegreesFahrenheit: TemperatureUnit = ...
    Kelvin: TemperatureUnit = ...
    value__ = ...


class ThermistorResponseToSensorFault(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ThermistorResponseToSensorFault

    enum ThermistorResponseToSensorFault, values: Deactivated (0), Signal (1), Trip (3), Warn (2)
    """
    Deactivated: ThermistorResponseToSensorFault = ...
    Signal: ThermistorResponseToSensorFault = ...
    Trip: ThermistorResponseToSensorFault = ...
    value__ = ...
    Warn: ThermistorResponseToSensorFault = ...


class ThermistorResponseToTripLevel(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property ThermistorResponseToTripLevel

    enum ThermistorResponseToTripLevel, values: None (0), Signal (1), Trip (3), Warn (2)
    """
    Signal: ThermistorResponseToTripLevel = ...
    Trip: ThermistorResponseToTripLevel = ...
    value__ = ...
    Warn: ThermistorResponseToTripLevel = ...


class TransferArea(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Addressmapping between local I-Slave / I-device and remote partner """
    @property
    def Direction(self) -> TransferAreaDirection:
        """
        Direction of data communication between local and partner device

        Get: Direction(self: TransferArea) -> TransferAreaDirection

        Set: Direction(self: TransferArea) = value
        """
        ...

    @property
    def LocalAddresses(self) -> AddressComposition:
        """
        Local addresses of a transfer area

        Get: LocalAddresses(self: TransferArea) -> AddressComposition
        """
        ...

    @property
    def LocalToPartnerLength(self) -> int:
        """
        Length of transferred data from local to partner device

        Get: LocalToPartnerLength(self: TransferArea) -> int

        Set: LocalToPartnerLength(self: TransferArea) = value
        """
        ...

    @property
    def Name(self) -> str:
        """
        Name of the transfer area

        Get: Name(self: TransferArea) -> str

        Set: Name(self: TransferArea) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: TransferArea) -> IEngineeringObject
        """
        ...

    @property
    def PartnerAddresses(self) -> AddressComposition:
        """
        Partner addresses of a transfer area

        Get: PartnerAddresses(self: TransferArea) -> AddressComposition
        """
        ...

    @property
    def PartnerToLocalLength(self) -> int:
        """
        Length of transferred data from partner to local device

        Get: PartnerToLocalLength(self: TransferArea) -> int

        Set: PartnerToLocalLength(self: TransferArea) = value
        """
        ...

    @property
    def PositionNumber(self) -> int:
        """
        Subslotnumber / Slotnumber of transfer area

        Get: PositionNumber(self: TransferArea) -> int
        """
        ...

    @property
    def TransferAreaMappingRules(self) -> TransferAreaMappingRuleComposition:
        """
        Mapping rules for transfer areas

        Get: TransferAreaMappingRules(self: TransferArea) -> TransferAreaMappingRuleComposition
        """
        ...

    @property
    def Type(self) -> TransferAreaType:
        """
        Transfer area type

        Get: Type(self: TransferArea) -> TransferAreaType

        Set: Type(self: TransferArea) = value
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: TransferArea)

            Deletes this instance.
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: TransferArea) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: TransferArea) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class TransferAreaComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Composition of transfer areas """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: TransferAreaComposition) -> IEngineeringObject
        """
        ...


    def Find(self, positionNumber:int) -> TransferArea:
        """
        Find(self: TransferAreaComposition, positionNumber: int) -> TransferArea

            Find a transfer area by position number

            positionNumber: Subslotnumber / Slotnumber of transfer area

            Returns: Siemens.Engineering.HW.TransferArea
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: TransferAreaComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: TransferAreaComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[TransferArea](enumerable: IEnumerable[TransferArea], value: TransferArea) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class TransferAreaDirection(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Direction of data communication between local and partner device

    enum (flags) TransferAreaDirection, values: Bidirectional (3), LocalToPartner (1), None (0), PartnerToLocal (2)
    """
    Bidirectional: TransferAreaDirection = ...
    LocalToPartner: TransferAreaDirection = ...
    PartnerToLocal: TransferAreaDirection = ...
    value__ = ...


class TransferAreaMappingRule(IEquatable, IEngineeringObject, IInternalObjectAccess): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Mapping rule for transfer area """
    @property
    def Begin(self) -> int:
        """
        Bit address of the begin of the mapped data

        Get: Begin(self: TransferAreaMappingRule) -> int

        Set: Begin(self: TransferAreaMappingRule) = value
        """
        ...

    @property
    def End(self) -> int:
        """
        Bit address of the end of the mapped data

        Get: End(self: TransferAreaMappingRule) -> int

        Set: End(self: TransferAreaMappingRule) = value
        """
        ...

    @property
    def IoType(self): # ->
        """
        Type of data to be mapped (Input or Output)

        Get: IoType(self: TransferAreaMappingRule) -> AddressIoType

        Set: IoType(self: TransferAreaMappingRule) = value
        """
        ...

    @property
    def Offset(self) -> int:
        """
        Offset of the transfered data

        Get: Offset(self: TransferAreaMappingRule) -> int

        Set: Offset(self: TransferAreaMappingRule) = value
        """
        ...

    @property
    def Parent(self) -> IEngineeringObject:
        """
        EOM parent of this object

        Get: Parent(self: TransferAreaMappingRule) -> IEngineeringObject
        """
        ...

    @property
    def PositionNumber(self) -> int:
        """
        Transfer area mapping rule number

        Get: PositionNumber(self: TransferAreaMappingRule) -> int
        """
        ...

    @property
    def Target(self) -> DeviceItem:
        """
        I/O module or sub-module to be mapped

        Get: Target(self: TransferAreaMappingRule) -> DeviceItem

        Set: Target(self: TransferAreaMappingRule) = value
        """
        ...


    def Delete(self): # ->
        """
        Delete(self: TransferAreaMappingRule)

            Deletes this instance.
        """
        ...

    def GetHashCode(self) -> int:
        """
        GetHashCode(self: TransferAreaMappingRule) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: TransferAreaMappingRule) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class TransferAreaMappingRuleComposition(IInternalCompositionAccess, IEngineeringComposition, IEquatable): # skipped bases: <type 'IInternalInstanceAccess'>, <type 'IEngineeringInstance'>, <type 'IEnumerable'>, <type 'IInternalCollectionAccess'>, <type 'IInternalBaseAccess'>, <type 'IEngineeringCompositionOrObject'>, <type 'object'>
    """ Mapping rules for transfer areas """
    @property
    def Parent(self) -> IEngineeringObject:
        """
        Gets the parent.

        Get: Parent(self: TransferAreaMappingRuleComposition) -> IEngineeringObject
        """
        ...


    def GetHashCode(self) -> int:
        """
        GetHashCode(self: TransferAreaMappingRuleComposition) -> int

            Returns a hash code for this instance.

            Returns: A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.
        """
        ...

    def ToString(self) -> str:
        """
        ToString(self: TransferAreaMappingRuleComposition) -> str

            Returns a System.String that represents the current System.Object.

            Returns: A System.String that represents the current System.Object.
        """
        ...

    def __contains__(self, *args): #cannot find CLR method
        """ __contains__[TransferAreaMappingRule](enumerable: IEnumerable[TransferAreaMappingRule], value: TransferAreaMappingRule) -> bool """
        ...

    def __ne__(self, *args): #cannot find CLR method
        ...


class TransferAreaType(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Type of transfer area

    enum TransferAreaType, values: CD (2), F_PS (3), MS (1), None (0), TM (4)
    """
    CD: TransferAreaType = ...
    F_PS: TransferAreaType = ...
    MS: TransferAreaType = ...
    TM: TransferAreaType = ...
    value__ = ...


class TransmissionRateAndDuplex(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property TransmissionRateAndDuplex

    enum TransmissionRateAndDuplex, values: AsyncFiber10MbpsFullDuplex (13), AsyncFiber10MbpsHalfDuplex (12), AUI10Mbps (1), Automatic (8), FO10000MbpsFullDuplex (31), FO1000MbpsFullDuplex (26), FO1000MbpsFullDuplexLD (24), FO100MbpsFullDuplex (18), FO100MbpsFullDuplexLD (46), None (0), POFPCF100MbpsFullDuplex (54), TP1000MbpsFullDuplex (30), TP100MbpsFullDuplex (16), TP100MbpsHalfDuplex (15), TP10MbpsFullDuplex (11), TP10MbpsHalfDuplex (10), X1000MbpsFullDuplex (22)
    """
    AsyncFiber10MbpsFullDuplex: TransmissionRateAndDuplex = ...
    AsyncFiber10MbpsHalfDuplex: TransmissionRateAndDuplex = ...
    AUI10Mbps: TransmissionRateAndDuplex = ...
    Automatic: TransmissionRateAndDuplex = ...
    FO10000MbpsFullDuplex: TransmissionRateAndDuplex = ...
    FO1000MbpsFullDuplex: TransmissionRateAndDuplex = ...
    FO1000MbpsFullDuplexLD: TransmissionRateAndDuplex = ...
    FO100MbpsFullDuplex: TransmissionRateAndDuplex = ...
    FO100MbpsFullDuplexLD: TransmissionRateAndDuplex = ...
    POFPCF100MbpsFullDuplex: TransmissionRateAndDuplex = ...
    TP1000MbpsFullDuplex: TransmissionRateAndDuplex = ...
    TP100MbpsFullDuplex: TransmissionRateAndDuplex = ...
    TP100MbpsHalfDuplex: TransmissionRateAndDuplex = ...
    TP10MbpsFullDuplex: TransmissionRateAndDuplex = ...
    TP10MbpsHalfDuplex: TransmissionRateAndDuplex = ...
    value__ = ...
    X1000MbpsFullDuplex: TransmissionRateAndDuplex = ...


class TypeOfConsumerLoad(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    Possible values for property TypeOfConsumerLoad

    enum TypeOfConsumerLoad, values: Motor (0), ResistiveLoad (1)
    """
    Motor: TypeOfConsumerLoad = ...
    ResistiveLoad: TypeOfConsumerLoad = ...
    value__ = ...


class View(Enum): # skipped bases: <type 'IConvertible'>, <type 'IComparable'>, <type 'IFormattable'>, <type 'object'>
    """
    The list of possible views in the HW editor

    enum View, values: Device (0), Network (1), Topology (2)
    """
    Device: View = ...
    Network: View = ...
    Topology: View = ...
    value__ = ...


# variables with complex values
