# encoding: utf-8
# module System.Management.Automation.Tracing calls itself Tracing
# from System.Management.Automation, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35
# by generator 1.145
""" no doc """
from __future__ import annotations
from System import (Array, AsyncCallback, Attribute, Byte, Enum, EventArgs, 
    Guid, IAsyncResult, IDisposable, Int64, MulticastDelegate)

from System.ComponentModel import EventDescriptor

from System.Management.Automation import ErrorRecord, Job, PSObject

from System.Management.Automation.Runspaces import WSManConnectionInfo

from System.Timers import ElapsedEventArgs

from typing import Self

"""The following names are not found in the module: BoundEvent, field#
"""

# no functions
# classes

class BaseChannelWriter(IDisposable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def Keywords(self) -> PowerShellTraceKeywords:
        """
        Get: Keywords(self: BaseChannelWriter) -> PowerShellTraceKeywords
        Set: Keywords(self: BaseChannelWriter) = value
        """
        ...


    def TraceCritical(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceCritical(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceDebug(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceDebug(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceError(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceError(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceInformational(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceInformational(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceLogAlways(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceLogAlways(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceVerbose(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceVerbose(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...

    def TraceWarning(self, traceEvent:PowerShellTraceEvent, operationCode:PowerShellTraceOperationCode, task:PowerShellTraceTask, args:Array) -> bool:
        """ TraceWarning(self: BaseChannelWriter, traceEvent: PowerShellTraceEvent, operationCode: PowerShellTraceOperationCode, task: PowerShellTraceTask, *args: Array[object]) -> bool """
        ...


class CallbackNoParameter(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ CallbackNoParameter(object: object, method: IntPtr) """
    def BeginInvoke(self, callback:AsyncCallback, object:object) -> IAsyncResult:
        """ BeginInvoke(self: CallbackNoParameter, callback: AsyncCallback, object: object) -> IAsyncResult """
        ...

    def EndInvoke(self, result:IAsyncResult): # -> 
        """ EndInvoke(self: CallbackNoParameter, result: IAsyncResult) """
        ...

    def Invoke(self): # -> 
        """ Invoke(self: CallbackNoParameter) """
        ...


class CallbackWithState(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ CallbackWithState(object: object, method: IntPtr) """
    def BeginInvoke(self, state:object, callback:AsyncCallback, object:object) -> IAsyncResult:
        """ BeginInvoke(self: CallbackWithState, state: object, callback: AsyncCallback, object: object) -> IAsyncResult """
        ...

    def EndInvoke(self, result:IAsyncResult): # -> 
        """ EndInvoke(self: CallbackWithState, result: IAsyncResult) """
        ...

    def Invoke(self, state:object): # -> 
        """ Invoke(self: CallbackWithState, state: object) """
        ...


class CallbackWithStateAndArgs(MulticastDelegate): # skipped bases: <type 'ISerializable'>, <type 'ICloneable'>, <type 'object'>
    """ CallbackWithStateAndArgs(object: object, method: IntPtr) """
    def BeginInvoke(self, state:object, args:ElapsedEventArgs, callback:AsyncCallback, object:object) -> IAsyncResult:
        """ BeginInvoke(self: CallbackWithStateAndArgs, state: object, args: ElapsedEventArgs, callback: AsyncCallback, object: object) -> IAsyncResult """
        ...

    def EndInvoke(self, result:IAsyncResult): # -> 
        """ EndInvoke(self: CallbackWithStateAndArgs, result: IAsyncResult) """
        ...

    def Invoke(self, state:object, args:ElapsedEventArgs): # -> 
        """ Invoke(self: CallbackWithStateAndArgs, state: object, args: ElapsedEventArgs) """
        ...


class EtwActivity: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    @property
    def IsEnabled(self) -> bool:
        """ Get: IsEnabled(self: EtwActivity) -> bool """
        ...

    @property
    def ProviderId(self):
        ...

    @property
    def TransferEvent(self):
        ...


    def Correlate(self, callback:CallbackNoParameter = ...) -> CallbackNoParameter:
        """
        Correlate(self: EtwActivity)Correlate(self: EtwActivity, callback: CallbackNoParameter) -> CallbackNoParameter
        Correlate(self: EtwActivity, callback: CallbackWithState) -> CallbackWithState
        Correlate(self: EtwActivity, callback: AsyncCallback) -> AsyncCallback
        Correlate(self: EtwActivity, callback: CallbackWithStateAndArgs) -> CallbackWithStateAndArgs
        """
        ...

    def CorrelateWithActivity(self, parentActivityId:Guid): # -> 
        """ CorrelateWithActivity(self: EtwActivity, parentActivityId: Guid) """
        ...

    @staticmethod
    def CreateActivityId() -> Guid:
        """ CreateActivityId() -> Guid """
        ...

    @staticmethod
    def GetActivityId() -> Guid:
        """ GetActivityId() -> Guid """
        ...

    def IsProviderEnabled(self, levels:Byte, keywords:Int64) -> bool:
        """ IsProviderEnabled(self: EtwActivity, levels: Byte, keywords: Int64) -> bool """
        ...

    @staticmethod
    def SetActivityId(activityId:Guid) -> bool:
        """ SetActivityId(activityId: Guid) -> bool """
        ...

    def WriteEvent(self, *args): #cannot find CLR method
        """ WriteEvent(self: EtwActivity, ed: EventDescriptor, *payload: Array[object]) """
        ...

    EventWritten = ...


class EtwEvent(Attribute): # skipped bases: <type '_Attribute'>, <type 'object'>
    """ EtwEvent(eventId: Int64) """
    @property
    def EventId(self) -> Int64:
        """ Get: EventId(self: EtwEvent) -> Int64 """
        ...


    def __new__(cls, eventId:Int64) -> Self:
        """ __new__(cls: type, eventId: Int64) """
        ...


class EtwEventArgs(EventArgs): # skipped bases: <type 'object'>
    """ EtwEventArgs(descriptor: EventDescriptor, success: bool, payload: Array[object]) """
    @property
    def Descriptor(self) -> EventDescriptor:
        """ Get: Descriptor(self: EtwEventArgs) -> EventDescriptor """
        ...

    @property
    def Payload(self) -> Array:
        """ Get: Payload(self: EtwEventArgs) -> Array[object] """
        ...

    @property
    def Success(self) -> bool:
        """ Get: Success(self: EtwEventArgs) -> bool """
        ...


    def __new__(cls, descriptor:EventDescriptor, success:bool, payload:Array) -> Self:
        """ __new__(cls: type, descriptor: EventDescriptor, success: bool, payload: Array[object]) """
        ...


class EtwEventCorrelator(IEtwEventCorrelator): # skipped bases: <type 'object'>
    """ EtwEventCorrelator(transferProvider: EventProvider, transferEvent: EventDescriptor) """
    pass

class IEtwActivityReverter(IDisposable): # skipped bases: <type 'object'>
    """ no doc """
    def RevertCurrentActivityId(self): # -> 
        """ RevertCurrentActivityId(self: IEtwActivityReverter) """
        ...


class IEtwEventCorrelator: # skipped bases: <type 'object'>
    """ no doc """
    @property
    def CurrentActivityId(self) -> Guid:
        """
        Get: CurrentActivityId(self: IEtwEventCorrelator) -> Guid
        Set: CurrentActivityId(self: IEtwEventCorrelator) = value
        """
        ...


    def StartActivity(self, relatedActivityId:Guid = ...) -> IEtwActivityReverter:
        """
        StartActivity(self: IEtwEventCorrelator, relatedActivityId: Guid) -> IEtwActivityReverter
        StartActivity(self: IEtwEventCorrelator) -> IEtwActivityReverter
        """
        ...


class NullWriter(BaseChannelWriter): # skipped bases: <type 'IDisposable'>, <type 'object'>
    """ no doc """
    @property
    def Instance(self) -> BaseChannelWriter:
        """ Get: Instance() -> BaseChannelWriter """
        ...




class PowerShellChannelWriter(BaseChannelWriter): # skipped bases: <type 'IDisposable'>, <type 'object'>
    """ no doc """
    pass

class PowerShellTraceChannel(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum PowerShellTraceChannel, values: Analytic (17), Debug (18), None (0), Operational (16) """
    Analytic: PowerShellTraceChannel = ...
    Debug: PowerShellTraceChannel = ...
    Operational: PowerShellTraceChannel = ...
    value__ = ...


class PowerShellTraceEvent(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum PowerShellTraceEvent, values: AnalyticTransferEventRunspacePool (12039), AppDomainUnhandledException (32777), AppDomainUnhandledExceptionAnalytic (32775), AppName (12034), ComputerName (12035), ErrorRecord (45057), Exception (45058), HostNameResolve (4097), Job (45060), LoadingPSCustomShellAssembly (32865), LoadingPSCustomShellType (32866), None (0), OperationalTransferEventRunspacePool (8196), PerformanceTrackConsoleStartupStart (40961), PerformanceTrackConsoleStartupStop (40962), PowerShellObject (45059), ReceivedRemotingFragment (32867), ReportContext (32851), ReportOperationComplete (32852), RunspaceConstructor (8193), RunspacePoolConstructor (8194), RunspacePoolOpen (8195), RunspacePort (12033), Scheme (12036), SchemeResolve (4098), SentRemotingFragment (32868), SerializerDepthOverride (28675), SerializerEnumerationFailed (28679), SerializerMaxDepthWhenSerializing (28682), SerializerModeOverride (28676), SerializerPropertyGetterFailed (28678), SerializerScriptPropertyWithoutRunspace (28677), SerializerSpecificPropertyMissing (28684), SerializerToStringFailed (28680), SerializerWorkflowLoadFailure (28674), SerializerWorkflowLoadSuccess (28673), SerializerXmlExceptionWhenDeserializing (28683), ServerClientReceiveRequest (32856), ServerCloseOperation (32857), ServerCreateCommandSession (32853), ServerCreateRemoteSession (32850), ServerReceivedData (32855), ServerSendData (32849), ServerStopCommand (32854), ShellResolve (4099), TestAnalytic (12037), TraceMessage (45061), TraceMessage2 (49153), TraceMessageGuid (49154), TraceWSManConnectionInfo (45062), TransportError (32784), TransportErrorAnalytic (32776), TransportReceivedObject (32769), UriRedirection (32805), WSManCloseCommand (32801), WSManCloseCommandCallbackReceived (32802), WSManCloseShell (32787), WSManCloseShellCallbackReceived (32788), WSManConnectionInfoDump (12038), WSManCreateCommand (32793), WSManCreateCommandCallbackReceived (32800), WSManCreateShell (32785), WSManCreateShellCallbackReceived (32786), WSManPluginShutdown (32869), WSManReceiveShellOutputExtended (32791), WSManReceiveShellOutputExtendedCallbackReceived (32792), WSManSendShellInputExtended (32789), WSManSendShellInputExtendedCallbackReceived (32790), WSManSignal (32803), WSManSignalCallbackReceived (32804) """
    AnalyticTransferEventRunspacePool: PowerShellTraceEvent = ...
    AppDomainUnhandledException: PowerShellTraceEvent = ...
    AppDomainUnhandledExceptionAnalytic: PowerShellTraceEvent = ...
    AppName: PowerShellTraceEvent = ...
    ComputerName: PowerShellTraceEvent = ...
    ErrorRecord: PowerShellTraceEvent = ...
    Exception: PowerShellTraceEvent = ...
    HostNameResolve: PowerShellTraceEvent = ...
    Job: PowerShellTraceEvent = ...
    LoadingPSCustomShellAssembly: PowerShellTraceEvent = ...
    LoadingPSCustomShellType: PowerShellTraceEvent = ...
    OperationalTransferEventRunspacePool: PowerShellTraceEvent = ...
    PerformanceTrackConsoleStartupStart: PowerShellTraceEvent = ...
    PerformanceTrackConsoleStartupStop: PowerShellTraceEvent = ...
    PowerShellObject: PowerShellTraceEvent = ...
    ReceivedRemotingFragment: PowerShellTraceEvent = ...
    ReportContext: PowerShellTraceEvent = ...
    ReportOperationComplete: PowerShellTraceEvent = ...
    RunspaceConstructor: PowerShellTraceEvent = ...
    RunspacePoolConstructor: PowerShellTraceEvent = ...
    RunspacePoolOpen: PowerShellTraceEvent = ...
    RunspacePort: PowerShellTraceEvent = ...
    Scheme: PowerShellTraceEvent = ...
    SchemeResolve: PowerShellTraceEvent = ...
    SentRemotingFragment: PowerShellTraceEvent = ...
    SerializerDepthOverride: PowerShellTraceEvent = ...
    SerializerEnumerationFailed: PowerShellTraceEvent = ...
    SerializerMaxDepthWhenSerializing: PowerShellTraceEvent = ...
    SerializerModeOverride: PowerShellTraceEvent = ...
    SerializerPropertyGetterFailed: PowerShellTraceEvent = ...
    SerializerScriptPropertyWithoutRunspace: PowerShellTraceEvent = ...
    SerializerSpecificPropertyMissing: PowerShellTraceEvent = ...
    SerializerToStringFailed: PowerShellTraceEvent = ...
    SerializerWorkflowLoadFailure: PowerShellTraceEvent = ...
    SerializerWorkflowLoadSuccess: PowerShellTraceEvent = ...
    SerializerXmlExceptionWhenDeserializing: PowerShellTraceEvent = ...
    ServerClientReceiveRequest: PowerShellTraceEvent = ...
    ServerCloseOperation: PowerShellTraceEvent = ...
    ServerCreateCommandSession: PowerShellTraceEvent = ...
    ServerCreateRemoteSession: PowerShellTraceEvent = ...
    ServerReceivedData: PowerShellTraceEvent = ...
    ServerSendData: PowerShellTraceEvent = ...
    ServerStopCommand: PowerShellTraceEvent = ...
    ShellResolve: PowerShellTraceEvent = ...
    TestAnalytic: PowerShellTraceEvent = ...
    TraceMessage: PowerShellTraceEvent = ...
    TraceMessage2: PowerShellTraceEvent = ...
    TraceMessageGuid: PowerShellTraceEvent = ...
    TraceWSManConnectionInfo: PowerShellTraceEvent = ...
    TransportError: PowerShellTraceEvent = ...
    TransportErrorAnalytic: PowerShellTraceEvent = ...
    TransportReceivedObject: PowerShellTraceEvent = ...
    UriRedirection: PowerShellTraceEvent = ...
    value__ = ...
    WSManCloseCommand: PowerShellTraceEvent = ...
    WSManCloseCommandCallbackReceived: PowerShellTraceEvent = ...
    WSManCloseShell: PowerShellTraceEvent = ...
    WSManCloseShellCallbackReceived: PowerShellTraceEvent = ...
    WSManConnectionInfoDump: PowerShellTraceEvent = ...
    WSManCreateCommand: PowerShellTraceEvent = ...
    WSManCreateCommandCallbackReceived: PowerShellTraceEvent = ...
    WSManCreateShell: PowerShellTraceEvent = ...
    WSManCreateShellCallbackReceived: PowerShellTraceEvent = ...
    WSManPluginShutdown: PowerShellTraceEvent = ...
    WSManReceiveShellOutputExtended: PowerShellTraceEvent = ...
    WSManReceiveShellOutputExtendedCallbackReceived: PowerShellTraceEvent = ...
    WSManSendShellInputExtended: PowerShellTraceEvent = ...
    WSManSendShellInputExtendedCallbackReceived: PowerShellTraceEvent = ...
    WSManSignal: PowerShellTraceEvent = ...
    WSManSignalCallbackReceived: PowerShellTraceEvent = ...


class PowerShellTraceKeywords(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum (flags) PowerShellTraceKeywords, values: Cmdlets (32), Host (16), ManagedPlugIn (256), None (0), Pipeline (2), Protocol (4), Runspace (1), Serializer (64), Session (128), Transport (8), UseAlwaysAnalytic (4611686018427387904), UseAlwaysDebug (2305843009213693952), UseAlwaysOperational (9223372036854775808) """
    Cmdlets: PowerShellTraceKeywords = ...
    Host: PowerShellTraceKeywords = ...
    ManagedPlugIn: PowerShellTraceKeywords = ...
    Pipeline: PowerShellTraceKeywords = ...
    Protocol: PowerShellTraceKeywords = ...
    Runspace: PowerShellTraceKeywords = ...
    Serializer: PowerShellTraceKeywords = ...
    Session: PowerShellTraceKeywords = ...
    Transport: PowerShellTraceKeywords = ...
    UseAlwaysAnalytic: PowerShellTraceKeywords = ...
    UseAlwaysDebug: PowerShellTraceKeywords = ...
    UseAlwaysOperational: PowerShellTraceKeywords = ...
    value__ = ...


class PowerShellTraceLevel(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum PowerShellTraceLevel, values: Critical (1), Debug (20), Error (2), Informational (4), LogAlways (0), Verbose (5), Warning (3) """
    Critical: PowerShellTraceLevel = ...
    Debug: PowerShellTraceLevel = ...
    Error: PowerShellTraceLevel = ...
    Informational: PowerShellTraceLevel = ...
    LogAlways: PowerShellTraceLevel = ...
    value__ = ...
    Verbose: PowerShellTraceLevel = ...
    Warning: PowerShellTraceLevel = ...


class PowerShellTraceOperationCode(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum PowerShellTraceOperationCode, values: Close (11), Connect (12), Constructor (16), Create (15), Disconnect (13), Dispose (17), EventHandler (18), Exception (19), Method (20), Negotiate (14), None (0), Open (10), Receive (22), Send (21), SerializationSettings (24), WinDCStart (28), WinDCStop (29), WinExtension (30), WinInfo (25), WinReply (31), WinResume (32), WinStart (26), WinStop (27), WinSuspend (33), WorkflowLoad (23) """
    Close: PowerShellTraceOperationCode = ...
    Connect: PowerShellTraceOperationCode = ...
    Constructor: PowerShellTraceOperationCode = ...
    Create: PowerShellTraceOperationCode = ...
    Disconnect: PowerShellTraceOperationCode = ...
    Dispose: PowerShellTraceOperationCode = ...
    EventHandler: PowerShellTraceOperationCode = ...
    Exception: PowerShellTraceOperationCode = ...
    Method: PowerShellTraceOperationCode = ...
    Negotiate: PowerShellTraceOperationCode = ...
    Open: PowerShellTraceOperationCode = ...
    Receive: PowerShellTraceOperationCode = ...
    Send: PowerShellTraceOperationCode = ...
    SerializationSettings: PowerShellTraceOperationCode = ...
    value__ = ...
    WinDCStart: PowerShellTraceOperationCode = ...
    WinDCStop: PowerShellTraceOperationCode = ...
    WinExtension: PowerShellTraceOperationCode = ...
    WinInfo: PowerShellTraceOperationCode = ...
    WinReply: PowerShellTraceOperationCode = ...
    WinResume: PowerShellTraceOperationCode = ...
    WinStart: PowerShellTraceOperationCode = ...
    WinStop: PowerShellTraceOperationCode = ...
    WinSuspend: PowerShellTraceOperationCode = ...
    WorkflowLoad: PowerShellTraceOperationCode = ...


class PowerShellTraceSource(IDisposable): # skipped bases: <type 'object'>
    """ no doc """
    @property
    def AnalyticChannel(self) -> BaseChannelWriter:
        """ Get: AnalyticChannel(self: PowerShellTraceSource) -> BaseChannelWriter """
        ...

    @property
    def DebugChannel(self) -> BaseChannelWriter:
        """ Get: DebugChannel(self: PowerShellTraceSource) -> BaseChannelWriter """
        ...

    @property
    def Keywords(self) -> PowerShellTraceKeywords:
        """ Get: Keywords(self: PowerShellTraceSource) -> PowerShellTraceKeywords """
        ...

    @property
    def OperationalChannel(self) -> BaseChannelWriter:
        """ Get: OperationalChannel(self: PowerShellTraceSource) -> BaseChannelWriter """
        ...

    @property
    def Task(self) -> PowerShellTraceTask:
        """
        Get: Task(self: PowerShellTraceSource) -> PowerShellTraceTask
        Set: Task(self: PowerShellTraceSource) = value
        """
        ...


    def TraceErrorRecord(self, errorRecord:ErrorRecord) -> bool:
        """ TraceErrorRecord(self: PowerShellTraceSource, errorRecord: ErrorRecord) -> bool """
        ...

    def TraceException(self, exception:Exception) -> bool:
        """ TraceException(self: PowerShellTraceSource, exception: Exception) -> bool """
        ...

    def TraceJob(self, job:Job) -> bool:
        """ TraceJob(self: PowerShellTraceSource, job: Job) -> bool """
        ...

    def TracePowerShellObject(self, powerShellObject:PSObject) -> bool:
        """ TracePowerShellObject(self: PowerShellTraceSource, powerShellObject: PSObject) -> bool """
        ...

    def TraceWSManConnectionInfo(self, connectionInfo:WSManConnectionInfo) -> bool:
        """ TraceWSManConnectionInfo(self: PowerShellTraceSource, connectionInfo: WSManConnectionInfo) -> bool """
        ...

    def WriteISEDebuggerStepIntoEvent(self, args:Array): # -> 
        """ WriteISEDebuggerStepIntoEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEDebuggerStepOutEvent(self, args:Array): # -> 
        """ WriteISEDebuggerStepOutEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEDebuggerStepOverEvent(self, args:Array): # -> 
        """ WriteISEDebuggerStepOverEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEDisableAllBreakpointsEvent(self, args:Array): # -> 
        """ WriteISEDisableAllBreakpointsEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEDisableBreakpointEvent(self, args:Array): # -> 
        """ WriteISEDisableBreakpointEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEEnableAllBreakpointsEvent(self, args:Array): # -> 
        """ WriteISEEnableAllBreakpointsEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEEnableBreakpointEvent(self, args:Array): # -> 
        """ WriteISEEnableBreakpointEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEExecuteScriptEvent(self, args:Array): # -> 
        """ WriteISEExecuteScriptEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEExecuteSelectionEvent(self, args:Array): # -> 
        """ WriteISEExecuteSelectionEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEHitBreakpointEvent(self, args:Array): # -> 
        """ WriteISEHitBreakpointEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISERemoveAllBreakpointsEvent(self, args:Array): # -> 
        """ WriteISERemoveAllBreakpointsEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISERemoveBreakpointEvent(self, args:Array): # -> 
        """ WriteISERemoveBreakpointEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEResumeDebuggerEvent(self, args:Array): # -> 
        """ WriteISEResumeDebuggerEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISESetBreakpointEvent(self, args:Array): # -> 
        """ WriteISESetBreakpointEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEStopCommandEvent(self, args:Array): # -> 
        """ WriteISEStopCommandEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteISEStopDebuggerEvent(self, args:Array): # -> 
        """ WriteISEStopDebuggerEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteMessage(self, *__args:str) -> bool:
        """
        WriteMessage(self: PowerShellTraceSource, message: str) -> bool
        WriteMessage(self: PowerShellTraceSource, message1: str, message2: str) -> bool
        WriteMessage(self: PowerShellTraceSource, message: str, instanceId: Guid) -> bool
        WriteMessage(self: PowerShellTraceSource, className: str, methodName: str, workflowId: Guid, message: str, *parameters: Array[str])WriteMessage(self: PowerShellTraceSource, className: str, methodName: str, workflowId: Guid, job: Job, message: str, *parameters: Array[str])WriteMessage(self: PowerShellTraceSource, className: str, methodName: str, workflowId: Guid, activityName: str, activityId: Guid, message: str, *parameters: Array[str])
        """
        ...

    def WriteScheduledJobCompleteEvent(self, args:Array): # -> 
        """ WriteScheduledJobCompleteEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteScheduledJobErrorEvent(self, args:Array): # -> 
        """ WriteScheduledJobErrorEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...

    def WriteScheduledJobStartEvent(self, args:Array): # -> 
        """ WriteScheduledJobStartEvent(self: PowerShellTraceSource, *args: Array[object]) """
        ...


class PowerShellTraceSourceFactory: # skipped bases: <type 'object'>, <type 'object'>
    """ no doc """
    @staticmethod
    def GetTraceSource(task:PowerShellTraceTask = ..., keywords:PowerShellTraceKeywords = ...) -> PowerShellTraceSource:
        """
        GetTraceSource() -> PowerShellTraceSource
        GetTraceSource(task: PowerShellTraceTask) -> PowerShellTraceSource
        GetTraceSource(task: PowerShellTraceTask, keywords: PowerShellTraceKeywords) -> PowerShellTraceSource
        """
        ...

    __all__: list = ...


class PowerShellTraceTask(Enum): # skipped bases: <type 'IFormattable'>, <type 'IConvertible'>, <type 'IComparable'>, <type 'object'>
    """ enum PowerShellTraceTask, values: CreateRunspace (1), ExecuteCommand (2), None (0), PowerShellConsoleStartup (4), Serialization (3) """
    CreateRunspace: PowerShellTraceTask = ...
    ExecuteCommand: PowerShellTraceTask = ...
    PowerShellConsoleStartup: PowerShellTraceTask = ...
    Serialization: PowerShellTraceTask = ...
    value__ = ...


class Tracer(EtwActivity): # skipped bases: <type 'object'>
    """ Tracer() """
    def AbortingWorkflowExecution(self, workflowId:Guid, reason:str): # -> 
        """ AbortingWorkflowExecution(self: Tracer, workflowId: Guid, reason: str) """
        ...

    def ActivityExecutionFinished(self, activityName:str): # -> 
        """ ActivityExecutionFinished(self: Tracer, activityName: str) """
        ...

    def ActivityExecutionQueued(self, workflowId:Guid, activityName:str): # -> 
        """ ActivityExecutionQueued(self: Tracer, workflowId: Guid, activityName: str) """
        ...

    def ActivityExecutionStarted(self, activityName:str, activityTypeName:str): # -> 
        """ ActivityExecutionStarted(self: Tracer, activityName: str, activityTypeName: str) """
        ...

    def BeginContainerParentJobExecution(self, containerParentJobInstanceId:Guid): # -> 
        """ BeginContainerParentJobExecution(self: Tracer, containerParentJobInstanceId: Guid) """
        ...

    def BeginCreateNewJob(self, trackingId:Guid): # -> 
        """ BeginCreateNewJob(self: Tracer, trackingId: Guid) """
        ...

    def BeginJobLogic(self, workflowJobJobInstanceId:Guid): # -> 
        """ BeginJobLogic(self: Tracer, workflowJobJobInstanceId: Guid) """
        ...

    def BeginProxyChildJobEventHandler(self, proxyChildJobInstanceId:Guid): # -> 
        """ BeginProxyChildJobEventHandler(self: Tracer, proxyChildJobInstanceId: Guid) """
        ...

    def BeginProxyJobEventHandler(self, proxyJobInstanceId:Guid): # -> 
        """ BeginProxyJobEventHandler(self: Tracer, proxyJobInstanceId: Guid) """
        ...

    def BeginProxyJobExecution(self, proxyJobInstanceId:Guid): # -> 
        """ BeginProxyJobExecution(self: Tracer, proxyJobInstanceId: Guid) """
        ...

    def BeginRunGarbageCollection(self): # -> 
        """ BeginRunGarbageCollection(self: Tracer) """
        ...

    def BeginStartWorkflowApplication(self, trackingId:Guid): # -> 
        """ BeginStartWorkflowApplication(self: Tracer, trackingId: Guid) """
        ...

    def BeginWorkflowExecution(self, workflowJobJobInstanceId:Guid): # -> 
        """ BeginWorkflowExecution(self: Tracer, workflowJobJobInstanceId: Guid) """
        ...

    def CancellingWorkflowExecution(self, workflowId:Guid): # -> 
        """ CancellingWorkflowExecution(self: Tracer, workflowId: Guid) """
        ...

    def ChildWorkflowJobAddition(self, workflowJobInstanceId:Guid, containerParentJobInstanceId:Guid): # -> 
        """ ChildWorkflowJobAddition(self: Tracer, workflowJobInstanceId: Guid, containerParentJobInstanceId: Guid) """
        ...

    def DebugMessage(self, *__args:Exception): # -> 
        """ DebugMessage(self: Tracer, exception: Exception)DebugMessage(self: Tracer, message: str) """
        ...

    def EndContainerParentJobExecution(self, containerParentJobInstanceId:Guid): # -> 
        """ EndContainerParentJobExecution(self: Tracer, containerParentJobInstanceId: Guid) """
        ...

    def EndCreateNewJob(self, trackingId:Guid): # -> 
        """ EndCreateNewJob(self: Tracer, trackingId: Guid) """
        ...

    def EndJobLogic(self, workflowJobJobInstanceId:Guid): # -> 
        """ EndJobLogic(self: Tracer, workflowJobJobInstanceId: Guid) """
        ...

    def EndpointDisabled(self, endpointName:str, disabledBy:str): # -> 
        """ EndpointDisabled(self: Tracer, endpointName: str, disabledBy: str) """
        ...

    def EndpointEnabled(self, endpointName:str, enabledBy:str): # -> 
        """ EndpointEnabled(self: Tracer, endpointName: str, enabledBy: str) """
        ...

    def EndpointModified(self, endpointName:str, modifiedBy:str): # -> 
        """ EndpointModified(self: Tracer, endpointName: str, modifiedBy: str) """
        ...

    def EndpointRegistered(self, endpointName:str, endpointType:str, registeredBy:str): # -> 
        """ EndpointRegistered(self: Tracer, endpointName: str, endpointType: str, registeredBy: str) """
        ...

    def EndpointUnregistered(self, endpointName:str, unregisteredBy:str): # -> 
        """ EndpointUnregistered(self: Tracer, endpointName: str, unregisteredBy: str) """
        ...

    def EndProxyChildJobEventHandler(self, proxyChildJobInstanceId:Guid): # -> 
        """ EndProxyChildJobEventHandler(self: Tracer, proxyChildJobInstanceId: Guid) """
        ...

    def EndProxyJobEventHandler(self, proxyJobInstanceId:Guid): # -> 
        """ EndProxyJobEventHandler(self: Tracer, proxyJobInstanceId: Guid) """
        ...

    def EndProxyJobExecution(self, proxyJobInstanceId:Guid): # -> 
        """ EndProxyJobExecution(self: Tracer, proxyJobInstanceId: Guid) """
        ...

    def EndRunGarbageCollection(self): # -> 
        """ EndRunGarbageCollection(self: Tracer) """
        ...

    def EndStartWorkflowApplication(self, trackingId:Guid): # -> 
        """ EndStartWorkflowApplication(self: Tracer, trackingId: Guid) """
        ...

    def EndWorkflowExecution(self, workflowJobJobInstanceId:Guid): # -> 
        """ EndWorkflowExecution(self: Tracer, workflowJobJobInstanceId: Guid) """
        ...

    def ErrorImportingWorkflowFromXaml(self, workflowId:Guid, errorDescription:str): # -> 
        """ ErrorImportingWorkflowFromXaml(self: Tracer, workflowId: Guid, errorDescription: str) """
        ...

    def ForcedWorkflowShutdownError(self, workflowId:Guid, errorDescription:str): # -> 
        """ ForcedWorkflowShutdownError(self: Tracer, workflowId: Guid, errorDescription: str) """
        ...

    def ForcedWorkflowShutdownFinished(self, workflowId:Guid): # -> 
        """ ForcedWorkflowShutdownFinished(self: Tracer, workflowId: Guid) """
        ...

    def ForcedWorkflowShutdownStarted(self, workflowId:Guid): # -> 
        """ ForcedWorkflowShutdownStarted(self: Tracer, workflowId: Guid) """
        ...

    @staticmethod
    def GetExceptionString(exception:Exception) -> str:
        """ GetExceptionString(exception: Exception) -> str """
        ...

    def ImportedWorkflowFromXaml(self, workflowId:Guid, xamlFile:str): # -> 
        """ ImportedWorkflowFromXaml(self: Tracer, workflowId: Guid, xamlFile: str) """
        ...

    def ImportingWorkflowFromXaml(self, workflowId:Guid, xamlFile:str): # -> 
        """ ImportingWorkflowFromXaml(self: Tracer, workflowId: Guid, xamlFile: str) """
        ...

    def JobCreationComplete(self, jobId:Guid, workflowId:Guid): # -> 
        """ JobCreationComplete(self: Tracer, jobId: Guid, workflowId: Guid) """
        ...

    def JobError(self, jobId:int, workflowId:Guid, errorDescription:str): # -> 
        """ JobError(self: Tracer, jobId: int, workflowId: Guid, errorDescription: str) """
        ...

    def JobRemoved(self, parentJobId:Guid, childJobId:Guid, workflowId:Guid): # -> 
        """ JobRemoved(self: Tracer, parentJobId: Guid, childJobId: Guid, workflowId: Guid) """
        ...

    def JobRemoveError(self, parentJobId:Guid, childJobId:Guid, workflowId:Guid, error:str): # -> 
        """ JobRemoveError(self: Tracer, parentJobId: Guid, childJobId: Guid, workflowId: Guid, error: str) """
        ...

    def JobStateChanged(self, jobId:int, workflowId:Guid, newState:str, oldState:str): # -> 
        """ JobStateChanged(self: Tracer, jobId: int, workflowId: Guid, newState: str, oldState: str) """
        ...

    def LoadingWorkflowForExecution(self, workflowId:Guid): # -> 
        """ LoadingWorkflowForExecution(self: Tracer, workflowId: Guid) """
        ...

    def OutOfProcessRunspaceStarted(self, command:str): # -> 
        """ OutOfProcessRunspaceStarted(self: Tracer, command: str) """
        ...

    def ParameterSplattingWasPerformed(self, parameters:str, computers:str): # -> 
        """ ParameterSplattingWasPerformed(self: Tracer, parameters: str, computers: str) """
        ...

    def ParentJobCreated(self, jobId:Guid): # -> 
        """ ParentJobCreated(self: Tracer, jobId: Guid) """
        ...

    def PersistenceStoreMaxSizeReached(self): # -> 
        """ PersistenceStoreMaxSizeReached(self: Tracer) """
        ...

    def PersistingWorkflow(self, workflowId:Guid, persistPath:str): # -> 
        """ PersistingWorkflow(self: Tracer, workflowId: Guid, persistPath: str) """
        ...

    def ProxyJobRemoteJobAssociation(self, proxyJobInstanceId:Guid, containerParentJobInstanceId:Guid): # -> 
        """ ProxyJobRemoteJobAssociation(self: Tracer, proxyJobInstanceId: Guid, containerParentJobInstanceId: Guid) """
        ...

    def RemoveJobStarted(self, jobId:Guid): # -> 
        """ RemoveJobStarted(self: Tracer, jobId: Guid) """
        ...

    def RunspaceAvailabilityChanged(self, runspaceId:str, availability:str): # -> 
        """ RunspaceAvailabilityChanged(self: Tracer, runspaceId: str, availability: str) """
        ...

    def RunspaceStateChanged(self, runspaceId:str, newState:str, oldState:str): # -> 
        """ RunspaceStateChanged(self: Tracer, runspaceId: str, newState: str, oldState: str) """
        ...

    def TrackingGuidContainerParentJobCorrelation(self, trackingId:Guid, containerParentJobInstanceId:Guid): # -> 
        """ TrackingGuidContainerParentJobCorrelation(self: Tracer, trackingId: Guid, containerParentJobInstanceId: Guid) """
        ...

    def UnloadingWorkflow(self, workflowId:Guid): # -> 
        """ UnloadingWorkflow(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowActivityExecutionFailed(self, workflowId:Guid, activityName:str, failureDescription:str): # -> 
        """ WorkflowActivityExecutionFailed(self: Tracer, workflowId: Guid, activityName: str, failureDescription: str) """
        ...

    def WorkflowActivityValidated(self, workflowId:Guid, activityDisplayName:str, activityType:str): # -> 
        """ WorkflowActivityValidated(self: Tracer, workflowId: Guid, activityDisplayName: str, activityType: str) """
        ...

    def WorkflowActivityValidationFailed(self, workflowId:Guid, activityDisplayName:str, activityType:str): # -> 
        """ WorkflowActivityValidationFailed(self: Tracer, workflowId: Guid, activityDisplayName: str, activityType: str) """
        ...

    def WorkflowCleanupPerformed(self, workflowId:Guid): # -> 
        """ WorkflowCleanupPerformed(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowDeletedFromDisk(self, workflowId:Guid, path:str): # -> 
        """ WorkflowDeletedFromDisk(self: Tracer, workflowId: Guid, path: str) """
        ...

    def WorkflowEngineStarted(self, endpointName:str): # -> 
        """ WorkflowEngineStarted(self: Tracer, endpointName: str) """
        ...

    def WorkflowExecutionAborted(self, workflowId:Guid): # -> 
        """ WorkflowExecutionAborted(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowExecutionCancelled(self, workflowId:Guid): # -> 
        """ WorkflowExecutionCancelled(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowExecutionError(self, workflowId:Guid, errorDescription:str): # -> 
        """ WorkflowExecutionError(self: Tracer, workflowId: Guid, errorDescription: str) """
        ...

    def WorkflowExecutionFinished(self, workflowId:Guid): # -> 
        """ WorkflowExecutionFinished(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowExecutionStarted(self, workflowId:Guid, managedNodes:str): # -> 
        """ WorkflowExecutionStarted(self: Tracer, workflowId: Guid, managedNodes: str) """
        ...

    def WorkflowJobCreated(self, parentJobId:Guid, childJobId:Guid, childWorkflowId:Guid): # -> 
        """ WorkflowJobCreated(self: Tracer, parentJobId: Guid, childJobId: Guid, childWorkflowId: Guid) """
        ...

    def WorkflowLoadedForExecution(self, workflowId:Guid): # -> 
        """ WorkflowLoadedForExecution(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowLoadedFromDisk(self, workflowId:Guid, path:str): # -> 
        """ WorkflowLoadedFromDisk(self: Tracer, workflowId: Guid, path: str) """
        ...

    def WorkflowManagerCheckpoint(self, checkpointPath:str, configProviderId:str, userName:str, path:str): # -> 
        """ WorkflowManagerCheckpoint(self: Tracer, checkpointPath: str, configProviderId: str, userName: str, path: str) """
        ...

    def WorkflowPersisted(self, workflowId:Guid): # -> 
        """ WorkflowPersisted(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowPluginRequestedToShutdown(self, endpointName:str): # -> 
        """ WorkflowPluginRequestedToShutdown(self: Tracer, endpointName: str) """
        ...

    def WorkflowPluginRestarted(self, endpointName:str): # -> 
        """ WorkflowPluginRestarted(self: Tracer, endpointName: str) """
        ...

    def WorkflowPluginStarted(self, endpointName:str, user:str, hostingMode:str, protocol:str, configuration:str): # -> 
        """ WorkflowPluginStarted(self: Tracer, endpointName: str, user: str, hostingMode: str, protocol: str, configuration: str) """
        ...

    def WorkflowQuotaViolated(self, endpointName:str, configName:str, allowedValue:str, valueInQuestion:str): # -> 
        """ WorkflowQuotaViolated(self: Tracer, endpointName: str, configName: str, allowedValue: str, valueInQuestion: str) """
        ...

    def WorkflowResumed(self, workflowId:Guid): # -> 
        """ WorkflowResumed(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowResuming(self, workflowId:Guid): # -> 
        """ WorkflowResuming(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowRunspacePoolCreated(self, workflowId:Guid, managedNode:str): # -> 
        """ WorkflowRunspacePoolCreated(self: Tracer, workflowId: Guid, managedNode: str) """
        ...

    def WorkflowStateChanged(self, workflowId:Guid, newState:str, oldState:str): # -> 
        """ WorkflowStateChanged(self: Tracer, workflowId: Guid, newState: str, oldState: str) """
        ...

    def WorkflowUnloaded(self, workflowId:Guid): # -> 
        """ WorkflowUnloaded(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowValidationError(self, workflowId:Guid): # -> 
        """ WorkflowValidationError(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowValidationFinished(self, workflowId:Guid): # -> 
        """ WorkflowValidationFinished(self: Tracer, workflowId: Guid) """
        ...

    def WorkflowValidationStarted(self, workflowId:Guid): # -> 
        """ WorkflowValidationStarted(self: Tracer, workflowId: Guid) """
        ...

    def WriteTransferEvent(self, currentActivityId:Guid, parentActivityId:Guid): # -> 
        """ WriteTransferEvent(self: Tracer, currentActivityId: Guid, parentActivityId: Guid) """
        ...

    KeywordAll: Int64 = ...
    LevelCritical: Byte = ...
    LevelError: Byte = ...
    LevelInformational: Byte = ...
    LevelVerbose: Byte = ...
    LevelWarning: Byte = ...


